
//*********************************************************************
//              Copyright (c) Microsoft Corporation.
//
//*********************************************************************

#pragma classflags("forceupdate")
#pragma AUTORECOVER
#pragma namespace("\\\\.\\root\\wmi")

[dynamic: ToInstance, Description("sqlserver"),
    Guid("{655fd93f-3364-40d5-b2ba-330f7ffb6491}"), locale("MS\\0x409")]
class XeSqlPkg: EventTrace
{
	
	[Description ("Enable flags") : amended,
	ValueDescriptions{
		"Events related to SQL Server Service Broker",
		"Events related to data retention cleanup",
		"Events related to SQL Server service operations",
		"Events related to database operations",
		"Events related to cursor operations",
		"Events related to change data capture",
		"Events related to transactions",
		"Events related to disk I/O",
		"Events related to query execution",
		"Events related to exceptions",
		"Events related to the common language runtime",
		"Events related to errors",
		"Events releated to SQL Server Core Security Infrastructure.",
		"Events related to SQL Server indexing",
		"Events related to JSON",
		"Events related to OLEDB",
		"Events related to SQL Server sessions",
		"Events related to query optimization",
		"Events related to fulltext search",
		"Events related to HADR.",
		"Events related to potential performance problems.",
		"Events related to main memory optimized tables and native compiled procedures.",
		"Events related to the query store.",
		"Events related to the stretch database.",
		"Events related to SQL Server stackhasher.",
		"Events related to SQL Server Columnstore Indexes.",
		"Events related to SQL Server Temporal.",
		"Events related to SQL Server Data Masking.",
		"Events related to bulk insert and openrowset bulk.",
		"Events related to Graphs.",
		"Events related to Approximate Query Processing.",
		"Events tracking usage of T-Sql features in queries.",
		"Events related to Automatic tuning.",
		"Events related to Sql Frontend component.",
		"Events related to SQL Data Classification.",
		"Events related to DW FIDO."
	} : amended,
	DefineValues{
		"ETW_XESQLPKG_BROKER"
		,
		"ETW_XESQLPKG_DATA_RETENTION"
		,
		"ETW_XESQLPKG_SERVER"
		,
		"ETW_XESQLPKG_DATABASE"
		,
		"ETW_XESQLPKG_CURSOR"
		,
		"ETW_XESQLPKG_CDC"
		,
		"ETW_XESQLPKG_TRANSACTIONS"
		,
		"ETW_XESQLPKG_IO"
		,
		"ETW_XESQLPKG_EXECUTION"
		,
		"ETW_XESQLPKG_EXCEPTION"
		,
		"ETW_XESQLPKG_CLR"
		,
		"ETW_XESQLPKG_ERRORS"
		,
		"ETW_XESQLPKG_SECURITY"
		,
		"ETW_XESQLPKG_INDEX"
		,
		"ETW_XESQLPKG_JSON"
		,
		"ETW_XESQLPKG_OLEDB"
		,
		"ETW_XESQLPKG_SESSION"
		,
		"ETW_XESQLPKG_OPTIMIZATION"
		,
		"ETW_XESQLPKG_FULLTEXT"
		,
		"ETW_XESQLPKG_HADR"
		,
		"ETW_XESQLPKG_WARNINGS"
		,
		"ETW_XESQLPKG_XTP"
		,
		"ETW_XESQLPKG_QUERY_STORE"
		,
		"ETW_XESQLPKG_STRETCH"
		,
		"ETW_XESQLPKG_STACKHASHER"
		,
		"ETW_XESQLPKG_COLUMNSTORE"
		,
		"ETW_XESQLPKG_TEMPORAL"
		,
		"ETW_XESQLPKG_DATA_MASKING"
		,
		"ETW_XESQLPKG_BULK_IMPORT"
		,
		"ETW_XESQLPKG_GRAPH"
		,
		"ETW_XESQLPKG_AQP"
		,
		"ETW_XESQLPKG_TSQL_FEATURE_USAGE"
		,
		"ETW_XESQLPKG_AUTOMATIC_TUNING"
		,
		"ETW_XESQLPKG_SQL_FRONTEND"
		,
		"ETW_XESQLPKG_DATA_CLASSIFICATION"
		,
		"ETW_XESQLPKG_FIDO"
		},
	Values{
		"broker",
		"data_retention",
		"server",
		"database",
		"cursor",
		"cdc",
		"transactions",
		"io",
		"execution",
		"exception",
		"clr",
		"errors",
		"security",
		"index",
		"json",
		"oledb",
		"session",
		"optimization",
		"fulltext",
		"hadr",
		"warnings",
		"xtp",
		"query_store",
		"stretch",
		"stackhasher",
		"columnstore",
		"temporal",
		"data_masking",
		"bulk_import",
		"graph",
		"aqp",
		"tsql_feature_usage",
		"automatic_tuning",
		"sql_frontend",
		"data_classification",
		"fido"
		},
	ValueMap{
		"1",
		"2",
		"4",
		"8",
		"16",
		"32",
		"64",
		"128",
		"256",
		"512",
		"1024",
		"2048",
		"4096",
		"8192",
		"16384",
		"32768",
		"65536",
		"131072",
		"262144",
		"524288",
		"1048576",
		"2097152",
		"4194304",
		"8388608",
		"16777216",
		"33554432",
		"67108864",
		"134217728",
		"268435456",
		"536870912",
		"1073741824",
		"2147483648",
		"4294967296",
		"8589934592",
		"17179869184",
		"34359738368"
		}
	]
	uint32 Flags;

};

	
[dynamic: ToInstance, Description("Broker activation stored procedure invoked"): Amended,
    Guid("{FA2A4F64-8B9A-4DD3-AD6B-DB3CBD1EC525}"), locale("MS\\0x409"),
    DisplayName("broker_activation_stored_procedure_invoked"): Amended]
class XeSqlPkg_broker_activation_stored_procedure_invoked: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_activation_stored_procedure_invoked: XeSqlPkg_broker_activation_stored_procedure_invoked
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Broker activation stored procedure invoked"): Amended,
    Guid("{FA2A4F64-8B9A-4DD3-AD6B-DB3CBD1EC525}"), locale("MS\\0x409"),
    DisplayName("broker_activation_stored_procedure_invoked"): Amended]
class XeSqlPkg_broker_activation_stored_procedure_invoked: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class broker_activation_stored_procedure_invoked: XeSqlPkg_broker_activation_stored_procedure_invoked
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Broker activation task limit reached"): Amended,
    Guid("{8E4A6AF5-E2FE-4690-819D-0506ACD1D496}"), locale("MS\\0x409"),
    DisplayName("broker_activation_task_limit_reached"): Amended]
class XeSqlPkg_broker_activation_task_limit_reached: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_activation_task_limit_reached: XeSqlPkg_broker_activation_task_limit_reached
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Broker activation task limit reached"): Amended,
    Guid("{8E4A6AF5-E2FE-4690-819D-0506ACD1D496}"), locale("MS\\0x409"),
    DisplayName("broker_activation_task_limit_reached"): Amended]
class XeSqlPkg_broker_activation_task_limit_reached: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class broker_activation_task_limit_reached: XeSqlPkg_broker_activation_task_limit_reached
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Broker activation task aborted"): Amended,
    Guid("{E7BB3FAB-2820-4FFF-A15E-ED4C087D8636}"), locale("MS\\0x409"),
    DisplayName("broker_activation_task_aborted"): Amended]
class XeSqlPkg_broker_activation_task_aborted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_activation_task_aborted: XeSqlPkg_broker_activation_task_aborted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Broker activation task aborted"): Amended,
    Guid("{E7BB3FAB-2820-4FFF-A15E-ED4C087D8636}"), locale("MS\\0x409"),
    DisplayName("broker_activation_task_aborted"): Amended]
class XeSqlPkg_broker_activation_task_aborted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class broker_activation_task_aborted: XeSqlPkg_broker_activation_task_aborted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Broker activation task started"): Amended,
    Guid("{31B40D53-07DB-4975-A6C9-C2F08F779ADB}"), locale("MS\\0x409"),
    DisplayName("broker_activation_task_started"): Amended]
class XeSqlPkg_broker_activation_task_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_activation_task_started: XeSqlPkg_broker_activation_task_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Broker activation task started"): Amended,
    Guid("{31B40D53-07DB-4975-A6C9-C2F08F779ADB}"), locale("MS\\0x409"),
    DisplayName("broker_activation_task_started"): Amended]
class XeSqlPkg_broker_activation_task_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class broker_activation_task_started: XeSqlPkg_broker_activation_task_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("A message was enqueued into a Service Broker transmission body table"): Amended,
    Guid("{414402eb-2340-42e4-8ca3-49b28818bdc9}"), locale("MS\\0x409"),
    DisplayName("broker_dialog_transmission_body_enqueue"): Amended]
class XeSqlPkg_broker_dialog_transmission_body_enqueue: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_dialog_transmission_body_enqueue: XeSqlPkg_broker_dialog_transmission_body_enqueue
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 message_reference;
	[WmiDataId(6), read] uint32 message_reference_count;
};
		
[dynamic: ToInstance, Description("A message was dequeued from a Service Broker transmission body table"): Amended,
    Guid("{8455d3c5-33cb-40a7-b4e3-fea52e08906f}"), locale("MS\\0x409"),
    DisplayName("broker_dialog_transmission_body_dequeue"): Amended]
class XeSqlPkg_broker_dialog_transmission_body_dequeue: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_dialog_transmission_body_dequeue: XeSqlPkg_broker_dialog_transmission_body_dequeue
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 message_reference;
};
		
[dynamic: ToInstance, Description("Occurs when no receive activity is detected on an activated queue with available messages"): Amended,
    Guid("{cdcc277e-3183-4573-a2eb-e0f41502d327}"), locale("MS\\0x409"),
    DisplayName("broker_queue_activation_alert"): Amended]
class XeSqlPkg_broker_queue_activation_alert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_queue_activation_alert: XeSqlPkg_broker_queue_activation_alert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 queue_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint64 time_since_receive_secs;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Cursor manager cursor begin"): Amended,
    Guid("{A7D9E0EE-88D6-4199-88FF-AEB6C79F7548}"), locale("MS\\0x409"),
    DisplayName("cursor_manager_cursor_begin"): Amended]
class XeSqlPkg_cursor_manager_cursor_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_manager_cursor_begin: XeSqlPkg_cursor_manager_cursor_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 cursor_type;
};
		
[dynamic: ToInstance, Description("Cursor manager cursor end"): Amended,
    Guid("{2CB440D3-BE0E-47C6-80F0-1B5F2C399740}"), locale("MS\\0x409"),
    DisplayName("cursor_manager_cursor_end"): Amended]
class XeSqlPkg_cursor_manager_cursor_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_manager_cursor_end: XeSqlPkg_cursor_manager_cursor_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 cursor_type;
};
		
[dynamic: ToInstance, Description("Cursor manager cursor cache hit"): Amended,
    Guid("{D5C453A1-7F3D-48DA-A8E8-4951C4E2C46F}"), locale("MS\\0x409"),
    DisplayName("cursor_manager_cursor_cache_hit"): Amended]
class XeSqlPkg_cursor_manager_cursor_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_manager_cursor_cache_hit: XeSqlPkg_cursor_manager_cursor_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 cursor_type;
};
		
[dynamic: ToInstance, Description("Cursor manager cached cursor added"): Amended,
    Guid("{B462FBA4-E87C-4948-BCD5-D003049D4AA6}"), locale("MS\\0x409"),
    DisplayName("cursor_manager_cached_cursor_added"): Amended]
class XeSqlPkg_cursor_manager_cached_cursor_added: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_manager_cached_cursor_added: XeSqlPkg_cursor_manager_cached_cursor_added
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 cursor_type;
};
		
[dynamic: ToInstance, Description("Cursor manager cached cursor removed"): Amended,
    Guid("{6726259E-A346-49B8-A9FB-6209FFDECD05}"), locale("MS\\0x409"),
    DisplayName("cursor_manager_cached_cursor_removed"): Amended]
class XeSqlPkg_cursor_manager_cached_cursor_removed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_manager_cached_cursor_removed: XeSqlPkg_cursor_manager_cached_cursor_removed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 cursor_type;
};
		
[dynamic: ToInstance, Description("Cursor manager cursor memory usage"): Amended,
    Guid("{de4e3ac9-5335-4251-a0a0-32d5324ff31a}"), locale("MS\\0x409"),
    DisplayName("cursor_manager_cursor_memory_usage"): Amended]
class XeSqlPkg_cursor_manager_cursor_memory_usage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_manager_cursor_memory_usage: XeSqlPkg_cursor_manager_cursor_memory_usage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 cursor_type;
};
		
[dynamic: ToInstance, Description("Cursor manager cursor worktable use begin"): Amended,
    Guid("{8B13F74B-6053-48F1-AA60-2B7CE645CAA9}"), locale("MS\\0x409"),
    DisplayName("cursor_manager_cursor_worktable_use_begin"): Amended]
class XeSqlPkg_cursor_manager_cursor_worktable_use_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_manager_cursor_worktable_use_begin: XeSqlPkg_cursor_manager_cursor_worktable_use_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 cursor_type;
};
		
[dynamic: ToInstance, Description("Cursor manager cursor worktable use end"): Amended,
    Guid("{91814C0F-0AFA-4DF7-AC96-1C62F888C72F}"), locale("MS\\0x409"),
    DisplayName("cursor_manager_cursor_worktable_use_end"): Amended]
class XeSqlPkg_cursor_manager_cursor_worktable_use_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_manager_cursor_worktable_use_end: XeSqlPkg_cursor_manager_cursor_worktable_use_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 cursor_type;
};
		
[dynamic: ToInstance, Description("Cursor manager cursor plan begin"): Amended,
    Guid("{1D5E385B-A67E-4D94-A5F8-00076AB985C5}"), locale("MS\\0x409"),
    DisplayName("cursor_manager_cursor_plan_begin"): Amended]
class XeSqlPkg_cursor_manager_cursor_plan_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_manager_cursor_plan_begin: XeSqlPkg_cursor_manager_cursor_plan_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 cursor_type;
};
		
[dynamic: ToInstance, Description("Cursor manager cursor plan end"): Amended,
    Guid("{A9267D96-1126-42D2-82FE-EE0BF0B3F900}"), locale("MS\\0x409"),
    DisplayName("cursor_manager_cursor_plan_end"): Amended]
class XeSqlPkg_cursor_manager_cursor_plan_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_manager_cursor_plan_end: XeSqlPkg_cursor_manager_cursor_plan_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 cursor_type;
};
		
[dynamic: ToInstance, Description("CDC enable events"): Amended,
    Guid("{4B2EE704-D343-4BBC-BF8E-0C83F5129E94}"), locale("MS\\0x409"),
    DisplayName("cdc_db_enable"): Amended]
class XeSqlPkg_cdc_db_enable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cdc_db_enable: XeSqlPkg_cdc_db_enable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  enabled;
};
		
[dynamic: ToInstance, Description("Synapse Link enable events"): Amended,
    Guid("{717D8245-573F-48CA-A959-3A7D12518ADA}"), locale("MS\\0x409"),
    DisplayName("synapse_link_db_enable"): Amended]
class XeSqlPkg_synapse_link_db_enable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_db_enable: XeSqlPkg_synapse_link_db_enable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  enabled;
};
		
[dynamic: ToInstance, Description("Databases bulk copy rows (due to bcp activity)"): Amended,
    Guid("{B77017A7-0C88-4E1C-AA31-7759463FC347}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_copy_rows"): Amended]
class XeSqlPkg_databases_bulk_copy_rows: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_bulk_copy_rows: XeSqlPkg_databases_bulk_copy_rows
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases bulk copy rows (due to bcp activity)"): Amended,
    Guid("{B77017A7-0C88-4E1C-AA31-7759463FC347}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_copy_rows"): Amended]
class XeSqlPkg_databases_bulk_copy_rows: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_bulk_copy_rows: XeSqlPkg_databases_bulk_copy_rows
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases bulk copy throughput in KB (due to bcp activity)"): Amended,
    Guid("{C0624AB8-66C2-4928-9E70-0ABF3E7A29B8}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_copy_throughput"): Amended]
class XeSqlPkg_databases_bulk_copy_throughput: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_bulk_copy_throughput: XeSqlPkg_databases_bulk_copy_throughput
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases bulk copy throughput in KB (due to bcp activity)"): Amended,
    Guid("{C0624AB8-66C2-4928-9E70-0ABF3E7A29B8}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_copy_throughput"): Amended]
class XeSqlPkg_databases_bulk_copy_throughput: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_bulk_copy_throughput: XeSqlPkg_databases_bulk_copy_throughput
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata change notification received from the framework"): Amended,
    Guid("{e17ce5d6-58f4-48b1-9ada-c761757d3c4d}"), locale("MS\\0x409"),
    DisplayName("metadata_change_notification_subscriber"): Amended]
class XeSqlPkg_metadata_change_notification_subscriber: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_change_notification_subscriber: XeSqlPkg_metadata_change_notification_subscriber
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 entity_id;
	[WmiDataId(7), read] uint32 universal_class;
	[WmiDataId(8), read] uint32 object_type;
	[WmiDataId(9), read] uint32 assembly_id;
	[WmiDataId(10), read] uint32 owner_id;
	[WmiDataId(11), read, 
				XEMapId(94),
				ValueMap { 
					"65535", 
					"2", 
					"64", 
					"16", 
					"8", 
					"32", 
					"0", 
					"1", 
					"4" },
				Values { 
					"x_enet_All", 
					"x_enet_Assembly", 
					"x_enet_CreateIndex", 
					"x_enet_DropIndex", 
					"x_enet_DropStats", 
					"x_enet_MasterKey", 
					"x_enet_NotSet", 
					"x_enet_Object", 
					"x_enet_Type" }
			] uint32 notification_type;
	[WmiDataId(12), read, 
				XEMapId(95),
				ValueMap { 
					"2", 
					"128", 
					"0", 
					"256", 
					"1" },
				Values { 
					"x_enci_Drop", 
					"x_enci_LocalOnly", 
					"x_enci_None", 
					"x_enci_RenameTempTable", 
					"x_enci_SchemaChange" }
			] uint32 notification_context;
};
		
[dynamic: ToInstance, Description("Database distribution policy is changed"): Amended,
    Guid("{7b1ca531-d204-4a91-acdf-7482e1e5f332}"), locale("MS\\0x409"),
    DisplayName("distribution_db_policy_change"): Amended]
class XeSqlPkg_distribution_db_policy_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class distribution_db_policy_change: XeSqlPkg_distribution_db_policy_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(140),
				ValueMap { 
					"1" },
				Values { 
					"None" }
			] uint32 policy_type;
	[WmiDataId(7), read] uint32 leading_cols_num;
};
		
[dynamic: ToInstance, Description("Occurs when a database transaction begins."): Amended,
    Guid("{44CD0D25-8477-40CF-A364-40ACBCD47FCD}"), locale("MS\\0x409"),
    DisplayName("database_transaction_begin"): Amended]
class XeSqlPkg_database_transaction_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_transaction_begin: XeSqlPkg_database_transaction_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Occurs when a database transaction ends."): Amended,
    Guid("{54FC3C2F-02F5-49D9-A68D-365FB1C30BD6}"), locale("MS\\0x409"),
    DisplayName("database_transaction_end"): Amended]
class XeSqlPkg_database_transaction_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_transaction_end: XeSqlPkg_database_transaction_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Occurs when a database transaction yields execution due to TDS buffer being full."): Amended,
    Guid("{F9E5A0C4-105C-41ED-8639-441FDBD6C301}"), locale("MS\\0x409"),
    DisplayName("database_transaction_yield"): Amended]
class XeSqlPkg_database_transaction_yield: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_transaction_yield: XeSqlPkg_database_transaction_yield
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Databases data file size change"): Amended,
    Guid("{9C4949AE-3C00-4A24-9A84-47DECEF6BA07}"), locale("MS\\0x409"),
    DisplayName("databases_data_file_size_changed"): Amended]
class XeSqlPkg_databases_data_file_size_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_data_file_size_changed: XeSqlPkg_databases_data_file_size_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases data file size change"): Amended,
    Guid("{9C4949AE-3C00-4A24-9A84-47DECEF6BA07}"), locale("MS\\0x409"),
    DisplayName("databases_data_file_size_changed"): Amended]
class XeSqlPkg_databases_data_file_size_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_data_file_size_changed: XeSqlPkg_databases_data_file_size_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Temp Table cache diagnostics"): Amended,
    Guid("{efccbb6e-1c9d-4f25-9f85-23fed3614878}"), locale("MS\\0x409"),
    DisplayName("temp_table_cache_trace"): Amended]
class XeSqlPkg_temp_table_cache_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temp_table_cache_trace: XeSqlPkg_temp_table_cache_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 proc_database_id;
	[WmiDataId(6), read] sint32 proc_object_id;
	[WmiDataId(7), read, 
				XEMapId(53),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"TempTable", 
					"TableVar", 
					"TableParam", 
					"TableTyped", 
					"NULL" }
			] uint8 object_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string table_decorated_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string table_object_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string action;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Tempdb cache Destroy list diagnostics"): Amended,
    Guid("{efccab6e-1c8d-4f15-9f75-23fed3614778}"), locale("MS\\0x409"),
    DisplayName("temp_table_destroy_list_trace"): Amended]
class XeSqlPkg_temp_table_destroy_list_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temp_table_destroy_list_trace: XeSqlPkg_temp_table_destroy_list_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string table_decorated_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string table_object_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string action;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Plan cache cache hit"): Amended,
    Guid("{90CEAB66-0358-4D76-B022-4DD0FBAD297B}"), locale("MS\\0x409"),
    DisplayName("plan_cache_cache_hit"): Amended]
class XeSqlPkg_plan_cache_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class plan_cache_cache_hit: XeSqlPkg_plan_cache_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint64 cache_entry_type;
};
		
[dynamic: ToInstance, Description("SQL statement starting"): Amended,
    Guid("{40BFA6DF-B111-41CD-A1E6-12209E618B8D}"), locale("MS\\0x409"),
    DisplayName("sql_statement_starting"): Amended]
class XeSqlPkg_sql_statement_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_statement_starting: XeSqlPkg_sql_statement_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 source_database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Normal", 
					"Recompiled" }
			] uint32 state;
	[WmiDataId(9), read] sint32 offset;
	[WmiDataId(10), read] sint32 offset_end;
	[WmiDataId(11), read] sint32 nest_level;
};
		
[dynamic: ToInstance, Description("Occurs when a Transact-SQL statement has started."): Amended,
    Guid("{40BFA6DF-B111-41CD-A1E6-12209E618B8D}"), locale("MS\\0x409"),
    DisplayName("sql_statement_starting"): Amended]
class XeSqlPkg_sql_statement_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sql_statement_starting: XeSqlPkg_sql_statement_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(20),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Normal", 
					"Recompiled", 
					"Execution Plan Flush" }
			] uint8 state;
	[WmiDataId(6), read] sint32 line_number;
	[WmiDataId(7), read] sint32 offset;
	[WmiDataId(8), read] sint32 offset_end;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("SQL statement completed"): Amended,
    Guid("{CDFD84F9-184E-49A4-BB71-1614A9D30416}"), locale("MS\\0x409"),
    DisplayName("sql_statement_completed"): Amended]
class XeSqlPkg_sql_statement_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_statement_completed: XeSqlPkg_sql_statement_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 source_database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read] uint32 cpu;
	[WmiDataId(9), read] sint64 duration;
	[WmiDataId(10), read] uint64 reads;
	[WmiDataId(11), read] uint64 writes;
};
		
[dynamic: ToInstance, Description("Occurs when a Transact-SQL statement has completed."): Amended,
    Guid("{CDFD84F9-184E-49A4-BB71-1614A9D30416}"), locale("MS\\0x409"),
    DisplayName("sql_statement_completed"): Amended]
class XeSqlPkg_sql_statement_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sql_statement_completed: XeSqlPkg_sql_statement_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 duration;
	[WmiDataId(6), read] uint64 cpu_time;
	[WmiDataId(7), read] uint64 physical_reads;
	[WmiDataId(8), read] uint64 logical_reads;
	[WmiDataId(9), read] uint64 writes;
	[WmiDataId(10), read] uint64 row_count;
	[WmiDataId(11), read] uint64 last_row_count;
	[WmiDataId(12), read] sint32 line_number;
	[WmiDataId(13), read] sint32 offset;
	[WmiDataId(14), read] sint32 offset_end;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(16), read, Extension("Variant")] object parameterized_plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a Transact-SQL statement has completed."): Amended,
    Guid("{CDFD84F9-184E-49A4-BB71-1614A9D30416}"), locale("MS\\0x409"),
    DisplayName("sql_statement_completed"): Amended]
class XeSqlPkg_sql_statement_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class sql_statement_completed: XeSqlPkg_sql_statement_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 duration;
	[WmiDataId(6), read] uint64 cpu_time;
	[WmiDataId(7), read] uint64 physical_reads;
	[WmiDataId(8), read] uint64 logical_reads;
	[WmiDataId(9), read] uint64 writes;
	[WmiDataId(10), read] uint64 spills;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read] uint64 last_row_count;
	[WmiDataId(13), read] sint32 line_number;
	[WmiDataId(14), read] sint32 offset;
	[WmiDataId(15), read] sint32 offset_end;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(17), read, Extension("Variant")] object parameterized_plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a Transact-SQL statement has completed."): Amended,
    Guid("{CDFD84F9-184E-49A4-BB71-1614A9D30416}"), locale("MS\\0x409"),
    DisplayName("sql_statement_completed"): Amended]
class XeSqlPkg_sql_statement_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class sql_statement_completed: XeSqlPkg_sql_statement_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 duration;
	[WmiDataId(6), read] uint64 cpu_time;
	[WmiDataId(7), read] uint64 page_server_reads;
	[WmiDataId(8), read] uint64 physical_reads;
	[WmiDataId(9), read] uint64 logical_reads;
	[WmiDataId(10), read] uint64 writes;
	[WmiDataId(11), read] uint64 spills;
	[WmiDataId(12), read] uint64 row_count;
	[WmiDataId(13), read] uint64 last_row_count;
	[WmiDataId(14), read] sint32 line_number;
	[WmiDataId(15), read] sint32 offset;
	[WmiDataId(16), read] sint32 offset_end;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(18), read, Extension("Variant")] object parameterized_plan_handle;
};
		
[dynamic: ToInstance, Description("Stored procedure statement starting"): Amended,
    Guid("{2B46B9D3-2E73-4FB9-9D62-01DB82A89CE9}"), locale("MS\\0x409"),
    DisplayName("sp_statement_starting"): Amended]
class XeSqlPkg_sp_statement_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sp_statement_starting: XeSqlPkg_sp_statement_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 source_database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Normal", 
					"Recompiled" }
			] uint32 state;
	[WmiDataId(9), read] sint32 offset;
	[WmiDataId(10), read] sint32 offset_end;
	[WmiDataId(11), read] sint32 nest_level;
};
		
[dynamic: ToInstance, Description("Occurs when a statement inside a stored procedure has started."): Amended,
    Guid("{2B46B9D3-2E73-4FB9-9D62-01DB82A89CE9}"), locale("MS\\0x409"),
    DisplayName("sp_statement_starting"): Amended]
class XeSqlPkg_sp_statement_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sp_statement_starting: XeSqlPkg_sp_statement_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read, 
				XEMapId(20),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Normal", 
					"Recompiled", 
					"Execution Plan Flush" }
			] uint8 state;
	[WmiDataId(9), read] uint16 nest_level;
	[WmiDataId(10), read] sint32 line_number;
	[WmiDataId(11), read] sint32 offset;
	[WmiDataId(12), read] sint32 offset_end;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Stored procedure statement completed"): Amended,
    Guid("{EF689B3D-8F37-416F-8A28-49620A604877}"), locale("MS\\0x409"),
    DisplayName("sp_statement_completed"): Amended]
class XeSqlPkg_sp_statement_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sp_statement_completed: XeSqlPkg_sp_statement_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 source_database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read] uint32 cpu;
	[WmiDataId(9), read] sint64 duration;
	[WmiDataId(10), read] uint64 reads;
	[WmiDataId(11), read] uint64 writes;
};
		
[dynamic: ToInstance, Description("Occurs when a statement inside a stored procedure has completed."): Amended,
    Guid("{EF689B3D-8F37-416F-8A28-49620A604877}"), locale("MS\\0x409"),
    DisplayName("sp_statement_completed"): Amended]
class XeSqlPkg_sp_statement_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sp_statement_completed: XeSqlPkg_sp_statement_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read] sint64 duration;
	[WmiDataId(9), read] uint64 cpu_time;
	[WmiDataId(10), read] uint64 physical_reads;
	[WmiDataId(11), read] uint64 logical_reads;
	[WmiDataId(12), read] uint64 writes;
	[WmiDataId(13), read] uint64 row_count;
	[WmiDataId(14), read] uint64 last_row_count;
	[WmiDataId(15), read] uint16 nest_level;
	[WmiDataId(16), read] sint32 line_number;
	[WmiDataId(17), read] sint32 offset;
	[WmiDataId(18), read] sint32 offset_end;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a statement inside a stored procedure has completed."): Amended,
    Guid("{EF689B3D-8F37-416F-8A28-49620A604877}"), locale("MS\\0x409"),
    DisplayName("sp_statement_completed"): Amended]
class XeSqlPkg_sp_statement_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class sp_statement_completed: XeSqlPkg_sp_statement_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read] sint64 duration;
	[WmiDataId(9), read] uint64 cpu_time;
	[WmiDataId(10), read] uint64 physical_reads;
	[WmiDataId(11), read] uint64 logical_reads;
	[WmiDataId(12), read] uint64 writes;
	[WmiDataId(13), read] uint64 spills;
	[WmiDataId(14), read] uint64 row_count;
	[WmiDataId(15), read] uint64 last_row_count;
	[WmiDataId(16), read] uint16 nest_level;
	[WmiDataId(17), read] sint32 line_number;
	[WmiDataId(18), read] sint32 offset;
	[WmiDataId(19), read] sint32 offset_end;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a statement inside a stored procedure has completed."): Amended,
    Guid("{EF689B3D-8F37-416F-8A28-49620A604877}"), locale("MS\\0x409"),
    DisplayName("sp_statement_completed"): Amended]
class XeSqlPkg_sp_statement_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class sp_statement_completed: XeSqlPkg_sp_statement_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read] sint64 duration;
	[WmiDataId(9), read] uint64 cpu_time;
	[WmiDataId(10), read] uint64 page_server_reads;
	[WmiDataId(11), read] uint64 physical_reads;
	[WmiDataId(12), read] uint64 logical_reads;
	[WmiDataId(13), read] uint64 writes;
	[WmiDataId(14), read] uint64 spills;
	[WmiDataId(15), read] uint64 row_count;
	[WmiDataId(16), read] uint64 last_row_count;
	[WmiDataId(17), read] uint16 nest_level;
	[WmiDataId(18), read] sint32 line_number;
	[WmiDataId(19), read] sint32 offset;
	[WmiDataId(20), read] sint32 offset_end;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("RPC starting"): Amended,
    Guid("{FD10D08D-6777-41A8-92A9-76F0796EEEB2}"), locale("MS\\0x409"),
    DisplayName("rpc_starting"): Amended]
class XeSqlPkg_rpc_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rpc_starting: XeSqlPkg_rpc_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when a remote procedure call has started."): Amended,
    Guid("{FD10D08D-6777-41A8-92A9-76F0796EEEB2}"), locale("MS\\0x409"),
    DisplayName("rpc_starting"): Amended]
class XeSqlPkg_rpc_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class rpc_starting: XeSqlPkg_rpc_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(86),
				ValueMap { 
					"1", 
					"2", 
					"0" },
				Values { 
					"KeepDTCXact", 
					"KeepXact", 
					"None" }
			] uint8 connection_reset_option;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(8), read, Extension("Variant")] object data_stream;
};
		
[dynamic: ToInstance, Description("RPC completed"): Amended,
    Guid("{F1574C94-2B93-4716-A3C1-90F1E1FE2DB8}"), locale("MS\\0x409"),
    DisplayName("rpc_completed"): Amended]
class XeSqlPkg_rpc_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rpc_completed: XeSqlPkg_rpc_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu;
	[WmiDataId(6), read] sint64 duration;
	[WmiDataId(7), read] uint64 reads;
	[WmiDataId(8), read] uint64 writes;
};
		
[dynamic: ToInstance, Description("Occurs when a remote procedure call has completed."): Amended,
    Guid("{F1574C94-2B93-4716-A3C1-90F1E1FE2DB8}"), locale("MS\\0x409"),
    DisplayName("rpc_completed"): Amended]
class XeSqlPkg_rpc_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class rpc_completed: XeSqlPkg_rpc_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_time;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read] uint64 physical_reads;
	[WmiDataId(8), read] uint64 logical_reads;
	[WmiDataId(9), read] uint64 writes;
	[WmiDataId(10), read, 
				XEMapId(34),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"OK", 
					"Error", 
					"Abort", 
					"Skipped" }
			] uint8 result;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read, 
				XEMapId(86),
				ValueMap { 
					"1", 
					"2", 
					"0" },
				Values { 
					"KeepDTCXact", 
					"KeepXact", 
					"None" }
			] uint8 connection_reset_option;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(15), read, Extension("Variant")] object data_stream;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string output_parameters;
};
		
[dynamic: ToInstance, Description("Occurs when a remote procedure call has completed."): Amended,
    Guid("{F1574C94-2B93-4716-A3C1-90F1E1FE2DB8}"), locale("MS\\0x409"),
    DisplayName("rpc_completed"): Amended]
class XeSqlPkg_rpc_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class rpc_completed: XeSqlPkg_rpc_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_time;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read] uint64 page_server_reads;
	[WmiDataId(8), read] uint64 physical_reads;
	[WmiDataId(9), read] uint64 logical_reads;
	[WmiDataId(10), read] uint64 writes;
	[WmiDataId(11), read, 
				XEMapId(34),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"OK", 
					"Error", 
					"Abort", 
					"Skipped" }
			] uint8 result;
	[WmiDataId(12), read] uint64 row_count;
	[WmiDataId(13), read, 
				XEMapId(86),
				ValueMap { 
					"1", 
					"2", 
					"0" },
				Values { 
					"KeepDTCXact", 
					"KeepXact", 
					"None" }
			] uint8 connection_reset_option;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(16), read, Extension("Variant")] object data_stream;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string output_parameters;
};
		
[dynamic: ToInstance, Description("Plan cache cache attempt"): Amended,
    Guid("{ddb3297b-9ffe-4c90-95f1-a4a26152ccea}"), locale("MS\\0x409"),
    DisplayName("plan_cache_cache_attempt"): Amended]
class XeSqlPkg_plan_cache_cache_attempt: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class plan_cache_cache_attempt: XeSqlPkg_plan_cache_cache_attempt
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint64 cache_entry_type;
};
		
[dynamic: ToInstance, Description("Occurs when a plan is not placed into the plan cache. Use this event to monitor the reason why plan is not placed into the plan cache."): Amended,
    Guid("{25d4e4d8-2613-43e3-8716-c8ba491afcd4}"), locale("MS\\0x409"),
    DisplayName("plan_not_cached"): Amended]
class XeSqlPkg_plan_not_cached: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class plan_not_cached: XeSqlPkg_plan_not_cached
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] sint32 batch_hash_id;
	[WmiDataId(9), read, 
				XEMapId(118),
				ValueMap { 
					"9", 
					"2", 
					"44", 
					"26", 
					"53", 
					"27", 
					"61", 
					"42", 
					"18", 
					"58", 
					"43", 
					"59", 
					"62", 
					"14", 
					"51", 
					"11", 
					"39", 
					"17", 
					"3", 
					"47", 
					"60", 
					"36", 
					"21", 
					"46", 
					"45", 
					"40", 
					"56", 
					"0", 
					"6", 
					"4", 
					"31", 
					"32", 
					"13", 
					"19", 
					"63", 
					"28", 
					"38", 
					"52", 
					"48", 
					"57", 
					"41", 
					"12", 
					"16", 
					"20", 
					"29", 
					"30", 
					"49", 
					"5", 
					"54", 
					"65", 
					"66", 
					"23", 
					"64", 
					"22", 
					"55", 
					"10", 
					"37", 
					"15", 
					"50", 
					"7", 
					"24", 
					"1", 
					"25", 
					"34", 
					"33", 
					"35", 
					"8" },
				Values { 
					"AdminHint", 
					"AnalysisTriggeredRecompile", 
					"Autopilot", 
					"BulkInsert", 
					"CEFeedbackHint", 
					"CopyInto", 
					"CreateAlterTabIntQuery", 
					"CreateConstraint", 
					"CreateIndex", 
					"CreateMaterialView", 
					"CreateTabInferSchema", 
					"CursorIntQuery", 
					"CursorRunDirect", 
					"DAC", 
					"DataMaskFidoDWFE", 
					"DataTierOverViewOrTVF", 
					"DropStmt", 
					"ElevateOpt", 
					"ErrorState", 
					"FilteredIndex", 
					"IndexCreateIntQuery", 
					"InternalDML", 
					"LangSrvc", 
					"LargeBatch", 
					"LargeConst", 
					"MMPTab", 
					"NormPolarisOR", 
					"NotEnabled", 
					"ObjNotCachable", 
					"ObjWithBlob", 
					"Openrowset", 
					"ORCosDb", 
					"OuterModule", 
					"ParamMDDesc", 
					"ParseExtScriptCol", 
					"ParseOpt", 
					"PolarisSALSp", 
					"QDSTVF", 
					"RecompileHintOn", 
					"RemoteRpcExec", 
					"RepairDML", 
					"SchObjScalarOrTabFunc", 
					"ScopTab", 
					"SensInfo", 
					"SetOffset", 
					"SetUser", 
					"SharedDCL", 
					"ShowPlanOn", 
					"ShutdownOnEx", 
					"SpCopyDataInBatches", 
					"SpPrepInternQuery", 
					"SpPrepStateMchn", 
					"SpShMemoXml", 
					"SQLStr", 
					"SQLString", 
					"StretchOverViewOrTVF", 
					"SynapseBlockingRules", 
					"TraceFlagOn", 
					"TVFLedgerTrans", 
					"UdfCompRcs", 
					"ViewCheckOpt", 
					"WithRecompile", 
					"XRelTree", 
					"XSCAlter", 
					"XSCCreate", 
					"XSCDrop", 
					"ZeroCostPlan" }
			] sint32 reason;
	[WmiDataId(10), read] uint8 state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string cached_text;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when an ALTER TABLE ADD column operation results in an UPDATE that affects every row. This event signals a potentially expensive DDL statement."): Amended,
    Guid("{ec0563a2-a531-4024-b274-9abeb62baed4}"), locale("MS\\0x409"),
    DisplayName("alter_table_update_data"): Amended]
class XeSqlPkg_alter_table_update_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class alter_table_update_data: XeSqlPkg_alter_table_update_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read, 
				XEMapId(97),
				ValueMap { 
					"3", 
					"16", 
					"5", 
					"12", 
					"2", 
					"18", 
					"14", 
					"13", 
					"6", 
					"1", 
					"0", 
					"7", 
					"9", 
					"10", 
					"11", 
					"15", 
					"4", 
					"8", 
					"17" },
				Values { 
					"CheckConstraint", 
					"ClrColumn", 
					"DatabaseUpgrade", 
					"EngineEdition", 
					"ForeignKeyConstraint", 
					"GraphConstraint", 
					"IdentityColumn", 
					"InternalException", 
					"LOB", 
					"NoDefaultConstraint", 
					"None", 
					"NotRuntimeConstant", 
					"NullMismatch", 
					"PersistedComputed", 
					"RowSize", 
					"TimestampColumn", 
					"TraceFlag", 
					"TypeConversion", 
					"UDF" }
			] uint32 reason;
};
		
[dynamic: ToInstance, Description("Occurs during an alter column operation. Indicates whether the alter column is metadata only or not."): Amended,
    Guid("{6d0e0a45-ab0f-46d4-908c-d4a285b0f04e}"), locale("MS\\0x409"),
    DisplayName("compressed_alter_column_is_md_only"): Amended]
class XeSqlPkg_compressed_alter_column_is_md_only: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compressed_alter_column_is_md_only: XeSqlPkg_compressed_alter_column_is_md_only
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] sint32 column_id;
	[WmiDataId(7), read] sint8  is_md_only;
};
		
[dynamic: ToInstance, Description("TSQL Scalar UDF inlined into query tree"): Amended,
    Guid("{79B08E2F-7B77-414C-AC4D-CE51FF34EFE3}"), locale("MS\\0x409"),
    DisplayName("query_tsql_scalar_udf_inlined"): Amended]
class XeSqlPkg_query_tsql_scalar_udf_inlined: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_tsql_scalar_udf_inlined: XeSqlPkg_query_tsql_scalar_udf_inlined
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 stmt_count;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string udf_name;
};
		
[dynamic: ToInstance, Description("TSQL Scalar UDF inlined into query tree"): Amended,
    Guid("{79B08E2F-7B77-414C-AC4D-CE51FF34EFE3}"), locale("MS\\0x409"),
    DisplayName("query_tsql_scalar_udf_inlined"): Amended]
class XeSqlPkg_query_tsql_scalar_udf_inlined: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_tsql_scalar_udf_inlined: XeSqlPkg_query_tsql_scalar_udf_inlined
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 stmt_count;
	[WmiDataId(8), read] sint8  is_candidate_for_simple_param;
	[WmiDataId(9), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string udf_name;
};
		
[dynamic: ToInstance, Description("TSQL Scalar UDF inlined into query tree"): Amended,
    Guid("{79B08E2F-7B77-414C-AC4D-CE51FF34EFE3}"), locale("MS\\0x409"),
    DisplayName("query_tsql_scalar_udf_inlined"): Amended]
class XeSqlPkg_query_tsql_scalar_udf_inlined: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class query_tsql_scalar_udf_inlined: XeSqlPkg_query_tsql_scalar_udf_inlined
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] sint32 stmt_count;
	[WmiDataId(8), read] sint8  is_candidate_for_simple_param;
	[WmiDataId(9), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string udf_name;
};
		
[dynamic: ToInstance, Description("TSQL Scalar UDF parsed"): Amended,
    Guid("{78747573-3179-4C25-82A2-F9B22B5928C8}"), locale("MS\\0x409"),
    DisplayName("query_tsql_scalar_udf_parsed"): Amended]
class XeSqlPkg_query_tsql_scalar_udf_parsed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_tsql_scalar_udf_parsed: XeSqlPkg_query_tsql_scalar_udf_parsed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 stmt_count;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string udf_name;
};
		
[dynamic: ToInstance, Description("TSQL Scalar UDF parsed"): Amended,
    Guid("{78747573-3179-4C25-82A2-F9B22B5928C8}"), locale("MS\\0x409"),
    DisplayName("query_tsql_scalar_udf_parsed"): Amended]
class XeSqlPkg_query_tsql_scalar_udf_parsed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_tsql_scalar_udf_parsed: XeSqlPkg_query_tsql_scalar_udf_parsed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] sint32 stmt_count;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string udf_name;
};
		
[dynamic: ToInstance, Description("Encountered a scalar UDF that is not inlineable."): Amended,
    Guid("{0C91D45A-8DCC-40A5-98EB-260F8825F9CC}"), locale("MS\\0x409"),
    DisplayName("tsql_scalar_udf_not_inlineable"): Amended]
class XeSqlPkg_tsql_scalar_udf_not_inlineable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tsql_scalar_udf_not_inlineable: XeSqlPkg_tsql_scalar_udf_not_inlineable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 stmt_type;
	[WmiDataId(8), read, 
				XEMapId(65),
				ValueMap { 
					"8", 
					"40", 
					"19", 
					"31", 
					"10", 
					"34", 
					"9", 
					"52", 
					"33", 
					"13", 
					"39", 
					"32", 
					"41", 
					"23", 
					"3", 
					"2", 
					"29", 
					"28", 
					"20", 
					"21", 
					"56", 
					"12", 
					"38", 
					"49", 
					"37", 
					"51", 
					"14", 
					"0", 
					"54", 
					"17", 
					"27", 
					"26", 
					"5", 
					"46", 
					"30", 
					"36", 
					"50", 
					"15", 
					"43", 
					"45", 
					"16", 
					"24", 
					"53", 
					"44", 
					"11", 
					"25", 
					"42", 
					"48", 
					"4", 
					"35", 
					"47", 
					"6", 
					"55", 
					"1", 
					"7", 
					"22", 
					"18" },
				Values { 
					"AggregatingAssignment", 
					"ColumnEncryption", 
					"CommonChecks", 
					"CompatLevel", 
					"CTE", 
					"CTSScanInView", 
					"CursorDeclare", 
					"ExceptionsExist", 
					"ExplicitDisable", 
					"ExprReEval", 
					"ExprReEvalInCondBlock", 
					"FeatureSwitch", 
					"FValidateAggregateError", 
					"GroupingSets", 
					"Hekaton", 
					"IncompatibleSecurityOption", 
					"InliningInAggFunc", 
					"InliningInGroupBy", 
					"InliningInOrderBy", 
					"InliningInSelectDistinctOrderBy", 
					"InliningInUpdateOfPartitionView", 
					"MaxDepTables", 
					"MaxInlinedTreeVisitCount", 
					"MaxSqlNestLevel", 
					"MaxUdfInlineNodes", 
					"MergeUserFunctions", 
					"MultipleReturns", 
					"None", 
					"OptimizerNoPlanError", 
					"OrderByWithoutTop", 
					"ParameterGroupingErrors", 
					"ParamterWindowAggFunction", 
					"PartitionFunction", 
					"PexprBindScalarUdfError", 
					"PlanXMLHint", 
					"QueryExpressionTooComplex", 
					"RecursiveUdfMaxInlineDepth", 
					"RemoteTables", 
					"SignedUDF", 
					"StatementWithQuery", 
					"StringAggFunc", 
					"Synonym", 
					"SysInternalTableAsParameter", 
					"SysSqlModules_InlineOff", 
					"SystemDataAccess", 
					"SystemFunction", 
					"TableExprQuery", 
					"TemporalDateTimeVariables", 
					"TvpsOrTvvs", 
					"UDFChainScemaCheck", 
					"UDFInliningImprovementsDisabled", 
					"UnsafeBuiltin", 
					"UnsafeCrossDbBuiltin", 
					"UnsupportedTsqlConstruct", 
					"UserDefinedTypes", 
					"ViewTVFSystemDataAccess", 
					"XMLRelated" }
			] sint32 blocked_reason;
};
		
[dynamic: ToInstance, Description("Encountered a scalar UDF that is not inlineable."): Amended,
    Guid("{0C91D45A-8DCC-40A5-98EB-260F8825F9CC}"), locale("MS\\0x409"),
    DisplayName("tsql_scalar_udf_not_inlineable"): Amended]
class XeSqlPkg_tsql_scalar_udf_not_inlineable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class tsql_scalar_udf_not_inlineable: XeSqlPkg_tsql_scalar_udf_not_inlineable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] sint32 stmt_type;
	[WmiDataId(8), read, 
				XEMapId(65),
				ValueMap { 
					"8", 
					"40", 
					"19", 
					"31", 
					"10", 
					"34", 
					"9", 
					"52", 
					"33", 
					"13", 
					"39", 
					"32", 
					"41", 
					"23", 
					"3", 
					"2", 
					"29", 
					"28", 
					"20", 
					"21", 
					"56", 
					"12", 
					"38", 
					"49", 
					"37", 
					"51", 
					"14", 
					"0", 
					"54", 
					"17", 
					"27", 
					"26", 
					"5", 
					"46", 
					"30", 
					"36", 
					"50", 
					"15", 
					"43", 
					"45", 
					"16", 
					"24", 
					"53", 
					"44", 
					"11", 
					"25", 
					"42", 
					"48", 
					"4", 
					"35", 
					"47", 
					"6", 
					"55", 
					"1", 
					"7", 
					"22", 
					"18" },
				Values { 
					"AggregatingAssignment", 
					"ColumnEncryption", 
					"CommonChecks", 
					"CompatLevel", 
					"CTE", 
					"CTSScanInView", 
					"CursorDeclare", 
					"ExceptionsExist", 
					"ExplicitDisable", 
					"ExprReEval", 
					"ExprReEvalInCondBlock", 
					"FeatureSwitch", 
					"FValidateAggregateError", 
					"GroupingSets", 
					"Hekaton", 
					"IncompatibleSecurityOption", 
					"InliningInAggFunc", 
					"InliningInGroupBy", 
					"InliningInOrderBy", 
					"InliningInSelectDistinctOrderBy", 
					"InliningInUpdateOfPartitionView", 
					"MaxDepTables", 
					"MaxInlinedTreeVisitCount", 
					"MaxSqlNestLevel", 
					"MaxUdfInlineNodes", 
					"MergeUserFunctions", 
					"MultipleReturns", 
					"None", 
					"OptimizerNoPlanError", 
					"OrderByWithoutTop", 
					"ParameterGroupingErrors", 
					"ParamterWindowAggFunction", 
					"PartitionFunction", 
					"PexprBindScalarUdfError", 
					"PlanXMLHint", 
					"QueryExpressionTooComplex", 
					"RecursiveUdfMaxInlineDepth", 
					"RemoteTables", 
					"SignedUDF", 
					"StatementWithQuery", 
					"StringAggFunc", 
					"Synonym", 
					"SysInternalTableAsParameter", 
					"SysSqlModules_InlineOff", 
					"SystemDataAccess", 
					"SystemFunction", 
					"TableExprQuery", 
					"TemporalDateTimeVariables", 
					"TvpsOrTvvs", 
					"UDFChainScemaCheck", 
					"UDFInliningImprovementsDisabled", 
					"UnsafeBuiltin", 
					"UnsafeCrossDbBuiltin", 
					"UnsupportedTsqlConstruct", 
					"UserDefinedTypes", 
					"ViewTVFSystemDataAccess", 
					"XMLRelated" }
			] sint32 blocked_reason;
};
		
[dynamic: ToInstance, Description("Encountered a scalar UDF that is not inlineable."): Amended,
    Guid("{0C91D45A-8DCC-40A5-98EB-260F8825F9CC}"), locale("MS\\0x409"),
    DisplayName("tsql_scalar_udf_not_inlineable"): Amended]
class XeSqlPkg_tsql_scalar_udf_not_inlineable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class tsql_scalar_udf_not_inlineable: XeSqlPkg_tsql_scalar_udf_not_inlineable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] sint32 stmt_type;
	[WmiDataId(8), read, 
				XEMapId(65),
				ValueMap { 
					"8", 
					"40", 
					"19", 
					"31", 
					"10", 
					"34", 
					"9", 
					"52", 
					"33", 
					"13", 
					"39", 
					"32", 
					"41", 
					"23", 
					"3", 
					"2", 
					"29", 
					"28", 
					"20", 
					"21", 
					"56", 
					"12", 
					"38", 
					"49", 
					"37", 
					"51", 
					"14", 
					"0", 
					"54", 
					"17", 
					"27", 
					"26", 
					"5", 
					"46", 
					"30", 
					"36", 
					"50", 
					"15", 
					"43", 
					"45", 
					"16", 
					"24", 
					"53", 
					"44", 
					"11", 
					"25", 
					"42", 
					"48", 
					"4", 
					"35", 
					"47", 
					"6", 
					"55", 
					"1", 
					"7", 
					"22", 
					"18" },
				Values { 
					"AggregatingAssignment", 
					"ColumnEncryption", 
					"CommonChecks", 
					"CompatLevel", 
					"CTE", 
					"CTSScanInView", 
					"CursorDeclare", 
					"ExceptionsExist", 
					"ExplicitDisable", 
					"ExprReEval", 
					"ExprReEvalInCondBlock", 
					"FeatureSwitch", 
					"FValidateAggregateError", 
					"GroupingSets", 
					"Hekaton", 
					"IncompatibleSecurityOption", 
					"InliningInAggFunc", 
					"InliningInGroupBy", 
					"InliningInOrderBy", 
					"InliningInSelectDistinctOrderBy", 
					"InliningInUpdateOfPartitionView", 
					"MaxDepTables", 
					"MaxInlinedTreeVisitCount", 
					"MaxSqlNestLevel", 
					"MaxUdfInlineNodes", 
					"MergeUserFunctions", 
					"MultipleReturns", 
					"None", 
					"OptimizerNoPlanError", 
					"OrderByWithoutTop", 
					"ParameterGroupingErrors", 
					"ParamterWindowAggFunction", 
					"PartitionFunction", 
					"PexprBindScalarUdfError", 
					"PlanXMLHint", 
					"QueryExpressionTooComplex", 
					"RecursiveUdfMaxInlineDepth", 
					"RemoteTables", 
					"SignedUDF", 
					"StatementWithQuery", 
					"StringAggFunc", 
					"Synonym", 
					"SysInternalTableAsParameter", 
					"SysSqlModules_InlineOff", 
					"SystemDataAccess", 
					"SystemFunction", 
					"TableExprQuery", 
					"TemporalDateTimeVariables", 
					"TvpsOrTvvs", 
					"UDFChainScemaCheck", 
					"UDFInliningImprovementsDisabled", 
					"UnsafeBuiltin", 
					"UnsafeCrossDbBuiltin", 
					"UnsupportedTsqlConstruct", 
					"UserDefinedTypes", 
					"ViewTVFSystemDataAccess", 
					"XMLRelated" }
			] sint32 blocked_reason;
	[WmiDataId(9), read] sint8  is_candidate_for_simple_param;
	[WmiDataId(10), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string udf_name;
};
		
[dynamic: ToInstance, Description("Telemetry numbers in context of udf inlining"): Amended,
    Guid("{3944C7F3-585F-41CF-9D54-B14C09DC3E78}"), locale("MS\\0x409"),
    DisplayName("tsql_scalar_udf_inlining_threshold"): Amended]
class XeSqlPkg_tsql_scalar_udf_inlining_threshold: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tsql_scalar_udf_inlining_threshold: XeSqlPkg_tsql_scalar_udf_inlining_threshold
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read, 
				XEMapId(66),
				ValueMap { 
					"2", 
					"1", 
					"0" },
				Values { 
					"DepTablesLimit", 
					"ExprReEvalLimit", 
					"UdfInlineNodesLimit" }
			] sint32 threshold_type;
	[WmiDataId(8), read] sint64 value;
};
		
[dynamic: ToInstance, Description("Cursor manager cursor cache attempt"): Amended,
    Guid("{267d38b8-def7-43ab-9a85-ffd07c53231b}"), locale("MS\\0x409"),
    DisplayName("cursor_manager_cursor_cache_attempt"): Amended]
class XeSqlPkg_cursor_manager_cursor_cache_attempt: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_manager_cursor_cache_attempt: XeSqlPkg_cursor_manager_cursor_cache_attempt
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 cursor_type;
};
		
[dynamic: ToInstance, Description("AppDomain ring buffer recorded"): Amended,
    Guid("{012b0b90-febc-45d9-b26c-a4fd19de6cc5}"), locale("MS\\0x409"),
    DisplayName("app_domain_ring_buffer_recorded"): Amended]
class XeSqlPkg_app_domain_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class app_domain_ring_buffer_recorded: XeSqlPkg_app_domain_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read, Pointer] object  app_domain_address;
	[WmiDataId(8), read] uint16 database_id;
	[WmiDataId(9), read] uint32 owner_id;
	[WmiDataId(10), read] sint32 generation;
	[WmiDataId(11), read] uint32 references;
	[WmiDataId(12), read] uint32 weak_references;
	[WmiDataId(13), read, Pointer] object  task_address;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string action;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string type;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string state;
	[WmiDataId(17), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("AppDomain ring buffer recorded"): Amended,
    Guid("{012b0b90-febc-45d9-b26c-a4fd19de6cc5}"), locale("MS\\0x409"),
    DisplayName("app_domain_ring_buffer_recorded"): Amended]
class XeSqlPkg_app_domain_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class app_domain_ring_buffer_recorded: XeSqlPkg_app_domain_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read, Pointer] object  app_domain_address;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint32 owner_id;
	[WmiDataId(10), read] sint32 generation;
	[WmiDataId(11), read] uint32 references;
	[WmiDataId(12), read] uint32 weak_references;
	[WmiDataId(13), read, Pointer] object  task_address;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string action;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string type;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string state;
	[WmiDataId(17), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("AppDomain ring buffer recorded"): Amended,
    Guid("{F498523F-4677-4C4F-8608-133DAD124CA8}"), locale("MS\\0x409"),
    DisplayName("app_domain_ring_buffer_recorded"): Amended]
class XeSqlPkg_app_domain_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class app_domain_ring_buffer_recorded: XeSqlPkg_app_domain_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read, Pointer] object  app_domain_address;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint32 owner_id;
	[WmiDataId(10), read] sint32 generation;
	[WmiDataId(11), read] uint32 references;
	[WmiDataId(12), read] uint32 weak_references;
	[WmiDataId(13), read, Pointer] object  task_address;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string action;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string type;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string state;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string doom_reason;
	[WmiDataId(18), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("AppDomain ring buffer recorded"): Amended,
    Guid("{767976cf-67f7-4736-90f1-35de8df6ee74}"), locale("MS\\0x409"),
    DisplayName("host_task_ring_buffer_recorded"): Amended]
class XeSqlPkg_host_task_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class host_task_ring_buffer_recorded: XeSqlPkg_host_task_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read, Pointer] object  host_task_address;
	[WmiDataId(8), read] sint32 thread_affinity_count;
	[WmiDataId(9), read] sint32 leave_runtime_count;
	[WmiDataId(10), read] sint32 non_yielding_count;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string action;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string state;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string abort_state;
	[WmiDataId(14), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("Error ring buffer recorded"): Amended,
    Guid("{757e6281-b8b7-47b8-bbe0-3d4944fcc16a}"), locale("MS\\0x409"),
    DisplayName("error_ring_buffer_recorded"): Amended]
class XeSqlPkg_error_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class error_ring_buffer_recorded: XeSqlPkg_error_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read] sint16 session_id;
	[WmiDataId(8), read] uint32 error_code;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string api_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string calling_api_name;
	[WmiDataId(11), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("Security error ring buffer recorded"): Amended,
    Guid("{3fa43d5f-e52d-44c0-912b-05fe2f77be5e}"), locale("MS\\0x409"),
    DisplayName("security_error_ring_buffer_recorded"): Amended]
class XeSqlPkg_security_error_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_error_ring_buffer_recorded: XeSqlPkg_security_error_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read] sint16 session_id;
	[WmiDataId(8), read] uint32 error_code;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string api_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string calling_api_name;
	[WmiDataId(11), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("Error has been reported"): Amended,
    Guid("{ee44762d-6e6d-4f0c-bf6b-a16f862f33d4}"), locale("MS\\0x409"),
    DisplayName("error_reported"): Amended]
class XeSqlPkg_error_reported: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class error_reported: XeSqlPkg_error_reported
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error;
	[WmiDataId(6), read] sint32 severity;
	[WmiDataId(7), read] sint32 state;
	[WmiDataId(8), read] sint8  user_defined;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Occurs when an error is reported."): Amended,
    Guid("{ee44762d-6e6d-4f0c-bf6b-a16f862f33d4}"), locale("MS\\0x409"),
    DisplayName("error_reported"): Amended]
class XeSqlPkg_error_reported: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class error_reported: XeSqlPkg_error_reported
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint32 severity;
	[WmiDataId(7), read] sint32 state;
	[WmiDataId(8), read] sint8  user_defined;
	[WmiDataId(9), read, 
				XEMapId(82),
				ValueMap { 
					"6", 
					"3", 
					"8", 
					"4", 
					"9", 
					"5", 
					"2", 
					"7" },
				Values { 
					"BACKUP", 
					"FAILOVER", 
					"LAST", 
					"LOGON", 
					"NEXT", 
					"SECAUDIT", 
					"SERVER", 
					"SQLSNMP" }
			] uint8 category;
	[WmiDataId(10), read, 
				XEMapId(136),
				BitMap { 
					"16", 
					"1", 
					"128", 
					"4", 
					"8", 
					"32", 
					"0", 
					"2", 
					"64" },
				BitValues { 
					"BUFFER", 
					"DEFAULT", 
					"DEFAULT_NO_USER", 
					"ERRLOG", 
					"EVENTLOG", 
					"FILE", 
					"NONE", 
					"USER", 
					"USER_WITH_SDS_TRANSLATION" }
			] uint32 destination;
	[WmiDataId(11), read] sint8  is_intercepted;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Trace message published"): Amended,
    Guid("{35bb81f9-8858-4bc1-b720-df3324d461b0}"), locale("MS\\0x409"),
    DisplayName("trace_print"): Amended]
class XeSqlPkg_trace_print: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class trace_print: XeSqlPkg_trace_print
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Errorlog written"): Amended,
    Guid("{a9130cfe-f0a0-483a-80d7-62582ed8daf7}"), locale("MS\\0x409"),
    DisplayName("errorlog_written"): Amended]
class XeSqlPkg_errorlog_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class errorlog_written: XeSqlPkg_errorlog_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("SystemMetadata qualified errorlog written"): Amended,
    Guid("{d470ae64-b7d3-4cd1-b1d5-0c45f2a42657}"), locale("MS\\0x409"),
    DisplayName("systemmetadata_written"): Amended]
class XeSqlPkg_systemmetadata_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class systemmetadata_written: XeSqlPkg_systemmetadata_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("ResourceName qualified errorlog written"): Amended,
    Guid("{8cb727d4-2af6-45ef-9b42-eeddeeae28e3}"), locale("MS\\0x409"),
    DisplayName("resourcename_written"): Amended]
class XeSqlPkg_resourcename_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resourcename_written: XeSqlPkg_resourcename_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("ObjectName qualified errorlog written"): Amended,
    Guid("{674ffc97-5e52-4e6c-a65b-9c7890669439}"), locale("MS\\0x409"),
    DisplayName("objectname_written"): Amended]
class XeSqlPkg_objectname_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class objectname_written: XeSqlPkg_objectname_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Errorlog written"): Amended,
    Guid("{3f936ef2-7dfb-4d2B-9561-c354a722c12d}"), locale("MS\\0x409"),
    DisplayName("fulltextlog_written"): Amended]
class XeSqlPkg_fulltextlog_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class fulltextlog_written: XeSqlPkg_fulltextlog_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint32 table_object_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string table_name;
};
		
[dynamic: ToInstance, Description("External Key Management external API called"): Amended,
    Guid("{3F800DA0-0B7F-4095-BC41-F3248DA0E90C}"), locale("MS\\0x409"),
    DisplayName("sec_ekm_provider_called"): Amended]
class XeSqlPkg_sec_ekm_provider_called: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sec_ekm_provider_called: XeSqlPkg_sec_ekm_provider_called
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 cred_prov_result;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string cred_prov_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string cred_prov_api;
};
		
[dynamic: ToInstance, Description("Start of module execution"): Amended,
    Guid("{594133eb-4253-4b4d-af7d-c7d7f6e272c1}"), locale("MS\\0x409"),
    DisplayName("module_start"): Amended]
class XeSqlPkg_module_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class module_start: XeSqlPkg_module_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, StringTermination("NullTerminated")] string object_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Start of module execution"): Amended,
    Guid("{594133eb-4253-4b4d-af7d-c7d7f6e272c1}"), locale("MS\\0x409"),
    DisplayName("module_start"): Amended]
class XeSqlPkg_module_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class module_start: XeSqlPkg_module_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 line_number;
	[WmiDataId(8), read] sint32 offset;
	[WmiDataId(9), read] sint32 offset_end;
	[WmiDataId(10), read, StringTermination("NullTerminated")] string object_type;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Start of module execution"): Amended,
    Guid("{594133eb-4253-4b4d-af7d-c7d7f6e272c1}"), locale("MS\\0x409"),
    DisplayName("module_start"): Amended]
class XeSqlPkg_module_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class module_start: XeSqlPkg_module_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 line_number;
	[WmiDataId(8), read] sint32 offset;
	[WmiDataId(9), read] sint32 offset_end;
	[WmiDataId(10), read, StringTermination("NullTerminated")] string object_type;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("End of module execution"): Amended,
    Guid("{b4b44aca-4a04-47af-beee-0928ac02dd88}"), locale("MS\\0x409"),
    DisplayName("module_end"): Amended]
class XeSqlPkg_module_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class module_end: XeSqlPkg_module_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read, StringTermination("NullTerminated")] string object_type;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("End of module execution"): Amended,
    Guid("{b4b44aca-4a04-47af-beee-0928ac02dd88}"), locale("MS\\0x409"),
    DisplayName("module_end"): Amended]
class XeSqlPkg_module_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class module_end: XeSqlPkg_module_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] sint32 line_number;
	[WmiDataId(10), read] sint32 offset;
	[WmiDataId(11), read] sint32 offset_end;
	[WmiDataId(12), read, StringTermination("NullTerminated")] string object_type;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("End of module execution"): Amended,
    Guid("{b4b44aca-4a04-47af-beee-0928ac02dd88}"), locale("MS\\0x409"),
    DisplayName("module_end"): Amended]
class XeSqlPkg_module_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class module_end: XeSqlPkg_module_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] sint32 line_number;
	[WmiDataId(10), read] sint32 offset;
	[WmiDataId(11), read] sint32 offset_end;
	[WmiDataId(12), read, StringTermination("NullTerminated")] string object_type;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("FILESTREAM file I/O streaming access request"): Amended,
    Guid("{c4d2f45a-c4d5-4198-b0fe-033e8fc57ce6}"), locale("MS\\0x409"),
    DisplayName("filestream_file_io_request"): Amended]
class XeSqlPkg_filestream_file_io_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class filestream_file_io_request: XeSqlPkg_filestream_file_io_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string workitem_description;
	[WmiDataId(6), read, Extension("Variant")] object transaction_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string correlation_ids;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string logical_path;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string physical_path;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string original_path;
};
		
[dynamic: ToInstance, Description("Response to a FILESTREAM file I/O streaming access request"): Amended,
    Guid("{d083ca0c-9dd9-46d5-9626-f9ae2b8400b8}"), locale("MS\\0x409"),
    DisplayName("filestream_file_io_response"): Amended]
class XeSqlPkg_filestream_file_io_response: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class filestream_file_io_response: XeSqlPkg_filestream_file_io_response
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 status;
	[WmiDataId(6), read] sint8  satisfied;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string workitem_description;
	[WmiDataId(8), read, Extension("Variant")] object transaction_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string correlation_ids;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string logical_path;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string physical_path;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string original_path;
};
		
[dynamic: ToInstance, Description("FILESTREAM file I/O streaming access failure"): Amended,
    Guid("{af723f47-22b2-4433-bbf0-cb437d211b17}"), locale("MS\\0x409"),
    DisplayName("filestream_file_io_failure"): Amended]
class XeSqlPkg_filestream_file_io_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class filestream_file_io_failure: XeSqlPkg_filestream_file_io_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
	[WmiDataId(6), read, Extension("Guid")] guid location;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string description;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string workitem_description;
	[WmiDataId(10), read, Extension("Variant")] object transaction_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string correlation_ids;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string logical_path;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string physical_path;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string original_path;
};
		
[dynamic: ToInstance, Description("FILESTREAM file I/O streaming access tracing information"): Amended,
    Guid("{d9282fce-5998-4472-9232-21efde7ee4f2}"), locale("MS\\0x409"),
    DisplayName("filestream_file_io_trace"): Amended]
class XeSqlPkg_filestream_file_io_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class filestream_file_io_trace: XeSqlPkg_filestream_file_io_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 component;
	[WmiDataId(6), read, Extension("Guid")] guid location;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string workitem_description;
	[WmiDataId(9), read, Extension("Variant")] object transaction_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string correlation_ids;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string logical_path;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string physical_path;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string original_path;
};
		
[dynamic: ToInstance, Description("FILESTREAM file I/O streaming access dump"): Amended,
    Guid("{0d607346-32e4-4943-98e0-deebf3a050ef}"), locale("MS\\0x409"),
    DisplayName("filestream_file_io_dump"): Amended]
class XeSqlPkg_filestream_file_io_dump: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class filestream_file_io_dump: XeSqlPkg_filestream_file_io_dump
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string description;
	[WmiDataId(6), read, Extension("Variant")] object data;
};
		
[dynamic: ToInstance, Description("Occurs when a write completion for a FILESTREAM file is received."): Amended,
    Guid("{C7512043-EDDB-4a06-B72D-2D4337D0325A}"), locale("MS\\0x409"),
    DisplayName("filestream_file_write_completion"): Amended]
class XeSqlPkg_filestream_file_write_completion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class filestream_file_write_completion: XeSqlPkg_filestream_file_write_completion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 completion_count;
	[WmiDataId(6), read, Extension("Variant")] object offsets;
	[WmiDataId(7), read, Extension("Variant")] object sizes;
};
		
[dynamic: ToInstance, Description("Broker transmission delivery state machine event end"): Amended,
    Guid("{5B0108E6-BB06-487e-8AC2-8BE59B026649}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_deliverysm_event_end"): Amended]
class XeSqlPkg_broker_transmission_deliverysm_event_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_deliverysm_event_end: XeSqlPkg_broker_transmission_deliverysm_event_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, 
				XEMapId(60),
				ValueMap { 
					"5", 
					"0", 
					"1", 
					"11", 
					"9", 
					"12", 
					"4", 
					"3", 
					"10", 
					"8", 
					"2", 
					"6", 
					"7" },
				Values { 
					"DeliveryTimerExpired", 
					"DialogEndpointDeleted", 
					"EnqueuedMessages", 
					"MaxEvent", 
					"NoEnqueuedMessages", 
					"NoEvent", 
					"ReceivedFullAck", 
					"ReceivedProgressiveAck", 
					"SendAck", 
					"SendCompletion", 
					"SendError", 
					"SendMessages", 
					"SentMessages" }
			] sint32 event;
	[WmiDataId(10), read, 
				XEMapId(61),
				ValueMap { 
					"6", 
					"0", 
					"8", 
					"5", 
					"7", 
					"4", 
					"3", 
					"1", 
					"2" },
				Values { 
					"BadState", 
					"Idle", 
					"Ignore", 
					"MaxState", 
					"NoStateChange", 
					"Resending_Sending", 
					"Resending_Waiting", 
					"Sending", 
					"SendingAck" }
			] sint32 state;
	[WmiDataId(11), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission timer set"): Amended,
    Guid("{C1F40843-FAB3-425f-A1D3-8460C27E2D51}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_timer_set"): Amended]
class XeSqlPkg_broker_transmission_timer_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_timer_set: XeSqlPkg_broker_transmission_timer_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, 
				XEMapId(63),
				ValueMap { 
					"2", 
					"1", 
					"0", 
					"3" },
				Values { 
					"Delivery", 
					"OutgoingAck", 
					"OutOfOrderWatch", 
					"x_NumTransmissionTimer" }
			] sint32 timer;
	[WmiDataId(10), read] uint32 expires;
	[WmiDataId(11), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission timer reset"): Amended,
    Guid("{723A69C4-BA2A-4d3a-918B-C197FE8CCF8D}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_timer_reset"): Amended]
class XeSqlPkg_broker_transmission_timer_reset: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_timer_reset: XeSqlPkg_broker_transmission_timer_reset
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, 
				XEMapId(63),
				ValueMap { 
					"2", 
					"1", 
					"0", 
					"3" },
				Values { 
					"Delivery", 
					"OutgoingAck", 
					"OutOfOrderWatch", 
					"x_NumTransmissionTimer" }
			] sint32 timer;
	[WmiDataId(10), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission timer fire"): Amended,
    Guid("{1DC58D44-47C8-49f2-833E-540AA0A1A8DF}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_timer_fire"): Amended]
class XeSqlPkg_broker_transmission_timer_fire: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_timer_fire: XeSqlPkg_broker_transmission_timer_fire
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, 
				XEMapId(63),
				ValueMap { 
					"2", 
					"1", 
					"0", 
					"3" },
				Values { 
					"Delivery", 
					"OutgoingAck", 
					"OutOfOrderWatch", 
					"x_NumTransmissionTimer" }
			] sint32 timer;
	[WmiDataId(10), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission lazyflusher submit"): Amended,
    Guid("{AD345406-6D1B-4fef-854F-E2636D90EF29}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_lazyflusher_submit"): Amended]
class XeSqlPkg_broker_transmission_lazyflusher_submit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_lazyflusher_submit: XeSqlPkg_broker_transmission_lazyflusher_submit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission lazyflusher processing begin"): Amended,
    Guid("{EDA910EE-4977-4a8f-8C30-E9B83EC7A7D1}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_lazyflusher_processing_begin"): Amended]
class XeSqlPkg_broker_transmission_lazyflusher_processing_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_lazyflusher_processing_begin: XeSqlPkg_broker_transmission_lazyflusher_processing_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Broker transmission lazyflusher processing end"): Amended,
    Guid("{D4E1634B-AEBF-4903-93AC-EAFBF5960D1E}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_lazyflusher_processing_end"): Amended]
class XeSqlPkg_broker_transmission_lazyflusher_processing_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_lazyflusher_processing_end: XeSqlPkg_broker_transmission_lazyflusher_processing_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 objects_flushed;
	[WmiDataId(6), read] uint32 sleep_time;
};
		
[dynamic: ToInstance, Description("Broker transmission timer armed"): Amended,
    Guid("{37DE02F2-53F8-4fca-A7DE-42E73553790C}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_timer_armed"): Amended]
class XeSqlPkg_broker_transmission_timer_armed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_timer_armed: XeSqlPkg_broker_transmission_timer_armed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, 
				XEMapId(63),
				ValueMap { 
					"2", 
					"1", 
					"0", 
					"3" },
				Values { 
					"Delivery", 
					"OutgoingAck", 
					"OutOfOrderWatch", 
					"x_NumTransmissionTimer" }
			] sint32 timer;
	[WmiDataId(10), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission lazyflusher remove"): Amended,
    Guid("{F6BBBA99-AC48-4fec-B67D-F3201A57AA87}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_lazyflusher_remove"): Amended]
class XeSqlPkg_broker_transmission_lazyflusher_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_lazyflusher_remove: XeSqlPkg_broker_transmission_lazyflusher_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission object load"): Amended,
    Guid("{F8343218-1075-4455-B8C0-B74CE41749F4}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_object_get"): Amended]
class XeSqlPkg_broker_transmission_object_get: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_object_get: XeSqlPkg_broker_transmission_object_get
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read] sint8  is_from_worktable;
	[WmiDataId(10), read] sint8  is_new_object;
	[WmiDataId(11), read] sint8  is_get_only;
	[WmiDataId(12), read] sint8  exception_occurred;
	[WmiDataId(13), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission object worktable load begin"): Amended,
    Guid("{33C17FB7-D393-46ec-8064-890F741FDEEC}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_object_worktable_load_begin"): Amended]
class XeSqlPkg_broker_transmission_object_worktable_load_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_object_worktable_load_begin: XeSqlPkg_broker_transmission_object_worktable_load_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission object worktable load end"): Amended,
    Guid("{FF994DCD-70EF-44fb-99F4-A0A40E846385}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_object_worktable_load_end"): Amended]
class XeSqlPkg_broker_transmission_object_worktable_load_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_object_worktable_load_end: XeSqlPkg_broker_transmission_object_worktable_load_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read, 
				XEMapId(68),
				ValueMap { 
					"2", 
					"1", 
					"0" },
				Values { 
					"Exception", 
					"NotFound", 
					"Success" }
			] sint32 result;
	[WmiDataId(9), read] uint64 unique_id;
	[WmiDataId(10), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission object worktable save begin"): Amended,
    Guid("{F8717D11-2297-419e-A3D4-8AE8CFAF2970}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_object_worktable_save_begin"): Amended]
class XeSqlPkg_broker_transmission_object_worktable_save_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_object_worktable_save_begin: XeSqlPkg_broker_transmission_object_worktable_save_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission object worktable save end"): Amended,
    Guid("{3C0E72DF-0ACB-4ac8-851A-184F575A7001}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_object_worktable_save_end"): Amended]
class XeSqlPkg_broker_transmission_object_worktable_save_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_object_worktable_save_end: XeSqlPkg_broker_transmission_object_worktable_save_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read] sint8  is_saved;
	[WmiDataId(10), read] sint8  is_new_record;
	[WmiDataId(11), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission object worktable save end"): Amended,
    Guid("{8E5C5DBF-A3E6-47f1-BA24-DF70F9CA5F02}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_object_delete_begin"): Amended]
class XeSqlPkg_broker_transmission_object_delete_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_object_delete_begin: XeSqlPkg_broker_transmission_object_delete_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission object worktable save end"): Amended,
    Guid("{D02F2C7A-F454-46e1-ADF1-2A2A320E1CEF}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_object_delete_end"): Amended]
class XeSqlPkg_broker_transmission_object_delete_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_object_delete_end: XeSqlPkg_broker_transmission_object_delete_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read] sint8  removed_from_worktable;
	[WmiDataId(10), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmitter reclassification phase begin"): Amended,
    Guid("{B3DD1F49-9864-4ffe-8DF3-3264546A2CFD}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_reclassification_phase_begin"): Amended]
class XeSqlPkg_broker_transmitter_reclassification_phase_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_reclassification_phase_begin: XeSqlPkg_broker_transmitter_reclassification_phase_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(74),
				ValueMap { 
					"1", 
					"0", 
					"2" },
				Values { 
					"Process", 
					"Select", 
					"Verify" }
			] uint32 phase;
};
		
[dynamic: ToInstance, Description("Broker transmitter reclassification phase end"): Amended,
    Guid("{01120624-30B0-4fbf-8DFD-4703C8D48565}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_reclassification_phase_end"): Amended]
class XeSqlPkg_broker_transmitter_reclassification_phase_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_reclassification_phase_end: XeSqlPkg_broker_transmitter_reclassification_phase_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(74),
				ValueMap { 
					"1", 
					"0", 
					"2" },
				Values { 
					"Process", 
					"Select", 
					"Verify" }
			] uint32 phase;
};
		
[dynamic: ToInstance, Description("Broker transport connection event begin"): Amended,
    Guid("{CF6AF34E-9B3D-4d74-B266-74516C22D4BA}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_event_begin"): Amended]
class XeSqlPkg_broker_transport_connection_event_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_event_begin: XeSqlPkg_broker_transport_connection_event_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(70),
				ValueMap { 
					"25", 
					"26", 
					"7", 
					"8", 
					"9", 
					"19", 
					"0", 
					"23", 
					"27", 
					"18", 
					"5", 
					"6", 
					"1", 
					"3", 
					"21", 
					"24", 
					"2", 
					"10", 
					"11", 
					"4", 
					"17", 
					"14", 
					"15", 
					"16", 
					"12", 
					"13", 
					"22", 
					"20" },
				Values { 
					"AddSslComplete", 
					"AddSslProvider", 
					"AuthComplete", 
					"AuthError", 
					"AuthSuccess", 
					"Dispatch", 
					"InitHandshake", 
					"InitRedirect", 
					"MaxEvent", 
					"ProtocolError", 
					"RecvArbReq", 
					"RecvArbResp", 
					"RecvLNM", 
					"RecvPMS", 
					"RecvPxConnect", 
					"RecvRedirect", 
					"RecvSSPI", 
					"RecvSSPIConfirm", 
					"RecvSSPIReject", 
					"RecvValidation", 
					"SkipArbitration", 
					"SkipAuth", 
					"SkipAuthAndArb", 
					"StartArbitration", 
					"StartAuth", 
					"StartAuthTwo", 
					"StartPxForwarding", 
					"StartWaitPostValid" }
			] sint32 event;
	[WmiDataId(6), read, 
				XEMapId(69),
				ValueMap { 
					"13", 
					"18", 
					"0", 
					"3", 
					"2", 
					"12", 
					"15", 
					"16", 
					"5", 
					"4", 
					"17", 
					"11", 
					"7", 
					"6", 
					"1", 
					"9", 
					"14", 
					"8", 
					"10" },
				Values { 
					"Error", 
					"MaxState", 
					"None", 
					"OneASC", 
					"OneISC", 
					"Online", 
					"PxForwarding", 
					"Redirect", 
					"TwoASC", 
					"TwoISC", 
					"WaitAddSsl", 
					"WaitArb", 
					"WaitASCConf", 
					"WaitISCConf", 
					"WaitLN", 
					"WaitPMS", 
					"WaitPostValid", 
					"WaitReject", 
					"WaitValidation" }
			] sint32 state;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection event action"): Amended,
    Guid("{408EA5F7-902B-4bf6-B0A3-4454FB01D4EE}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_action_fire"): Amended]
class XeSqlPkg_broker_transport_connection_action_fire: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_action_fire: XeSqlPkg_broker_transport_connection_action_fire
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(70),
				ValueMap { 
					"25", 
					"26", 
					"7", 
					"8", 
					"9", 
					"19", 
					"0", 
					"23", 
					"27", 
					"18", 
					"5", 
					"6", 
					"1", 
					"3", 
					"21", 
					"24", 
					"2", 
					"10", 
					"11", 
					"4", 
					"17", 
					"14", 
					"15", 
					"16", 
					"12", 
					"13", 
					"22", 
					"20" },
				Values { 
					"AddSslComplete", 
					"AddSslProvider", 
					"AuthComplete", 
					"AuthError", 
					"AuthSuccess", 
					"Dispatch", 
					"InitHandshake", 
					"InitRedirect", 
					"MaxEvent", 
					"ProtocolError", 
					"RecvArbReq", 
					"RecvArbResp", 
					"RecvLNM", 
					"RecvPMS", 
					"RecvPxConnect", 
					"RecvRedirect", 
					"RecvSSPI", 
					"RecvSSPIConfirm", 
					"RecvSSPIReject", 
					"RecvValidation", 
					"SkipArbitration", 
					"SkipAuth", 
					"SkipAuthAndArb", 
					"StartArbitration", 
					"StartAuth", 
					"StartAuthTwo", 
					"StartPxForwarding", 
					"StartWaitPostValid" }
			] sint32 event;
	[WmiDataId(6), read, 
				XEMapId(71),
				ValueMap { 
					"5", 
					"32", 
					"23", 
					"18", 
					"26", 
					"25", 
					"11", 
					"21", 
					"22", 
					"28", 
					"12", 
					"4", 
					"33", 
					"3", 
					"8", 
					"0", 
					"24", 
					"29", 
					"1", 
					"14", 
					"7", 
					"31", 
					"9", 
					"19", 
					"20", 
					"10", 
					"2", 
					"13", 
					"30", 
					"15", 
					"17", 
					"27", 
					"16", 
					"6" },
				Values { 
					"Accept_SSPI", 
					"AddSslSupport", 
					"Arbitrate", 
					"CreateArbitrator", 
					"Dispatch", 
					"Error", 
					"FinishSSPI", 
					"HandleArbReq", 
					"HandleArbResp", 
					"HandleProxyConnect", 
					"HashMessage", 
					"Initiate_SSPI", 
					"MaxAction", 
					"Negotiate", 
					"NextSSPI", 
					"Null", 
					"Online", 
					"ProxyForward", 
					"ReadConfig", 
					"ReceivePMS", 
					"RecvConfirm_SSPI", 
					"RecvRedirectMsg", 
					"RejectSSPI", 
					"SendArbReq", 
					"SendArbResponse", 
					"SendConfirmSSPI", 
					"SendLNM", 
					"SendPMS", 
					"SendRedirectMsg", 
					"SendValidation", 
					"StartPostValidation", 
					"StopEncryption", 
					"ValidateHandshake", 
					"Verify_SSPI" }
			] sint32 action;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection event begin"): Amended,
    Guid("{FDC8A107-D878-49a8-8100-203B13046731}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_event_end"): Amended]
class XeSqlPkg_broker_transport_connection_event_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_event_end: XeSqlPkg_broker_transport_connection_event_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(70),
				ValueMap { 
					"25", 
					"26", 
					"7", 
					"8", 
					"9", 
					"19", 
					"0", 
					"23", 
					"27", 
					"18", 
					"5", 
					"6", 
					"1", 
					"3", 
					"21", 
					"24", 
					"2", 
					"10", 
					"11", 
					"4", 
					"17", 
					"14", 
					"15", 
					"16", 
					"12", 
					"13", 
					"22", 
					"20" },
				Values { 
					"AddSslComplete", 
					"AddSslProvider", 
					"AuthComplete", 
					"AuthError", 
					"AuthSuccess", 
					"Dispatch", 
					"InitHandshake", 
					"InitRedirect", 
					"MaxEvent", 
					"ProtocolError", 
					"RecvArbReq", 
					"RecvArbResp", 
					"RecvLNM", 
					"RecvPMS", 
					"RecvPxConnect", 
					"RecvRedirect", 
					"RecvSSPI", 
					"RecvSSPIConfirm", 
					"RecvSSPIReject", 
					"RecvValidation", 
					"SkipArbitration", 
					"SkipAuth", 
					"SkipAuthAndArb", 
					"StartArbitration", 
					"StartAuth", 
					"StartAuthTwo", 
					"StartPxForwarding", 
					"StartWaitPostValid" }
			] sint32 event;
	[WmiDataId(6), read, 
				XEMapId(69),
				ValueMap { 
					"13", 
					"18", 
					"0", 
					"3", 
					"2", 
					"12", 
					"15", 
					"16", 
					"5", 
					"4", 
					"17", 
					"11", 
					"7", 
					"6", 
					"1", 
					"9", 
					"14", 
					"8", 
					"10" },
				Values { 
					"Error", 
					"MaxState", 
					"None", 
					"OneASC", 
					"OneISC", 
					"Online", 
					"PxForwarding", 
					"Redirect", 
					"TwoASC", 
					"TwoISC", 
					"WaitAddSsl", 
					"WaitArb", 
					"WaitASCConf", 
					"WaitISCConf", 
					"WaitLN", 
					"WaitPMS", 
					"WaitPostValid", 
					"WaitReject", 
					"WaitValidation" }
			] sint32 state;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection outgoing connect attempt"): Amended,
    Guid("{16C2F627-7211-40b3-BD08-453B3DAF00C8}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_outgoing_connect_attempt"): Amended]
class XeSqlPkg_broker_transport_connection_outgoing_connect_attempt: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_outgoing_connect_attempt: XeSqlPkg_broker_transport_connection_outgoing_connect_attempt
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(6),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Broker", 
					"DbMirroring" }
			] sint32 endpoint_type;
	[WmiDataId(6), read] uint16 port;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string address;
	[WmiDataId(8), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection DNS lookup"): Amended,
    Guid("{9E7DBE36-C135-4646-A417-280752458E3B}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_dns_lookup"): Amended]
class XeSqlPkg_broker_transport_connection_dns_lookup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_dns_lookup: XeSqlPkg_broker_transport_connection_dns_lookup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(5),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"AlreadyConnected", 
					"DnsLookupSucceeded", 
					"DnsLookupFailed", 
					"OutOfMemory", 
					"InvalidEndpointString" }
			] sint32 result;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string error;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection winsock connect attempt"): Amended,
    Guid("{352039D4-FB47-4e9e-B0BD-4B73C8C2A1AC}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_winsock_connect_attempt"): Amended]
class XeSqlPkg_broker_transport_connection_winsock_connect_attempt: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_winsock_connect_attempt: XeSqlPkg_broker_transport_connection_winsock_connect_attempt
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated")] string address;
	[WmiDataId(6), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection winsock connect fail"): Amended,
    Guid("{356B02D8-E449-4e99-97CA-525B8A8460AB}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_winsock_connect_fail"): Amended]
class XeSqlPkg_broker_transport_connection_winsock_connect_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_winsock_connect_fail: XeSqlPkg_broker_transport_connection_winsock_connect_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string error;
	[WmiDataId(6), read, StringTermination("NullTerminated")] string address;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection winsock connect success"): Amended,
    Guid("{F30F31F7-5872-4b09-A787-A518BAE88E5E}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_winsock_connect_success"): Amended]
class XeSqlPkg_broker_transport_connection_winsock_connect_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_winsock_connect_success: XeSqlPkg_broker_transport_connection_winsock_connect_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated")] string address;
	[WmiDataId(6), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transmission outgoing ack state machine event begin"): Amended,
    Guid("{551A254C-EC28-4a94-94BD-820C37F1A282}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_acksm_event_begin"): Amended]
class XeSqlPkg_broker_transmission_acksm_event_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_acksm_event_begin: XeSqlPkg_broker_transmission_acksm_event_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, 
				XEMapId(7),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8" },
				Values { 
					"AckTimerExpired", 
					"ReceivedNewMessages", 
					"ReceivedDupeMessages", 
					"SentMessages", 
					"SubmitAckIfNeeded", 
					"TooManyUnacknowledgedMessages", 
					"Reset", 
					"MaxEvent", 
					"NoEvent" }
			] sint32 event;
	[WmiDataId(10), read, 
				XEMapId(8),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8" },
				Values { 
					"Idle", 
					"AckTimerSet", 
					"AckPending", 
					"AckAlways", 
					"AckAlways_AckPending", 
					"MaxState", 
					"BadState", 
					"NoStateChange", 
					"Ignore" }
			] sint32 state;
	[WmiDataId(11), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission outgoing ack state machine action fire"): Amended,
    Guid("{C49DB76C-6F24-4532-947B-048B372521C0}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_acksm_action_fire"): Amended]
class XeSqlPkg_broker_transmission_acksm_action_fire: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_acksm_action_fire: XeSqlPkg_broker_transmission_acksm_action_fire
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, 
				XEMapId(7),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8" },
				Values { 
					"AckTimerExpired", 
					"ReceivedNewMessages", 
					"ReceivedDupeMessages", 
					"SentMessages", 
					"SubmitAckIfNeeded", 
					"TooManyUnacknowledgedMessages", 
					"Reset", 
					"MaxEvent", 
					"NoEvent" }
			] sint32 event;
	[WmiDataId(10), read, 
				XEMapId(9),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"NullAction", 
					"CancelAckTimer", 
					"SetAckTimer", 
					"MaxAction" }
			] sint32 action;
	[WmiDataId(11), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission outgoing ack state machine event end"): Amended,
    Guid("{74BC9999-8561-4038-8259-6DEB316CED6A}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_acksm_event_end"): Amended]
class XeSqlPkg_broker_transmission_acksm_event_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_acksm_event_end: XeSqlPkg_broker_transmission_acksm_event_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, 
				XEMapId(7),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8" },
				Values { 
					"AckTimerExpired", 
					"ReceivedNewMessages", 
					"ReceivedDupeMessages", 
					"SentMessages", 
					"SubmitAckIfNeeded", 
					"TooManyUnacknowledgedMessages", 
					"Reset", 
					"MaxEvent", 
					"NoEvent" }
			] sint32 event;
	[WmiDataId(10), read, 
				XEMapId(8),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8" },
				Values { 
					"Idle", 
					"AckTimerSet", 
					"AckPending", 
					"AckAlways", 
					"AckAlways_AckPending", 
					"MaxState", 
					"BadState", 
					"NoStateChange", 
					"Ignore" }
			] sint32 state;
	[WmiDataId(11), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection close"): Amended,
    Guid("{95D1475D-47C4-4d02-A1B2-0F58A0E216A7}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_close"): Amended]
class XeSqlPkg_broker_transport_connection_close: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_close: XeSqlPkg_broker_transport_connection_close
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(73),
				ValueMap { 
					"16", 
					"3", 
					"11", 
					"22", 
					"13", 
					"18", 
					"7", 
					"15", 
					"10", 
					"4", 
					"20", 
					"9", 
					"8", 
					"12", 
					"24", 
					"6", 
					"0", 
					"19", 
					"5", 
					"21", 
					"26", 
					"14", 
					"2", 
					"23", 
					"17", 
					"25", 
					"1" },
				Values { 
					"ArbitrationLost", 
					"Connecting", 
					"ConnectionError", 
					"ConnectionRedirected", 
					"Disconnected", 
					"DNSLookpConnectedIP", 
					"DnsLookupFailed", 
					"Exception", 
					"ExtensiveFlowControlClose", 
					"FlowControlled", 
					"ForwarderDisconnected", 
					"IdleClose", 
					"InvalidToAddress", 
					"LoginError", 
					"NegotiationRestarted", 
					"NoMemory", 
					"None", 
					"NoProxy", 
					"NoRoute", 
					"NotFound", 
					"NumStatus", 
					"ProtocolError", 
					"Ready", 
					"RedirectionFailed", 
					"Shutdown", 
					"SocketDuplicated", 
					"Unavailable" }
			] sint32 stream_status;
	[WmiDataId(6), read, Extension("Guid")] guid connection_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string error;
};
		
[dynamic: ToInstance, Description("Broker transport connection read complete"): Amended,
    Guid("{5CA49847-8D25-4acc-B627-53779FC2C809}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_read_complete"): Amended]
class XeSqlPkg_broker_transport_connection_read_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_read_complete: XeSqlPkg_broker_transport_connection_read_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  control_block_address;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string error;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport global message add"): Amended,
    Guid("{5CF30F85-AC9C-475b-AAF9-4181A7D3CD22}"), locale("MS\\0x409"),
    DisplayName("broker_transport_global_message_add"): Amended]
class XeSqlPkg_broker_transport_global_message_add: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_global_message_add: XeSqlPkg_broker_transport_global_message_add
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 pending_messages;
};
		
[dynamic: ToInstance, Description("Broker transport global message delete"): Amended,
    Guid("{E94275D0-E4E2-4b88-A3AF-889847F6E0C0}"), locale("MS\\0x409"),
    DisplayName("broker_transport_global_message_delete"): Amended]
class XeSqlPkg_broker_transport_global_message_delete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_global_message_delete: XeSqlPkg_broker_transport_global_message_delete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 pending_messages;
};
		
[dynamic: ToInstance, Description("Broker transport connection message add"): Amended,
    Guid("{567B87DA-D091-4d5b-9CC9-67DF55591A93}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_message_add"): Amended]
class XeSqlPkg_broker_transport_connection_message_add: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_message_add: XeSqlPkg_broker_transport_connection_message_add
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 pending_messages;
	[WmiDataId(6), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection message delete"): Amended,
    Guid("{8672A4E8-DED9-450d-9CD3-33C67A9FA4DD}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_message_delete"): Amended]
class XeSqlPkg_broker_transport_connection_message_delete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_message_delete: XeSqlPkg_broker_transport_connection_message_delete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 pending_messages;
	[WmiDataId(6), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection winsock read"): Amended,
    Guid("{BB4F49AF-5DB0-4d5b-914A-4B35F1737F6C}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_winsock_read"): Amended]
class XeSqlPkg_broker_transport_connection_winsock_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_winsock_read: XeSqlPkg_broker_transport_connection_winsock_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  control_block_address;
	[WmiDataId(6), read, Extension("Guid")] guid connection_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string error;
};
		
[dynamic: ToInstance, Description("Broker transport connection receive I/O complete"): Amended,
    Guid("{8EF1A9E7-2AF3-466b-AFAB-8FB02F5E03FC}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_receive_io_complete"): Amended]
class XeSqlPkg_broker_transport_connection_receive_io_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_receive_io_complete: XeSqlPkg_broker_transport_connection_receive_io_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 receive_post_count;
	[WmiDataId(6), read] uint32 fill_factor;
	[WmiDataId(7), read] uint32 bytes_received;
	[WmiDataId(8), read, Pointer] object  control_block_address;
	[WmiDataId(9), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection process receive control block"): Amended,
    Guid("{ADD8FF82-8F52-48eb-A949-55EC14D8F519}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_process_receive_control_block"): Amended]
class XeSqlPkg_broker_transport_connection_process_receive_control_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_process_receive_control_block: XeSqlPkg_broker_transport_connection_process_receive_control_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  control_block_address;
	[WmiDataId(6), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection delimit message"): Amended,
    Guid("{E33FBE7A-0EFE-411f-9BD6-765787A7C833}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_delimit_message"): Amended]
class XeSqlPkg_broker_transport_connection_delimit_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_delimit_message: XeSqlPkg_broker_transport_connection_delimit_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 remaining_bytes;
	[WmiDataId(6), read, 
				XEMapId(75),
				ValueMap { 
					"3", 
					"1", 
					"0", 
					"2" },
				Values { 
					"FormatError", 
					"More", 
					"NoMemory", 
					"UsedUp" }
			] sint32 result;
	[WmiDataId(7), read, Pointer] object  control_block_address;
	[WmiDataId(8), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection write complete"): Amended,
    Guid("{AEF49847-8D25-4acc-B627-53779FC2C809}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_write_complete"): Amended]
class XeSqlPkg_broker_transport_connection_write_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_write_complete: XeSqlPkg_broker_transport_connection_write_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  boxcar_address;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string error;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transport connection send I/O complete"): Amended,
    Guid("{BEF49847-8D25-4acc-B627-53779FC2C809}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_send_io_complete"): Amended]
class XeSqlPkg_broker_transport_connection_send_io_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_send_io_complete: XeSqlPkg_broker_transport_connection_send_io_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  boxcar_address;
	[WmiDataId(6), read] sint8  leaving_flow_control;
	[WmiDataId(7), read] sint8  let_ready_boxcar_go;
	[WmiDataId(8), read] sint8  let_ready_boxcar_sit;
	[WmiDataId(9), read] sint8  inline_send;
	[WmiDataId(10), read] sint8  in_cleanup_task;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string error;
	[WmiDataId(12), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transmitter transport stream update"): Amended,
    Guid("{CEF49847-8D25-4acc-B627-53779FC2C809}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_transport_stream_update"): Amended]
class XeSqlPkg_broker_transmitter_transport_stream_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_transport_stream_update: XeSqlPkg_broker_transmitter_transport_stream_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(72),
				ValueMap { 
					"3", 
					"1", 
					"2", 
					"0" },
				Values { 
					"EnteringDown", 
					"EnteringUp", 
					"LeavingFlowControlled", 
					"None" }
			] sint32 transport_stream_update;
	[WmiDataId(6), read, 
				XEMapId(73),
				ValueMap { 
					"16", 
					"3", 
					"11", 
					"22", 
					"13", 
					"18", 
					"7", 
					"15", 
					"10", 
					"4", 
					"20", 
					"9", 
					"8", 
					"12", 
					"24", 
					"6", 
					"0", 
					"19", 
					"5", 
					"21", 
					"26", 
					"14", 
					"2", 
					"23", 
					"17", 
					"25", 
					"1" },
				Values { 
					"ArbitrationLost", 
					"Connecting", 
					"ConnectionError", 
					"ConnectionRedirected", 
					"Disconnected", 
					"DNSLookpConnectedIP", 
					"DnsLookupFailed", 
					"Exception", 
					"ExtensiveFlowControlClose", 
					"FlowControlled", 
					"ForwarderDisconnected", 
					"IdleClose", 
					"InvalidToAddress", 
					"LoginError", 
					"NegotiationRestarted", 
					"NoMemory", 
					"None", 
					"NoProxy", 
					"NoRoute", 
					"NotFound", 
					"NumStatus", 
					"ProtocolError", 
					"Ready", 
					"RedirectionFailed", 
					"Shutdown", 
					"SocketDuplicated", 
					"Unavailable" }
			] sint32 transport_stream_status;
	[WmiDataId(7), read] sint64 status_version;
	[WmiDataId(8), read, Extension("Guid")] guid connection_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string error;
};
		
[dynamic: ToInstance, Description("Broker transmitter destination process begin"): Amended,
    Guid("{DEF49847-8D25-4acc-B627-53779FC2C809}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_destination_process_begin"): Amended]
class XeSqlPkg_broker_transmitter_destination_process_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_destination_process_begin: XeSqlPkg_broker_transmitter_destination_process_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 destination_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string target_address;
};
		
[dynamic: ToInstance, Description("Broker transmitter destination process end"): Amended,
    Guid("{EEF49847-8D25-4acc-B627-53779FC2C809}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_destination_process_end"): Amended]
class XeSqlPkg_broker_transmitter_destination_process_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_destination_process_end: XeSqlPkg_broker_transmitter_destination_process_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 destination_id;
	[WmiDataId(6), read] sint8  processed;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string target_address;
};
		
[dynamic: ToInstance, Description("Broker transmitter destination process sender process"): Amended,
    Guid("{FEF49847-8D25-4acc-B627-53779FC2C809}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_destination_process_sender_process"): Amended]
class XeSqlPkg_broker_transmitter_destination_process_sender_process: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_destination_process_sender_process: XeSqlPkg_broker_transmitter_destination_process_sender_process
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 destination_id;
	[WmiDataId(6), read] sint8  processed;
	[WmiDataId(7), read, Pointer] object  sender_address;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string target_address;
};
		
[dynamic: ToInstance, Description("Broker transmitter destination connect"): Amended,
    Guid("{FFF49847-8D25-4acc-B627-53779FC2C809}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_destination_connect"): Amended]
class XeSqlPkg_broker_transmitter_destination_connect: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_destination_connect: XeSqlPkg_broker_transmitter_destination_connect
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 destination_id;
	[WmiDataId(6), read, 
				XEMapId(73),
				ValueMap { 
					"16", 
					"3", 
					"11", 
					"22", 
					"13", 
					"18", 
					"7", 
					"15", 
					"10", 
					"4", 
					"20", 
					"9", 
					"8", 
					"12", 
					"24", 
					"6", 
					"0", 
					"19", 
					"5", 
					"21", 
					"26", 
					"14", 
					"2", 
					"23", 
					"17", 
					"25", 
					"1" },
				Values { 
					"ArbitrationLost", 
					"Connecting", 
					"ConnectionError", 
					"ConnectionRedirected", 
					"Disconnected", 
					"DNSLookpConnectedIP", 
					"DnsLookupFailed", 
					"Exception", 
					"ExtensiveFlowControlClose", 
					"FlowControlled", 
					"ForwarderDisconnected", 
					"IdleClose", 
					"InvalidToAddress", 
					"LoginError", 
					"NegotiationRestarted", 
					"NoMemory", 
					"None", 
					"NoProxy", 
					"NoRoute", 
					"NotFound", 
					"NumStatus", 
					"ProtocolError", 
					"Ready", 
					"RedirectionFailed", 
					"Shutdown", 
					"SocketDuplicated", 
					"Unavailable" }
			] sint32 transport_stream_status;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string target_address;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string error;
};
		
[dynamic: ToInstance, Description("Broker transmitter destination event fire"): Amended,
    Guid("{F0F49847-8D25-4acc-B627-53779FC2C809}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_destination_event_fire"): Amended]
class XeSqlPkg_broker_transmitter_destination_event_fire: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_destination_event_fire: XeSqlPkg_broker_transmitter_destination_event_fire
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 destination_id;
	[WmiDataId(6), read, 
				XEMapId(10),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7" },
				Values { 
					"Subscribe", 
					"Unsubscribe", 
					"Process", 
					"Processed", 
					"Unsuppress", 
					"TransportReady", 
					"TransportFlowControl", 
					"TransportDisconnect" }
			] sint32 event;
	[WmiDataId(7), read, 
				XEMapId(11),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19" },
				Values { 
					"NoConnectionHasSubscription", 
					"NoConnectionNoSubscriptionUnsubscribe", 
					"NotReadyHasSubscription", 
					"NotReadyNoSubscription", 
					"ReadyHasSubscription", 
					"ReadyNoSubscription", 
					"SuppressHasSubscription", 
					"SuppressNoSubscription", 
					"ProcessingWaitingSubscription", 
					"SuppressedDuringProcessingHasSubscription", 
					"SuppressedDuringProcessingNoSubscription", 
					"NoConnectionWaitHasSubscription", 
					"NoConnectionWaitNoSubscription", 
					"NotReadyWaitHasSubscription", 
					"NotReadyWaitNoSubscription", 
					"ReadyWaitHasSubscription", 
					"ReadyWaitNoSubscription", 
					"MaxValidStates", 
					"Error", 
					"Ignore" }
			] sint32 state_old;
	[WmiDataId(8), read, 
				XEMapId(11),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19" },
				Values { 
					"NoConnectionHasSubscription", 
					"NoConnectionNoSubscriptionUnsubscribe", 
					"NotReadyHasSubscription", 
					"NotReadyNoSubscription", 
					"ReadyHasSubscription", 
					"ReadyNoSubscription", 
					"SuppressHasSubscription", 
					"SuppressNoSubscription", 
					"ProcessingWaitingSubscription", 
					"SuppressedDuringProcessingHasSubscription", 
					"SuppressedDuringProcessingNoSubscription", 
					"NoConnectionWaitHasSubscription", 
					"NoConnectionWaitNoSubscription", 
					"NotReadyWaitHasSubscription", 
					"NotReadyWaitNoSubscription", 
					"ReadyWaitHasSubscription", 
					"ReadyWaitNoSubscription", 
					"MaxValidStates", 
					"Error", 
					"Ignore" }
			] sint32 state_new;
	[WmiDataId(9), read, 
				XEMapId(73),
				ValueMap { 
					"16", 
					"3", 
					"11", 
					"22", 
					"13", 
					"18", 
					"7", 
					"15", 
					"10", 
					"4", 
					"20", 
					"9", 
					"8", 
					"12", 
					"24", 
					"6", 
					"0", 
					"19", 
					"5", 
					"21", 
					"26", 
					"14", 
					"2", 
					"23", 
					"17", 
					"25", 
					"1" },
				Values { 
					"ArbitrationLost", 
					"Connecting", 
					"ConnectionError", 
					"ConnectionRedirected", 
					"Disconnected", 
					"DNSLookpConnectedIP", 
					"DnsLookupFailed", 
					"Exception", 
					"ExtensiveFlowControlClose", 
					"FlowControlled", 
					"ForwarderDisconnected", 
					"IdleClose", 
					"InvalidToAddress", 
					"LoginError", 
					"NegotiationRestarted", 
					"NoMemory", 
					"None", 
					"NoProxy", 
					"NoRoute", 
					"NotFound", 
					"NumStatus", 
					"ProtocolError", 
					"Ready", 
					"RedirectionFailed", 
					"Shutdown", 
					"SocketDuplicated", 
					"Unavailable" }
			] sint32 transport_stream_status;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string target_address;
};
		
[dynamic: ToInstance, Description("Broker transmitter destination reference"): Amended,
    Guid("{F1F49847-8D25-4acc-B627-53779FC2C809}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_destination_reference"): Amended]
class XeSqlPkg_broker_transmitter_destination_reference: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_destination_reference: XeSqlPkg_broker_transmitter_destination_reference
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 destination_id;
	[WmiDataId(6), read] sint8  is_successful;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string target_address;
};
		
[dynamic: ToInstance, Description("Broker transmission delivery state machine event begin"): Amended,
    Guid("{D471AF0C-CE15-4c36-81DD-00E33E0A0924}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_deliverysm_event_begin"): Amended]
class XeSqlPkg_broker_transmission_deliverysm_event_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_deliverysm_event_begin: XeSqlPkg_broker_transmission_deliverysm_event_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, 
				XEMapId(60),
				ValueMap { 
					"5", 
					"0", 
					"1", 
					"11", 
					"9", 
					"12", 
					"4", 
					"3", 
					"10", 
					"8", 
					"2", 
					"6", 
					"7" },
				Values { 
					"DeliveryTimerExpired", 
					"DialogEndpointDeleted", 
					"EnqueuedMessages", 
					"MaxEvent", 
					"NoEnqueuedMessages", 
					"NoEvent", 
					"ReceivedFullAck", 
					"ReceivedProgressiveAck", 
					"SendAck", 
					"SendCompletion", 
					"SendError", 
					"SendMessages", 
					"SentMessages" }
			] sint32 event;
	[WmiDataId(10), read, 
				XEMapId(61),
				ValueMap { 
					"6", 
					"0", 
					"8", 
					"5", 
					"7", 
					"4", 
					"3", 
					"1", 
					"2" },
				Values { 
					"BadState", 
					"Idle", 
					"Ignore", 
					"MaxState", 
					"NoStateChange", 
					"Resending_Sending", 
					"Resending_Waiting", 
					"Sending", 
					"SendingAck" }
			] sint32 state;
	[WmiDataId(11), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmission delivery state machine action fire"): Amended,
    Guid("{B1A3B64F-738B-423c-BBD5-F59FE60D0F96}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_deliverysm_action_fire"): Amended]
class XeSqlPkg_broker_transmission_deliverysm_action_fire: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_deliverysm_action_fire: XeSqlPkg_broker_transmission_deliverysm_action_fire
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 asb_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 unique_id;
	[WmiDataId(9), read, 
				XEMapId(60),
				ValueMap { 
					"5", 
					"0", 
					"1", 
					"11", 
					"9", 
					"12", 
					"4", 
					"3", 
					"10", 
					"8", 
					"2", 
					"6", 
					"7" },
				Values { 
					"DeliveryTimerExpired", 
					"DialogEndpointDeleted", 
					"EnqueuedMessages", 
					"MaxEvent", 
					"NoEnqueuedMessages", 
					"NoEvent", 
					"ReceivedFullAck", 
					"ReceivedProgressiveAck", 
					"SendAck", 
					"SendCompletion", 
					"SendError", 
					"SendMessages", 
					"SentMessages" }
			] sint32 event;
	[WmiDataId(10), read, 
				XEMapId(62),
				ValueMap { 
					"1", 
					"14", 
					"9", 
					"12", 
					"3", 
					"13", 
					"4", 
					"15", 
					"0", 
					"10", 
					"11", 
					"8", 
					"7", 
					"5", 
					"6", 
					"2" },
				Values { 
					"CancelDeliveryTimer", 
					"CheckForDeletedEndpoint", 
					"CheckForIdle", 
					"DialogEndpointDeleted", 
					"EnterResending", 
					"IncrementResendCount", 
					"LeaveResending", 
					"MaxAction", 
					"NullAction", 
					"ProcessSendError", 
					"ResetSendErrors", 
					"ResetSendInformation", 
					"SendAck", 
					"SendMessages", 
					"SentMessages", 
					"SetDeliveryTimer" }
			] sint32 action;
	[WmiDataId(11), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transport process boxcar"): Amended,
    Guid("{edbbcdc0-d40b-4ade-a4b7-19a545f079ff}"), locale("MS\\0x409"),
    DisplayName("broker_transport_process_boxcar"): Amended]
class XeSqlPkg_broker_transport_process_boxcar: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_process_boxcar: XeSqlPkg_broker_transport_process_boxcar
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  boxcar_address;
	[WmiDataId(6), read] sint32 message_count;
	[WmiDataId(7), read] uint32 boxcar_size;
	[WmiDataId(8), read] sint8  inline_send;
};
		
[dynamic: ToInstance, Description("Broker transport send"): Amended,
    Guid("{fdbbcdc0-d40b-4ade-a4b7-19a545f079ff}"), locale("MS\\0x409"),
    DisplayName("broker_transport_send"): Amended]
class XeSqlPkg_broker_transport_send: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_send: XeSqlPkg_broker_transport_send
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 message_class_id;
	[WmiDataId(6), read] sint32 protocol_id;
	[WmiDataId(7), read] uint32 reserved_message_size;
	[WmiDataId(8), read, 
				XEMapId(73),
				ValueMap { 
					"16", 
					"3", 
					"11", 
					"22", 
					"13", 
					"18", 
					"7", 
					"15", 
					"10", 
					"4", 
					"20", 
					"9", 
					"8", 
					"12", 
					"24", 
					"6", 
					"0", 
					"19", 
					"5", 
					"21", 
					"26", 
					"14", 
					"2", 
					"23", 
					"17", 
					"25", 
					"1" },
				Values { 
					"ArbitrationLost", 
					"Connecting", 
					"ConnectionError", 
					"ConnectionRedirected", 
					"Disconnected", 
					"DNSLookpConnectedIP", 
					"DnsLookupFailed", 
					"Exception", 
					"ExtensiveFlowControlClose", 
					"FlowControlled", 
					"ForwarderDisconnected", 
					"IdleClose", 
					"InvalidToAddress", 
					"LoginError", 
					"NegotiationRestarted", 
					"NoMemory", 
					"None", 
					"NoProxy", 
					"NoRoute", 
					"NotFound", 
					"NumStatus", 
					"ProtocolError", 
					"Ready", 
					"RedirectionFailed", 
					"Shutdown", 
					"SocketDuplicated", 
					"Unavailable" }
			] sint32 transport_stream_status;
	[WmiDataId(9), read, Pointer] object  message_reference_address;
	[WmiDataId(10), read, Pointer] object  boxcar_address;
	[WmiDataId(11), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transmitter destination subscribe"): Amended,
    Guid("{abbbcdc0-d40b-4ade-a4b7-19a545f079ff}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_destination_subscribe"): Amended]
class XeSqlPkg_broker_transmitter_destination_subscribe: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_destination_subscribe: XeSqlPkg_broker_transmitter_destination_subscribe
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 destination_id;
	[WmiDataId(6), read, Pointer] object  sender_address;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string target_address;
};
		
[dynamic: ToInstance, Description("Broker transmitter destination unsubscribe"): Amended,
    Guid("{bbbbcdc0-d40b-4ade-a4b7-19a545f079ff}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_destination_unsubscribe"): Amended]
class XeSqlPkg_broker_transmitter_destination_unsubscribe: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_destination_unsubscribe: XeSqlPkg_broker_transmitter_destination_unsubscribe
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 destination_id;
	[WmiDataId(6), read, Pointer] object  sender_address;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string target_address;
};
		
[dynamic: ToInstance, Description("Broker transmitter service created"): Amended,
    Guid("{dbbbcdc0-d40b-4ade-a4b7-19a545f079ff}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_service_create"): Amended]
class XeSqlPkg_broker_transmitter_service_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_service_create: XeSqlPkg_broker_transmitter_service_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  service_address;
	[WmiDataId(6), read] uint64 service_id;
	[WmiDataId(7), read] sint32 route_type;
	[WmiDataId(8), read] uint64 asb_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Extension("Guid")] guid dialog_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string to_service_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string to_broker_instance;
};
		
[dynamic: ToInstance, Description("Broker transmitter service match"): Amended,
    Guid("{ebbbcdc0-d40b-4ade-a4b7-19a545f079ff}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_service_match"): Amended]
class XeSqlPkg_broker_transmitter_service_match: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_service_match: XeSqlPkg_broker_transmitter_service_match
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  service_address;
	[WmiDataId(6), read] uint64 service_id;
	[WmiDataId(7), read] uint64 asb_id;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read, Extension("Guid")] guid dialog_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string to_service_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string to_broker_instance;
};
		
[dynamic: ToInstance, Description("Broker task idempotent submit"): Amended,
    Guid("{fbbbcdc0-d40b-4ade-a4b7-19a545f079ff}"), locale("MS\\0x409"),
    DisplayName("broker_task_idempotent_submit"): Amended]
class XeSqlPkg_broker_task_idempotent_submit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_task_idempotent_submit: XeSqlPkg_broker_task_idempotent_submit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"17", 
					"11", 
					"15", 
					"5", 
					"9", 
					"4", 
					"8", 
					"6", 
					"1", 
					"2", 
					"3", 
					"7", 
					"25", 
					"10", 
					"20", 
					"21", 
					"23", 
					"22", 
					"16", 
					"0", 
					"24", 
					"18", 
					"14", 
					"12", 
					"19", 
					"13" },
				Values { 
					"ActivationScheduler", 
					"AsyncDialogError", 
					"BrokerInitializer", 
					"ConnectionAccept", 
					"ConnectionAddProvCompletion", 
					"ConnectionConnect", 
					"ConnectionDispatch", 
					"ConnectionMarshal", 
					"ConnectionReceive", 
					"ConnectionSend", 
					"ConnectionSendCompletionCleanup", 
					"ConnectionUnmarshall", 
					"Count", 
					"DialogTimerEvent", 
					"HadrFsFileReader", 
					"HadrFsFileWriter", 
					"HadrFsMsgReceiver", 
					"HadrFsMsgSender", 
					"MessageDispatcher", 
					"None", 
					"QDSTask", 
					"QueueActivityCheck", 
					"RollbackHandler", 
					"Transmission", 
					"UnitTest", 
					"XmitQueueDeferredDelete" }
			] sint32 task_type;
	[WmiDataId(6), read, Pointer] object  task_address;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"1", 
					"3", 
					"4", 
					"2", 
					"0" },
				Values { 
					"NotScheduled", 
					"Running", 
					"RunningAndReScheduled", 
					"Scheduled", 
					"x_NotInit" }
			] sint32 task_state_old;
	[WmiDataId(8), read] sint32 scheduled_tasks;
};
		
[dynamic: ToInstance, Description("Broker task idempotent invoke begin"): Amended,
    Guid("{a0bbcdc0-d40b-4ade-a4b7-19a545f079ff}"), locale("MS\\0x409"),
    DisplayName("broker_task_idempotent_invoke_begin"): Amended]
class XeSqlPkg_broker_task_idempotent_invoke_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_task_idempotent_invoke_begin: XeSqlPkg_broker_task_idempotent_invoke_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  handler_address;
	[WmiDataId(6), read, 
				XEMapId(76),
				ValueMap { 
					"17", 
					"11", 
					"15", 
					"5", 
					"9", 
					"4", 
					"8", 
					"6", 
					"1", 
					"2", 
					"3", 
					"7", 
					"25", 
					"10", 
					"20", 
					"21", 
					"23", 
					"22", 
					"16", 
					"0", 
					"24", 
					"18", 
					"14", 
					"12", 
					"19", 
					"13" },
				Values { 
					"ActivationScheduler", 
					"AsyncDialogError", 
					"BrokerInitializer", 
					"ConnectionAccept", 
					"ConnectionAddProvCompletion", 
					"ConnectionConnect", 
					"ConnectionDispatch", 
					"ConnectionMarshal", 
					"ConnectionReceive", 
					"ConnectionSend", 
					"ConnectionSendCompletionCleanup", 
					"ConnectionUnmarshall", 
					"Count", 
					"DialogTimerEvent", 
					"HadrFsFileReader", 
					"HadrFsFileWriter", 
					"HadrFsMsgReceiver", 
					"HadrFsMsgSender", 
					"MessageDispatcher", 
					"None", 
					"QDSTask", 
					"QueueActivityCheck", 
					"RollbackHandler", 
					"Transmission", 
					"UnitTest", 
					"XmitQueueDeferredDelete" }
			] sint32 task_type;
	[WmiDataId(7), read, Pointer] object  task_address;
	[WmiDataId(8), read] sint32 scheduled_tasks;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string task_description;
};
		
[dynamic: ToInstance, Description("Broker task idempotent invoke end"): Amended,
    Guid("{a1bbcdc0-d40b-4ade-a4b7-19a545f079ff}"), locale("MS\\0x409"),
    DisplayName("broker_task_idempotent_invoke_end"): Amended]
class XeSqlPkg_broker_task_idempotent_invoke_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_task_idempotent_invoke_end: XeSqlPkg_broker_task_idempotent_invoke_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  handler_address;
	[WmiDataId(6), read, 
				XEMapId(76),
				ValueMap { 
					"17", 
					"11", 
					"15", 
					"5", 
					"9", 
					"4", 
					"8", 
					"6", 
					"1", 
					"2", 
					"3", 
					"7", 
					"25", 
					"10", 
					"20", 
					"21", 
					"23", 
					"22", 
					"16", 
					"0", 
					"24", 
					"18", 
					"14", 
					"12", 
					"19", 
					"13" },
				Values { 
					"ActivationScheduler", 
					"AsyncDialogError", 
					"BrokerInitializer", 
					"ConnectionAccept", 
					"ConnectionAddProvCompletion", 
					"ConnectionConnect", 
					"ConnectionDispatch", 
					"ConnectionMarshal", 
					"ConnectionReceive", 
					"ConnectionSend", 
					"ConnectionSendCompletionCleanup", 
					"ConnectionUnmarshall", 
					"Count", 
					"DialogTimerEvent", 
					"HadrFsFileReader", 
					"HadrFsFileWriter", 
					"HadrFsMsgReceiver", 
					"HadrFsMsgSender", 
					"MessageDispatcher", 
					"None", 
					"QDSTask", 
					"QueueActivityCheck", 
					"RollbackHandler", 
					"Transmission", 
					"UnitTest", 
					"XmitQueueDeferredDelete" }
			] sint32 task_type;
	[WmiDataId(7), read, Pointer] object  task_address;
	[WmiDataId(8), read, 
				XEMapId(77),
				ValueMap { 
					"1", 
					"3", 
					"4", 
					"2", 
					"0" },
				Values { 
					"NotScheduled", 
					"Running", 
					"RunningAndReScheduled", 
					"Scheduled", 
					"x_NotInit" }
			] sint32 task_state_old;
	[WmiDataId(9), read] sint32 scheduled_tasks;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string task_description;
};
		
[dynamic: ToInstance, Description("Broker transport connection incoming connect attempt"): Amended,
    Guid("{17C2F627-7211-40b3-BD08-453B3DAF00C8}"), locale("MS\\0x409"),
    DisplayName("broker_transport_connection_incoming_connect_attempt"): Amended]
class XeSqlPkg_broker_transport_connection_incoming_connect_attempt: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_connection_incoming_connect_attempt: XeSqlPkg_broker_transport_connection_incoming_connect_attempt
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(6),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Broker", 
					"DbMirroring" }
			] sint32 endpoint_type;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string address;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("Broker transmitter service send"): Amended,
    Guid("{18C2F627-7211-40b3-BD08-453B3DAF00C8}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_service_send"): Amended]
class XeSqlPkg_broker_transmitter_service_send: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_service_send: XeSqlPkg_broker_transmitter_service_send
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 service_id;
	[WmiDataId(6), read] uint64 destination_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] uint64 asb_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  message_reference_address;
	[WmiDataId(11), read] uint64 message_sequence_number;
	[WmiDataId(12), read] sint32 message_fragment_number;
	[WmiDataId(13), read] sint8  is_sequenced;
	[WmiDataId(14), read, Extension("Guid")] guid dialog_id;
	[WmiDataId(15), read, Extension("Guid")] guid connection_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string to_service_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string to_broker_instance;
};
		
[dynamic: ToInstance, Description("Broker transmitter dialog register"): Amended,
    Guid("{19C2F627-7211-40b3-BD08-453B3DAF00C8}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_dialog_register"): Amended]
class XeSqlPkg_broker_transmitter_dialog_register: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_dialog_register: XeSqlPkg_broker_transmitter_dialog_register
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  session_address;
	[WmiDataId(6), read] uint64 service_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read] sint32 result;
	[WmiDataId(9), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmitter dialog unregister"): Amended,
    Guid("{1AC2F627-7211-40b3-BD08-453B3DAF00C8}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_dialog_unregister"): Amended]
class XeSqlPkg_broker_transmitter_dialog_unregister: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_dialog_unregister: XeSqlPkg_broker_transmitter_dialog_unregister
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  session_address;
	[WmiDataId(6), read] uint64 service_id;
	[WmiDataId(7), read] sint8  initiator_flag;
	[WmiDataId(8), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmitter service reclassify"): Amended,
    Guid("{1BC2F627-7211-40b3-BD08-453B3DAF00C8}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_service_reclassify"): Amended]
class XeSqlPkg_broker_transmitter_service_reclassify: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_service_reclassify: XeSqlPkg_broker_transmitter_service_reclassify
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 service_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string to_service_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string to_broker_instance;
};
		
[dynamic: ToInstance, Description("Broker transmitter dialog reclassify"): Amended,
    Guid("{1DC2F627-7211-40b3-BD08-453B3DAF00C8}"), locale("MS\\0x409"),
    DisplayName("broker_transmitter_dialog_reclassify"): Amended]
class XeSqlPkg_broker_transmitter_dialog_reclassify: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmitter_dialog_reclassify: XeSqlPkg_broker_transmitter_dialog_reclassify
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  session_address;
	[WmiDataId(6), read] sint8  initiator_flag;
	[WmiDataId(7), read] uint64 service_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string to_service_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string to_broker_instance;
	[WmiDataId(10), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Broker transmitter dialog reclassify"): Amended,
    Guid("{1EC2F627-7211-40b3-BD08-453B3DAF00C8}"), locale("MS\\0x409"),
    DisplayName("broker_transport_flow_control"): Amended]
class XeSqlPkg_broker_transport_flow_control: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transport_flow_control: XeSqlPkg_broker_transport_flow_control
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_flow_controlled;
	[WmiDataId(6), read, Extension("Guid")] guid connection_id;
};
		
[dynamic: ToInstance, Description("The state of a Service Broker dialog has changed"): Amended,
    Guid("{20C2F627-7211-40b3-BD08-453B3DAF00C8}"), locale("MS\\0x409"),
    DisplayName("broker_dialog_state_change"): Amended]
class XeSqlPkg_broker_dialog_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_dialog_state_change: XeSqlPkg_broker_dialog_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(12),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"STARTED_INBOUND", 
					"STARTED_OUTBOUND", 
					"CONVERSING", 
					"DISCONNECTED_INBOUND", 
					"ERROR", 
					"DISCONNECT_OUTBOUND", 
					"CLOSED" }
			] sint32 state;
	[WmiDataId(7), read] sint8  is_initiator;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string initiator_service_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string target_service_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string initiator_broker_instance;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string target_broker_instance;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string contract_name;
	[WmiDataId(13), read, Extension("Guid")] guid dialog_id;
	[WmiDataId(14), read, Extension("Guid")] guid dialog_handle;
};
		
[dynamic: ToInstance, Description("A message was enqueued into a Service Broker transmission queue"): Amended,
    Guid("{21C2F627-7211-40b3-BD08-453B3DAF00C8}"), locale("MS\\0x409"),
    DisplayName("broker_dialog_transmission_queue_enqueue"): Amended]
class XeSqlPkg_broker_dialog_transmission_queue_enqueue: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_dialog_transmission_queue_enqueue: XeSqlPkg_broker_dialog_transmission_queue_enqueue
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 message_sequence_number;
	[WmiDataId(6), read] sint8  is_initiator;
	[WmiDataId(7), read] uint32 message_size;
	[WmiDataId(8), read] uint64 message_reference;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string from_service_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string to_service_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string from_broker_instance;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string to_broker_instance;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string message_type;
	[WmiDataId(14), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("A message was dequeued from a Service Broker transmission queue"): Amended,
    Guid("{22C2F627-7211-40b3-BD08-453B3DAF00C8}"), locale("MS\\0x409"),
    DisplayName("broker_dialog_transmission_queue_dequeue"): Amended]
class XeSqlPkg_broker_dialog_transmission_queue_dequeue: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_dialog_transmission_queue_dequeue: XeSqlPkg_broker_dialog_transmission_queue_dequeue
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 message_sequence_number;
	[WmiDataId(6), read] sint8  is_initiator;
	[WmiDataId(7), read] uint32 message_size;
	[WmiDataId(8), read] uint64 message_reference;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string from_service_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string to_service_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string from_broker_instance;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string to_broker_instance;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string message_type;
	[WmiDataId(14), read, Extension("Guid")] guid dialog_id;
};
		
[dynamic: ToInstance, Description("Logs that login attempt is successful by using chained certificates."): Amended,
    Guid("{833771F8-C853-4405-9076-E9CF3095B331}"), locale("MS\\0x409"),
    DisplayName("login_successful_using_chained_certs_event"): Amended]
class XeSqlPkg_login_successful_using_chained_certs_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class login_successful_using_chained_certs_event: XeSqlPkg_login_successful_using_chained_certs_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string login_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string login_peer_info;
};
		
[dynamic: ToInstance, Description("Logs that login attempt is unsuccessful by using chained certificates."): Amended,
    Guid("{5E23396A-6A5D-4943-9B0B-A386063327A0}"), locale("MS\\0x409"),
    DisplayName("login_failed_using_chained_certs_event"): Amended]
class XeSqlPkg_login_failed_using_chained_certs_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class login_failed_using_chained_certs_event: XeSqlPkg_login_failed_using_chained_certs_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 login_error_code;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string login_peer_info;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string login_error_message;
};
		
[dynamic: ToInstance, Description("Logs that chained certificates are used in a login attempt."): Amended,
    Guid("{69EC28BB-5C04-4932-B650-7249480033E2}"), locale("MS\\0x409"),
    DisplayName("chained_certs_used_in_endpoint_login_process_event"): Amended]
class XeSqlPkg_chained_certs_used_in_endpoint_login_process_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class chained_certs_used_in_endpoint_login_process_event: XeSqlPkg_chained_certs_used_in_endpoint_login_process_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string login_peer_info;
};
		
[dynamic: ToInstance, Description("Logs attempts to set some certificate as a trusted issuer."): Amended,
    Guid("{6CD14AA7-6017-4A45-B76F-3F72F9DD86CE}"), locale("MS\\0x409"),
    DisplayName("set_trusted_issuer_event"): Amended]
class XeSqlPkg_set_trusted_issuer_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class set_trusted_issuer_event: XeSqlPkg_set_trusted_issuer_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 certificate_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("Logs attempts to remove some certificate as a trusted issuer."): Amended,
    Guid("{9875BF18-79BC-417F-860E-69D7C1150918}"), locale("MS\\0x409"),
    DisplayName("remove_trusted_issuer_event"): Amended]
class XeSqlPkg_remove_trusted_issuer_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remove_trusted_issuer_event: XeSqlPkg_remove_trusted_issuer_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 certificate_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("Occurs when background task for cleanup of tables with retention policy starts."): Amended,
    Guid("{114AD920-074F-4A46-AC85-8C4543D7C05B}"), locale("MS\\0x409"),
    DisplayName("data_retention_task_started"): Amended]
class XeSqlPkg_data_retention_task_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_retention_task_started: XeSqlPkg_data_retention_task_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_cci_retention_cleanup;
};
		
[dynamic: ToInstance, Description("Occurs when background task for cleanup of tables with retention policy ends."): Amended,
    Guid("{F57363EC-C364-464E-A7D7-76088B756CB6}"), locale("MS\\0x409"),
    DisplayName("data_retention_task_completed"): Amended]
class XeSqlPkg_data_retention_task_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_retention_task_completed: XeSqlPkg_data_retention_task_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 prev_sleep_duration;
	[WmiDataId(6), read] uint64 sleep_duration;
	[WmiDataId(7), read] sint8  is_cci_retention_cleanup;
};
		
[dynamic: ToInstance, Description("Occurs when background task for cleanup of tables with retention policy fails outside of retention cleanup process specific to table."): Amended,
    Guid("{1F677B55-74AF-41B9-9A9F-328428F88F4F}"), locale("MS\\0x409"),
    DisplayName("data_retention_task_exception"): Amended]
class XeSqlPkg_data_retention_task_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_retention_task_exception: XeSqlPkg_data_retention_task_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_cci_retention_cleanup;
	[WmiDataId(6), read] uint32 error;
	[WmiDataId(7), read] uint32 severity;
	[WmiDataId(8), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Occurs when then background (parent) task for data retention based cleanup fails due to an exception."): Amended,
    Guid("{0B5807D8-B7E8-4AC5-AA60-1AFA72992D2C}"), locale("MS\\0x409"),
    DisplayName("data_retention_cleanup_task_exception"): Amended]
class XeSqlPkg_data_retention_cleanup_task_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_retention_cleanup_task_exception: XeSqlPkg_data_retention_cleanup_task_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error;
	[WmiDataId(6), read] uint32 severity;
	[WmiDataId(7), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup process of table with data retention policy starts."): Amended,
    Guid("{529B8FDB-20C8-4B03-9001-508EB98D86DB}"), locale("MS\\0x409"),
    DisplayName("data_retention_cleanup_started"): Amended]
class XeSqlPkg_data_retention_cleanup_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_retention_cleanup_started: XeSqlPkg_data_retention_cleanup_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_cci_retention_cleanup;
};
		
[dynamic: ToInstance, Description("Occurs cleanup process of table with retention policy fails."): Amended,
    Guid("{879233B1-34BD-4A04-86DF-0C582B1B75F7}"), locale("MS\\0x409"),
    DisplayName("data_retention_cleanup_exception"): Amended]
class XeSqlPkg_data_retention_cleanup_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_retention_cleanup_exception: XeSqlPkg_data_retention_cleanup_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_cci_retention_cleanup;
	[WmiDataId(8), read] uint32 error;
	[WmiDataId(9), read] uint32 severity;
	[WmiDataId(10), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup process of table with data retention policy ends."): Amended,
    Guid("{2984DCD3-D292-4EF5-8455-74EFE32E866D}"), locale("MS\\0x409"),
    DisplayName("data_retention_cleanup_completed"): Amended]
class XeSqlPkg_data_retention_cleanup_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_retention_cleanup_completed: XeSqlPkg_data_retention_cleanup_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_cci_retention_cleanup;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint64 deleted_rows;
	[WmiDataId(10), read] sint8  deletion_done;
};
		
[dynamic: ToInstance, Description("Occurs when you use a feature that will be removed from a future version of SQL Server, but will not be removed from the next major release of SQL Server."): Amended,
    Guid("{3de05588-4043-4fc3-8f98-21baac3b8afb}"), locale("MS\\0x409"),
    DisplayName("deprecation_announcement"): Amended]
class XeSqlPkg_deprecation_announcement: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deprecation_announcement: XeSqlPkg_deprecation_announcement
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string feature;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Occurs when you use a feature that will be removed from a future version of SQL Server, but will not be removed from the next major release of SQL Server."): Amended,
    Guid("{3de05588-4043-4fc3-8f98-21baac3b8afb}"), locale("MS\\0x409"),
    DisplayName("deprecation_announcement"): Amended]
class XeSqlPkg_deprecation_announcement: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class deprecation_announcement: XeSqlPkg_deprecation_announcement
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 feature_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string feature;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Occurs when you use a feature that will be removed from the next major release of SQL Server."): Amended,
    Guid("{b26a7e27-cde0-4dae-9ad9-5b0aaf86e358}"), locale("MS\\0x409"),
    DisplayName("deprecation_final_support"): Amended]
class XeSqlPkg_deprecation_final_support: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deprecation_final_support: XeSqlPkg_deprecation_final_support
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string feature;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Occurs when you use a feature that will be removed from the next major release of SQL Server."): Amended,
    Guid("{b26a7e27-cde0-4dae-9ad9-5b0aaf86e358}"), locale("MS\\0x409"),
    DisplayName("deprecation_final_support"): Amended]
class XeSqlPkg_deprecation_final_support: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class deprecation_final_support: XeSqlPkg_deprecation_final_support
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 feature_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string feature;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("query optimizing (intermediate) result tree"): Amended,
    Guid("{4753bc2c-747b-46e8-8ec1-775cb3e92710}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_tree"): Amended]
class XeSqlPkg_query_optimizer_tree: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_tree: XeSqlPkg_query_optimizer_tree
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(13),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7" },
				Values { 
					"CONVERTED_TREE", 
					"INPUT_TREE", 
					"SIMPLIFIED_TREE", 
					"JOIN_COLLAPSED_TREE", 
					"TREE_BEFORE_PROJECT_NORM", 
					"TREE_AFTER_PROJECT_NORM", 
					"OUTPUT_TREE", 
					"TREE_COPIED_OUT" }
			] sint32 stage;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string output_tree;
};
		
[dynamic: ToInstance, Description("Occurs when the optimizer completes a step in cardinality estimation."): Amended,
    Guid("{0969463a-8849-4f10-a929-03ddd53560b3}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_cardinality_estimation_step"): Amended]
class XeSqlPkg_query_optimizer_cardinality_estimation_step: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_cardinality_estimation_step: XeSqlPkg_query_optimizer_cardinality_estimation_step
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string calculator;
};
		
[dynamic: ToInstance, Description("Occurs when cardinality estimation for a join is produced by ignoring one of the inputs."): Amended,
    Guid("{860e28a2-8ca9-467a-ba3c-0bfd71e34dd0}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_cardinality_estimation_join_side_ignored"): Amended]
class XeSqlPkg_query_optimizer_cardinality_estimation_join_side_ignored: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_cardinality_estimation_join_side_ignored: XeSqlPkg_query_optimizer_cardinality_estimation_join_side_ignored
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  left_side_ignored;
};
		
[dynamic: ToInstance, Description("Occurs when the query optimizer estimates cardinality on a relational expression."): Amended,
    Guid("{c74e6ce5-0de6-45fa-acb1-15db4b7de53f}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_estimate_cardinality"): Amended]
class XeSqlPkg_query_optimizer_estimate_cardinality: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_estimate_cardinality: XeSqlPkg_query_optimizer_estimate_cardinality
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 stats_collection_id;
	[WmiDataId(6), read] uint64 query_hash;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 creation_time;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string input_relation;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string calculator;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string stats_collection;
};
		
[dynamic: ToInstance, Description("Occurs when the query optimizer estimates cardinality on a relational expression."): Amended,
    Guid("{c74e6ce5-0de6-45fa-acb1-15db4b7de53f}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_estimate_cardinality"): Amended]
class XeSqlPkg_query_optimizer_estimate_cardinality: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_optimizer_estimate_cardinality: XeSqlPkg_query_optimizer_estimate_cardinality
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 stats_collection_id;
	[WmiDataId(6), read] uint64 query_hash;
	[WmiDataId(7), read] sint64 query_hash_signed;
	[WmiDataId(8), read, Extension("WmiTime")] uint64 creation_time;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string input_relation;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string calculator;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string stats_collection;
};
		
[dynamic: ToInstance, Description("Both traceflags 2312 and 9481 were enabled, attempting to force both old and new cardinality estimation behaviors at the same time. The traceflags were ignored. Disable one or both of the traceflags."): Amended,
    Guid("{05abe294-71f2-44c6-8419-6618da97bf4e}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_force_both_cardinality_estimation_behaviors"): Amended]
class XeSqlPkg_query_optimizer_force_both_cardinality_estimation_behaviors: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_force_both_cardinality_estimation_behaviors: XeSqlPkg_query_optimizer_force_both_cardinality_estimation_behaviors
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when the cardinality estimate for a query involved a guess"): Amended,
    Guid("{474D6887-1C75-47C9-9AC3-97B868AA727D}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_cardinality_guess"): Amended]
class XeSqlPkg_query_optimizer_cardinality_guess: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_cardinality_guess: XeSqlPkg_query_optimizer_cardinality_guess
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(81),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"0", 
					"7", 
					"10", 
					"11", 
					"12", 
					"13", 
					"8", 
					"9", 
					"14", 
					"16", 
					"15" },
				Values { 
					"cardGuessAscendingKey", 
					"cardGuessAscendingKeyJoin", 
					"cardGuessComparisonDependent", 
					"cardGuessFunctionCompare", 
					"cardGuessHistogramComparison", 
					"cardGuessInterval", 
					"cardGuessNoGuess", 
					"cardGuessRemoteQuery", 
					"cardGuessScalarOperatorComparison", 
					"cardGuessSemiJoin", 
					"cardGuessStatsNotUsed", 
					"cardGuessSubquery", 
					"cardGuessTrieLoadFailed", 
					"cardGuessTVF", 
					"cardGuessUnknown", 
					"cardGuessUnsupportedIntrinsic", 
					"cardGuessUnsupportedOperator" }
			] uint32 type_of_guess;
	[WmiDataId(6), read] sint64 rows_guessed;
};
		
[dynamic: ToInstance, Description("Occurs when the query optimizer detects batch mode aggregation is likely to spill and tries to split it into multiple smaller aggregations."): Amended,
    Guid("{EA3099E0-13FD-40E4-A6CE-D782BE24A212}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_batch_mode_agg_split"): Amended]
class XeSqlPkg_query_optimizer_batch_mode_agg_split: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_batch_mode_agg_split: XeSqlPkg_query_optimizer_batch_mode_agg_split
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 group_by_column_id;
	[WmiDataId(7), read, 
				XEMapId(100),
				ValueMap { 
					"104", 
					"34", 
					"50", 
					"35", 
					"250", 
					"40", 
					"42", 
					"43", 
					"0", 
					"52", 
					"56", 
					"127", 
					"60", 
					"31", 
					"59", 
					"62", 
					"58", 
					"122", 
					"173", 
					"61", 
					"106", 
					"36", 
					"108", 
					"175", 
					"98", 
					"239", 
					"1", 
					"243", 
					"41", 
					"189", 
					"240", 
					"48", 
					"165", 
					"167", 
					"231", 
					"99", 
					"241", 
					"242" },
				Values { 
					"XE_XVT_BIT", 
					"XE_XVT_BLOB", 
					"XE_XVT_BOOL", 
					"XE_XVT_CLOB", 
					"XE_XVT_CURSOR", 
					"XE_XVT_DATE", 
					"XE_XVT_DATETIME2", 
					"XE_XVT_DATETIMEOFFSET", 
					"XE_XVT_EMPTY", 
					"XE_XVT_I2", 
					"XE_XVT_I4", 
					"XE_XVT_I8", 
					"XE_XVT_MONEY", 
					"XE_XVT_NULL", 
					"XE_XVT_R4", 
					"XE_XVT_R8", 
					"XE_XVT_SMALLDATE", 
					"XE_XVT_SMALLMONEY", 
					"XE_XVT_SSBYTES", 
					"XE_XVT_SSDATE", 
					"XE_XVT_SSDECIMAL", 
					"XE_XVT_SSGUID", 
					"XE_XVT_SSNUMERIC", 
					"XE_XVT_SSSTR", 
					"XE_XVT_SSVARIANT", 
					"XE_XVT_SSWSTR", 
					"XE_XVT_TABLE", 
					"XE_XVT_TABLETYPE", 
					"XE_XVT_TIME", 
					"XE_XVT_TIMESTAMP", 
					"XE_XVT_UDT", 
					"XE_XVT_UI1", 
					"XE_XVT_VARBYTES", 
					"XE_XVT_VARSTR", 
					"XE_XVT_VARWSTR", 
					"XE_XVT_WLOB", 
					"XE_XVT_XML", 
					"XE_XVT_XMLNODE" }
			] uint32 group_by_column_data_type;
	[WmiDataId(8), read] sint8  is_group_by_column_nullable;
	[WmiDataId(9), read] sint8  is_filtered;
	[WmiDataId(10), read] uint64 hash_data_bytes;
	[WmiDataId(11), read] uint64 global_hash_table_bytes;
	[WmiDataId(12), read] uint64 total_hash_agg_memory_bytes;
	[WmiDataId(13), read] uint64 max_query_memory_bytes;
	[WmiDataId(14), read] uint32 split_count;
};
		
[dynamic: ToInstance, Description("Occurs when the query optimizer detects batch mode aggregation is likely to spill and tries to split it into multiple smaller aggregations."): Amended,
    Guid("{EA3099E0-13FD-40E4-A6CE-D782BE24A212}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_batch_mode_agg_split"): Amended]
class XeSqlPkg_query_optimizer_batch_mode_agg_split: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_optimizer_batch_mode_agg_split: XeSqlPkg_query_optimizer_batch_mode_agg_split
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 object_id;
	[WmiDataId(6), read] uint32 group_by_column_id;
	[WmiDataId(7), read, 
				XEMapId(100),
				ValueMap { 
					"104", 
					"34", 
					"50", 
					"35", 
					"250", 
					"40", 
					"42", 
					"43", 
					"0", 
					"52", 
					"56", 
					"127", 
					"60", 
					"31", 
					"59", 
					"62", 
					"58", 
					"122", 
					"173", 
					"61", 
					"106", 
					"36", 
					"108", 
					"175", 
					"98", 
					"239", 
					"1", 
					"243", 
					"41", 
					"189", 
					"240", 
					"48", 
					"165", 
					"167", 
					"231", 
					"99", 
					"241", 
					"242" },
				Values { 
					"XE_XVT_BIT", 
					"XE_XVT_BLOB", 
					"XE_XVT_BOOL", 
					"XE_XVT_CLOB", 
					"XE_XVT_CURSOR", 
					"XE_XVT_DATE", 
					"XE_XVT_DATETIME2", 
					"XE_XVT_DATETIMEOFFSET", 
					"XE_XVT_EMPTY", 
					"XE_XVT_I2", 
					"XE_XVT_I4", 
					"XE_XVT_I8", 
					"XE_XVT_MONEY", 
					"XE_XVT_NULL", 
					"XE_XVT_R4", 
					"XE_XVT_R8", 
					"XE_XVT_SMALLDATE", 
					"XE_XVT_SMALLMONEY", 
					"XE_XVT_SSBYTES", 
					"XE_XVT_SSDATE", 
					"XE_XVT_SSDECIMAL", 
					"XE_XVT_SSGUID", 
					"XE_XVT_SSNUMERIC", 
					"XE_XVT_SSSTR", 
					"XE_XVT_SSVARIANT", 
					"XE_XVT_SSWSTR", 
					"XE_XVT_TABLE", 
					"XE_XVT_TABLETYPE", 
					"XE_XVT_TIME", 
					"XE_XVT_TIMESTAMP", 
					"XE_XVT_UDT", 
					"XE_XVT_UI1", 
					"XE_XVT_VARBYTES", 
					"XE_XVT_VARSTR", 
					"XE_XVT_VARWSTR", 
					"XE_XVT_WLOB", 
					"XE_XVT_XML", 
					"XE_XVT_XMLNODE" }
			] uint32 group_by_column_data_type;
	[WmiDataId(8), read] sint8  is_group_by_column_nullable;
	[WmiDataId(9), read] sint8  is_filtered;
	[WmiDataId(10), read] uint64 hash_data_bytes;
	[WmiDataId(11), read] uint64 global_hash_table_bytes;
	[WmiDataId(12), read] uint64 total_hash_agg_memory_bytes;
	[WmiDataId(13), read] uint64 max_query_memory_bytes;
	[WmiDataId(14), read] uint32 split_count;
};
		
[dynamic: ToInstance, Description("Occurs when the query optimizer checks an optimization of insert is possible."): Amended,
    Guid("{41f8479e-55b1-4bc1-b037-caf280a999a5}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_optimize_insert"): Amended]
class XeSqlPkg_query_optimizer_optimize_insert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_optimize_insert: XeSqlPkg_query_optimizer_optimize_insert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint8  is_columnstore;
	[WmiDataId(8), read] sint8  is_optimization_applied;
	[WmiDataId(9), read] sint64 row_threshold;
	[WmiDataId(10), read] real64 number_of_estimated_rows;
};
		
[dynamic: ToInstance, Description("Occurs when the query optimizer checks an optimization of insert is possible."): Amended,
    Guid("{41f8479e-55b1-4bc1-b037-caf280a999a5}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_optimize_insert"): Amended]
class XeSqlPkg_query_optimizer_optimize_insert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_optimizer_optimize_insert: XeSqlPkg_query_optimizer_optimize_insert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] sint8  is_columnstore;
	[WmiDataId(8), read] sint8  is_optimization_applied;
	[WmiDataId(9), read] sint64 row_threshold;
	[WmiDataId(10), read] real64 number_of_estimated_rows;
};
		
[dynamic: ToInstance, Description("Unpin index description"): Amended,
    Guid("{c93b0679-8fb1-4c0e-89a7-6994bb438014}"), locale("MS\\0x409"),
    DisplayName("index_description_unpin"): Amended]
class XeSqlPkg_index_description_unpin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class index_description_unpin: XeSqlPkg_index_description_unpin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 index_id;
};
		
[dynamic: ToInstance, Description("An intrinsic operator identified in output tree (Matrix-specific)."): Amended,
    Guid("{278a3151-0584-4e77-b8b6-4c7ab39f1e17}"), locale("MS\\0x409"),
    DisplayName("query_plan_intrinsic_operators"): Amended]
class XeSqlPkg_query_plan_intrinsic_operators: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_plan_intrinsic_operators: XeSqlPkg_query_plan_intrinsic_operators
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string intrinsic_name;
};
		
[dynamic: ToInstance, Description("DML change based MD cache refresh info"): Amended,
    Guid("{c1471c11-ef36-4010-aa65-20769525f59c}"), locale("MS\\0x409"),
    DisplayName("change_based_metadata_cache_refresh"): Amended]
class XeSqlPkg_change_based_metadata_cache_refresh: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class change_based_metadata_cache_refresh: XeSqlPkg_change_based_metadata_cache_refresh
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint64 rows_changed_count;
	[WmiDataId(8), read, 
				XEMapId(37),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"change_tracked", 
					"refresh_happened" }
			] uint8 process_stage;
};
		
[dynamic: ToInstance, Description("Occurs when the optimizer acquires medium/large memory gates."): Amended,
    Guid("{9BD4C81F-88C6-4E15-ABE7-19C7A3163BFB}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_memory_gateway"): Amended]
class XeSqlPkg_query_optimizer_memory_gateway: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_memory_gateway: XeSqlPkg_query_optimizer_memory_gateway
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 medium_gateway_active_acquires;
	[WmiDataId(6), read] sint32 medium_gateway_count_waiters;
	[WmiDataId(7), read] sint64 medium_gateway_threshold;
	[WmiDataId(8), read] sint32 big_gateway_active_acquires;
	[WmiDataId(9), read] sint32 big_gateway_count_waiters;
	[WmiDataId(10), read] sint64 big_gateway_threshold;
	[WmiDataId(11), read] sint32 gateway_number;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string pool_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string gateway_name;
};
		
[dynamic: ToInstance, Description("Occurs when the optimizer acquires medium/large memory gates."): Amended,
    Guid("{9BD4C81F-88C6-4E15-ABE7-19C7A3163BFB}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_memory_gateway"): Amended]
class XeSqlPkg_query_optimizer_memory_gateway: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_optimizer_memory_gateway: XeSqlPkg_query_optimizer_memory_gateway
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 small_gateway_active_acquires;
	[WmiDataId(6), read] sint32 small_gateway_count_waiters;
	[WmiDataId(7), read] sint64 small_gateway_threshold;
	[WmiDataId(8), read] sint32 small_gateway_throughput;
	[WmiDataId(9), read] sint32 medium_gateway_active_acquires;
	[WmiDataId(10), read] sint32 medium_gateway_count_waiters;
	[WmiDataId(11), read] sint64 medium_gateway_threshold;
	[WmiDataId(12), read] sint32 medium_gateway_throughput;
	[WmiDataId(13), read] sint32 big_gateway_active_acquires;
	[WmiDataId(14), read] sint32 big_gateway_count_waiters;
	[WmiDataId(15), read] sint64 big_gateway_threshold;
	[WmiDataId(16), read] sint32 big_gateway_throughput;
	[WmiDataId(17), read] sint32 gateway_number;
	[WmiDataId(18), read] uint64 query_hash;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string pool_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string gateway_name;
};
		
[dynamic: ToInstance, Description("Occurs when scalar indexed view with nullable aggregates is being created or updated."): Amended,
    Guid("{B47FAD87-0F61-4279-B684-24A5E4DF170C}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_nullable_scalar_agg_iv_update"): Amended]
class XeSqlPkg_query_optimizer_nullable_scalar_agg_iv_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_nullable_scalar_agg_iv_update: XeSqlPkg_query_optimizer_nullable_scalar_agg_iv_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint8  is_dml;
};
		
[dynamic: ToInstance, Description("Occurs when scalar indexed view with nullable aggregates is being created or updated."): Amended,
    Guid("{B47FAD87-0F61-4279-B684-24A5E4DF170C}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_nullable_scalar_agg_iv_update"): Amended]
class XeSqlPkg_query_optimizer_nullable_scalar_agg_iv_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_optimizer_nullable_scalar_agg_iv_update: XeSqlPkg_query_optimizer_nullable_scalar_agg_iv_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] sint8  is_dml;
};
		
[dynamic: ToInstance, Description("Occurs when the optimizer skips acquisition of memory gates."): Amended,
    Guid("{96403CF9-E058-4ACF-B3BB-58156F2DB3E8}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_skip_memory_gateway"): Amended]
class XeSqlPkg_query_optimizer_skip_memory_gateway: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_skip_memory_gateway: XeSqlPkg_query_optimizer_skip_memory_gateway
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 gateway_delta;
	[WmiDataId(6), read] sint64 gateway_threshold;
	[WmiDataId(7), read] sint32 gateway_number;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string gateway_name;
};
		
[dynamic: ToInstance, Description("Occurs when query is aborted during compilation"): Amended,
    Guid("{77E1BF0E-DD00-4889-86AC-DE1B218F7A59}"), locale("MS\\0x409"),
    DisplayName("query_compile_abort"): Amended]
class XeSqlPkg_query_compile_abort: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_compile_abort: XeSqlPkg_query_compile_abort
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 abort_state;
};
		
[dynamic: ToInstance, Description("Occurs when we detect certain kind of plan shape"): Amended,
    Guid("{87E4B38F-E17C-4DA4-BB84-345676DCF61D}"), locale("MS\\0x409"),
    DisplayName("subquery_shape_check"): Amended]
class XeSqlPkg_subquery_shape_check: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class subquery_shape_check: XeSqlPkg_subquery_shape_check
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  parallel_requested;
	[WmiDataId(6), read] sint8  partition_requested;
};
		
[dynamic: ToInstance, Description("Occurs when we detect certain type of operator"): Amended,
    Guid("{5828D9AE-2E43-48A3-957A-93AD86FA8CB5}"), locale("MS\\0x409"),
    DisplayName("operator_type_detected"): Amended]
class XeSqlPkg_operator_type_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class operator_type_detected: XeSqlPkg_operator_type_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 operator_type_code;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string explanation;
};
		
[dynamic: ToInstance, Description("Occurs when we have a residual expression with a UDF following predicate push down optimizations"): Amended,
    Guid("{2CBA1C95-1EEE-4771-A2AF-F9CC691B7CF7}"), locale("MS\\0x409"),
    DisplayName("udf_reordering_in_residual_expression"): Amended]
class XeSqlPkg_udf_reordering_in_residual_expression: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class udf_reordering_in_residual_expression: XeSqlPkg_udf_reordering_in_residual_expression
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  enabled;
};
		
[dynamic: ToInstance, Description("Occurs when cardinality estimation used implied join predicates"): Amended,
    Guid("{6D8D0E7E-1CA6-4392-B757-78443F83E759}"), locale("MS\\0x409"),
    DisplayName("implied_join_predicates_possibility"): Amended]
class XeSqlPkg_implied_join_predicates_possibility: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class implied_join_predicates_possibility: XeSqlPkg_implied_join_predicates_possibility
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 count_predicates_added;
	[WmiDataId(6), read] sint8  compat_level_satisfied;
	[WmiDataId(7), read] sint8  feature_enabled;
};
		
[dynamic: ToInstance, Description("Adaptive join is not possible in some scenarios."): Amended,
    Guid("{61c99bd1-0efc-4cad-a0b4-7328b8fa63ce}"), locale("MS\\0x409"),
    DisplayName("adaptive_join_skipped"): Amended]
class XeSqlPkg_adaptive_join_skipped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class adaptive_join_skipped: XeSqlPkg_adaptive_join_skipped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(120),
				ValueMap { 
					"7", 
					"2", 
					"4", 
					"1", 
					"6", 
					"5", 
					"3", 
					"0" },
				Values { 
					"eajsrDifferentOuterSideColumns", 
					"eajsrExchangeTypeNotSupported", 
					"eajsrHJorNLJNotFound", 
					"eajsrInvalidAdaptiveThreshold", 
					"eajsrMultiConsumerSpool", 
					"eajsrOuterCardMaxOne", 
					"eajsrOuterSideParallelMarked", 
					"eajsrUnMatchedOuter" }
			] uint32 reason;
};
		
[dynamic: ToInstance, Description("Fired when recompilation is triggered for interleaved execution"): Amended,
    Guid("{F7C3904F-9E80-4F30-BDFD-00769625B585}"), locale("MS\\0x409"),
    DisplayName("recompilation_for_interleaved_exec"): Amended]
class XeSqlPkg_recompilation_for_interleaved_exec: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recompilation_for_interleaved_exec: XeSqlPkg_recompilation_for_interleaved_exec
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 current_compile_statement_id;
	[WmiDataId(6), read] sint32 current_execution_statement_id;
};
		
[dynamic: ToInstance, Description("Fired when a query with a possible candidate for interleaved execution does not get interleaved execution."): Amended,
    Guid("{DD56C992-5BAA-4CB8-A19B-7C1DA0C52FF0}"), locale("MS\\0x409"),
    DisplayName("interleaved_exec_disabled_reason"): Amended]
class XeSqlPkg_interleaved_exec_disabled_reason: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class interleaved_exec_disabled_reason: XeSqlPkg_interleaved_exec_disabled_reason
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(64),
				ValueMap { 
					"9", 
					"7", 
					"6", 
					"1", 
					"3", 
					"0", 
					"8", 
					"5", 
					"4", 
					"2" },
				Values { 
					"Count", 
					"DatabaseScopedConfigurationSet", 
					"DBCompatibility140", 
					"ForcedParameterization", 
					"ParameterSniff", 
					"PDWCompile", 
					"QueryHintProvided", 
					"SelectQueryOnly", 
					"ShowPlan", 
					"XmlPlanForce" }
			] sint32 disabled_reason;
};
		
[dynamic: ToInstance, Description("Fired when a query uses table variable(s) to indicate where deferred compilation has occurred."): Amended,
    Guid("{B7CC1DC6-C411-4A07-926D-900F1370A76D}"), locale("MS\\0x409"),
    DisplayName("table_variable_deferred_compilation"): Amended]
class XeSqlPkg_table_variable_deferred_compilation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class table_variable_deferred_compilation: XeSqlPkg_table_variable_deferred_compilation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 event_type;
	[WmiDataId(6), read, 
				XEMapId(67),
				ValueMap { 
					"0", 
					"3", 
					"7", 
					"5", 
					"8", 
					"10", 
					"2", 
					"9", 
					"6", 
					"4", 
					"11", 
					"1" },
				Values { 
					"Default", 
					"Disabled_Conflicting_QueryHintsProvided", 
					"Disabled_DatabaseScopedConfigurationSet", 
					"Disabled_DBCompatibilityBelow150", 
					"Disabled_FeatureSwitchNotOn", 
					"Disabled_HintCompatibilityBelow150", 
					"Disabled_HintProvided", 
					"Disabled_ReturnTable", 
					"Disabled_TableValuedParameter", 
					"Disabled_TraceFlagProvided", 
					"Max", 
					"Succeeded" }
			] sint32 explanation;
};
		
[dynamic: ToInstance, Description("Fired when a query uses table variable(s) to indicate where deferred compilation has occurred."): Amended,
    Guid("{B7CC1DC6-C411-4A07-926D-900F1370A76D}"), locale("MS\\0x409"),
    DisplayName("table_variable_deferred_compilation"): Amended]
class XeSqlPkg_table_variable_deferred_compilation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class table_variable_deferred_compilation: XeSqlPkg_table_variable_deferred_compilation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 event_type;
	[WmiDataId(6), read, 
				XEMapId(67),
				ValueMap { 
					"0", 
					"3", 
					"7", 
					"5", 
					"8", 
					"10", 
					"2", 
					"9", 
					"6", 
					"4", 
					"11", 
					"1" },
				Values { 
					"Default", 
					"Disabled_Conflicting_QueryHintsProvided", 
					"Disabled_DatabaseScopedConfigurationSet", 
					"Disabled_DBCompatibilityBelow150", 
					"Disabled_FeatureSwitchNotOn", 
					"Disabled_HintCompatibilityBelow150", 
					"Disabled_HintProvided", 
					"Disabled_ReturnTable", 
					"Disabled_TableValuedParameter", 
					"Disabled_TraceFlagProvided", 
					"Max", 
					"Succeeded" }
			] sint32 explanation;
};
		
[dynamic: ToInstance, Description("Fired periodically to provide information on how many times different cardinality estimation (CE) versions were used by the query optimizer since the last time event was fired"): Amended,
    Guid("{476748B9-5258-4A5F-B7E4-11F4F1586DBF}"), locale("MS\\0x409"),
    DisplayName("cardinality_estimation_version_usage"): Amended]
class XeSqlPkg_cardinality_estimation_version_usage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cardinality_estimation_version_usage: XeSqlPkg_cardinality_estimation_version_usage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 default_ce_count;
	[WmiDataId(6), read] uint16 legacy_ce_from_queryhint_count;
	[WmiDataId(7), read] uint16 default_ce_from_queryhint_count;
	[WmiDataId(8), read] uint16 conflict_in_ce_request_count;
	[WmiDataId(9), read] uint16 legacy_ce_from_dbscopedconfig_count;
	[WmiDataId(10), read] uint16 legacy_ce_from_global_tf_count;
	[WmiDataId(11), read] uint16 legacy_ce_from_session_tf_count;
	[WmiDataId(12), read] uint16 ce_atleast120_from_global_tf_count;
	[WmiDataId(13), read] uint16 ce_atleast120_from_session_tf_count;
};
		
[dynamic: ToInstance, Description("Fired when a query with Query_Optimizer_Compatibility_Level use hint is executed"): Amended,
    Guid("{034795D6-46BF-4D8B-B705-4EADCF328F3F}"), locale("MS\\0x409"),
    DisplayName("query_optimizer_compatibility_level_hint_usage"): Amended]
class XeSqlPkg_query_optimizer_compatibility_level_hint_usage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_optimizer_compatibility_level_hint_usage: XeSqlPkg_query_optimizer_compatibility_level_hint_usage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 compat_level_hint_value;
	[WmiDataId(6), read] uint16 current_db_compat_level;
};
		
[dynamic: ToInstance, Description("Xevent fired when the reduce recompilations for temp tables feature was used."): Amended,
    Guid("{763a8800-cffa-43fe-9313-bdac53ccfbf8}"), locale("MS\\0x409"),
    DisplayName("temptable_reduce_recompilation_success"): Amended]
class XeSqlPkg_temptable_reduce_recompilation_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temptable_reduce_recompilation_success: XeSqlPkg_temptable_reduce_recompilation_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Fired when a optional parameter has been folded as part of a tailored optional parameter plan."): Amended,
    Guid("{0B32B388-0B5B-4226-8A0C-D7D271970550}"), locale("MS\\0x409"),
    DisplayName("optional_parameter_plan_fold"): Amended]
class XeSqlPkg_optional_parameter_plan_fold: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class optional_parameter_plan_fold: XeSqlPkg_optional_parameter_plan_fold
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  null_fold;
};
		
[dynamic: ToInstance, Description("Xevent fired when synchronized statistics update triggered."): Amended,
    Guid("{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A}"), locale("MS\\0x409"),
    DisplayName("synchronized_statistics_update_triggered"): Amended]
class XeSqlPkg_synchronized_statistics_update_triggered: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synchronized_statistics_update_triggered: XeSqlPkg_synchronized_statistics_update_triggered
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Batch mode heuristics information."): Amended,
    Guid("{5340d91d-81a2-4e34-8bdb-c695b397743a}"), locale("MS\\0x409"),
    DisplayName("batch_mode_heuristics"): Amended]
class XeSqlPkg_batch_mode_heuristics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batch_mode_heuristics: XeSqlPkg_batch_mode_heuristics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_query_plan_using_batch_processing;
	[WmiDataId(6), read] sint8  is_batch_processing_enabled;
	[WmiDataId(7), read] sint8  is_batch_mode_enabled_unconditionally;
	[WmiDataId(8), read] sint8  is_batch_mode_enabled_by_heuristics;
	[WmiDataId(9), read] sint8  are_plan_affecting_actions_allowed;
	[WmiDataId(10), read] sint8  was_batch_mode_ever_considered;
	[WmiDataId(11), read] sint8  found_interesting_global_aggregate;
	[WmiDataId(12), read] sint8  found_interesting_table;
	[WmiDataId(13), read] sint8  found_interesting_join;
	[WmiDataId(14), read] sint8  found_interesting_nary_join;
	[WmiDataId(15), read] sint8  found_interesting_window_aggregate;
	[WmiDataId(16), read] sint32 last_optimization_level;
	[WmiDataId(17), read] real64 total_batch_cost;
	[WmiDataId(18), read] real64 total_ignored_cost;
	[WmiDataId(19), read] real64 total_cost;
	[WmiDataId(20), read] sint8  found_significant_batch_operator_in_solution;
	[WmiDataId(21), read] sint8  found_batch_operator_in_solution;
};
		
[dynamic: ToInstance, Description("The sort type of the leading column flipped from/to ascending?"): Amended,
    Guid("{30cb8f94-0a98-45d1-9df3-757b18e7ab64}"), locale("MS\\0x409"),
    DisplayName("ascending_leading_column_flipped"): Amended]
class XeSqlPkg_ascending_leading_column_flipped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ascending_leading_column_flipped: XeSqlPkg_ascending_leading_column_flipped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8 prev_leading_col_sort_type;
	[WmiDataId(6), read] sint8 curr_leading_col_sort_type;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint32 table_id;
	[WmiDataId(9), read] uint32 stats_id;
};
		
[dynamic: ToInstance, Description("The sort type of the leading column flipped from/to ascending?"): Amended,
    Guid("{30cb8f94-0a98-45d1-9df3-757b18e7ab64}"), locale("MS\\0x409"),
    DisplayName("ascending_leading_column_flipped"): Amended]
class XeSqlPkg_ascending_leading_column_flipped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class ascending_leading_column_flipped: XeSqlPkg_ascending_leading_column_flipped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8 prev_leading_col_sort_type;
	[WmiDataId(6), read] sint8 curr_leading_col_sort_type;
	[WmiDataId(7), read] sint32 database_id;
	[WmiDataId(8), read] uint32 table_id;
	[WmiDataId(9), read] uint32 stats_id;
};
		
[dynamic: ToInstance, Description("Matrix V1 Unsupported Feature"): Amended,
    Guid("{8D706F45-8621-4630-8925-3472978D995E}"), locale("MS\\0x409"),
    DisplayName("matrix_unsupported_feature"): Amended]
class XeSqlPkg_matrix_unsupported_feature: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class matrix_unsupported_feature: XeSqlPkg_matrix_unsupported_feature
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] uint32 line_no;
	[WmiDataId(7), read, 
				XEMapId(139),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61" },
				Values { 
					"Not specified", 
					"CLR User defined Aggregates", 
					"Change Data Capture", 
					"Change Tracking", 
					"XML Index", 
					"Spatial Index", 
					"Fulltext Catalog", 
					"Fulltext Index", 
					"Fulltext Stoplist", 
					"Filestream", 
					"Sparse Columns", 
					"Transparent Data Encryption", 
					"EKM Asymmetric Key", 
					"EKM Symmetric Key", 
					"Database auto_close", 
					"Partition Function", 
					"Four-part Synonyms", 
					"Tables with computed columns with TEXTPTR", 
					"Objects with features disabled", 
					"Numbered procs with features disabled", 
					"Sequence Objects", 
					"Plan Guide", 
					"Filtered Index and Stats", 
					"Columnstore Index", 
					"Selective XML Index", 
					"Distributed Query", 
					"EKM", 
					"User-defined extended stored procs", 
					".WRITE", 
					"Database Attach Rebuild Log", 
					"Database Snapshot", 
					"Online Index Build", 
					"Cursors (SCROLL_LOCKS)", 
					"Cursors (DYNAMIC)", 
					"Cursors (KEYSET ON HEAPS)", 
					"Legacy LOB Types", 
					"Endpoints", 
					"Resource Governor", 
					"OLE Automation", 
					"Openxml", 
					"Service Broker", 
					".MODIFY", 
					"OUTPUT clause(s)", 
					"Begin Distributed Transaction", 
					"Update through indexed views", 
					"TDS Distributed Transaction", 
					"T-SQL Debugging", 
					"Switching partition", 
					"Event Notification", 
					"Autopilot", 
					"Query Notification", 
					"Audit", 
					"Common Criteria Compliance", 
					"Kill UnitOfWork", 
					"Attach Matrix Database", 
					"AttachDbFilename Connection String Property", 
					"Detach Database", 
					"Configuration Options", 
					"Optimize for ad hoc workloads", 
					"Date Correlation Optimization", 
					"Replication", 
					"SQL Trace" }
			] uint32 feature_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("A new service broker instance is being added to broker instance hash-table"): Amended,
    Guid("{d2820d00-34b4-4387-845c-559013aa646e}"), locale("MS\\0x409"),
    DisplayName("broker_active_service_broker_addasb"): Amended]
class XeSqlPkg_broker_active_service_broker_addasb: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_active_service_broker_addasb: XeSqlPkg_broker_active_service_broker_addasb
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 new_dbid;
	[WmiDataId(6), read] sint8  new_enabled;
	[WmiDataId(7), read] uint32 existing_dbid;
	[WmiDataId(8), read] sint8  existing_enabled;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string new_dbname;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string existing_dbname;
	[WmiDataId(11), read, Extension("Guid")] guid broker_guid;
};
		
[dynamic: ToInstance, Description("Occurs when SQLExit() routine is invoked"): Amended,
    Guid("{0e6d80fb-8d56-43aa-92af-59598f6bd4c1}"), locale("MS\\0x409"),
    DisplayName("sql_exit_invoked"): Amended]
class XeSqlPkg_sql_exit_invoked: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_exit_invoked: XeSqlPkg_sql_exit_invoked
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 exit_code;
	[WmiDataId(6), read, 
				XEMapId(78),
				ValueMap { 
					"1", 
					"6", 
					"3", 
					"4", 
					"5", 
					"2", 
					"0" },
				Values { 
					"FAST_SHUTDOWN", 
					"JUST_EXIT_SHUTDOWN", 
					"NICE_SHUTDOWN", 
					"NO_EXIT_FAST_SHUTDOWN", 
					"NO_EXIT_ORDERLY_SHUTDOWN", 
					"ORDERLY_SHUTDOWN", 
					"SHUTDOWN_NOT_SET" }
			] uint32 shutdown_option;
};
		
[dynamic: ToInstance, Description("Profiles compile time. Equivalent to a combination of SQL Trace event 'Execution Warnings' and trace flag -T8783"): Amended,
    Guid("{a65c9461-0a17-46d8-9be3-69d2c434355d}"), locale("MS\\0x409"),
    DisplayName("profile_compile_time"): Amended]
class XeSqlPkg_profile_compile_time: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class profile_compile_time: XeSqlPkg_profile_compile_time
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 elapsed_since_start_ms;
};
		
[dynamic: ToInstance, Description("Occurs when a Transact-SQL batch has finished executing."): Amended,
    Guid("{A0E990B5-A402-4C21-8DBC-DB2AF21BF8DC}"), locale("MS\\0x409"),
    DisplayName("sql_batch_completed"): Amended]
class XeSqlPkg_sql_batch_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_batch_completed: XeSqlPkg_sql_batch_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_time;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read] uint64 physical_reads;
	[WmiDataId(8), read] uint64 logical_reads;
	[WmiDataId(9), read] uint64 writes;
	[WmiDataId(10), read] uint64 row_count;
	[WmiDataId(11), read, 
				XEMapId(34),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"OK", 
					"Error", 
					"Abort", 
					"Skipped" }
			] uint8 result;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string batch_text;
};
		
[dynamic: ToInstance, Description("Occurs when a Transact-SQL batch has finished executing."): Amended,
    Guid("{A0E990B5-A402-4C21-8DBC-DB2AF21BF8DC}"), locale("MS\\0x409"),
    DisplayName("sql_batch_completed"): Amended]
class XeSqlPkg_sql_batch_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sql_batch_completed: XeSqlPkg_sql_batch_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_time;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read] uint64 physical_reads;
	[WmiDataId(8), read] uint64 logical_reads;
	[WmiDataId(9), read] uint64 writes;
	[WmiDataId(10), read] uint64 spills;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read, 
				XEMapId(34),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"OK", 
					"Error", 
					"Abort", 
					"Skipped" }
			] uint8 result;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string batch_text;
};
		
[dynamic: ToInstance, Description("Occurs when a Transact-SQL batch has finished executing."): Amended,
    Guid("{A0E990B5-A402-4C21-8DBC-DB2AF21BF8DC}"), locale("MS\\0x409"),
    DisplayName("sql_batch_completed"): Amended]
class XeSqlPkg_sql_batch_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class sql_batch_completed: XeSqlPkg_sql_batch_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_time;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read] uint64 page_server_reads;
	[WmiDataId(8), read] uint64 physical_reads;
	[WmiDataId(9), read] uint64 logical_reads;
	[WmiDataId(10), read] uint64 writes;
	[WmiDataId(11), read] uint64 spills;
	[WmiDataId(12), read] uint64 row_count;
	[WmiDataId(13), read, 
				XEMapId(34),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"OK", 
					"Error", 
					"Abort", 
					"Skipped" }
			] uint8 result;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string batch_text;
};
		
[dynamic: ToInstance, Description("Occurs when a Transact-SQL batch has started executing."): Amended,
    Guid("{64E8ECCC-1DE0-405C-9B49-A4EA488FE9A4}"), locale("MS\\0x409"),
    DisplayName("sql_batch_starting"): Amended]
class XeSqlPkg_sql_batch_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_batch_starting: XeSqlPkg_sql_batch_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string batch_text;
};
		
[dynamic: ToInstance, Description("Customer NSP Events used for debugging"): Amended,
    Guid("{16c9f431-6d13-4447-9f91-d49d63fcc6a4}"), locale("MS\\0x409"),
    DisplayName("nsp_log"): Amended]
class XeSqlPkg_nsp_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class nsp_log: XeSqlPkg_nsp_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string perimeter_resource_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string operation_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string category;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string perimeter_location;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string profile_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string matched_rule;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string source_ip_address;
};
		
[dynamic: ToInstance, Description("Generic event to log NSP events to customer Shoebox"): Amended,
    Guid("{762e7fca-bf99-4192-adb0-e413299a5e7c}"), locale("MS\\0x409"),
    DisplayName("pii_nsp_log"): Amended]
class XeSqlPkg_pii_nsp_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class pii_nsp_log: XeSqlPkg_pii_nsp_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("WmiTime")] uint64 time;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string resourceId;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string location;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string operationName;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string operationVersion;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string category;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string properties;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string nsp;
};
		
[dynamic: ToInstance, Description("TDS login finish event that is logged to private MDS table."): Amended,
    Guid("{3554D4B8-C3A5-44B4-BF30-59BE5DA1B1F7}"), locale("MS\\0x409"),
    DisplayName("private_login_finish"): Amended]
class XeSqlPkg_private_login_finish: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(8)]
class private_login_finish: XeSqlPkg_private_login_finish
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_td_enabled;
	[WmiDataId(6), read] sint8  is_success;
	[WmiDataId(7), read] sint32 error;
	[WmiDataId(8), read] sint32 state;
	[WmiDataId(9), read] sint8  certificated_connection;
	[WmiDataId(10), read] sint8  is_vnet_address;
	[WmiDataId(11), read] sint8  is_vnet_private_access_address;
	[WmiDataId(12), read] sint8 fedauth_library_type;
	[WmiDataId(13), read] sint8 fedauth_adal_workflow;
	[WmiDataId(14), read, Extension("Guid")] guid connection_id;
	[WmiDataId(15), read, Extension("Guid")] guid peer_activity_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string logical_server_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string password_hash;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string peer_address;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string user_name;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string application_name;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string host_name;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string vnet_peer_address;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string vnet_dest_peer_address;
};
		
[dynamic: ToInstance, Description("This event is generated when server is done processing a login (success or failure)."): Amended,
    Guid("{4659C0EA-0D26-47FD-A935-302B1F1385A4}"), locale("MS\\0x409"),
    DisplayName("process_login_finish"): Amended]
class XeSqlPkg_process_login_finish: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(24)]
class process_login_finish: XeSqlPkg_process_login_finish
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(57),
				ValueMap { 
					"170", 
					"188", 
					"187", 
					"186", 
					"175", 
					"142", 
					"139", 
					"140", 
					"141", 
					"158", 
					"138", 
					"123", 
					"124", 
					"122", 
					"115", 
					"85", 
					"131", 
					"189", 
					"190", 
					"191", 
					"72", 
					"143", 
					"1", 
					"137", 
					"112", 
					"113", 
					"193", 
					"194", 
					"103", 
					"102", 
					"107", 
					"105", 
					"121", 
					"109", 
					"108", 
					"104", 
					"133", 
					"132", 
					"106", 
					"111", 
					"110", 
					"120", 
					"116", 
					"117", 
					"91", 
					"87", 
					"98", 
					"97", 
					"86", 
					"100", 
					"99", 
					"101", 
					"95", 
					"89", 
					"90", 
					"92", 
					"96", 
					"88", 
					"93", 
					"94", 
					"118", 
					"119", 
					"129", 
					"82", 
					"130", 
					"174", 
					"171", 
					"84", 
					"80", 
					"83", 
					"18", 
					"57", 
					"179", 
					"16", 
					"126", 
					"134", 
					"127", 
					"36", 
					"39", 
					"37", 
					"71", 
					"42", 
					"43", 
					"41", 
					"38", 
					"40", 
					"17", 
					"13", 
					"15", 
					"14", 
					"19", 
					"155", 
					"159", 
					"154", 
					"197", 
					"196", 
					"195", 
					"192", 
					"125", 
					"172", 
					"184", 
					"183", 
					"33", 
					"35", 
					"32", 
					"31", 
					"34", 
					"30", 
					"23", 
					"26", 
					"29", 
					"22", 
					"21", 
					"27", 
					"44", 
					"47", 
					"45", 
					"50", 
					"51", 
					"49", 
					"46", 
					"48", 
					"28", 
					"24", 
					"20", 
					"25", 
					"169", 
					"162", 
					"128", 
					"81", 
					"185", 
					"180", 
					"182", 
					"181", 
					"114", 
					"79", 
					"78", 
					"9", 
					"10", 
					"66", 
					"67", 
					"68", 
					"69", 
					"59", 
					"62", 
					"64", 
					"63", 
					"65", 
					"60", 
					"61", 
					"55", 
					"11", 
					"12", 
					"145", 
					"144", 
					"149", 
					"148", 
					"147", 
					"146", 
					"2", 
					"5", 
					"54", 
					"52", 
					"7", 
					"6", 
					"70", 
					"8", 
					"56", 
					"53", 
					"177", 
					"178", 
					"176", 
					"3", 
					"4", 
					"151", 
					"152", 
					"153", 
					"77", 
					"76", 
					"75", 
					"74", 
					"73", 
					"161", 
					"173", 
					"136", 
					"168", 
					"160", 
					"157", 
					"150", 
					"156", 
					"135", 
					"58", 
					"167", 
					"164", 
					"163", 
					"165", 
					"166" },
				Values { 
					"AadOnlyAuthenicationEnabled", 
					"AzureKerberosAADSystemError", 
					"AzureKerberosAADUserError", 
					"AzureKerberosFeatureSwitchOff", 
					"AzureSqlDnsFeatureExtParsingFailure", 
					"BadCrossInstanceBadLoginTokenExtension", 
					"BadCrossInstanceConnection", 
					"BadCrossInstanceDatabase", 
					"BadCrossInstanceNoLoginTokenExtension", 
					"CheckFirewallRulesFailedVnetAddressUnexpected", 
					"ClientDisconnectDuringFedAuthProcessing", 
					"CloudEmptyPassword", 
					"CloudEmptyPasswordPreTDS7", 
					"CloudEmptyUserName", 
					"CloudExtensionAuthenticationUnexpectedFailure", 
					"CloudExtensionAutheticateFailed", 
					"CloudUnsecuredConnectionDisallowed", 
					"ContainedDBAuthDisabled1", 
					"ContainedDBAuthDisabled2", 
					"ContainedDBAuthDisabled3", 
					"DbAcceptsGatewayConnOnly", 
					"Deactivating", 
					"Default", 
					"DenyExternalConnectionsOn", 
					"DosGuardFailure", 
					"DosGuardRejectedConnection", 
					"ExternalConnectionDisallowed", 
					"FCheckSrvAccessFailureDueToNoConnectRBACDenied", 
					"FedAuthAADCertFindInStore", 
					"FedAuthAADCertOpenStore", 
					"FedAuthAADCreateHeapForGroupLookup", 
					"FedAuthAADCreateServiceProxy", 
					"FedAuthAADGetMaxHeapSizeForGroupsFromConfig", 
					"FedAuthAADGroupLookup", 
					"FedAuthAADInitializeErrorForGroupLookup", 
					"FedAuthAADInitializeErrorForProxy", 
					"FedAuthAADLoginJWTSystemError", 
					"FedAuthAADLoginJWTUserError", 
					"FedAuthAADOpenServiceProxy", 
					"FedAuthAADUnknown", 
					"FedAuthAADValidateFederatedContext", 
					"FedAuthFeatureSwitchOff", 
					"FedAuthGetHMACSignatureForFeatureAck", 
					"FedAuthNonSDSNonMicrosoftConnection", 
					"FedAuthRpsAuthenticate", 
					"FedAuthRpsCoCreateInstance", 
					"FedAuthRpsCompareHashSignature", 
					"FedAuthRpsComputeHMACHash", 
					"FedAuthRpsFetchCLSIDFromProgID", 
					"FedAuthRpsFetchMemberIdHigh", 
					"FedAuthRpsFetchMemberIdLow", 
					"FedAuthRpsFetchMemberName", 
					"FedAuthRpsFetchSessionKey", 
					"FedAuthRpsGetObjectRpsAuth", 
					"FedAuthRpsGetObjectRpsPropertyBag", 
					"FedAuthRpsGetObjectRpsValidatedPropertyBag", 
					"FedAuthRpsInitHMACHash", 
					"FedAuthRpsInitialize", 
					"FedAuthRpsSetAuthPolicyValue", 
					"FedAuthRpsValidateTicketWithAuthPolicy", 
					"FedAuthUnSupportedLibrary", 
					"FedAuthUnSupportedTicketType", 
					"FindLoginForContainedDBAuthUnexpectedFailure", 
					"FirewallBlockedAddress", 
					"FirewallBlockedAddressAllowAzureIpRulePresent", 
					"InvalidFeatureExtOffset", 
					"InvalidTlsVersion", 
					"LogicalMasterConnectionFailed", 
					"LogicalMasterNotFound", 
					"LogicalMasterOpenFailed", 
					"LoginChangePwd", 
					"LoginChangePwdErr", 
					"LoginFailedToDWReservedDatabase", 
					"LoginSessDb", 
					"LoginSessDb_DbNotFound", 
					"LoginSessDb_DbRecovering", 
					"LoginSessDb_DbUnavailable", 
					"LoginSessDb_GetDbNameAndSetItemDomain", 
					"LoginSessDb_GetDbNameFromPath", 
					"LoginSessDb_IsNonShareLoginAllowed", 
					"LoginSessDb_ObtainRoutingEnvChange", 
					"LoginSessDb_SameDbColl", 
					"LoginSessDb_SendLogShippingEnvChange", 
					"LoginSessDb_StoreDbColl", 
					"LoginSessDb_UseDbExplicit", 
					"LoginSessDb_UseDbImplicit", 
					"LoginSessLang", 
					"LoginSrvPaused", 
					"LoginSwitchDb", 
					"LoginType", 
					"LoginUnprotectMem", 
					"LookupCountOfVnetFirewallRulesFailed", 
					"LookupVnetFirewallRulesChekingAllowAllIPsFailed", 
					"LookupVnetFirewallRulesFailed", 
					"Max", 
					"MwcIncorrectToken", 
					"MwcTokenMalformed", 
					"NetworkSecurityPerimeterFailed", 
					"OpenUserDbFailed", 
					"PublicDataEndpointFeature", 
					"PublicIpv4MappedIpv6LoginDisabled", 
					"PublicIpv6LoginDisabled", 
					"ReauthLoginAccessCheck", 
					"ReauthLoginException", 
					"ReauthLoginInitSec", 
					"ReauthLoginPause", 
					"ReauthLoginSwitchDb", 
					"ReauthLoginTrace", 
					"RedoLoginAccessCheck", 
					"RedoLoginAttachDb", 
					"RedoLoginException", 
					"RedoLoginInitSec", 
					"RedoLoginPause", 
					"RedoLoginSessDb", 
					"RedoLoginSessDb_GetDbNameAndSetItemDomain", 
					"RedoLoginSessDb_GetDbNameFromPath", 
					"RedoLoginSessDb_IsNonShareLoginAllowed", 
					"RedoLoginSessDb_SameDbColl", 
					"RedoLoginSessDb_SendLogShippingEnvChange", 
					"RedoLoginSessDb_StoreDbColl", 
					"RedoLoginSessDb_UseDbExplicit", 
					"RedoLoginSessDb_UseDbImplicit", 
					"RedoLoginSessLang", 
					"RedoLoginSwitchDb", 
					"RedoLoginTrace", 
					"RedoLoginUserInst", 
					"ReplicatedMasterNotOnline", 
					"ReplicatedMasterNotReady", 
					"RetrieveDatabaseFirewallRulesFailed", 
					"RetrieveIpAddressFailed", 
					"RetrieveIpv4FromIpv4MappedIpv6Ipv6AddressFailed", 
					"RetrieveIpv6AddressFailed", 
					"RetrieveIpv6DatabaseFirewallRulesFailed", 
					"RetrieveIpv6ServerFirewallRulesFailed", 
					"RetrieveServerFirewallRulesFailed", 
					"SecAccountInvalidCertificate", 
					"SecAccountLockedOut", 
					"SecBadPassword", 
					"SecBadResult", 
					"SecDbAuthBadPassword", 
					"SecDbAuthBadResult", 
					"SecDbAuthFCheckSrvAccess1", 
					"SecDbAuthFCheckSrvAccess2", 
					"SecDbAuthGetLogin1", 
					"SecDbAuthGetLogin2", 
					"SecDbAuthLoginDisabled", 
					"SecDbAuthLoginType", 
					"SecDbAuthPasswordNotMatch", 
					"SecDbAuthUnprotectMem1", 
					"SecDbAuthUnprotectMem2", 
					"SecDuplicateToken", 
					"SecFCheckSrvAccess1", 
					"SecFCheckSrvAccess2", 
					"SecFCheckSrvAccessLoginDisabledSQLAuth", 
					"SecFCheckSrvAccessLoginDisabledWindowsAuth", 
					"SecFCheckSrvAccessNoConnectEndpointPermissionSQLAuth", 
					"SecFCheckSrvAccessNoConnectEndpointPermissionWindowsAuth", 
					"SecFCheckSrvAccessNoConnectSQLPermissionSQLAuth", 
					"SecFCheckSrvAccessNoConnectSQLPermissionWindowsAuth", 
					"SecGetLogin1", 
					"SecGetLogin2", 
					"SecGetTokenInfo", 
					"SecImpersonateClient", 
					"SecLoginDisabled", 
					"SecLoginType", 
					"SecOldHash", 
					"SecPasswordNotMatch", 
					"SecRetryProcessToken", 
					"SecRevertToSelf", 
					"SecSqlPoolAccessNoConnectPermissionSQLAuth", 
					"SecSqlPoolAccessNoConnectPermissionWindowsAuth", 
					"SecSqlPoolNameFailure", 
					"SecUnprotectMem1", 
					"SecUnprotectMem2", 
					"ServerVnetFirewallRuleCopyAddressFailed", 
					"ServerVnetFirewallRuleIpv6ParsingFailed", 
					"ServerVnetFirewallRuleVnetParsingFailed", 
					"SessionRecoveryIdentity", 
					"SessionRecoveryIdentityInsert", 
					"SessionRecoveryLoginSameCol", 
					"SessionRecoveryRedoLoginUseDb", 
					"SessionRecoveryUseDb", 
					"SNITDSBadFormat", 
					"SqlDevopsInvalidPrincipalTypeOnPort", 
					"UseDbFailedInRetrieveDatabaseFirewallRules", 
					"VldbPageServerUnexpectedConnection", 
					"VnetCAPeerAddressSwapFailed", 
					"VnetDatabaseFirewallBlockedAddressDueToVnetLogin", 
					"VnetFirewallBlockedAddress", 
					"VnetFirewallBlockedAddressDueToNonVnetLogin", 
					"WinAuthNotSupportedError", 
					"WinAuthOnlyErr", 
					"x_elVnetInterfaceEndpointsDbLevelAllowAllAzureBlocked", 
					"x_elVnetInterfaceEndpointsListExistsResourceIdLockTimeout", 
					"x_elVnetInterfaceEndpointsListExistsVnetIdLockTimeout", 
					"x_elVnetInterfaceEndpointsMismatch", 
					"x_elVnetInterfaceEndpointsUnexpected" }
			] uint32 state_desc;
	[WmiDataId(6), read, 
				XEMapId(58),
				ValueMap { 
					"2", 
					"0", 
					"1" },
				Values { 
					"Deny", 
					"NotApplicable", 
					"Permit" }
			] uint32 external_governance_policy_authorization;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint8  is_external_authentication_only;
	[WmiDataId(9), read] uint32 tds_version;
	[WmiDataId(10), read] uint32 total_time_ms;
	[WmiDataId(11), read] uint32 enqueue_time_ms;
	[WmiDataId(12), read] uint32 netwrite_time_ms;
	[WmiDataId(13), read] uint32 netread_time_ms;
	[WmiDataId(14), read] uint32 ssl_time_ms;
	[WmiDataId(15), read] uint32 sspi_time_ms;
	[WmiDataId(16), read] uint32 login_time_ms;
	[WmiDataId(17), read] uint32 logon_triggers_time_ms;
	[WmiDataId(18), read] uint32 find_login_ms;
	[WmiDataId(19), read] uint32 exec_classifier_ms;
	[WmiDataId(20), read] uint32 session_recover_ms;
	[WmiDataId(21), read] uint32 post_exec_classifier_ms;
	[WmiDataId(22), read] uint32 ssl_read_time_ms;
	[WmiDataId(23), read] uint32 ssl_write_time_ms;
	[WmiDataId(24), read] uint32 ssl_secure_call_time_ms;
	[WmiDataId(25), read] uint32 ssl_enqueue_time_ms;
	[WmiDataId(26), read, 
				XEMapId(125),
				ValueMap { 
					"4", 
					"16", 
					"256", 
					"1024", 
					"4096", 
					"64", 
					"0" },
				Values { 
					"SNI_SSL2_SERVER", 
					"SNI_SSL3_SERVER", 
					"SNI_TLS1_1_SERVER", 
					"SNI_TLS1_2_SERVER", 
					"SNI_TLS1_3_SERVER", 
					"SNI_TLS1_SERVER", 
					"SNI_UNDEFINED_PROTOCOL" }
			] uint32 ssl_protocol;
	[WmiDataId(27), read, 
				XEMapId(126),
				ValueMap { 
					"32773", 
					"32771", 
					"32772", 
					"32780", 
					"32781", 
					"32782", 
					"0" },
				Values { 
					"MAC", 
					"MD5", 
					"SHA", 
					"SHA_256", 
					"SHA_384", 
					"SHA_512", 
					"UNDEFINED_HASH" }
			] uint32 ssl_hash;
	[WmiDataId(28), read, 
				XEMapId(127),
				ValueMap { 
					"26129", 
					"26126", 
					"26127", 
					"26128", 
					"26115", 
					"26124", 
					"26113", 
					"26114", 
					"26625", 
					"26125", 
					"26122", 
					"0" },
				Values { 
					"AES", 
					"AES_128", 
					"AES_192", 
					"AES_256", 
					"CALG3DES", 
					"CYLINK_MEK", 
					"DES", 
					"RC2", 
					"RC4", 
					"RC5", 
					"SKIPJACK", 
					"UNDEFINED_CIPHER" }
			] uint32 ssl_cipher;
	[WmiDataId(29), read] uint32 sspi_read_time_ms;
	[WmiDataId(30), read] uint32 sspi_write_time_ms;
	[WmiDataId(31), read] uint32 sspi_secure_call_time_ms;
	[WmiDataId(32), read] uint32 sspi_enqueue_time_ms;
	[WmiDataId(33), read] uint32 fedauth_token_process_time_ms;
	[WmiDataId(34), read] uint32 fedauth_fetch_signingkey_refresh_time_ms;
	[WmiDataId(35), read] uint32 fedauth_jwt_token_parsing_time_ms;
	[WmiDataId(36), read] uint32 fedauth_signature_validation_time_ms;
	[WmiDataId(37), read] uint32 fedauth_context_build_time_ms;
	[WmiDataId(38), read] uint32 fedauth_group_expansion_time_ms;
	[WmiDataId(39), read] uint32 fedauth_token_wait_time_ms;
	[WmiDataId(40), read] uint32 database_firewall_rules_time_ms;
	[WmiDataId(41), read] uint32 use_db_database_firewall_rules_time_ms;
	[WmiDataId(42), read] uint32 dosguard_check_time_ms;
	[WmiDataId(43), read] uint32 xodbc_authentication_time_ms;
	[WmiDataId(44), read] uint32 contained_authentication_time_ms;
	[WmiDataId(45), read] uint32 peer_activity_seq;
	[WmiDataId(46), read] uint16 peer_port;
	[WmiDataId(47), read] sint8 fedauth_library_type;
	[WmiDataId(48), read] sint8 fedauth_adal_workflow;
	[WmiDataId(49), read] sint8  is_duplicated;
	[WmiDataId(50), read] sint8  is_contained_user;
	[WmiDataId(51), read, 
				XEMapId(89),
				ValueMap { 
					"8", 
					"0", 
					"10", 
					"9", 
					"1", 
					"2", 
					"4", 
					"5", 
					"6", 
					"3", 
					"7" },
				Values { 
					"CTAIP_PROV", 
					"HTTP_PROV", 
					"INVALID_PROV", 
					"MAX_PROVS", 
					"NP_PROV", 
					"SESSION_PROV", 
					"SM_PROV", 
					"SMUX_PROV", 
					"SSL_PROV", 
					"SSPI_PROV", 
					"TCP_PROV" }
			] uint8 provider_type;
	[WmiDataId(52), read] sint8  is_user_error;
	[WmiDataId(53), read] sint32 error;
	[WmiDataId(54), read] sint32 state;
	[WmiDataId(55), read] sint32 concurrent_logins;
	[WmiDataId(56), read] uint32 driver_version;
	[WmiDataId(57), read] uint32 driver_version_minor;
	[WmiDataId(58), read] uint32 session_recovery_format_length;
	[WmiDataId(59), read] sint8  session_recovery_is_enabled;
	[WmiDataId(60), read] sint8  session_recovery_is_recovered;
	[WmiDataId(61), read] sint8  is_mars;
	[WmiDataId(62), read] sint8  is_relogin;
	[WmiDataId(63), read] uint32 login_flags;
	[WmiDataId(64), read] uint32 client_pid;
	[WmiDataId(65), read] sint8  is_replay_connection;
	[WmiDataId(66), read] sint8 xodbc_authentication_type;
	[WmiDataId(67), read] sint8  used_login_thread_pool;
	[WmiDataId(68), read] sint8  is_mfa;
	[WmiDataId(69), read] sint8  is_vnet_address;
	[WmiDataId(70), read] sint8  is_failoverpartner_token_returned;
	[WmiDataId(71), read] uint32 vnet_region_id;
	[WmiDataId(72), read] uint32 vnet_gre_key;
	[WmiDataId(73), read] sint8  is_peer_activity_id_null;
	[WmiDataId(74), read] sint8  is_vnet_private_access_address;
	[WmiDataId(75), read] sint8  is_nsp_claim_present;
	[WmiDataId(76), read] uint32 vnet_subnet_id;
	[WmiDataId(77), read] sint32 vnet_link_identifier;
	[WmiDataId(78), read] sint32 spid;
	[WmiDataId(79), read] sint16 sql_client_dns_caching_status;
	[WmiDataId(80), read] sint16 force_refresh_status;
	[WmiDataId(81), read, Extension("Guid")] guid connection_id;
	[WmiDataId(82), read, Extension("Guid")] guid connection_peer_id;
	[WmiDataId(83), read, Extension("Guid")] guid peer_activity_id;
	[WmiDataId(84), read, StringTermination("NullTerminated"), Format("w")] string server_name;
	[WmiDataId(85), read, StringTermination("NullTerminated"), Format("w")] string instance_name;
	[WmiDataId(86), read, StringTermination("NullTerminated"), Format("w")] string logical_server_name;
	[WmiDataId(87), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(88), read, StringTermination("NullTerminated"), Format("w")] string driver_name;
	[WmiDataId(89), read, Extension("Variant")] object partition_id;
	[WmiDataId(90), read, StringTermination("NullTerminated"), Format("w")] string peer_address;
	[WmiDataId(91), read, StringTermination("NullTerminated"), Format("w")] string vnet_peer_address;
	[WmiDataId(92), read, StringTermination("NullTerminated"), Format("w")] string vnet_dest_peer_address;
	[WmiDataId(93), read, Extension("Variant")] object login_correlation_hash;
	[WmiDataId(94), read, StringTermination("NullTerminated"), Format("w")] string application_name;
	[WmiDataId(95), read, StringTermination("NullTerminated"), Format("w")] string control_ring_address;
	[WmiDataId(96), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(97), read, StringTermination("NullTerminated"), Format("w")] string sni_server_name;
	[WmiDataId(98), read, StringTermination("NullTerminated"), Format("w")] string extra_info;
};
		
[dynamic: ToInstance, Description("Connection successful metrics"): Amended,
    Guid("{53642BF8-5EE9-402D-BEA3-DD37BA8CD485}"), locale("MS\\0x409"),
    DisplayName("customer_connection_success"): Amended]
class XeSqlPkg_customer_connection_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class customer_connection_success: XeSqlPkg_customer_connection_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 connection_successful;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string SslProtocol;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string DatabaseName;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Connection failure metrics"): Amended,
    Guid("{79c28cf3-ca36-48a1-977a-172f108b109a}"), locale("MS\\0x409"),
    DisplayName("customer_connection_failure"): Amended]
class XeSqlPkg_customer_connection_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class customer_connection_failure: XeSqlPkg_customer_connection_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 connection_failed;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string SslProtocol;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string Error;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string DatabaseName;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Connections failed due to user error"): Amended,
    Guid("{801d3ba4-4eab-40ed-9226-c58f42625d07}"), locale("MS\\0x409"),
    DisplayName("customer_connection_failure_user_error"): Amended]
class XeSqlPkg_customer_connection_failure_user_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class customer_connection_failure_user_error: XeSqlPkg_customer_connection_failure_user_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 connection_failed_user_error;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string SslProtocol;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string Error;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string DatabaseName;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Connection blocked by firewall"): Amended,
    Guid("{A1449A81-C59E-4D40-AAB8-3FD3BBB1DE40}"), locale("MS\\0x409"),
    DisplayName("customer_connection_failure_firewall_error"): Amended]
class XeSqlPkg_customer_connection_failure_firewall_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class customer_connection_failure_firewall_error: XeSqlPkg_customer_connection_failure_firewall_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 blocked_by_firewall;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string DatabaseName;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("This is an abbreviated version of process_login_finish, containing only the columns required by external monitoring telemetry pipeline."): Amended,
    Guid("{F1F7C08F-EB34-40FC-A5AE-8E7F27925C01}"), locale("MS\\0x409"),
    DisplayName("login_event"): Amended]
class XeSqlPkg_login_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class login_event: XeSqlPkg_login_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_success;
	[WmiDataId(6), read] sint8  is_duplicated;
	[WmiDataId(7), read] sint32 error;
	[WmiDataId(8), read] sint32 state;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when we encounter a failure in FedAuthTicketService layer, when authenticating the fedauth ticket/token or when doing group expansion."): Amended,
    Guid("{D9C380FE-E475-426F-B394-39A5B975BCA5}"), locale("MS\\0x409"),
    DisplayName("fedauth_webtoken_failure"): Amended]
class XeSqlPkg_fedauth_webtoken_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class fedauth_webtoken_failure: XeSqlPkg_fedauth_webtoken_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 connection_type;
	[WmiDataId(6), read] sint32 error_state;
	[WmiDataId(7), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string error_message;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when we encounter a failure in FedAuthTicketService layer, when authenticating the fedauth ticket/token or when doing group expansion."): Amended,
    Guid("{D9C380FE-E475-426F-B394-39A5B975BCA5}"), locale("MS\\0x409"),
    DisplayName("fedauth_webtoken_failure"): Amended]
class XeSqlPkg_fedauth_webtoken_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class fedauth_webtoken_failure: XeSqlPkg_fedauth_webtoken_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 connection_type;
	[WmiDataId(6), read] sint32 validation_service_type;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string error_message;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Logs some important claim information found in the token."): Amended,
    Guid("{1FD8394D-2393-4C62-87C9-109B5C4B03C1}"), locale("MS\\0x409"),
    DisplayName("fedauth_webtoken"): Amended]
class XeSqlPkg_fedauth_webtoken: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class fedauth_webtoken: XeSqlPkg_fedauth_webtoken
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 connection_type;
	[WmiDataId(6), read] sint8  claim_is_upn_present;
	[WmiDataId(7), read] sint8  claim_is_mfa_present;
	[WmiDataId(8), read] sint8  claim_is_uniquename_present;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string claim_tid;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string claim_oid;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string claim_appid;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string claim_issuer;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string claim_x5t;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string claim_alg;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string claim_acrs;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string claim_aud;
	[WmiDataId(17), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Logs some important claim information found in the token."): Amended,
    Guid("{2A50E268-C681-4C6A-8BD9-AFE23C8D94D1}"), locale("MS\\0x409"),
    DisplayName("fedauth_webtoken"): Amended]
class XeSqlPkg_fedauth_webtoken: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class fedauth_webtoken: XeSqlPkg_fedauth_webtoken
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 connection_type;
	[WmiDataId(6), read] uint16 operation_type;
	[WmiDataId(7), read] sint8  claim_is_upn_present;
	[WmiDataId(8), read] sint8  claim_is_mfa_present;
	[WmiDataId(9), read] sint8  claim_is_server_signed;
	[WmiDataId(10), read] sint8  claim_is_uniquename_present;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string claim_tid;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string claim_oid;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string claim_appid;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string claim_issuer;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string claim_x5t;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string claim_alg;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string claim_acrs;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string claim_aud;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string claim_nwperimid;
	[WmiDataId(20), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when someone executes CREATE USER/LOGIN FROM Windows; ALTER USER/LOGIN WindowsPrincipal WITH NAME; in SAWAv2 and its not a Backslash login/user."): Amended,
    Guid("{E38EB5CC-6DC5-4D5E-B608-3C429795AF06}"), locale("MS\\0x409"),
    DisplayName("fedauth_ddl"): Amended]
class XeSqlPkg_fedauth_ddl: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class fedauth_ddl: XeSqlPkg_fedauth_ddl
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 ddl_connection_type;
	[WmiDataId(6), read] uint16 ddl_type;
	[WmiDataId(7), read] uint32 error_state;
	[WmiDataId(8), read] uint32 jwt_error_state;
	[WmiDataId(9), read] sint8  is_pooled_connection;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string ddl_step;
	[WmiDataId(11), read, Extension("Guid")] guid ddl_correlationId;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("Occurs when we encounter a failure in FedAuthTicketService layer, when authenticating the fedauth ticket/token or when doing group expansion."): Amended,
    Guid("{B4D61EE4-E75E-43AE-B81E-E90637C657A2}"), locale("MS\\0x409"),
    DisplayName("fedauth_ticket_service_failure"): Amended]
class XeSqlPkg_fedauth_ticket_service_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class fedauth_ticket_service_failure: XeSqlPkg_fedauth_ticket_service_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 connection_type;
	[WmiDataId(6), read] uint16 fedauth_library_type;
	[WmiDataId(7), read] uint16 fedauth_adal_workflow;
	[WmiDataId(8), read] uint16 aad_retry_attempts;
	[WmiDataId(9), read] sint32 error_state;
	[WmiDataId(10), read] sint32 error_code;
	[WmiDataId(11), read] sint8  is_pooled_connection;
	[WmiDataId(12), read] uint32 context_cache_lookup;
	[WmiDataId(13), read] uint32 context_cache_insert;
	[WmiDataId(14), read] sint64 token_validity;
	[WmiDataId(15), read] sint8  external_group_expansion_required;
	[WmiDataId(16), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(17), read, Extension("Guid")] guid correlation_id;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Logged during the success of federated authentication, including group expansion if applicable."): Amended,
    Guid("{4A1D6B6F-DB49-4982-8FF9-DC0BC83C60DC}"), locale("MS\\0x409"),
    DisplayName("fedauth_ticket_service_success"): Amended]
class XeSqlPkg_fedauth_ticket_service_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(7)]
class fedauth_ticket_service_success: XeSqlPkg_fedauth_ticket_service_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 connection_type;
	[WmiDataId(6), read] uint16 fedauth_library_type;
	[WmiDataId(7), read] uint16 fedauth_adal_workflow;
	[WmiDataId(8), read] uint16 aad_retry_attempts;
	[WmiDataId(9), read] sint8  is_pooled_connection;
	[WmiDataId(10), read] uint32 context_cache_lookup;
	[WmiDataId(11), read] uint32 context_cache_insert;
	[WmiDataId(12), read] sint64 token_validity;
	[WmiDataId(13), read] sint8  external_group_expansion_required;
	[WmiDataId(14), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(15), read, Extension("Guid")] guid correlation_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Execute as DDL events for AD Auth user."): Amended,
    Guid("{D291975E-04BC-44B3-AACF-DFF58B4F8047}"), locale("MS\\0x409"),
    DisplayName("fedauth_execute_as"): Amended]
class XeSqlPkg_fedauth_execute_as: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fedauth_execute_as: XeSqlPkg_fedauth_execute_as
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 aad_retry_attempts;
	[WmiDataId(6), read] sint8  is_pooled_connection;
	[WmiDataId(7), read] uint32 context_cache_lookup;
	[WmiDataId(8), read] uint32 context_cache_insert;
	[WmiDataId(9), read] uint32 error_code;
	[WmiDataId(10), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(11), read, Extension("Guid")] guid correlation_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Logged during the routine cleanup of cache containing federated contexts."): Amended,
    Guid("{2427CBD6-F521-4596-AB20-680C4C6576DF}"), locale("MS\\0x409"),
    DisplayName("fedauth_ticket_service_cache_timer_activity"): Amended]
class XeSqlPkg_fedauth_ticket_service_cache_timer_activity: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fedauth_ticket_service_cache_timer_activity: XeSqlPkg_fedauth_ticket_service_cache_timer_activity
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  if_cleanup_attempted;
	[WmiDataId(6), read] uint32 no_total_entries_before_cleanup;
	[WmiDataId(7), read] uint32 no_cleared_entries;
	[WmiDataId(8), read] uint32 no_failed_allocations;
	[WmiDataId(9), read] uint32 no_failed_cleanups;
	[WmiDataId(10), read] uint32 new_timeout_value;
};
		
[dynamic: ToInstance, Description("Occurs when a session is attempting to set a fed auth token in an unsupported scenario."): Amended,
    Guid("{5AB0748D-92D0-428C-A2B8-E83C31326E5B}"), locale("MS\\0x409"),
    DisplayName("session_fedauth_failure"): Amended]
class XeSqlPkg_session_fedauth_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class session_fedauth_failure: XeSqlPkg_session_fedauth_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 session_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("Occurs when we encounter a failure during JWT creation with JSONWebTokenGenerator class."): Amended,
    Guid("{5935FC05-5CCC-41F0-8823-238AC7A8B1EB}"), locale("MS\\0x409"),
    DisplayName("webtoken_generator_failure"): Amended]
class XeSqlPkg_webtoken_generator_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class webtoken_generator_failure: XeSqlPkg_webtoken_generator_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_state;
	[WmiDataId(6), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string error_message;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when we attempt to refresh signing keys from Azure Active Directory, to update the in-memory cache."): Amended,
    Guid("{3B8060FB-2E7C-47E7-9BE3-AAFEC0778232}"), locale("MS\\0x409"),
    DisplayName("aad_signing_key_refresh"): Amended]
class XeSqlPkg_aad_signing_key_refresh: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class aad_signing_key_refresh: XeSqlPkg_aad_signing_key_refresh
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 connection_type;
	[WmiDataId(6), read] uint32 result_state;
	[WmiDataId(7), read] uint32 error_code;
	[WmiDataId(8), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when we attempt to build federated context."): Amended,
    Guid("{CBBA4303-4864-4865-8415-32E45AE70AE8}"), locale("MS\\0x409"),
    DisplayName("aad_build_federated_context"): Amended]
class XeSqlPkg_aad_build_federated_context: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class aad_build_federated_context: XeSqlPkg_aad_build_federated_context
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_state;
	[WmiDataId(6), read] uint32 error_code;
	[WmiDataId(7), read] uint32 number_of_groups;
	[WmiDataId(8), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(10), read, Extension("Variant")] object groups;
};
		
[dynamic: ToInstance, Description("Occurs when a remote authentication request to logical master failed to query for federated user info."): Amended,
    Guid("{9C7F5AF7-9CCC-4227-AC19-999F1EFE3240}"), locale("MS\\0x409"),
    DisplayName("xodbc_cache_get_federated_user_info_failure"): Amended]
class XeSqlPkg_xodbc_cache_get_federated_user_info_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xodbc_cache_get_federated_user_info_failure: XeSqlPkg_xodbc_cache_get_federated_user_info_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_code;
	[WmiDataId(6), read] sint32 sql_state;
	[WmiDataId(7), read, Extension("Guid")] guid odbc_connection_id;
	[WmiDataId(8), read, Extension("Guid")] guid sql_connection_id;
};
		
[dynamic: ToInstance, Description("Occurs when a federated user cache lookup request bypasses the cache and executes a DB query."): Amended,
    Guid("{62850265-25E5-4263-970A-6A940E27BD81}"), locale("MS\\0x409"),
    DisplayName("xodbc_cache_get_federated_user_info_cache_bypass"): Amended]
class XeSqlPkg_xodbc_cache_get_federated_user_info_cache_bypass: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xodbc_cache_get_federated_user_info_cache_bypass: XeSqlPkg_xodbc_cache_get_federated_user_info_cache_bypass
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 error_code;
	[WmiDataId(6), read] sint8  federated_user_found;
	[WmiDataId(7), read] sint8  is_synapse_workspace_admin;
	[WmiDataId(8), read, Extension("Variant")] object aad_object_id;
};
		
[dynamic: ToInstance, Description("Occurs when a federated user, has a name that matches object ID, and the name is updated with the correct value during login."): Amended,
    Guid("{F44AE9B2-CDEf-4E64-9775-2FAB1E1A84D7}"), locale("MS\\0x409"),
    DisplayName("xodbc_cache_update_federated_user_info_cache_entry"): Amended]
class XeSqlPkg_xodbc_cache_update_federated_user_info_cache_entry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xodbc_cache_update_federated_user_info_cache_entry: XeSqlPkg_xodbc_cache_update_federated_user_info_cache_entry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_update_success;
	[WmiDataId(6), read] sint32 lookup_state;
	[WmiDataId(7), read, Extension("Variant")] object aad_object_id;
};
		
[dynamic: ToInstance, Description("Occurs when we encounter a failure in AzureActiveDirectoryService layer, when performing MSODS lookup during Login and Create Login/User workflow."): Amended,
    Guid("{F5CBE3EF-9FE4-4278-A083-AB878E822115}"), locale("MS\\0x409"),
    DisplayName("azure_active_directory_service_failure"): Amended]
class XeSqlPkg_azure_active_directory_service_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class azure_active_directory_service_failure: XeSqlPkg_azure_active_directory_service_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 connection_type;
	[WmiDataId(6), read] uint16 operation_type;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read] sint32 error_code;
	[WmiDataId(9), read] sint8  is_pooled_connection;
	[WmiDataId(10), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(11), read, Extension("Guid")] guid correlation_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string error_message;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when we encounter a failure in AzureActiveDirectoryService layer, when performing MSODS lookup during Login and Create Login/User workflow."): Amended,
    Guid("{F5CBE3EF-9FE4-4278-A083-AB878E822115}"), locale("MS\\0x409"),
    DisplayName("azure_active_directory_service_failure"): Amended]
class XeSqlPkg_azure_active_directory_service_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class azure_active_directory_service_failure: XeSqlPkg_azure_active_directory_service_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 connection_type;
	[WmiDataId(6), read] uint16 operation_type;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read] uint32 jwt_error_state;
	[WmiDataId(9), read] sint32 error_code;
	[WmiDataId(10), read] sint8  is_pooled_connection;
	[WmiDataId(11), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(12), read, Extension("Guid")] guid correlation_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string error_message;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when we encounter a failure in AzureActiveDirectoryService layer, when performing MSODS lookup during Login and Create Login/User workflow."): Amended,
    Guid("{F5CBE3EF-9FE4-4278-A083-AB878E822115}"), locale("MS\\0x409"),
    DisplayName("azure_active_directory_service_failure"): Amended]
class XeSqlPkg_azure_active_directory_service_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class azure_active_directory_service_failure: XeSqlPkg_azure_active_directory_service_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 connection_type;
	[WmiDataId(6), read] uint16 operation_type;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read] uint32 jwt_error_state;
	[WmiDataId(9), read] sint32 error_code;
	[WmiDataId(10), read] sint8  is_pooled_connection;
	[WmiDataId(11), read] sint8  is_retriable_error;
	[WmiDataId(12), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(13), read, Extension("Guid")] guid correlation_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string error_message;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when we encounter error in Kerberos ticket to JSON Web token conversion through ESTS AAD endpoint."): Amended,
    Guid("{6997C1FC-467D-4556-A4C5-067AEE226647}"), locale("MS\\0x409"),
    DisplayName("kerberos_to_jwt_service_failure"): Amended]
class XeSqlPkg_kerberos_to_jwt_service_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class kerberos_to_jwt_service_failure: XeSqlPkg_kerberos_to_jwt_service_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_code;
	[WmiDataId(6), read] uint32 aad_error_state;
	[WmiDataId(7), read] uint32 http_status_code;
	[WmiDataId(8), read] sint8  is_certificate_assertion;
	[WmiDataId(9), read, Extension("Guid")] guid correlation_id;
	[WmiDataId(10), read, Extension("Guid")] guid sql_connection_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string client_id;
	[WmiDataId(12), read, StringTermination("NullTerminated")] string http_response_contents;
};
		
[dynamic: ToInstance, Description("Occurs when an ESTS or ESTS-R request is submitted in order to acquire a token for AKV or Storage operations."): Amended,
    Guid("{0c42c41b-5103-40be-8a97-632cebf8b9b2}"), locale("MS\\0x409"),
    DisplayName("ests_request_attempt"): Amended]
class XeSqlPkg_ests_request_attempt: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ests_request_attempt: XeSqlPkg_ests_request_attempt
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 dw_error;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string accessed_resource;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string ests_endpoint;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
};
		
[dynamic: ToInstance, Description("Certificate info."): Amended,
    Guid("{50900593-E735-4812-8F4C-E3479B09F057}"), locale("MS\\0x409"),
    DisplayName("certificate_report"): Amended]
class XeSqlPkg_certificate_report: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class certificate_report: XeSqlPkg_certificate_report
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string cert_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string thumbprint;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string root_ca_issuer;
};
		
[dynamic: ToInstance, Description("Connection attempt success metrics"): Amended,
    Guid("{82ceb79a-b73a-49c1-a148-68b386fd3222}"), locale("MS\\0x409"),
    DisplayName("connection_attempt_success"): Amended]
class XeSqlPkg_connection_attempt_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class connection_attempt_success: XeSqlPkg_connection_attempt_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 connection_attempt_counter;
	[WmiDataId(6), read] uint64 nb_connection_accept_finish;
	[WmiDataId(7), read] uint64 connection_attempt_total_time_ms;
	[WmiDataId(8), read, 
				XEMapId(128),
				ValueMap { 
					"3", 
					"1", 
					"0", 
					"2" },
				Values { 
					"LIBRARY_ADAL", 
					"LIBRARY_IDENTITY_CLIENT", 
					"LIBRARY_NONE", 
					"LIBRARY_SECURITY_TOKEN" }
			] uint32 FedAuthLibraryType;
	[WmiDataId(9), read, 
				XEMapId(129),
				ValueMap { 
					"2", 
					"3", 
					"0", 
					"1" },
				Values { 
					"ADAL_WORKFLOW_INTEGRATED", 
					"ADAL_WORKFLOW_INTERACTIVE", 
					"ADAL_WORKFLOW_NONE", 
					"ADAL_WORKFLOW_PASSWORD" }
			] uint32 FedAuthWorkflow;
	[WmiDataId(10), read, 
				XEMapId(125),
				ValueMap { 
					"4", 
					"16", 
					"256", 
					"1024", 
					"4096", 
					"64", 
					"0" },
				Values { 
					"SNI_SSL2_SERVER", 
					"SNI_SSL3_SERVER", 
					"SNI_TLS1_1_SERVER", 
					"SNI_TLS1_2_SERVER", 
					"SNI_TLS1_3_SERVER", 
					"SNI_TLS1_SERVER", 
					"SNI_UNDEFINED_PROTOCOL" }
			] uint32 SslProtocol;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string DatabaseName;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string isVnetAddress;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Connection attempt user error metrics"): Amended,
    Guid("{9749e1a5-f361-49f7-8b44-75e2383a52fb}"), locale("MS\\0x409"),
    DisplayName("connection_attempt_failure_user_error"): Amended]
class XeSqlPkg_connection_attempt_failure_user_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class connection_attempt_failure_user_error: XeSqlPkg_connection_attempt_failure_user_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 connection_attempt_counter;
	[WmiDataId(6), read] uint64 nb_connection_accept_failure_finish;
	[WmiDataId(7), read] uint64 connection_attempt_total_time_ms;
	[WmiDataId(8), read, 
				XEMapId(128),
				ValueMap { 
					"3", 
					"1", 
					"0", 
					"2" },
				Values { 
					"LIBRARY_ADAL", 
					"LIBRARY_IDENTITY_CLIENT", 
					"LIBRARY_NONE", 
					"LIBRARY_SECURITY_TOKEN" }
			] uint32 FedAuthLibraryType;
	[WmiDataId(9), read, 
				XEMapId(129),
				ValueMap { 
					"2", 
					"3", 
					"0", 
					"1" },
				Values { 
					"ADAL_WORKFLOW_INTEGRATED", 
					"ADAL_WORKFLOW_INTERACTIVE", 
					"ADAL_WORKFLOW_NONE", 
					"ADAL_WORKFLOW_PASSWORD" }
			] uint32 FedAuthWorkflow;
	[WmiDataId(10), read, 
				XEMapId(125),
				ValueMap { 
					"4", 
					"16", 
					"256", 
					"1024", 
					"4096", 
					"64", 
					"0" },
				Values { 
					"SNI_SSL2_SERVER", 
					"SNI_SSL3_SERVER", 
					"SNI_TLS1_1_SERVER", 
					"SNI_TLS1_2_SERVER", 
					"SNI_TLS1_3_SERVER", 
					"SNI_TLS1_SERVER", 
					"SNI_UNDEFINED_PROTOCOL" }
			] uint32 SslProtocol;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string DatabaseName;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string isVnetAddress;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Connection attempt metrics"): Amended,
    Guid("{c0f2b67d-8ce1-4440-8f9e-b75236fa7ce5}"), locale("MS\\0x409"),
    DisplayName("connection_attempt_failure_system_error"): Amended]
class XeSqlPkg_connection_attempt_failure_system_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class connection_attempt_failure_system_error: XeSqlPkg_connection_attempt_failure_system_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 connection_attempt_counter;
	[WmiDataId(6), read] uint64 nb_connection_accept_failure_finish_is_system_error;
	[WmiDataId(7), read] uint64 connection_attempt_total_time_ms;
	[WmiDataId(8), read, 
				XEMapId(128),
				ValueMap { 
					"3", 
					"1", 
					"0", 
					"2" },
				Values { 
					"LIBRARY_ADAL", 
					"LIBRARY_IDENTITY_CLIENT", 
					"LIBRARY_NONE", 
					"LIBRARY_SECURITY_TOKEN" }
			] uint32 FedAuthLibraryType;
	[WmiDataId(9), read, 
				XEMapId(129),
				ValueMap { 
					"2", 
					"3", 
					"0", 
					"1" },
				Values { 
					"ADAL_WORKFLOW_INTEGRATED", 
					"ADAL_WORKFLOW_INTERACTIVE", 
					"ADAL_WORKFLOW_NONE", 
					"ADAL_WORKFLOW_PASSWORD" }
			] uint32 FedAuthWorkflow;
	[WmiDataId(10), read, 
				XEMapId(125),
				ValueMap { 
					"4", 
					"16", 
					"256", 
					"1024", 
					"4096", 
					"64", 
					"0" },
				Values { 
					"SNI_SSL2_SERVER", 
					"SNI_SSL3_SERVER", 
					"SNI_TLS1_1_SERVER", 
					"SNI_TLS1_2_SERVER", 
					"SNI_TLS1_3_SERVER", 
					"SNI_TLS1_SERVER", 
					"SNI_UNDEFINED_PROTOCOL" }
			] uint32 SslProtocol;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string DatabaseName;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string isVnetAddress;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("This event is generated when the task that updates the authentication cache  begins."): Amended,
    Guid("{10A4AC86-8E47-460B-A8D5-66649335955C}"), locale("MS\\0x409"),
    DisplayName("auth_cache_update_begin"): Amended]
class XeSqlPkg_auth_cache_update_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class auth_cache_update_begin: XeSqlPkg_auth_cache_update_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid operation_id;
};
		
[dynamic: ToInstance, Description("This event is generated when the task that updates the authentication cache ends."): Amended,
    Guid("{2F891E73-CB0E-4F0B-844F-935C3897E74B}"), locale("MS\\0x409"),
    DisplayName("auth_cache_update_end"): Amended]
class XeSqlPkg_auth_cache_update_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class auth_cache_update_end: XeSqlPkg_auth_cache_update_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error;
	[WmiDataId(6), read] sint32 state;
	[WmiDataId(7), read] uint32 execution_time_ms;
	[WmiDataId(8), read] sint32 cache_version;
	[WmiDataId(9), read] sint32 logins_count;
	[WmiDataId(10), read] sint32 ipv4_firewall_cache_rules_count;
	[WmiDataId(11), read] sint32 ipv6_firewall_cache_rules_count;
	[WmiDataId(12), read] sint32 ipv4_firewall_sys_table_rules_count;
	[WmiDataId(13), read] sint32 ipv6_firewall_sys_table_rules_count;
	[WmiDataId(14), read] sint32 vnet_firewall_rules_count;
	[WmiDataId(15), read] sint32 federated_users_count;
	[WmiDataId(16), read, Extension("Guid")] guid operation_id;
};
		
[dynamic: ToInstance, Description("This event is generated when the task that cleans the authentication cache  begins."): Amended,
    Guid("{427AA864-B51B-4F0E-9D66-D62F2320335B}"), locale("MS\\0x409"),
    DisplayName("auth_cache_expire_begin"): Amended]
class XeSqlPkg_auth_cache_expire_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class auth_cache_expire_begin: XeSqlPkg_auth_cache_expire_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid operation_id;
};
		
[dynamic: ToInstance, Description("This event is generated when the task that cleans the authentication cache ends."): Amended,
    Guid("{79CEC7C7-357B-4F85-BFA9-FA3F08276576}"), locale("MS\\0x409"),
    DisplayName("auth_cache_expire_end"): Amended]
class XeSqlPkg_auth_cache_expire_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class auth_cache_expire_end: XeSqlPkg_auth_cache_expire_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error;
	[WmiDataId(6), read] sint8  is_expired;
	[WmiDataId(7), read] uint32 execution_time_ms;
	[WmiDataId(8), read] sint32 cache_version;
	[WmiDataId(9), read, Extension("Guid")] guid operation_id;
};
		
[dynamic: ToInstance, Description("This event is generated when the xodbc auth lookup fails."): Amended,
    Guid("{370310C3-06AB-437C-A2C0-4678D7754332}"), locale("MS\\0x409"),
    DisplayName("auth_cache_lookup_failure"): Amended]
class XeSqlPkg_auth_cache_lookup_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class auth_cache_lookup_failure: XeSqlPkg_auth_cache_lookup_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error;
	[WmiDataId(6), read] sint32 state;
	[WmiDataId(7), read] sint32 lookup_error_state;
	[WmiDataId(8), read] sint32 cache_version;
};
		
[dynamic: ToInstance, Description("XEvents failpoint to force cache lookup failure and therefore go to XODBC auth path."): Amended,
    Guid("{17DE9073-8414-4770-ADF6-8CD85B870919}"), locale("MS\\0x409"),
    DisplayName("auth_cache_force_xodbc_failpoint"): Amended]
class XeSqlPkg_auth_cache_force_xodbc_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class auth_cache_force_xodbc_failpoint: XeSqlPkg_auth_cache_force_xodbc_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("This event is generated when the xodbc cache firewall lookup succeeds."): Amended,
    Guid("{470003a5-0f0f-4287-b4e6-72661b4420ce}"), locale("MS\\0x409"),
    DisplayName("auth_fw_cache_lookup_success"): Amended]
class XeSqlPkg_auth_fw_cache_lookup_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class auth_fw_cache_lookup_success: XeSqlPkg_auth_fw_cache_lookup_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 execution_time_ms;
	[WmiDataId(6), read] sint32 cache_version;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string cache_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string peer_address;
};
		
[dynamic: ToInstance, Description("This event is generated when the xodbc cache firewall lookup fails."): Amended,
    Guid("{26d3c621-aabc-44d4-9e48-268abb118d49}"), locale("MS\\0x409"),
    DisplayName("auth_fw_cache_lookup_failure"): Amended]
class XeSqlPkg_auth_fw_cache_lookup_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class auth_fw_cache_lookup_failure: XeSqlPkg_auth_fw_cache_lookup_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 execution_time_ms;
	[WmiDataId(6), read] sint32 cache_version;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string cache_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string peer_address;
};
		
[dynamic: ToInstance, Description("This event is generated when the task that updates the DB firewall cache begins."): Amended,
    Guid("{20d8b2a1-3239-42d9-8b1e-95fc11a1c9f3}"), locale("MS\\0x409"),
    DisplayName("db_fw_cache_update_begin"): Amended]
class XeSqlPkg_db_fw_cache_update_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class db_fw_cache_update_begin: XeSqlPkg_db_fw_cache_update_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid connection_id;
	[WmiDataId(6), read, Extension("Guid")] guid operation_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string cache_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("This event is generated when the task that updates the DB firewall cache ends."): Amended,
    Guid("{54a4ffb9-1d04-4958-a1a6-b24b8dad1117}"), locale("MS\\0x409"),
    DisplayName("db_fw_cache_update_end"): Amended]
class XeSqlPkg_db_fw_cache_update_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class db_fw_cache_update_end: XeSqlPkg_db_fw_cache_update_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error;
	[WmiDataId(6), read] sint32 state;
	[WmiDataId(7), read] uint32 execution_time_ms;
	[WmiDataId(8), read] uint32 cache_version;
	[WmiDataId(9), read] sint32 firewall_cache_rules_count;
	[WmiDataId(10), read] sint32 firewall_sys_table_rules_count;
	[WmiDataId(11), read, Extension("Guid")] guid connection_id;
	[WmiDataId(12), read, Extension("Guid")] guid operation_id;
	[WmiDataId(13), read, Extension("Guid")] guid logical_database_guid;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string cache_type;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("This event is generated when the task that cleans the DB firewall cache  begins."): Amended,
    Guid("{4978f111-b5b5-4a23-b35b-3aab905e0a79}"), locale("MS\\0x409"),
    DisplayName("db_fw_cache_expire_begin"): Amended]
class XeSqlPkg_db_fw_cache_expire_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class db_fw_cache_expire_begin: XeSqlPkg_db_fw_cache_expire_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid connection_id;
	[WmiDataId(6), read, Extension("Guid")] guid operation_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string cache_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("This event is generated when the task that cleans the DB firewall cache ends."): Amended,
    Guid("{f752d123-3619-433c-9c1b-3c41d1419563}"), locale("MS\\0x409"),
    DisplayName("db_fw_cache_expire_end"): Amended]
class XeSqlPkg_db_fw_cache_expire_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class db_fw_cache_expire_end: XeSqlPkg_db_fw_cache_expire_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error;
	[WmiDataId(6), read] sint32 state;
	[WmiDataId(7), read] sint32 firewall_cache_rules_count;
	[WmiDataId(8), read] uint32 execution_time_ms;
	[WmiDataId(9), read] uint32 cache_version;
	[WmiDataId(10), read, Extension("Guid")] guid connection_id;
	[WmiDataId(11), read, Extension("Guid")] guid operation_id;
	[WmiDataId(12), read, Extension("Guid")] guid logical_database_guid;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string cache_type;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("This event is generated when the DB firewall lookup success."): Amended,
    Guid("{f0c43088-b787-461d-a354-c24e03ea0aa0}"), locale("MS\\0x409"),
    DisplayName("db_fw_cache_lookup_success"): Amended]
class XeSqlPkg_db_fw_cache_lookup_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class db_fw_cache_lookup_success: XeSqlPkg_db_fw_cache_lookup_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 execution_time_ms;
	[WmiDataId(6), read] uint32 cache_version;
	[WmiDataId(7), read, Extension("Guid")] guid connection_id;
	[WmiDataId(8), read, Extension("Guid")] guid logical_database_guid;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string cache_type;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string peer_address;
};
		
[dynamic: ToInstance, Description("This event is generated when the DB firewall lookup fails."): Amended,
    Guid("{8ece10f0-9e51-49a0-bba4-91f87eba01ae}"), locale("MS\\0x409"),
    DisplayName("db_fw_cache_lookup_failure"): Amended]
class XeSqlPkg_db_fw_cache_lookup_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class db_fw_cache_lookup_failure: XeSqlPkg_db_fw_cache_lookup_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error;
	[WmiDataId(6), read] sint32 state;
	[WmiDataId(7), read] uint32 execution_time_ms;
	[WmiDataId(8), read] uint32 cache_version;
	[WmiDataId(9), read, Extension("Guid")] guid connection_id;
	[WmiDataId(10), read, Extension("Guid")] guid logical_database_guid;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string cache_type;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string peer_address;
};
		
[dynamic: ToInstance, Description("Occurs when the server determines a state change in term of session recovery on a connection resilency-enabled connection."): Amended,
    Guid("{7b5be1d7-6145-44ad-a81e-1a876095f8f6}"), locale("MS\\0x409"),
    DisplayName("session_recoverable_state_change"): Amended]
class XeSqlPkg_session_recoverable_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class session_recoverable_state_change: XeSqlPkg_session_recoverable_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(98),
				ValueMap { 
					"4", 
					"9", 
					"12", 
					"3", 
					"16", 
					"13", 
					"1", 
					"7", 
					"15", 
					"14", 
					"11", 
					"8", 
					"18", 
					"17", 
					"0", 
					"2", 
					"5", 
					"6", 
					"10" },
				Values { 
					"ActiveTrans", 
					"ActiveTransaction", 
					"AppLock", 
					"AttnAborted", 
					"ContextInfoNoMemory", 
					"ExecuteAs", 
					"GeneralError", 
					"GlobalCursor", 
					"IdtFailed", 
					"IdtNoMemory", 
					"LobLocator", 
					"LocalCursor", 
					"ManualCommitUserXactActive", 
					"MaxSeqNoReached", 
					"NoError", 
					"SpResetConnNoTds", 
					"TempObj", 
					"Traceflg", 
					"XmlDoc" }
			] uint32 state;
};
		
[dynamic: ToInstance, Description("Occurs when a successful connection is made to the Server. This event is fired for new connection or when connections are reused from a connection pool"): Amended,
    Guid("{13e22e12-3cb8-49bf-a3e1-131faa95601c}"), locale("MS\\0x409"),
    DisplayName("login"): Amended]
class XeSqlPkg_login: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class login: XeSqlPkg_login
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_cached;
	[WmiDataId(6), read] sint8  is_dac;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint32 packet_size;
	[WmiDataId(9), read, Extension("Variant")] object options;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string options_text;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a successful connection is made to the Server. This event is fired for new connection or when connections are reused from a connection pool"): Amended,
    Guid("{13e22e12-3cb8-49bf-a3e1-131faa95601c}"), locale("MS\\0x409"),
    DisplayName("login"): Amended]
class XeSqlPkg_login: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class login: XeSqlPkg_login
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_cached;
	[WmiDataId(6), read] sint8  is_recovered;
	[WmiDataId(7), read] sint8  is_dac;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint32 packet_size;
	[WmiDataId(10), read, Extension("Variant")] object options;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string options_text;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Fires before the check to see if login scan can be skipped has been completed."): Amended,
    Guid("{4d2a518d-1fe2-4637-980c-35c34bdf6c52}"), locale("MS\\0x409"),
    DisplayName("can_skip_login_scan_test_hook"): Amended]
class XeSqlPkg_can_skip_login_scan_test_hook: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class can_skip_login_scan_test_hook: XeSqlPkg_can_skip_login_scan_test_hook
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  CanSkipLoginScan;
};
		
[dynamic: ToInstance, Description("Fires before the check to see if connection checker checks if the client connection is still alive."): Amended,
    Guid("{7DB18FBE-CA74-4E83-B25A-F7A73B591299}"), locale("MS\\0x409"),
    DisplayName("should_return_false_for_client_connection_check"): Amended]
class XeSqlPkg_should_return_false_for_client_connection_check: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class should_return_false_for_client_connection_check: XeSqlPkg_should_return_false_for_client_connection_check
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  ShouldConnectionCheckerReturnFalse;
};
		
[dynamic: ToInstance, Description("Occurs when a successful connection to the Server is reported to Windows using the User Access Logging API. This event is only fired for new connections. Connection resets are not tracked."): Amended,
    Guid("{d8c6e351-2c04-4fe2-9738-2fe88f4dff07}"), locale("MS\\0x409"),
    DisplayName("ual_instrument_called"): Amended]
class XeSqlPkg_ual_instrument_called: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ual_instrument_called: XeSqlPkg_ual_instrument_called
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
	[WmiDataId(6), read, Extension("Guid")] guid role_guid;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string ip_address;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string user_name;
};
		
[dynamic: ToInstance, Description("Occurs when a user has logged out of (logged off) the Server. This event is required in traces that will be used for Replay"): Amended,
    Guid("{1231d3bd-8d9a-4611-a117-c28cca483cf2}"), locale("MS\\0x409"),
    DisplayName("logout"): Amended]
class XeSqlPkg_logout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logout: XeSqlPkg_logout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_cached;
	[WmiDataId(6), read] sint8  is_dac;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read] uint64 cpu_time;
	[WmiDataId(9), read] uint64 physical_reads;
	[WmiDataId(10), read] uint64 logical_reads;
	[WmiDataId(11), read] uint64 writes;
};
		
[dynamic: ToInstance, Description("Occurs when a user has logged out of (logged off) the Server. This event is required in traces that will be used for Replay"): Amended,
    Guid("{1231d3bd-8d9a-4611-a117-c28cca483cf2}"), locale("MS\\0x409"),
    DisplayName("logout"): Amended]
class XeSqlPkg_logout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class logout: XeSqlPkg_logout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_cached;
	[WmiDataId(6), read] sint8  is_recovered;
	[WmiDataId(7), read] sint8  is_dac;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint64 cpu_time;
	[WmiDataId(10), read] uint64 physical_reads;
	[WmiDataId(11), read] uint64 logical_reads;
	[WmiDataId(12), read] uint64 writes;
};
		
[dynamic: ToInstance, Description("Occurs when a user has logged out of (logged off) the Server. This event is required in traces that will be used for Replay"): Amended,
    Guid("{1231d3bd-8d9a-4611-a117-c28cca483cf2}"), locale("MS\\0x409"),
    DisplayName("logout"): Amended]
class XeSqlPkg_logout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class logout: XeSqlPkg_logout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_cached;
	[WmiDataId(6), read] sint8  is_recovered;
	[WmiDataId(7), read] sint8  is_dac;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint64 cpu_time;
	[WmiDataId(10), read] uint64 page_server_reads;
	[WmiDataId(11), read] uint64 physical_reads;
	[WmiDataId(12), read] uint64 logical_reads;
	[WmiDataId(13), read] uint64 writes;
};
		
[dynamic: ToInstance, Description("Number of login protocol"): Amended,
    Guid("{2EAF524F-1ED0-41DB-9733-822235B4936E}"), locale("MS\\0x409"),
    DisplayName("login_protocol_count"): Amended]
class XeSqlPkg_login_protocol_count: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class login_protocol_count: XeSqlPkg_login_protocol_count
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string protocol;
};
		
[dynamic: ToInstance, Description("Indicates that a cancel operation, client-interrupt request, or broken client connection was received, triggering abort."): Amended,
    Guid("{7255C0D6-6BF7-4236-9244-8D7D336F88CA}"), locale("MS\\0x409"),
    DisplayName("query_abort"): Amended]
class XeSqlPkg_query_abort: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_abort: XeSqlPkg_query_abort
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 request_id;
	[WmiDataId(6), read] sint16 session_id;
	[WmiDataId(7), read] sint16 database_id;
	[WmiDataId(8), read, Pointer] object  task;
	[WmiDataId(9), read, Pointer] object  worker;
	[WmiDataId(10), read] sint64 xact_id;
	[WmiDataId(11), read, Extension("Guid")] guid execution_plan_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string user_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string host_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string app_name;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string input_buffer;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string worker_wait_stats;
	[WmiDataId(17), read, StringTermination("NullTerminated")] string task_callstack_rva;
};
		
[dynamic: ToInstance, Description("Indicates that a cancel operation, client-interrupt request, or broken client connection has occurred. Be aware that cancel operations can also occur as the result of implementing data access driver time-outs, aborted."): Amended,
    Guid("{4bbf00fa-5d53-4c65-b1dc-d21f52c44fa6}"), locale("MS\\0x409"),
    DisplayName("attention"): Amended]
class XeSqlPkg_attention: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class attention: XeSqlPkg_attention
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] sint32 request_id;
};
		
[dynamic: ToInstance, Description("Occurs when an Extended Events session is started. To avoid duplicate (or secondary) existing_connection events when other Extended Events sessions are started, we recommend that you always use this event with the following predicate: WHERE started_event_session_name = 'your_event_session_name'."): Amended,
    Guid("{8643c6b9-3267-43c3-8b3a-1c6401c5561a}"), locale("MS\\0x409"),
    DisplayName("existing_connection"): Amended]
class XeSqlPkg_existing_connection: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class existing_connection: XeSqlPkg_existing_connection
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint16 session_id;
	[WmiDataId(6), read] sint8  is_dac;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint32 packet_size;
	[WmiDataId(9), read] uint32 transaction_count;
	[WmiDataId(10), read] uint32 group_id;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint32 client_pid;
	[WmiDataId(13), read, Extension("Variant")] object options;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string options_text;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string started_event_session_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string client_app_name;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string client_hostname;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string nt_domain;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string nt_user;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string session_nt_domain;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string session_nt_user;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string server_principal_name;
	[WmiDataId(24), read, Extension("Variant")] object server_principal_sid;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string session_server_principal_name;
	[WmiDataId(26), read, Extension("Variant")] object session_server_principal_sid;
};
		
[dynamic: ToInstance, Description("Occurs when the Server has been started or stopped"): Amended,
    Guid("{5360fe73-98a8-487c-b39a-807d795c0f7c}"), locale("MS\\0x409"),
    DisplayName("server_start_stop"): Amended]
class XeSqlPkg_server_start_stop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class server_start_stop: XeSqlPkg_server_start_stop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(2),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"Shutdown", 
					"Started", 
					"Paused", 
					"Continue" }
			] uint8 operation;
	[WmiDataId(6), read] sint8  success;
};
		
[dynamic: ToInstance, Description("Occurs when a stored procedure is not found in the procedure cache. Frequent occurrences of this event could indicate that SQL Server needs more memory.  Use this event along with other sp_cache_* events to troubleshoot issues caused by the procedure cache."): Amended,
    Guid("{1B67518B-9D33-4062-88B4-A574F18C6036}"), locale("MS\\0x409"),
    DisplayName("sp_cache_miss"): Amended]
class XeSqlPkg_sp_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sp_cache_miss: XeSqlPkg_sp_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string cached_text;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a stored procedure is not found in the procedure cache. Frequent occurrences of this event could indicate that SQL Server needs more memory.  Use this event along with other sp_cache_* events to troubleshoot issues caused by the procedure cache."): Amended,
    Guid("{1B67518B-9D33-4062-88B4-A574F18C6036}"), locale("MS\\0x409"),
    DisplayName("sp_cache_miss"): Amended]
class XeSqlPkg_sp_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sp_cache_miss: XeSqlPkg_sp_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string cached_text;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string application_name;
};
		
[dynamic: ToInstance, Description("Occurs when a stored procedure is inserted into the procedure cache. Use this event together with other sp_cache_* events to troubleshoot issues that are caused by the procedure cache."): Amended,
    Guid("{e76803d5-7c1c-441d-bc2b-747a5e44611e}"), locale("MS\\0x409"),
    DisplayName("sp_cache_insert"): Amended]
class XeSqlPkg_sp_cache_insert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sp_cache_insert: XeSqlPkg_sp_cache_insert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string cached_text;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(11), read, Extension("Variant")] object plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a stored procedure is removed from the procedure cache. Use this event together with other sp_cache_* events to troubleshoot issues that are caused by the procedure cache."): Amended,
    Guid("{7f666a7d-365e-404a-97cc-09ca8db1df41}"), locale("MS\\0x409"),
    DisplayName("sp_cache_remove"): Amended]
class XeSqlPkg_sp_cache_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sp_cache_remove: XeSqlPkg_sp_cache_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read, 
				XEMapId(18),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"Compplan Remove", 
					"Proc Cache Flush", 
					"Object Plans Cache Flush", 
					"SQL Plans Cache Flush", 
					"Bound Trees Cache Flush" }
			] uint8 remove_method;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string cached_text;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(12), read, Extension("Variant")] object plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a stored procedure is removed from the procedure cache. Use this event together with other sp_cache_* events to troubleshoot issues that are caused by the procedure cache."): Amended,
    Guid("{7f666a7d-365e-404a-97cc-09ca8db1df41}"), locale("MS\\0x409"),
    DisplayName("sp_cache_remove"): Amended]
class XeSqlPkg_sp_cache_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sp_cache_remove: XeSqlPkg_sp_cache_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read, 
				XEMapId(18),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"Compplan Remove", 
					"Proc Cache Flush", 
					"Object Plans Cache Flush", 
					"SQL Plans Cache Flush", 
					"Bound Trees Cache Flush" }
			] uint8 remove_method;
	[WmiDataId(9), read, 
				XEMapId(19),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37" },
				Values { 
					"Unknown", 
					"Algebrizer recompile", 
					"Algebrizer schema changed", 
					"Algebrizer user-defined function inlining", 
					"Algebrizer", 
					"Blob not cacheable", 
					"Contained db alter", 
					"Contained db error handling", 
					"DDL update", 
					"Database collation update", 
					"Database compatibility update", 
					"Database detach", 
					"Database name change", 
					"Database settings update", 
					"Database shutdown", 
					"Database state update", 
					"Database upgrade", 
					"Dbcc command flush", 
					"Drop database", 
					"Encryption invalidation flush", 
					"Error handling", 
					"External script recompile", 
					"Filegroup update", 
					"Metadata update", 
					"Oledb Flush", 
					"Outdated view entry", 
					"Plan Recompile", 
					"Plan guide update", 
					"Query store update", 
					"Schema changed", 
					"Server reconfiguration", 
					"Sp module recompile", 
					"Statement execution failed", 
					"Stretch database update", 
					"System Flush", 
					"Table-Valued Function update", 
					"Transient replica drop", 
					"Trigger update" }
			] uint8 remove_reason;
	[WmiDataId(10), read] uint8 remove_reason_state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string cached_text;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(14), read, Extension("Variant")] object plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a stored procedure is retrieve from the procedure cache. Use this event along with other sp_cache_* events to troubleshoot issues caused by the procedure cache."): Amended,
    Guid("{40e610a7-c77d-4c0b-ad3b-ecf828f10e03}"), locale("MS\\0x409"),
    DisplayName("sp_cache_hit"): Amended]
class XeSqlPkg_sp_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sp_cache_hit: XeSqlPkg_sp_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string cached_text;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(11), read, Extension("Variant")] object plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a stored procedure is retrieve from the procedure cache. Use this event along with other sp_cache_* events to troubleshoot issues caused by the procedure cache."): Amended,
    Guid("{40e610a7-c77d-4c0b-ad3b-ecf828f10e03}"), locale("MS\\0x409"),
    DisplayName("sp_cache_hit"): Amended]
class XeSqlPkg_sp_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sp_cache_hit: XeSqlPkg_sp_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string cached_text;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(11), read, Extension("Variant")] object plan_handle;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string application_name;
};
		
[dynamic: ToInstance, Description("Occurs when a plan is shipped to another brick"): Amended,
    Guid("{2c95014e-717b-4c30-bfae-58df363dd314}"), locale("MS\\0x409"),
    DisplayName("sql_statement_plan_shipped"): Amended]
class XeSqlPkg_sql_statement_plan_shipped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_statement_plan_shipped: XeSqlPkg_sql_statement_plan_shipped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 target_brick_id;
	[WmiDataId(6), read] sint32 statement_start_offset;
	[WmiDataId(7), read] sint32 statement_end_offset;
	[WmiDataId(8), read, Extension("Variant")] object parent_plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a plan is recieved from another brick"): Amended,
    Guid("{d1424328-ea7b-47bd-979f-541e10fc8594}"), locale("MS\\0x409"),
    DisplayName("sql_statement_plan_received"): Amended]
class XeSqlPkg_sql_statement_plan_received: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_statement_plan_received: XeSqlPkg_sql_statement_plan_received
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 statement_start_offset;
	[WmiDataId(6), read] sint32 statement_end_offset;
	[WmiDataId(7), read] uint32 source_brick_id;
	[WmiDataId(8), read, Extension("Variant")] object plan_handle;
	[WmiDataId(9), read, Extension("Variant")] object parent_plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when an object was created by the CREATE statement. This event is raised two times for every CREATE operation. The event is raised when the operation begins and when the operation is either rolled back or committed. Add the nt_username or server_principal_name actions to this event to determine who altered the object."): Amended,
    Guid("{8f12557e-084e-4868-a65a-883c281cfe62}"), locale("MS\\0x409"),
    DisplayName("object_created"): Amended]
class XeSqlPkg_object_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class object_created: XeSqlPkg_object_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] sint32 related_object_id;
	[WmiDataId(10), read, 
				XEMapId(4),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Begin", 
					"Commit", 
					"Rollback" }
			] uint8 ddl_phase;
	[WmiDataId(11), read] sint64 transaction_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when an object was deleted by the DROP statement. This event is raised two times for every DROP operation. The event is raised when the operation begins and when the operation is either rolled back or committed. Add the nt_username or server_principal_name actions to this event to determine who altered the object."): Amended,
    Guid("{193c8860-07f9-4336-92ca-9a0cb80c1bd4}"), locale("MS\\0x409"),
    DisplayName("object_deleted"): Amended]
class XeSqlPkg_object_deleted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class object_deleted: XeSqlPkg_object_deleted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] sint32 related_object_id;
	[WmiDataId(10), read, 
				XEMapId(4),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Begin", 
					"Commit", 
					"Rollback" }
			] uint8 ddl_phase;
	[WmiDataId(11), read] sint64 transaction_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a statement is defined for a cursor, the cursor properties are set, and the cursor is populated. Use this event to troubleshoot cursor performance issues."): Amended,
    Guid("{98258dbc-73ce-4c0e-99e6-6d0a191089d5}"), locale("MS\\0x409"),
    DisplayName("cursor_open"): Amended]
class XeSqlPkg_cursor_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_open: XeSqlPkg_cursor_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(135),
				BitMap { 
					"2031616", 
					"16", 
					"2093087", 
					"16384", 
					"8192", 
					"32768", 
					"2", 
					"4", 
					"8", 
					"1", 
					"4096", 
					"31", 
					"0" },
				BitValues { 
					"AcceptedTypeMask", 
					"AcceptedTypesOffset", 
					"AllScOptBits", 
					"AutoClose", 
					"AutoFetch", 
					"CheckAcceptedTypes", 
					"Dynamic", 
					"ForwardOnly", 
					"Insensitive", 
					"Keyset", 
					"ParameterizeStmt", 
					"ScrollOptMask", 
					"UnInitialized" }
			] uint32 cursor_type;
	[WmiDataId(6), read] sint32 protocol_execution_id;
};
		
[dynamic: ToInstance, Description("Occurs when index and column statistics are automatically updated. This event can be generated multiple times per statistics collection when the update is asynchronous."): Amended,
    Guid("{9237e17a-a73d-4832-8936-f319e19e219b}"), locale("MS\\0x409"),
    DisplayName("auto_stats"): Amended]
class XeSqlPkg_auto_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class auto_stats: XeSqlPkg_auto_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read] sint32 job_id;
	[WmiDataId(9), read, 
				XEMapId(79),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"Invalid", 
					"StatsUpdate" }
			] uint8 job_type;
	[WmiDataId(10), read, 
				XEMapId(15),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10" },
				Values { 
					"Other", 
					"Queued", 
					"Starting", 
					"Completed", 
					"Failed to obtain schema lock on table", 
					"Failed to obtain schema lock on stats", 
					"Failed to save computed stats", 
					"Loading and updating stats", 
					"Loading stats without updating", 
					"Checking mod-counter" }
			] uint8 status;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint16 retries;
	[WmiDataId(13), read] sint8  success;
	[WmiDataId(14), read] sint32 last_error;
	[WmiDataId(15), read] uint32 count;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string statistics_list;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when index and column statistics are automatically updated. This event can be generated multiple times per statistics collection when the update is asynchronous."): Amended,
    Guid("{9237e17a-a73d-4832-8936-f319e19e219b}"), locale("MS\\0x409"),
    DisplayName("auto_stats"): Amended]
class XeSqlPkg_auto_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class auto_stats: XeSqlPkg_auto_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read] sint32 job_id;
	[WmiDataId(9), read, 
				XEMapId(79),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"Invalid", 
					"StatsUpdate" }
			] uint8 job_type;
	[WmiDataId(10), read, 
				XEMapId(15),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10" },
				Values { 
					"Other", 
					"Queued", 
					"Starting", 
					"Completed", 
					"Failed to obtain schema lock on table", 
					"Failed to obtain schema lock on stats", 
					"Failed to save computed stats", 
					"Loading and updating stats", 
					"Loading stats without updating", 
					"Checking mod-counter" }
			] uint8 status;
	[WmiDataId(11), read] sint8  incremental;
	[WmiDataId(12), read] sint8  async;
	[WmiDataId(13), read] sint32 max_dop;
	[WmiDataId(14), read] sint64 sample_percentage;
	[WmiDataId(15), read] uint64 duration;
	[WmiDataId(16), read] uint16 retries;
	[WmiDataId(17), read] sint8  success;
	[WmiDataId(18), read] sint32 last_error;
	[WmiDataId(19), read] uint32 count;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string statistics_list;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when index and column statistics are automatically updated. This event can be generated multiple times per statistics collection when the update is asynchronous."): Amended,
    Guid("{9237e17a-a73d-4832-8936-f319e19e219b}"), locale("MS\\0x409"),
    DisplayName("auto_stats"): Amended]
class XeSqlPkg_auto_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class auto_stats: XeSqlPkg_auto_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read] sint32 job_id;
	[WmiDataId(9), read, 
				XEMapId(79),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"Invalid", 
					"StatsUpdate" }
			] uint8 job_type;
	[WmiDataId(10), read, 
				XEMapId(15),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10" },
				Values { 
					"Other", 
					"Queued", 
					"Starting", 
					"Completed", 
					"Failed to obtain schema lock on table", 
					"Failed to obtain schema lock on stats", 
					"Failed to save computed stats", 
					"Loading and updating stats", 
					"Loading stats without updating", 
					"Checking mod-counter" }
			] uint8 status;
	[WmiDataId(11), read] sint8  incremental;
	[WmiDataId(12), read] sint8  async;
	[WmiDataId(13), read] sint32 max_dop;
	[WmiDataId(14), read] sint64 sample_percentage;
	[WmiDataId(15), read] uint64 duration;
	[WmiDataId(16), read] uint16 retries;
	[WmiDataId(17), read] sint8  success;
	[WmiDataId(18), read] sint32 last_error;
	[WmiDataId(19), read] uint32 count;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string statistics_list;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Trigger when we update incremental stats and gives status of possibly updating sampling rate."): Amended,
    Guid("{9DCB3DA7-870B-4972-BE92-6A88E2A2E8C4}"), locale("MS\\0x409"),
    DisplayName("incremental_stats_sampling_change"): Amended]
class XeSqlPkg_incremental_stats_sampling_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class incremental_stats_sampling_change: XeSqlPkg_incremental_stats_sampling_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(16),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"New Sampling Rate Found", 
					"Keep Old Sampling Rate", 
					"Resample Specified", 
					"Persisted Sample Rate Found" }
			] uint8 status;
	[WmiDataId(8), read] sint64 old_rate;
	[WmiDataId(9), read] sint64 new_rate;
	[WmiDataId(10), read] uint64 old_scan_rows;
	[WmiDataId(11), read] sint64 number_stale_leaves;
	[WmiDataId(12), read] sint64 partition_count;
};
		
[dynamic: ToInstance, Description("Trigger when we update incremental stats and gives status of possibly updating sampling rate."): Amended,
    Guid("{9DCB3DA7-870B-4972-BE92-6A88E2A2E8C4}"), locale("MS\\0x409"),
    DisplayName("incremental_stats_sampling_change"): Amended]
class XeSqlPkg_incremental_stats_sampling_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class incremental_stats_sampling_change: XeSqlPkg_incremental_stats_sampling_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read, 
				XEMapId(16),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"New Sampling Rate Found", 
					"Keep Old Sampling Rate", 
					"Resample Specified", 
					"Persisted Sample Rate Found" }
			] uint8 status;
	[WmiDataId(8), read] sint64 old_rate;
	[WmiDataId(9), read] sint64 new_rate;
	[WmiDataId(10), read] uint64 old_scan_rows;
	[WmiDataId(11), read] sint64 number_stale_leaves;
	[WmiDataId(12), read] sint64 partition_count;
};
		
[dynamic: ToInstance, Description("Occurs when a statement that contains a cursor declaration is compiled into an execution plan, but before the cursor is opened. Use this event to troubleshoot cursor performance issues."): Amended,
    Guid("{32d33a3a-7847-4c2e-8208-2473da166d25}"), locale("MS\\0x409"),
    DisplayName("cursor_prepare"): Amended]
class XeSqlPkg_cursor_prepare: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_prepare: XeSqlPkg_cursor_prepare
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 protocol_execution_id;
};
		
[dynamic: ToInstance, Description("Occurs when a Transact-SQL statement was prepared by SQLClient, ODBC, OLE DB or DB-Library."): Amended,
    Guid("{0e1bd106-96a6-4d82-893e-99aa94749922}"), locale("MS\\0x409"),
    DisplayName("prepare_sql"): Amended]
class XeSqlPkg_prepare_sql: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class prepare_sql: XeSqlPkg_prepare_sql
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 statement_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a prepared Transact-SQL statement was executed by SQLClient, ODBC, OLE DB or DB-Library."): Amended,
    Guid("{668c6143-20b7-4dd4-9748-fc09e8528739}"), locale("MS\\0x409"),
    DisplayName("exec_prepared_sql"): Amended]
class XeSqlPkg_exec_prepared_sql: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class exec_prepared_sql: XeSqlPkg_exec_prepared_sql
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 statement_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a prepared Transact-SQL statement was unprepared (deleted) by SQLClient, ODBC, OLE DB or DB-Library."): Amended,
    Guid("{7e21d184-d6eb-4590-965b-e1914878894e}"), locale("MS\\0x409"),
    DisplayName("unprepare_sql"): Amended]
class XeSqlPkg_unprepare_sql: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class unprepare_sql: XeSqlPkg_unprepare_sql
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 statement_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a window function is used."): Amended,
    Guid("{BFCD1011-9F3A-482E-A0CE-9A80B3CD914F}"), locale("MS\\0x409"),
    DisplayName("window_function_used"): Amended]
class XeSqlPkg_window_function_used: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class window_function_used: XeSqlPkg_window_function_used
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string execution_details;
};
		
[dynamic: ToInstance, Description("Occurs when a sequence function is used."): Amended,
    Guid("{0E134FF5-576D-435F-B5A7-3A558E4ECD85}"), locale("MS\\0x409"),
    DisplayName("sequence_function_used"): Amended]
class XeSqlPkg_sequence_function_used: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sequence_function_used: XeSqlPkg_sequence_function_used
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string execution_details;
};
		
[dynamic: ToInstance, Description("Occurs when a cursor is created and executed. This event is used for troubleshooting cursor performance issues."): Amended,
    Guid("{95a4e1f5-a1e6-4be4-8bd7-59576afcc02b}"), locale("MS\\0x409"),
    DisplayName("cursor_execute"): Amended]
class XeSqlPkg_cursor_execute: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_execute: XeSqlPkg_cursor_execute
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(135),
				BitMap { 
					"2031616", 
					"16", 
					"2093087", 
					"16384", 
					"8192", 
					"32768", 
					"2", 
					"4", 
					"8", 
					"1", 
					"4096", 
					"31", 
					"0" },
				BitValues { 
					"AcceptedTypeMask", 
					"AcceptedTypesOffset", 
					"AllScOptBits", 
					"AutoClose", 
					"AutoFetch", 
					"CheckAcceptedTypes", 
					"Dynamic", 
					"ForwardOnly", 
					"Insensitive", 
					"Keyset", 
					"ParameterizeStmt", 
					"ScrollOptMask", 
					"UnInitialized" }
			] uint32 cursor_type;
	[WmiDataId(6), read] sint32 protocol_execution_id;
};
		
[dynamic: ToInstance, Description("Occurs when an execution plan that contains a cursor is recompiled. Use this event to troubleshoot cursor performance issues."): Amended,
    Guid("{76fccb8a-fb42-42ff-a9a0-36881f89b27b}"), locale("MS\\0x409"),
    DisplayName("cursor_recompile"): Amended]
class XeSqlPkg_cursor_recompile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_recompile: XeSqlPkg_cursor_recompile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when a cursor is converted to a different cursor type because the requested cursor does not support the statement that is being executed. This event is used to troubleshoot cursor performance issues."): Amended,
    Guid("{44411821-64c0-4d1b-829e-1b323aef8ad5}"), locale("MS\\0x409"),
    DisplayName("cursor_implicit_conversion"): Amended]
class XeSqlPkg_cursor_implicit_conversion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_implicit_conversion: XeSqlPkg_cursor_implicit_conversion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(135),
				BitMap { 
					"2031616", 
					"16", 
					"2093087", 
					"16384", 
					"8192", 
					"32768", 
					"2", 
					"4", 
					"8", 
					"1", 
					"4096", 
					"31", 
					"0" },
				BitValues { 
					"AcceptedTypeMask", 
					"AcceptedTypesOffset", 
					"AllScOptBits", 
					"AutoClose", 
					"AutoFetch", 
					"CheckAcceptedTypes", 
					"Dynamic", 
					"ForwardOnly", 
					"Insensitive", 
					"Keyset", 
					"ParameterizeStmt", 
					"ScrollOptMask", 
					"UnInitialized" }
			] uint32 final_cursor_type;
	[WmiDataId(6), read] sint32 protocol_execution_id;
	[WmiDataId(7), read, 
				XEMapId(135),
				BitMap { 
					"2031616", 
					"16", 
					"2093087", 
					"16384", 
					"8192", 
					"32768", 
					"2", 
					"4", 
					"8", 
					"1", 
					"4096", 
					"31", 
					"0" },
				BitValues { 
					"AcceptedTypeMask", 
					"AcceptedTypesOffset", 
					"AllScOptBits", 
					"AutoClose", 
					"AutoFetch", 
					"CheckAcceptedTypes", 
					"Dynamic", 
					"ForwardOnly", 
					"Insensitive", 
					"Keyset", 
					"ParameterizeStmt", 
					"ScrollOptMask", 
					"UnInitialized" }
			] uint32 initial_cursor_type;
};
		
[dynamic: ToInstance, Description("Occurs when an execution plan that contains a cursor is discarded. Use this event to troubleshoot cursor performance issues."): Amended,
    Guid("{ceeaf67a-6f1f-43b2-9eb5-0d4acb85625f}"), locale("MS\\0x409"),
    DisplayName("cursor_unprepare"): Amended]
class XeSqlPkg_cursor_unprepare: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_unprepare: XeSqlPkg_cursor_unprepare
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 protocol_execution_id;
};
		
[dynamic: ToInstance, Description("Occurs when a cursor is deallocated. This event is used for troubleshooting cursor performance issues."): Amended,
    Guid("{05131857-068b-4f43-ad72-b5c1253b57c8}"), locale("MS\\0x409"),
    DisplayName("cursor_close"): Amended]
class XeSqlPkg_cursor_close: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cursor_close: XeSqlPkg_cursor_close
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 protocol_execution_id;
};
		
[dynamic: ToInstance, Description("Occurs when a query accesses a column that does not have statistics available that could have been useful for query optimization. Use this event to identify queries that may be using sub-optimal plans. This event is only generated when the Auto Create Statistics option is turned off."): Amended,
    Guid("{348f8b08-8b68-403a-902e-99c978c979d6}"), locale("MS\\0x409"),
    DisplayName("missing_column_statistics"): Amended]
class XeSqlPkg_missing_column_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class missing_column_statistics: XeSqlPkg_missing_column_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string column_list;
};
		
[dynamic: ToInstance, Description("Occurs when an executed query is missing a join predicate. Use this event to identify a query that may perform slowly because of the missing predicate. This event only occurs if both sides of the join return more than one row."): Amended,
    Guid("{ca826770-dad0-49d1-9332-60ec980ff82f}"), locale("MS\\0x409"),
    DisplayName("missing_join_predicate"): Amended]
class XeSqlPkg_missing_join_predicate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class missing_join_predicate: XeSqlPkg_missing_join_predicate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when a DML operation that is intended to overwrite only part of a large column value is forced to rewrite the entire value.  This happens if the table's heap or clustered index is being built online.  Use this event to identify DML workloads that are running more slowly as a result of building an index online."): Amended,
    Guid("{e8497c9a-731c-4ea8-b9d0-1360b2d400b7}"), locale("MS\\0x409"),
    DisplayName("full_update_instead_of_partial_update"): Amended]
class XeSqlPkg_full_update_instead_of_partial_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class full_update_instead_of_partial_update: XeSqlPkg_full_update_instead_of_partial_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  compile_time;
};
		
[dynamic: ToInstance, Description("Occurs when sp_trace_generateevent is called. Use this event to monitor user-defined events in your application code during testing or execution. The data that is returned from user_event includes the event_id that was specified in the call to sp_trace_generateevent. This can be a value between 82 and 91."): Amended,
    Guid("{c0c56062-3934-414b-b6db-0981057f403c}"), locale("MS\\0x409"),
    DisplayName("user_event"): Amended]
class XeSqlPkg_user_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class user_event: XeSqlPkg_user_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 event_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string user_info;
	[WmiDataId(7), read, Extension("Variant")] object user_data;
};
		
[dynamic: ToInstance, Description("Occurs when an OLEDB Call to a remote provider returns an error. Use this event to view the Hresult returned from failed OLEDB Calls"): Amended,
    Guid("{f15576a1-4e4d-46af-8901-1d8272120e36}"), locale("MS\\0x409"),
    DisplayName("oledb_error"): Amended]
class XeSqlPkg_oledb_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oledb_error: XeSqlPkg_oledb_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string linked_server_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string provider_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string method_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string parameters;
};
		
[dynamic: ToInstance, Description("Occurs when SQL Server calls on OLEDB provider for a distributed query or remote stored procedure. Use this event to monitor OLEDB calls that do not return data or that do not use the QueryInterface method. This event will be trigged twice for each OLEDB call, once when it starts and once when it completes"): Amended,
    Guid("{0cdc48a4-86cf-44c2-8acd-94073662437c}"), locale("MS\\0x409"),
    DisplayName("oledb_call"): Amended]
class XeSqlPkg_oledb_call: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oledb_call: XeSqlPkg_oledb_call
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read] sint32 hresult;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string linked_server_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string provider_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string method_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string parameters;
};
		
[dynamic: ToInstance, Description("Occurs when SQL Server calls on OLEDB provider for a distributed query or remote stored procedure. Use this event to monitor OLEDB calls that use the QueryInterface method. This event will be trigged twice for each OLEDB call, once when it starts and once when it completes"): Amended,
    Guid("{9d6c63bf-9beb-4ea8-bb5d-08e0c69cb9bc}"), locale("MS\\0x409"),
    DisplayName("oledb_query_interface"): Amended]
class XeSqlPkg_oledb_query_interface: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oledb_query_interface: XeSqlPkg_oledb_query_interface
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read] sint32 hresult;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string linked_server_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string provider_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string method_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string parameters;
};
		
[dynamic: ToInstance, Description("Occurs when SQL Server calls on OLEDB provider for a distributed query or remote stored procedure. Use this event to monitor OLEDB calls that make data requests to the OLEDB provider. This event will be trigged twice for each OLEDB call, once when it starts and once when it completes"): Amended,
    Guid("{2849c834-5454-4fc9-a854-f716716ec9f8}"), locale("MS\\0x409"),
    DisplayName("oledb_data_read"): Amended]
class XeSqlPkg_oledb_data_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oledb_data_read: XeSqlPkg_oledb_data_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read] sint32 hresult;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string linked_server_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string provider_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string method_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string parameters;
};
		
[dynamic: ToInstance, Description("Occurs when SQL Server initializes an OLEDB provider for a distributed query or remote stored procedure. Use this event to monitor OLEDB provider initialization. This event will be triggered once when a particular provider is initialized."): Amended,
    Guid("{9E6114EF-3D47-4682-B0A0-1961894DC631}"), locale("MS\\0x409"),
    DisplayName("oledb_provider_initialized"): Amended]
class XeSqlPkg_oledb_provider_initialized: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oledb_provider_initialized: XeSqlPkg_oledb_provider_initialized
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string linked_server_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string provider_name;
	[WmiDataId(8), read, Extension("Guid")] guid provider_clsid;
};
		
[dynamic: ToInstance, Description("Occurs when SQL Server initializes an OLEDB provider for a distributed query or remote stored procedure. Use this event to monitor OLEDB provider initialization. This event will be triggered once when a particular provider is initialized. It is also used for reporting type of mapping used for linked servers."): Amended,
    Guid("{9E6114EF-3D47-4682-B0A0-1961894DC631}"), locale("MS\\0x409"),
    DisplayName("oledb_provider_initialized"): Amended]
class XeSqlPkg_oledb_provider_initialized: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class oledb_provider_initialized: XeSqlPkg_oledb_provider_initialized
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_nt_login;
	[WmiDataId(6), read] uint16 external_auth_mode;
	[WmiDataId(7), read] sint8  is_use_self;
	[WmiDataId(8), read] sint32 hresult;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string linked_server_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string provider_name;
	[WmiDataId(11), read, Extension("Guid")] guid provider_clsid;
};
		
[dynamic: ToInstance, Description("Reports the progress of a Service Broker conversation. This event occurs when specific actions that are defined in the conversation_action field occur."): Amended,
    Guid("{bdc1662a-dfe1-46a7-8a2e-3bb79329fd88}"), locale("MS\\0x409"),
    DisplayName("broker_conversation"): Amended]
class XeSqlPkg_broker_conversation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_conversation: XeSqlPkg_broker_conversation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(28),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13" },
				Values { 
					"Send Message", 
					"End Conversation", 
					"End Conversation with Error", 
					"Broker Initiated Error", 
					"Terminate Dialog", 
					"Received Sequenced Message", 
					"Received END CONVERSATION", 
					"Received END CONVERSATION WITH ERROR", 
					"Received Broker Error Message", 
					"Received END CONVERSATION Acknowledgement", 
					"BEGIN DIALOG", 
					"Dialog Created", 
					"END CONVERSATION WITH CLEANUP" }
			] uint8 conversation_action;
	[WmiDataId(7), read] sint8  is_initiator;
	[WmiDataId(8), read, 
				XEMapId(12),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"STARTED_INBOUND", 
					"STARTED_OUTBOUND", 
					"CONVERSING", 
					"DISCONNECTED_INBOUND", 
					"ERROR", 
					"DISCONNECT_OUTBOUND", 
					"CLOSED" }
			] sint32 conversation_state;
	[WmiDataId(9), read, Extension("Guid")] guid conversation_id;
	[WmiDataId(10), read, Extension("Guid")] guid conversation_handle;
	[WmiDataId(11), read, Extension("Guid")] guid conversation_group_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string initiator_service_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string initiator_broker_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string target_service_name;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string target_broker_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string service_contract_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when Service Broker creates or deletes a conversation group."): Amended,
    Guid("{a86ca192-b1a2-4f35-b6e5-100857e2fdc5}"), locale("MS\\0x409"),
    DisplayName("broker_conversation_group"): Amended]
class XeSqlPkg_broker_conversation_group: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_conversation_group: XeSqlPkg_broker_conversation_group
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(27),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Create", 
					"Drop" }
			] uint8 conversation_group_action;
	[WmiDataId(6), read, Extension("Guid")] guid conversation_group_id;
};
		
[dynamic: ToInstance, Description("Occurs when Service Broker forwards a message."): Amended,
    Guid("{4c7716b7-86a3-4d5c-8789-9f2b413907b0}"), locale("MS\\0x409"),
    DisplayName("broker_forwarded_message_sent"): Amended]
class XeSqlPkg_broker_forwarded_message_sent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_forwarded_message_sent: XeSqlPkg_broker_forwarded_message_sent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_initiator;
	[WmiDataId(6), read] sint32 fragment_number;
	[WmiDataId(7), read] sint64 message_sequence;
	[WmiDataId(8), read] uint8 remaining_hop_count;
	[WmiDataId(9), read] uint32 time_to_live_sec;
	[WmiDataId(10), read] uint32 live_time_sec;
	[WmiDataId(11), read, Extension("Guid")] guid conversation_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string message_type_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string from_service_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string from_broker_name;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string to_service_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string to_broker_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string service_contract_name;
};
		
[dynamic: ToInstance, Description("Occurs when Service Broker drops a message that was intended to be forwarded."): Amended,
    Guid("{35fc3a3c-1882-49cb-8f36-af10abb21ad9}"), locale("MS\\0x409"),
    DisplayName("broker_forwarded_message_dropped"): Amended]
class XeSqlPkg_broker_forwarded_message_dropped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_forwarded_message_dropped: XeSqlPkg_broker_forwarded_message_dropped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint32 error_severity;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read] sint8  is_initiator;
	[WmiDataId(9), read] sint64 message_sequence;
	[WmiDataId(10), read] sint32 fragment_number;
	[WmiDataId(11), read] uint8 remaining_hop_count;
	[WmiDataId(12), read] uint32 time_to_live_sec;
	[WmiDataId(13), read] uint32 live_time_sec;
	[WmiDataId(14), read, Extension("Guid")] guid conversation_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string dropped_reason;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string from_service_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string from_broker_name;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string to_service_name;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string to_broker_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string message_type_name;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string service_contract_name;
};
		
[dynamic: ToInstance, Description("Occurs when Service Broker drops a message that was intended to be forwarded."): Amended,
    Guid("{716f09c4-1d91-4af1-8d65-b685fb05afca}"), locale("MS\\0x409"),
    DisplayName("broker_message_classify"): Amended]
class XeSqlPkg_broker_message_classify: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_message_classify: XeSqlPkg_broker_message_classify
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 delayed_error_number;
	[WmiDataId(6), read, 
				XEMapId(30),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Transport", 
					"Local" }
			] uint8 message_source;
	[WmiDataId(7), read] sint8  is_initiator;
	[WmiDataId(8), read, 
				XEMapId(29),
				ValueMap { 
					"1", 
					"2", 
					"3" },
				Values { 
					"Local", 
					"Remote", 
					"Delayed" }
			] uint8 route_type;
	[WmiDataId(9), read, Extension("Guid")] guid conversation_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string delayed_error;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string next_hop_broker_instance;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string next_hop_address;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string to_broker_instance;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string to_service_name;
};
		
[dynamic: ToInstance, Description("Occurs when an exception is encountered during the processing of transmission objects"): Amended,
    Guid("{678f6c82-bd0a-447c-ba22-182b7c24f67b}"), locale("MS\\0x409"),
    DisplayName("broker_transmission_exception"): Amended]
class XeSqlPkg_broker_transmission_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_transmission_exception: XeSqlPkg_broker_transmission_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint32 error_severity;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read] sint8  is_initiator;
	[WmiDataId(9), read, Extension("Guid")] guid conversation_id;
};
		
[dynamic: ToInstance, Description("Occurs when a Service Broker queue is disabled."): Amended,
    Guid("{802d00c5-37a3-47d1-b0d2-1d38dfa44d4a}"), locale("MS\\0x409"),
    DisplayName("broker_queue_disabled"): Amended]
class XeSqlPkg_broker_queue_disabled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_queue_disabled: XeSqlPkg_broker_queue_disabled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 queue_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs every time Service Broker receives an open or close connection request from either of the mirrored instances."): Amended,
    Guid("{19a973b4-ce7b-4274-9042-d77671c6ecf7}"), locale("MS\\0x409"),
    DisplayName("broker_mirrored_route_state_changed"): Amended]
class XeSqlPkg_broker_mirrored_route_state_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_mirrored_route_state_changed: XeSqlPkg_broker_mirrored_route_state_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(32),
				ValueMap { 
					"1", 
					"2", 
					"3" },
				Values { 
					"Operational", 
					"Operational with principal only", 
					"Not operational" }
			] uint8 mirrored_route_state;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string address_mirror;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string address_principal;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string error_message_mirror;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string error_message_prinicipal;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string mirroring_role_mirror;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string mirroring_role_principal;
};
		
[dynamic: ToInstance, Description("Occurs when Service Broker sends or receives a message acknowledgement."): Amended,
    Guid("{839ba147-249a-438b-b137-faa0dc1acaed}"), locale("MS\\0x409"),
    DisplayName("broker_remote_message_acknowledgement"): Amended]
class XeSqlPkg_broker_remote_message_acknowledgement: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_remote_message_acknowledgement: XeSqlPkg_broker_remote_message_acknowledgement
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(33),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"Message with Acknowledgement Sent", 
					"Acknowledgement Sent", 
					"Message with Acknowledgement Received", 
					"Acknowledgement Received" }
			] uint8 acknowledgement_type;
	[WmiDataId(6), read] sint8  is_initiator;
	[WmiDataId(7), read] sint32 fragment_number;
	[WmiDataId(8), read] sint32 acknowledgement_fragment_number;
	[WmiDataId(9), read] sint64 message_sequence;
	[WmiDataId(10), read] sint64 acknowlegment_message_sequence;
	[WmiDataId(11), read] sint8 priority;
	[WmiDataId(12), read] sint8  is_honor_broker_priority;
	[WmiDataId(13), read, Extension("Guid")] guid conversation_id;
};
		
[dynamic: ToInstance, Description("Occurs when a full-text crawl (population) is started. Use this event to monitor full-text crawl operations."): Amended,
    Guid("{b6689e91-1127-4d47-b629-dc45a4e495a6}"), locale("MS\\0x409"),
    DisplayName("full_text_crawl_started"): Amended]
class XeSqlPkg_full_text_crawl_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class full_text_crawl_started: XeSqlPkg_full_text_crawl_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(84),
				ValueMap { 
					"4", 
					"1", 
					"2", 
					"3", 
					"0" },
				Values { 
					"AUTOPROP", 
					"FULLCRAWL", 
					"INCREMENTALCRAWL", 
					"MANUALPROP", 
					"NONE" }
			] uint8 crawl_operation;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a full-text crawl (population) is stopped. Use this event to monitor full-text crawl operations."): Amended,
    Guid("{4a8e5d3f-da09-4226-a51c-afc876fb5ff5}"), locale("MS\\0x409"),
    DisplayName("full_text_crawl_stopped"): Amended]
class XeSqlPkg_full_text_crawl_stopped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class full_text_crawl_stopped: XeSqlPkg_full_text_crawl_stopped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a Service Broker message cannot be delivered. This can occur for several reasons, such as the target Service Broker is unreachable, the target queue is unavailable, the message is out of order, there are time-outs because of in-memory lists, or there is a failure to classify the message."): Amended,
    Guid("{0c651184-dbed-4226-a0e4-8853b8f602d3}"), locale("MS\\0x409"),
    DisplayName("broker_message_undeliverable"): Amended]
class XeSqlPkg_broker_message_undeliverable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_message_undeliverable: XeSqlPkg_broker_message_undeliverable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint32 error_severity;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read] sint32 acknowledgement_fragment_number;
	[WmiDataId(9), read] sint32 message_fragment_number;
	[WmiDataId(10), read] sint64 acknowledgement_sequence_number;
	[WmiDataId(11), read] sint64 message_sequence_number;
	[WmiDataId(12), read, 
				XEMapId(31),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Sequenced Message", 
					"Unsequenced Message" }
			] uint8 sequenced_message;
	[WmiDataId(13), read] sint8  is_initiator;
	[WmiDataId(14), read, Extension("Guid")] guid conversation_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string message_drop_reason;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string message_type_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string service_contract_name;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string from_service_name;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string from_broker_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string to_service_name;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string to_broker_name;
};
		
[dynamic: ToInstance, Description("Occurs when Service Broker receives a corrupted message."): Amended,
    Guid("{4e21046b-a71b-4efe-a847-1c5ce7598268}"), locale("MS\\0x409"),
    DisplayName("broker_corrupted_message"): Amended]
class XeSqlPkg_broker_corrupted_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_corrupted_message: XeSqlPkg_broker_corrupted_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint32 error_severity;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string corruption_description;
};
		
[dynamic: ToInstance, Description("Occurs when a Service Broker queue monitor starts an activation stored procedure, sends a QUEUE_ACTIVATION notification, or when an activation stored procedure exits."): Amended,
    Guid("{cfff4412-05af-4613-9342-323b668d8d6a}"), locale("MS\\0x409"),
    DisplayName("broker_activation"): Amended]
class XeSqlPkg_broker_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class broker_activation: XeSqlPkg_broker_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(26),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"Started", 
					"Ended", 
					"Aborted", 
					"Notified", 
					"Task Output", 
					"Failed to start" }
			] uint8 activation_state;
	[WmiDataId(6), read] sint32 active_task_count;
	[WmiDataId(7), read] uint64 cpu_time;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] sint32 queue_id;
	[WmiDataId(10), read] uint64 page_server_reads;
	[WmiDataId(11), read] uint64 physical_reads;
	[WmiDataId(12), read] uint64 logical_reads;
	[WmiDataId(13), read] uint64 writes;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string activation_message;
};
		
[dynamic: ToInstance, Description("Occurs when user tries to change some of the Service Broker options in Managed Instance."): Amended,
    Guid("{6FB95AE4-0F0B-405B-BB6E-0CD766843B28}"), locale("MS\\0x409"),
    DisplayName("alter_broker_managedinstance"): Amended]
class XeSqlPkg_alter_broker_managedinstance: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class alter_broker_managedinstance: XeSqlPkg_alter_broker_managedinstance
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 broker_option_id;
};
		
[dynamic: ToInstance, Description("Occurs when user issues a restore command on managed instance."): Amended,
    Guid("{54D8F5B4-C40B-455B-B755-065248C19D09}"), locale("MS\\0x409"),
    DisplayName("managed_database_restore_ddl_info"): Amended]
class XeSqlPkg_managed_database_restore_ddl_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class managed_database_restore_ddl_info: XeSqlPkg_managed_database_restore_ddl_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 value_option_mask;
	[WmiDataId(6), read] uint64 stats_mask;
	[WmiDataId(7), read] uint32 device_count;
	[WmiDataId(8), read] uint32 file_count;
	[WmiDataId(9), read] uint32 page_count;
	[WmiDataId(10), read] uint32 relocation_count;
	[WmiDataId(11), read] sint8  backend_session;
};
		
[dynamic: ToInstance, Description("Occurs during comilation when user issues a backup command on managed instance."): Amended,
    Guid("{0D5377AB-F76C-431E-A352-4DCDFB69E366}"), locale("MS\\0x409"),
    DisplayName("managed_database_backup_ddl_info"): Amended]
class XeSqlPkg_managed_database_backup_ddl_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class managed_database_backup_ddl_info: XeSqlPkg_managed_database_backup_ddl_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 value_option_mask;
	[WmiDataId(6), read] uint64 stats_mask;
	[WmiDataId(7), read] uint32 device_count;
	[WmiDataId(8), read] uint32 file_count;
	[WmiDataId(9), read] uint32 relocation_count;
	[WmiDataId(10), read] sint8  backend_session;
};
		
[dynamic: ToInstance, Description("Occurs during execution when user issues a backup command on managed instance."): Amended,
    Guid("{977A2DC3-E6E6-4E6F-A8B2-57CCFEAA0B88}"), locale("MS\\0x409"),
    DisplayName("managed_database_restore_execution_ddl_info"): Amended]
class XeSqlPkg_managed_database_restore_execution_ddl_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class managed_database_restore_execution_ddl_info: XeSqlPkg_managed_database_restore_execution_ddl_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 value_option_mask;
	[WmiDataId(6), read] uint64 stats_mask;
	[WmiDataId(7), read] uint32 device_count;
	[WmiDataId(8), read] uint32 file_count;
	[WmiDataId(9), read] uint32 page_count;
	[WmiDataId(10), read] uint32 relocation_count;
	[WmiDataId(11), read] sint8  backend_session;
	[WmiDataId(12), read] uint32 buffer_count;
	[WmiDataId(13), read] uint32 max_transfer_size;
	[WmiDataId(14), read] uint32 block_size;
	[WmiDataId(15), read] uint32 stats_interval;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Alter statement execution"): Amended,
    Guid("{059e8c58-78a9-46dd-b5ed-c366d7939f90}"), locale("MS\\0x409"),
    DisplayName("suppress_warnings"): Amended]
class XeSqlPkg_suppress_warnings: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class suppress_warnings: XeSqlPkg_suppress_warnings
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(36),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"CREATE DATABASE", 
					"DROP DATABASE", 
					"USE DATABASE", 
					"ALTER DATABASE" }
			] uint8 statement_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string user;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string client_address;
};
		
[dynamic: ToInstance, Description("Alter statement execution"): Amended,
    Guid("{3abd5b35-9264-464a-a2cf-f8cdc8da3a80}"), locale("MS\\0x409"),
    DisplayName("suppress_errors"): Amended]
class XeSqlPkg_suppress_errors: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class suppress_errors: XeSqlPkg_suppress_errors
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string user;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string client_address;
};
		
[dynamic: ToInstance, Description("Occurs when an object was altered by the ALTER statement. This event is raised two times for every ALTER operation. The event is raised when the operation begins and when the operation is either rolled back or committed. Add the nt_username or server_principal_name actions to this event to determine who altered the object."): Amended,
    Guid("{2704947d-94b0-413e-b545-3c27641e20e2}"), locale("MS\\0x409"),
    DisplayName("object_altered"): Amended]
class XeSqlPkg_object_altered: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class object_altered: XeSqlPkg_object_altered
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] sint32 related_object_id;
	[WmiDataId(10), read, 
				XEMapId(4),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Begin", 
					"Commit", 
					"Rollback" }
			] uint8 ddl_phase;
	[WmiDataId(11), read] sint64 transaction_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a query plan is removed from the plan cache and the historical statistics for the object are about to be destroyed."): Amended,
    Guid("{1c54e55d-c3f0-43e5-95f3-f21801aaaa59}"), locale("MS\\0x409"),
    DisplayName("query_cache_removal_statistics"): Amended]
class XeSqlPkg_query_cache_removal_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_cache_removal_statistics: XeSqlPkg_query_cache_removal_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 recompile_count;
	[WmiDataId(6), read, 
				XEMapId(21),
				ValueMap { 
					"1", 
					"2", 
					"3" },
				Values { 
					"Query from Stored Procedure or Batch", 
					"Stored Procedure", 
					"Trigger" }
			] uint8 compiled_object_type;
	[WmiDataId(7), read] sint32 compiled_object_id;
	[WmiDataId(8), read] sint32 begin_offset;
	[WmiDataId(9), read] sint32 end_offset;
	[WmiDataId(10), read, Extension("Variant")] object plan_handle;
	[WmiDataId(11), read, Extension("Variant")] object sql_handle;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string execution_statistics;
};
		
[dynamic: ToInstance, Description("Occurs when a statement-level recompilation is required by any kind of batch. This includes stored procedures, triggers, ad hoc batches and queries. Batches may be submitted through several interfaces, including sp_executesql, dynamic SQL, Prepare methods or Execute methods."): Amended,
    Guid("{1DB98BAA-CD00-4F62-B124-45B18AB6C02D}"), locale("MS\\0x409"),
    DisplayName("sql_statement_recompile"): Amended]
class XeSqlPkg_sql_statement_recompile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_statement_recompile: XeSqlPkg_sql_statement_recompile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(35),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24" },
				Values { 
					"Schema changed", 
					"Statistics changed", 
					"Deferred compile", 
					"Set option change", 
					"Temp table changed", 
					"Remote rowset changed", 
					"For browse permissions changed", 
					"Query notification environment changed", 
					"PartitionView changed", 
					"Cursor options changed", 
					"Option (recompile) requested", 
					"Parameterized plan flushed", 
					"Test plan linearization", 
					"Plan affecting database version changed", 
					"Query Store plan forcing policy changed", 
					"Query Store plan forcing failed", 
					"Query Store missing the plan", 
					"Interleaved execution required recompilation", 
					"Not a recompile", 
					"Multi-plan statement required compilation of alternative query plan", 
					"Query Store hints changed", 
					"Query Store hints application failed", 
					"Query Store recompiling to capture cursor query", 
					"Recompiling to clean up the multiplan dispatcher plan" }
			] uint8 recompile_cause;
	[WmiDataId(6), read] uint32 source_database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(9), read] uint16 nest_level;
	[WmiDataId(10), read] sint32 line_number;
	[WmiDataId(11), read] sint32 offset;
	[WmiDataId(12), read] sint32 offset_end;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a compilation happens."): Amended,
    Guid("{9426223A-7BC3-428C-A66C-56C36A929000}"), locale("MS\\0x409"),
    DisplayName("sql_statement_post_compile"): Amended]
class XeSqlPkg_sql_statement_post_compile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_statement_post_compile: XeSqlPkg_sql_statement_post_compile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_recompile;
	[WmiDataId(6), read] uint64 cpu_time;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read, 
				XEMapId(35),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24" },
				Values { 
					"Schema changed", 
					"Statistics changed", 
					"Deferred compile", 
					"Set option change", 
					"Temp table changed", 
					"Remote rowset changed", 
					"For browse permissions changed", 
					"Query notification environment changed", 
					"PartitionView changed", 
					"Cursor options changed", 
					"Option (recompile) requested", 
					"Parameterized plan flushed", 
					"Test plan linearization", 
					"Plan affecting database version changed", 
					"Query Store plan forcing policy changed", 
					"Query Store plan forcing failed", 
					"Query Store missing the plan", 
					"Interleaved execution required recompilation", 
					"Not a recompile", 
					"Multi-plan statement required compilation of alternative query plan", 
					"Query Store hints changed", 
					"Query Store hints application failed", 
					"Query Store recompiling to capture cursor query", 
					"Recompiling to clean up the multiplan dispatcher plan" }
			] uint8 recompile_cause;
	[WmiDataId(9), read] sint32 line_number;
	[WmiDataId(10), read] sint32 offset;
	[WmiDataId(11), read] sint32 offset_end;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Occurs when a BEGIN TRANSACTION request that was sent from a client application through the transaction management interface has started."): Amended,
    Guid("{276CD01C-6FC6-4B2C-A248-6CCD4B497B22}"), locale("MS\\0x409"),
    DisplayName("begin_tran_starting"): Amended]
class XeSqlPkg_begin_tran_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class begin_tran_starting: XeSqlPkg_begin_tran_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a BEGIN TRANSACTION request that was sent from a client application through the transaction management interface has completed."): Amended,
    Guid("{8EBDB52E-FC96-4489-B76B-A1C85DB1E0DC}"), locale("MS\\0x409"),
    DisplayName("begin_tran_completed"): Amended]
class XeSqlPkg_begin_tran_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class begin_tran_completed: XeSqlPkg_begin_tran_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint8  success;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a PROMOTE TRANSACTION request that was sent from a client application through the transaction management interface has started."): Amended,
    Guid("{D3613831-3B27-4BA6-8B9F-CA951CD0900B}"), locale("MS\\0x409"),
    DisplayName("promote_tran_starting"): Amended]
class XeSqlPkg_promote_tran_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class promote_tran_starting: XeSqlPkg_promote_tran_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a PROMOTE TRANSACTION request that was sent from a client application through the transaction management interface has completed."): Amended,
    Guid("{9433EBA8-FC22-4A78-A900-0C02D3FB4214}"), locale("MS\\0x409"),
    DisplayName("promote_tran_completed"): Amended]
class XeSqlPkg_promote_tran_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class promote_tran_completed: XeSqlPkg_promote_tran_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint8  success;
	[WmiDataId(7), read, Extension("Variant")] object dtc_trasaction_token;
};
		
[dynamic: ToInstance, Description("Occurs when a COMMIT TRANSACTION request that was sent from a client application through the transaction management interface has started."): Amended,
    Guid("{1CD1E04E-3292-42EF-B1D7-0AB213C0FD08}"), locale("MS\\0x409"),
    DisplayName("commit_tran_starting"): Amended]
class XeSqlPkg_commit_tran_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class commit_tran_starting: XeSqlPkg_commit_tran_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  new_transaction_started;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a COMMIT TRANSACTION request that was sent from a client application through the transaction management interface has completed."): Amended,
    Guid("{A4C25B19-7A12-4CE7-9CA1-B9ED93A3EFEC}"), locale("MS\\0x409"),
    DisplayName("commit_tran_completed"): Amended]
class XeSqlPkg_commit_tran_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class commit_tran_completed: XeSqlPkg_commit_tran_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint8  success;
	[WmiDataId(7), read] sint8  new_transaction_started;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a ROLLBACK TRANSACTION request that was sent from a client application through the transaction management interface has started."): Amended,
    Guid("{718B6BF1-EBF9-4CC4-A242-F2E219F38D73}"), locale("MS\\0x409"),
    DisplayName("rollback_tran_starting"): Amended]
class XeSqlPkg_rollback_tran_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rollback_tran_starting: XeSqlPkg_rollback_tran_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  new_transaction_started;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a ROLLBACK TRANSACTION request that was sent from a client application through the transaction management interface has completed."): Amended,
    Guid("{68A08FB1-141A-44F0-A645-2CC882F3DC1E}"), locale("MS\\0x409"),
    DisplayName("rollback_tran_completed"): Amended]
class XeSqlPkg_rollback_tran_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rollback_tran_completed: XeSqlPkg_rollback_tran_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint8  success;
	[WmiDataId(7), read] sint8  new_transaction_started;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a SAVE TRANSACTION request that was sent from a client application through the transaction management interface has started."): Amended,
    Guid("{0540DBC1-C99F-4744-ADA5-A59ACB9498D9}"), locale("MS\\0x409"),
    DisplayName("save_tran_starting"): Amended]
class XeSqlPkg_save_tran_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class save_tran_starting: XeSqlPkg_save_tran_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a SAVE TRANSACTION request that was sent from a client application through the transaction management interface has completed."): Amended,
    Guid("{607BA50B-50A0-41AF-A5AF-466BC3B247B3}"), locale("MS\\0x409"),
    DisplayName("save_tran_completed"): Amended]
class XeSqlPkg_save_tran_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class save_tran_completed: XeSqlPkg_save_tran_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint8  success;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a background job has ended abnormally."): Amended,
    Guid("{d6784891-ef16-4845-a55e-ee798569d80c}"), locale("MS\\0x409"),
    DisplayName("background_job_error"): Amended]
class XeSqlPkg_background_job_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class background_job_error: XeSqlPkg_background_job_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read, 
				XEMapId(14),
				ValueMap { 
					"1", 
					"2", 
					"3" },
				Values { 
					"Give up", 
					"Queue full", 
					"Exception" }
			] uint8 job_failure_type;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_severity;
	[WmiDataId(11), read] sint32 error_state;
	[WmiDataId(12), read] sint32 job_id;
	[WmiDataId(13), read, 
				XEMapId(79),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"Invalid", 
					"StatsUpdate" }
			] uint8 job_type;
	[WmiDataId(14), read] uint64 duration;
	[WmiDataId(15), read] uint16 retries;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a connection is made to an OLE DB provider. This event collects properties from the remote provider from several property sets, including the following: DBPROPSET_DATASOURCEINFO, SQLPROPSET_OPTHINTS, DBPROPSET_SQLSERVERDATASOURCEINFO (SQL Server only), DBPROPSET_SQLSERVERDBINIT (SQL Server only), DBPROPSET_ROWSET, and the IDBInfo interface. Use this event to analyze and troubleshoot OLE DB provider calls in remote queries."): Amended,
    Guid("{e7cf4d16-2b3c-495a-bccb-d77e8bc18bc1}"), locale("MS\\0x409"),
    DisplayName("oledb_provider_information"): Amended]
class XeSqlPkg_oledb_provider_information: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oledb_provider_information: XeSqlPkg_oledb_provider_information
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string linked_server_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string provider_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string properties;
};
		
[dynamic: ToInstance, Description("Occurs when a request to load an assembly is executed. Use this event to troubleshoot queries that are running common language runtime (CLR) code to monitor server, database or user information that is related to loading the assembly."): Amended,
    Guid("{bdcdc398-0770-4e4f-b88e-1b0a107713dc}"), locale("MS\\0x409"),
    DisplayName("assembly_load"): Amended]
class XeSqlPkg_assembly_load: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class assembly_load: XeSqlPkg_assembly_load
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 assembly_id;
	[WmiDataId(6), read] sint8  success;
	[WmiDataId(7), read] sint32 hresult;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string assembly_name;
};
		
[dynamic: ToInstance, Description("Occurs when an XQuery expression is compiled."): Amended,
    Guid("{a73129bb-13b6-418d-b228-72c31ace18f4}"), locale("MS\\0x409"),
    DisplayName("xquery_static_type"): Amended]
class XeSqlPkg_xquery_static_type: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xquery_static_type: XeSqlPkg_xquery_static_type
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 line_number;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string inferred_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string oledb_method;
};
		
[dynamic: ToInstance, Description("Occurs when an operation is performed that is related to query notification subscriptions. Use this event to monitor when subscriptions are created or removed, when a subscription produces a notification message, and when errors occur while producing a notification message or deleting a subscription."): Amended,
    Guid("{47945686-7ae5-4db2-807e-1ef936086e8a}"), locale("MS\\0x409"),
    DisplayName("qn_subscription"): Amended]
class XeSqlPkg_qn_subscription: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class qn_subscription: XeSqlPkg_qn_subscription
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(23),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9" },
				Values { 
					"Subscription Registered", 
					"Subscription Rewound", 
					"Notification Sent", 
					"Notification Failed - Broker Error", 
					"Notification Failed - Non-Broker Error", 
					"Broker Error Intercepted", 
					"Subscription Deletion Attempt", 
					"Subscription Deletion Failed", 
					"Subscription Deleted" }
			] uint8 activity;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string query_notification_xml_information;
};
		
[dynamic: ToInstance, Description("Occurs when an operation is performed that is related to the parameter tables that are used in query notifications. Use this event to monitor operations that are related to creating and maintaining reference counts, and dropping the internal tables that store parameter information. This event also tracks when the usage count is reset on a parameter table."): Amended,
    Guid("{810c3d2f-11ab-4182-8c6f-c6ec3aba77ad}"), locale("MS\\0x409"),
    DisplayName("qn_parameter_table"): Amended]
class XeSqlPkg_qn_parameter_table: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class qn_parameter_table: XeSqlPkg_qn_parameter_table
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(24),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11" },
				Values { 
					"Table Created", 
					"Table Drop Attempt", 
					"Table Drop Attempt Failed", 
					"Table Dropped", 
					"Table Pinned", 
					"Table Unpinned", 
					"Subscription Count Incremented", 
					"Subscription Count Decremented", 
					"Usage Counter Reset", 
					"Subscription Cleanup Task Started", 
					"Subscription Cleanup Task Finished" }
			] uint8 activity;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string query_notification_xml_information;
};
		
[dynamic: ToInstance, Description("Occurs when operations are performed related to the query templates used by the Database Engine to share information about a query used for notification. Use this event to monitor when a query template is created, used or destroyed"): Amended,
    Guid("{14e4d410-c079-4906-8b3b-516f7832a366}"), locale("MS\\0x409"),
    DisplayName("qn_template"): Amended]
class XeSqlPkg_qn_template: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class qn_template: XeSqlPkg_qn_template
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(25),
				ValueMap { 
					"1", 
					"2", 
					"3" },
				Values { 
					"Template Created", 
					"Template Matched", 
					"Template Dropped" }
			] uint8 activity;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string query_notification_xml_information;
};
		
[dynamic: ToInstance, Description("Occurs when background activity to support query notifications is performed. Use this event to track subscription time-outs, pending subscription notification messages, and parameter table destruction."): Amended,
    Guid("{67a896ea-a7d6-411a-a122-3cc6014ca2fd}"), locale("MS\\0x409"),
    DisplayName("qn_dynamics"): Amended]
class XeSqlPkg_qn_dynamics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class qn_dynamics: XeSqlPkg_qn_dynamics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(22),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"Clock Run Started", 
					"Clock Run Finished", 
					"Master Cleanup Task Started", 
					"Master Cleanup Task Finished", 
					"Master Cleanup Task Skipped" }
			] uint8 activity;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string query_notification_xml_information;
};
		
[dynamic: ToInstance, Description("Database created"): Amended,
    Guid("{EF314B3C-F77B-4503-8CC1-3F65A1F6FBF8}"), locale("MS\\0x409"),
    DisplayName("database_created"): Amended]
class XeSqlPkg_database_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_created: XeSqlPkg_database_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Database dropped"): Amended,
    Guid("{C462B974-4EE4-4676-ACAB-BC74E4029018}"), locale("MS\\0x409"),
    DisplayName("database_dropped"): Amended]
class XeSqlPkg_database_dropped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_dropped: XeSqlPkg_database_dropped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("HADRON DDL Alter AG failover state"): Amended,
    Guid("{5d03f8e5-1cb6-4b75-bb85-4a6edd7c579c}"), locale("MS\\0x409"),
    DisplayName("hadr_ddl_failover_execution_state"): Amended]
class XeSqlPkg_hadr_ddl_failover_execution_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ddl_failover_execution_state: XeSqlPkg_hadr_ddl_failover_execution_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(39),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"execution_begin", 
					"execution_succeed", 
					"execution_end" }
			] uint8 current_state;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string ag_name;
};
		
[dynamic: ToInstance, Description("Determines if all of the preconditions have been met for routing to a secondary."): Amended,
    Guid("{0BD1A0F3-63EA-4A15-B187-723650E6B46D}"), locale("MS\\0x409"),
    DisplayName("hadr_read_only_route_preconditions"): Amended]
class XeSqlPkg_hadr_read_only_route_preconditions: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_read_only_route_preconditions: XeSqlPkg_hadr_read_only_route_preconditions
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  InLogin;
	[WmiDataId(6), read] sint8  ConnectionReset;
	[WmiDataId(7), read] sint8  VIPOriginated;
	[WmiDataId(8), read] sint8  ReadOnlyIntent;
};
		
[dynamic: ToInstance, Description("Occurs when a LOGON trigger or a Resource Governor classifier function begins execution."): Amended,
    Guid("{6269d75e-e474-484e-977d-3a983b424db9}"), locale("MS\\0x409"),
    DisplayName("preconnect_starting"): Amended]
class XeSqlPkg_preconnect_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class preconnect_starting: XeSqlPkg_preconnect_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(17),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"RG Classifier UDF", 
					"Logon Trigger" }
			] uint8 preconnect_type;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a LOGON trigger or a Resource Governor classifier function finishes execution."): Amended,
    Guid("{cb1c7072-fa84-4cc3-95be-81b357754b0c}"), locale("MS\\0x409"),
    DisplayName("preconnect_completed"): Amended]
class XeSqlPkg_preconnect_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class preconnect_completed: XeSqlPkg_preconnect_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(17),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"RG Classifier UDF", 
					"Logon Trigger" }
			] uint8 preconnect_type;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read, 
				XEMapId(83),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(9), read] uint64 duration;
	[WmiDataId(10), read] uint64 cpu_time;
	[WmiDataId(11), read] uint64 page_server_reads;
	[WmiDataId(12), read] uint64 physical_reads;
	[WmiDataId(13), read] uint64 logical_reads;
	[WmiDataId(14), read] uint64 writes;
	[WmiDataId(15), read] sint32 error_number;
	[WmiDataId(16), read] sint32 error_state;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string workload_group_name;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a plan is created for a query or batch that includes a plan guide. Use this event to determine when plan guides are successfully applied."): Amended,
    Guid("{f41e75b1-52b6-4dc1-b29e-037b71c6416e}"), locale("MS\\0x409"),
    DisplayName("plan_guide_successful"): Amended]
class XeSqlPkg_plan_guide_successful: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class plan_guide_successful: XeSqlPkg_plan_guide_successful
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string plan_guide_name;
};
		
[dynamic: ToInstance, Description("Occurs when an execution plan is created for a query or batch without using the provided plan guide. Use this event to identify queries and batches with invalid plan guides. Use the sys.fn_validate_plan_guide function to detect errors in the plan guide."): Amended,
    Guid("{dbbfc08e-5f0a-4cb8-9aea-9482fa478fab}"), locale("MS\\0x409"),
    DisplayName("plan_guide_unsuccessful"): Amended]
class XeSqlPkg_plan_guide_unsuccessful: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class plan_guide_unsuccessful: XeSqlPkg_plan_guide_unsuccessful
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string plan_guide_name;
};
		
[dynamic: ToInstance, Description("Occurs when a Transact-SQL batch is executed that was created for a specific situation and was not in the query cache."): Amended,
    Guid("{265cb7f1-9653-47ad-b67a-c1d7a4b6b939}"), locale("MS\\0x409"),
    DisplayName("uncached_sql_batch_statistics"): Amended]
class XeSqlPkg_uncached_sql_batch_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class uncached_sql_batch_statistics: XeSqlPkg_uncached_sql_batch_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Occurs when a look up into the columnstore object pool cannot find the object in the pool."): Amended,
    Guid("{7b1efe7c-d5cf-4017-a66b-c4b3fd1c4732}"), locale("MS\\0x409"),
    DisplayName("column_store_object_pool_miss"): Amended]
class XeSqlPkg_column_store_object_pool_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_object_pool_miss: XeSqlPkg_column_store_object_pool_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(56),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint32 object_type;
	[WmiDataId(6), read] uint64 database_id;
	[WmiDataId(7), read] uint64 hobt_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint64 object_id;
};
		
[dynamic: ToInstance, Description("Occurs when a look up into the columnstore object pool finds the object in the pool."): Amended,
    Guid("{2476cde4-44b5-4d05-ad9b-2b7823417d7b}"), locale("MS\\0x409"),
    DisplayName("column_store_object_pool_hit"): Amended]
class XeSqlPkg_column_store_object_pool_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_object_pool_hit: XeSqlPkg_column_store_object_pool_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(56),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint32 object_type;
	[WmiDataId(6), read] uint64 database_id;
	[WmiDataId(7), read] uint64 hobt_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint64 object_id;
};
		
[dynamic: ToInstance, Description("Occurs when clustered index on the table was rebuilt. This event is raised three times for ALTER index rebuild operation on CCSI. The event is raised when the operation takes lock on index rebuild resource, when lock is taken on the table and when S lock on the table is upgraded to SCH_M lock to switch indexes in metadata."): Amended,
    Guid("{637184bd-cb4c-4eb6-bdca-3f1b9e87d269}"), locale("MS\\0x409"),
    DisplayName("clustered_columnstore_index_rebuild"): Amended]
class XeSqlPkg_clustered_columnstore_index_rebuild: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class clustered_columnstore_index_rebuild: XeSqlPkg_clustered_columnstore_index_rebuild
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(44),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"LOCK_INDEX_REBUILD_RESOURCE", 
					"LOCK_TABLE", 
					"UPGRADE_TO_SCHEMA_MOD_LOCK", 
					"SCHEMA_MOD_LOCK" }
			] uint8 rebuild_phase;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when columnstore index on the table was rebuilt. This event is raised three times for ALTER index rebuild operation on CCSI and once for NCCSI. For CCSI the event is raised when the operation takes lock on index rebuild resource, when lock is taken on the table, and when S lock on the table is upgraded to SCH_M lock to switch indexes in metadata. For NCCSI it is raised when SCH_M lock is taken on the table."): Amended,
    Guid("{4C0A5E23-E2BC-4E54-9D7E-5FD6E3BDF4ED}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_rebuild"): Amended]
class XeSqlPkg_columnstore_index_rebuild: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_rebuild: XeSqlPkg_columnstore_index_rebuild
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(44),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"LOCK_INDEX_REBUILD_RESOURCE", 
					"LOCK_TABLE", 
					"UPGRADE_TO_SCHEMA_MOD_LOCK", 
					"SCHEMA_MOD_LOCK" }
			] uint8 rebuild_phase;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] sint8  is_clustered_columnstore;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Tuple mover exclusion lock waits."): Amended,
    Guid("{B201E33B-B231-4CF3-B529-A6BDD4FA53D8}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuplemover_exclusion_lock_waits"): Amended]
class XeSqlPkg_columnstore_tuplemover_exclusion_lock_waits: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tuplemover_exclusion_lock_waits: XeSqlPkg_columnstore_tuplemover_exclusion_lock_waits
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 wait_time_ms;
};
		
[dynamic: ToInstance, Description("Tuple mover exclusion lock waits."): Amended,
    Guid("{B201E33B-B231-4CF3-B529-A6BDD4FA53D8}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuplemover_exclusion_lock_waits"): Amended]
class XeSqlPkg_columnstore_tuplemover_exclusion_lock_waits: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuplemover_exclusion_lock_waits: XeSqlPkg_columnstore_tuplemover_exclusion_lock_waits
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint32 wait_time_ms;
};
		
[dynamic: ToInstance, Description("Garbage cleanup of NCI on CCI during first NCI creation."): Amended,
    Guid("{87D5865B-DD8D-4EA5-AB50-EFFC361C112F}"), locale("MS\\0x409"),
    DisplayName("nci_on_cci_locator_mapping_drop_processed"): Amended]
class XeSqlPkg_nci_on_cci_locator_mapping_drop_processed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class nci_on_cci_locator_mapping_drop_processed: XeSqlPkg_nci_on_cci_locator_mapping_drop_processed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Garbage cleanup of NCI on CCI during first NCI creation."): Amended,
    Guid("{87D5865B-DD8D-4EA5-AB50-EFFC361C112F}"), locale("MS\\0x409"),
    DisplayName("nci_on_cci_locator_mapping_drop_processed"): Amended]
class XeSqlPkg_nci_on_cci_locator_mapping_drop_processed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class nci_on_cci_locator_mapping_drop_processed: XeSqlPkg_nci_on_cci_locator_mapping_drop_processed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
};
		
[dynamic: ToInstance, Description("Find and kill the background tuple mover task if it blocks the drop."): Amended,
    Guid("{cdf254a4-0487-4104-93df-3547f6d0797c}"), locale("MS\\0x409"),
    DisplayName("find_and_kill_tm_blocking_table_drop"): Amended]
class XeSqlPkg_find_and_kill_tm_blocking_table_drop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class find_and_kill_tm_blocking_table_drop: XeSqlPkg_find_and_kill_tm_blocking_table_drop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] sint8  is_truncate;
};
		
[dynamic: ToInstance, Description("Occurs when an uncontained usage is detected during the compilation of a statement."): Amended,
    Guid("{6D2A7093-98D7-4223-848F-10C693A3F004}"), locale("MS\\0x409"),
    DisplayName("database_uncontained_usage"): Amended]
class XeSqlPkg_database_uncontained_usage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_uncontained_usage: XeSqlPkg_database_uncontained_usage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 major_id;
	[WmiDataId(6), read] sint32 statement_line_number;
	[WmiDataId(7), read] sint32 statement_offset_begin;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string statement_type;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string statement_info;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string feature_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string feature_type_name;
};
		
[dynamic: ToInstance, Description("authentication performance statistics: login function"): Amended,
    Guid("{0442953b-25f9-4d67-a497-159468f42824}"), locale("MS\\0x409"),
    DisplayName("security_authentication_perf_login"): Amended]
class XeSqlPkg_security_authentication_perf_login: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_authentication_perf_login: XeSqlPkg_security_authentication_perf_login
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 login_duration;
	[WmiDataId(6), read] sint8  is_sql_authentication;
};
		
[dynamic: ToInstance, Description("authentication performance statistics: find login function"): Amended,
    Guid("{350b0800-ff7d-472d-af4b-a118a6e1940c}"), locale("MS\\0x409"),
    DisplayName("security_authentication_perf_find_login"): Amended]
class XeSqlPkg_security_authentication_perf_find_login: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_authentication_perf_find_login: XeSqlPkg_security_authentication_perf_find_login
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 find_login_duration;
	[WmiDataId(6), read] sint8  is_sql_authentication;
};
		
[dynamic: ToInstance, Description("authentication performance statistics: interrogate login function"): Amended,
    Guid("{31c7c332-64dd-49a3-b1c3-97c9f850a295}"), locale("MS\\0x409"),
    DisplayName("security_authentication_perf_interrogate_login"): Amended]
class XeSqlPkg_security_authentication_perf_interrogate_login: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_authentication_perf_interrogate_login: XeSqlPkg_security_authentication_perf_interrogate_login
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 interrogate_login_duration_ms;
	[WmiDataId(6), read] uint64 ssl_duration_ms;
	[WmiDataId(7), read] uint64 query_attributes_duration_ms;
	[WmiDataId(8), read] uint64 impersonate_token_duration_ms;
	[WmiDataId(9), read] uint64 lookup_sid_duration_ms;
	[WmiDataId(10), read] uint64 lookup_name_duration_ms;
	[WmiDataId(11), read] uint64 user_instance_duration_ms;
};
		
[dynamic: ToInstance, Description("authentication performance statistics: create login token"): Amended,
    Guid("{4262b419-175d-4c09-9a79-46256ce9ea16}"), locale("MS\\0x409"),
    DisplayName("security_authentication_perf_create_logintoken"): Amended]
class XeSqlPkg_security_authentication_perf_create_logintoken: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_authentication_perf_create_logintoken: XeSqlPkg_security_authentication_perf_create_logintoken
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 create_logintoken_duration;
	[WmiDataId(6), read] sint8  is_sql_authentication;
	[WmiDataId(7), read] sint8  is_cache_hit;
	[WmiDataId(8), read] sint8  is_db_auth;
	[WmiDataId(9), read] sint8  is_public;
};
		
[dynamic: ToInstance, Description("Security Token Permission Caches have been invalidated by incrementing timestamp for the database."): Amended,
    Guid("{24AD3DE8-6B49-11DE-8FCE-200556D89593}"), locale("MS\\0x409"),
    DisplayName("security_cache_database_timestamp_increment"): Amended]
class XeSqlPkg_security_cache_database_timestamp_increment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_cache_database_timestamp_increment: XeSqlPkg_security_cache_database_timestamp_increment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Security Cache Object Permissions Cache has removed an object."): Amended,
    Guid("{76B2E6C4-6B49-11DE-82BB-7D0856D89593}"), locale("MS\\0x409"),
    DisplayName("security_cache_database_object_removal"): Amended]
class XeSqlPkg_security_cache_database_object_removal: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_cache_database_object_removal: XeSqlPkg_security_cache_database_object_removal
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 securable_class;
	[WmiDataId(7), read] uint32 securable_id;
};
		
[dynamic: ToInstance, Description("All entries in Security Cache are removed."): Amended,
    Guid("{329F4CA0-6B4B-11DE-94BE-E91A56D89593}"), locale("MS\\0x409"),
    DisplayName("security_cache_database_cleanup"): Amended]
class XeSqlPkg_security_cache_database_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_cache_database_cleanup: XeSqlPkg_security_cache_database_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Security Cache Object Permissions Cache has inserted an object."): Amended,
    Guid("{C76AD79A-97FC-11DE-B854-585355D89593}"), locale("MS\\0x409"),
    DisplayName("security_cache_database_object_insert"): Amended]
class XeSqlPkg_security_cache_database_object_insert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_cache_database_object_insert: XeSqlPkg_security_cache_database_object_insert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 securable_class;
	[WmiDataId(7), read] uint32 securable_id;
};
		
[dynamic: ToInstance, Description("Security Cache ring buffer telemetry."): Amended,
    Guid("{48F58903-9DB0-4A62-9E91-3FCD25220388}"), locale("MS\\0x409"),
    DisplayName("security_cache_ring_buffer"): Amended]
class XeSqlPkg_security_cache_ring_buffer: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_cache_ring_buffer: XeSqlPkg_security_cache_ring_buffer
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tokenPermUserStoreMemory;
	[WmiDataId(6), read] uint64 acrUserStoreMemory;
	[WmiDataId(7), read] uint64 secCtxtTokenEntries;
	[WmiDataId(8), read] uint64 secCtxtTokenInserted;
	[WmiDataId(9), read] uint64 secCtxtTokenRemoved;
	[WmiDataId(10), read] uint64 loginTokenEntries;
	[WmiDataId(11), read] uint64 loginTokenInserted;
	[WmiDataId(12), read] uint64 loginTokenRemoved;
	[WmiDataId(13), read] uint64 userTokenEntries;
	[WmiDataId(14), read] uint64 userTokenInserted;
	[WmiDataId(15), read] uint64 userTokenRemoved;
	[WmiDataId(16), read] uint64 tokenPermEntries;
	[WmiDataId(17), read] uint64 tokenPermInserted;
	[WmiDataId(18), read] uint64 tokenPermRemoved;
	[WmiDataId(19), read] uint64 tokenAuditEntries;
	[WmiDataId(20), read] uint64 tokenAuditInserted;
	[WmiDataId(21), read] uint64 tokenAuditRemoved;
	[WmiDataId(22), read] uint64 secCtxtACRUserStoreTotalStores;
	[WmiDataId(23), read] uint64 secCtxtACRUserStoreTotalEntries;
	[WmiDataId(24), read] uint64 secCtxtACRUserStoreMaxEntries;
	[WmiDataId(25), read] uint64 acrUserStoreTotalStores;
	[WmiDataId(26), read] uint64 acrUserStoreTotalEntries;
	[WmiDataId(27), read] uint64 acrUserStoreMaxEntries;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string secCtxtACRUserStoreMaxEntriesStoreName;
	[WmiDataId(29), read, StringTermination("NullTerminated"), Format("w")] string acrUserStoreMaxEntriesStoreName;
};
		
[dynamic: ToInstance, Description("When an Access Check Result cache store is created."): Amended,
    Guid("{F3D0C199-97D5-4736-8DA7-6054417FDEDD}"), locale("MS\\0x409"),
    DisplayName("create_acr_cache_store"): Amended]
class XeSqlPkg_create_acr_cache_store: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class create_acr_cache_store: XeSqlPkg_create_acr_cache_store
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 bucket_count;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string store_name;
};
		
[dynamic: ToInstance, Description("When a security context token is deleted."): Amended,
    Guid("{4AD84A0A-9E0D-4AE6-8D1B-79CD710A9D5A}"), locale("MS\\0x409"),
    DisplayName("security_context_token_cleanup"): Amended]
class XeSqlPkg_security_context_token_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_context_token_cleanup: XeSqlPkg_security_context_token_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 login_id;
};
		
[dynamic: ToInstance, Description("When a user token is deleted."): Amended,
    Guid("{2E30531A-2C14-4BCD-8176-F0D294C39D8A}"), locale("MS\\0x409"),
    DisplayName("user_token_cleanup"): Amended]
class XeSqlPkg_user_token_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class user_token_cleanup: XeSqlPkg_user_token_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 user_id;
};
		
[dynamic: ToInstance, Description("Successfully retrieved a user token from the cache."): Amended,
    Guid("{FB7EE091-4F3F-4BFB-8386-D638476D63D7}"), locale("MS\\0x409"),
    DisplayName("user_token_cache_hit"): Amended]
class XeSqlPkg_user_token_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class user_token_cache_hit: XeSqlPkg_user_token_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 user_id;
};
		
[dynamic: ToInstance, Description("When unable to retrieve a user token from the cache."): Amended,
    Guid("{B3E1CD45-82F7-4C1C-B5F8-F82480652A93}"), locale("MS\\0x409"),
    DisplayName("user_token_cache_miss"): Amended]
class XeSqlPkg_user_token_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class user_token_cache_miss: XeSqlPkg_user_token_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 login_id;
	[WmiDataId(7), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Recreate a login token and cache it(for existing sessions) after the security token caches have been invalidated."): Amended,
    Guid("{3D7287BD-3FF6-4E8B-9E9A-737EAC214DD8}"), locale("MS\\0x409"),
    DisplayName("security_cache_recreate_login_token"): Amended]
class XeSqlPkg_security_cache_recreate_login_token: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_cache_recreate_login_token: XeSqlPkg_security_cache_recreate_login_token
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 result;
	[WmiDataId(7), read] uint32 xodbc_lookup_state;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string authentication_type;
};
		
[dynamic: ToInstance, Description("Emit an xevent when a call to external governance authorization engine is made."): Amended,
    Guid("{C96E4734-761F-45D3-B56C-B0B11E0E27B8}"), locale("MS\\0x409"),
    DisplayName("external_governance_call_to_authorization_engine"): Amended]
class XeSqlPkg_external_governance_call_to_authorization_engine: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_governance_call_to_authorization_engine: XeSqlPkg_external_governance_call_to_authorization_engine
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 external_governance_decision;
	[WmiDataId(7), read] sint32 data_action;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
};
		
[dynamic: ToInstance, Description("Occurs when a memory dump of the process is requested."): Amended,
    Guid("{b22c6f25-9c92-4651-bca1-b44f17de754f}"), locale("MS\\0x409"),
    DisplayName("stack_trace"): Amended]
class XeSqlPkg_stack_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stack_trace: XeSqlPkg_stack_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(137),
				BitMap { 
					"1024", 
					"16", 
					"2", 
					"2048", 
					"128", 
					"4", 
					"8192", 
					"8", 
					"1", 
					"64", 
					"512", 
					"256", 
					"4096", 
					"32" },
				BitValues { 
					"CriticalClrDump", 
					"ExternalDebugger", 
					"Frames", 
					"LocalDumpOnly", 
					"MiniDumpAllThreads", 
					"Modules", 
					"NonCriticalAzureDump", 
					"Registers", 
					"ShortStack", 
					"SkipOwnEC", 
					"SkipPssDump", 
					"SystemInitiatedDump", 
					"UserInitiatedDump", 
					"WatsonReporting" }
			] uint32 dump_options;
	[WmiDataId(6), read, 
				XEMapId(87),
				ValueMap { 
					"0", 
					"260", 
					"257", 
					"259", 
					"263", 
					"256", 
					"261", 
					"264", 
					"265", 
					"258", 
					"262" },
				Values { 
					"CONTEXT", 
					"DATABASE_CORRUPTION", 
					"DEADLOCKED_SCHEDS", 
					"NON_YIELDING_IOCP", 
					"NON_YIELDING_RM", 
					"NON_YIELDING_SCHED", 
					"SPL_BACKOFF", 
					"STUCK_DISPATCHER", 
					"STUCK_SP_SERVER_DIAG", 
					"UNRESOLVED_DEADLOCK", 
					"WS_TRIMMED" }
			] uint32 bucket_hint;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Occurs when a memory dump of the process is requested."): Amended,
    Guid("{b22c6f25-9c92-4651-bca1-b44f17de754f}"), locale("MS\\0x409"),
    DisplayName("stack_trace"): Amended]
class XeSqlPkg_stack_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class stack_trace: XeSqlPkg_stack_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(137),
				BitMap { 
					"1024", 
					"16", 
					"2", 
					"2048", 
					"128", 
					"4", 
					"8192", 
					"8", 
					"1", 
					"64", 
					"512", 
					"256", 
					"4096", 
					"32" },
				BitValues { 
					"CriticalClrDump", 
					"ExternalDebugger", 
					"Frames", 
					"LocalDumpOnly", 
					"MiniDumpAllThreads", 
					"Modules", 
					"NonCriticalAzureDump", 
					"Registers", 
					"ShortStack", 
					"SkipOwnEC", 
					"SkipPssDump", 
					"SystemInitiatedDump", 
					"UserInitiatedDump", 
					"WatsonReporting" }
			] uint32 dump_options;
	[WmiDataId(6), read, 
				XEMapId(87),
				ValueMap { 
					"0", 
					"260", 
					"257", 
					"259", 
					"263", 
					"256", 
					"261", 
					"264", 
					"265", 
					"258", 
					"262" },
				Values { 
					"CONTEXT", 
					"DATABASE_CORRUPTION", 
					"DEADLOCKED_SCHEDS", 
					"NON_YIELDING_IOCP", 
					"NON_YIELDING_RM", 
					"NON_YIELDING_SCHED", 
					"SPL_BACKOFF", 
					"STUCK_DISPATCHER", 
					"STUCK_SP_SERVER_DIAG", 
					"UNRESOLVED_DEADLOCK", 
					"WS_TRIMMED" }
			] uint32 bucket_hint;
	[WmiDataId(7), read, 
				XEMapId(88),
				ValueMap { 
					"27", 
					"39", 
					"32", 
					"35", 
					"31", 
					"33", 
					"30", 
					"34", 
					"36", 
					"29", 
					"46", 
					"37", 
					"23", 
					"20", 
					"1", 
					"18", 
					"3", 
					"24", 
					"44", 
					"41", 
					"48", 
					"47", 
					"19", 
					"15", 
					"50", 
					"49", 
					"4", 
					"6", 
					"2", 
					"40", 
					"17", 
					"8", 
					"9", 
					"14", 
					"10", 
					"11", 
					"13", 
					"12", 
					"38", 
					"26", 
					"22", 
					"7", 
					"28", 
					"21", 
					"42", 
					"16", 
					"5", 
					"43", 
					"45", 
					"25", 
					"0" },
				Values { 
					"ASSERT", 
					"ASYNC_TRANSPORT", 
					"CLR_CRITICAL_RESOURCE", 
					"CLR_HOST", 
					"CLR_NON_CRITICAL_RESOURCE", 
					"CLR_ORPHANED_LOCK", 
					"CLR_RUNTIME_FATAL", 
					"CLR_STACK_OVERFLOW", 
					"CLR_UNKNOWN", 
					"CLR_USER_SHUTDOWN", 
					"CM_ENLISTMENT", 
					"CORRUPTED_UCS_MESSAGE", 
					"CRYPTO_EXCEPTION", 
					"DBCC_CORRUPTION", 
					"DBCC_STACKDUMP", 
					"DEADLOCK_STACK", 
					"DEADLOCKED_SCHEDULERS", 
					"ERROR_MANAGER", 
					"FAILED_NICE_SHUTDOWN", 
					"FIDO_GLM_LOG_FLUSH_FATAL", 
					"GDM_DISTRIBUTED_DEADLOCK", 
					"GDM_SELF_DEADLOCK", 
					"INDEX_CORRUPTION", 
					"LATCH_TIMEOUT", 
					"MONITOR_THREAD", 
					"MTM_AGE", 
					"NON_YIELDING_IOCP", 
					"NON_YIELDING_RM", 
					"NON_YIELDING_SCHEDULER", 
					"REPL_SCHEMA", 
					"RESOLVED_DEADLOCK", 
					"SEH", 
					"SEH_ACCESS_VIOLATION", 
					"SEH_DELAY_LOAD", 
					"SEH_FATAL_ACCESS_VIOLATION", 
					"SEH_INVALID_CODE", 
					"SEH_INVALID_CRT_PARAM", 
					"SEH_STACK_OVERFLOW", 
					"SEREPL_ERROR", 
					"SOS", 
					"SQLEXIT", 
					"STALLED_DISPATCHER", 
					"STRING_MANIPULATION", 
					"TAKE_DB_OFFLINE", 
					"UNITTEST", 
					"UNRESOLVED_DEADLOCK", 
					"WORKING_SET_TRIMMED", 
					"WORKSPACE", 
					"XACT_TRANSFER_FAILURE", 
					"XDB_CONFIG_CHANGE", 
					"XEVENT" }
			] uint32 dump_class;
	[WmiDataId(8), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Occurs when a new result set is being processed."): Amended,
    Guid("{67aa5ff6-95b6-4409-8d66-c5e532ca28d7}"), locale("MS\\0x409"),
    DisplayName("sp_server_diagnostics_result_set"): Amended]
class XeSqlPkg_sp_server_diagnostics_result_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sp_server_diagnostics_result_set: XeSqlPkg_sp_server_diagnostics_result_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read] uint64 interval_time;
};
		
[dynamic: ToInstance, Description("Occurs when a component state is determined."): Amended,
    Guid("{8232fe0e-4e1c-450c-9d49-73806cd80745}"), locale("MS\\0x409"),
    DisplayName("sp_server_diagnostics_component_result"): Amended]
class XeSqlPkg_sp_server_diagnostics_component_result: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sp_server_diagnostics_component_result: XeSqlPkg_sp_server_diagnostics_component_result
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(90),
				ValueMap { 
					"5", 
					"4", 
					"3", 
					"6", 
					"2", 
					"1", 
					"0" },
				Values { 
					"AGS", 
					"EVENTS", 
					"IO_SUBSYSTEM", 
					"LAST", 
					"QUERY_PROCESSING", 
					"RESOURCE", 
					"SYSTEM" }
			] uint8 component;
	[WmiDataId(6), read, 
				XEMapId(91),
				ValueMap { 
					"1", 
					"3", 
					"4", 
					"0", 
					"2" },
				Values { 
					"CLEAN", 
					"ERROR", 
					"LAST", 
					"UNKNOWN", 
					"WARNING" }
			] uint8 state;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string data;
};
		
[dynamic: ToInstance, Description("Translate full-text query to equivalant T-SQL query that works on a dummy fragment table."): Amended,
    Guid("{3712D27D-FEC3-4a59-8472-80602900FD64}"), locale("MS\\0x409"),
    DisplayName("fulltext_query_translator"): Amended]
class XeSqlPkg_fulltext_query_translator: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_query_translator: XeSqlPkg_fulltext_query_translator
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string query_text;
};
		
[dynamic: ToInstance, Description("Produces a fulltext query execution statistics report in XML format."): Amended,
    Guid("{0FFB61E3-158E-4530-85B4-802A2343CD62}"), locale("MS\\0x409"),
    DisplayName("fulltext_query_exec_stats"): Amended]
class XeSqlPkg_fulltext_query_exec_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_query_exec_stats: XeSqlPkg_fulltext_query_exec_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string execution_stats_report;
};
		
[dynamic: ToInstance, Description("Fired when a fulltext test access point is hit"): Amended,
    Guid("{885B603F-F35D-4C87-9882-E44CB12C8AD6}"), locale("MS\\0x409"),
    DisplayName("fulltext_test_access_point"): Amended]
class XeSqlPkg_fulltext_test_access_point: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_test_access_point: XeSqlPkg_fulltext_test_access_point
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint32 event_type;
	[WmiDataId(8), read] uint32 additional_info;
};
		
[dynamic: ToInstance, Description("Indicates the start of a fulltext reorganize operation for the table identified by table_id."): Amended,
    Guid("{D7A992FF-CA1E-4112-9F61-DBD348000107}"), locale("MS\\0x409"),
    DisplayName("fulltext_reorganize_start"): Amended]
class XeSqlPkg_fulltext_reorganize_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_reorganize_start: XeSqlPkg_fulltext_reorganize_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint64 total_fragments_size;
	[WmiDataId(8), read] uint64 fragments_count;
	[WmiDataId(9), read] uint32 degree_of_parallelism;
	[WmiDataId(10), read] uint32 destination_partition_count;
	[WmiDataId(11), read] uint32 destination_fragment_id;
};
		
[dynamic: ToInstance, Description("Reports a source fragment before running Phase1 of the reorganize operation. The process raises as many events of this type as there are source fragments."): Amended,
    Guid("{868F788C-A32C-492E-AAAA-0F6BF6211D87}"), locale("MS\\0x409"),
    DisplayName("fulltext_reorganize_source_fragment"): Amended]
class XeSqlPkg_fulltext_reorganize_source_fragment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_reorganize_source_fragment: XeSqlPkg_fulltext_reorganize_source_fragment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 fragment_id;
};
		
[dynamic: ToInstance, Description("Reports a fragment that has been selected as a source fragment by one of the Phase1 background merge work items."): Amended,
    Guid("{6BBCD5D3-C158-4393-9A7A-C6D803263129}"), locale("MS\\0x409"),
    DisplayName("fulltext_reorganize_phase1_source_fragment"): Amended]
class XeSqlPkg_fulltext_reorganize_phase1_source_fragment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_reorganize_phase1_source_fragment: XeSqlPkg_fulltext_reorganize_phase1_source_fragment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 fragment_id;
};
		
[dynamic: ToInstance, Description("Reports a destination fragment that has been created by one of the Phase1 background merge work items."): Amended,
    Guid("{E61B02ED-A0E5-453A-8EB0-9C8DEFD72083}"), locale("MS\\0x409"),
    DisplayName("fulltext_reorganize_phase1_destination_fragment"): Amended]
class XeSqlPkg_fulltext_reorganize_phase1_destination_fragment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_reorganize_phase1_destination_fragment: XeSqlPkg_fulltext_reorganize_phase1_destination_fragment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 fragment_id;
};
		
[dynamic: ToInstance, Description("Reports the reorganize progress for a given table."): Amended,
    Guid("{BFBA32E5-9B99-4D8E-BE3F-5C31B46285B2}"), locale("MS\\0x409"),
    DisplayName("fulltext_reorganize_progress"): Amended]
class XeSqlPkg_fulltext_reorganize_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_reorganize_progress: XeSqlPkg_fulltext_reorganize_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 percent_complete;
};
		
[dynamic: ToInstance, Description("Reports the reason for issuing recompile of a fulltext query."): Amended,
    Guid("{EF3FDDC2-7EC8-40B1-95A9-41CEC9D61923}"), locale("MS\\0x409"),
    DisplayName("fulltext_query_recompile"): Amended]
class XeSqlPkg_fulltext_query_recompile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_query_recompile: XeSqlPkg_fulltext_query_recompile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read, 
				XEMapId(38),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9" },
				Values { 
					"StopList changed", 
					"Thesaurus changed", 
					"Catalog property changed", 
					"Language Component(Wordbreaker/Filter) changed", 
					"Temporary plan", 
					"Search Property List changed", 
					"Additional buffers required", 
					"Fewer buffers required", 
					"Transform noise words setting changed" }
			] uint8 recompile_reason;
};
		
[dynamic: ToInstance, Description("Reports the language used for each document by semantic indexing during a full-text crawl with statistical_semantics enabled"): Amended,
    Guid("{157fe39e-8a88-45d3-bbbe-75703c501504}"), locale("MS\\0x409"),
    DisplayName("fulltext_semantic_document_language"): Amended]
class XeSqlPkg_fulltext_semantic_document_language: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_semantic_document_language: XeSqlPkg_fulltext_semantic_document_language
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint64 document_id;
	[WmiDataId(8), read] uint32 column_id;
	[WmiDataId(9), read] sint8  language_model_found;
	[WmiDataId(10), read] uint32 language_id;
};
		
[dynamic: ToInstance, Description("Reports the file extension of the documents being parsed by full-text IFilter."): Amended,
    Guid("{5d190f97-f618-4d18-ad0e-5a1645724ef6}"), locale("MS\\0x409"),
    DisplayName("fulltext_filter_usage"): Amended]
class XeSqlPkg_fulltext_filter_usage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_filter_usage: XeSqlPkg_fulltext_filter_usage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 filter_count;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string filter_type;
};
		
[dynamic: ToInstance, Description("Reports fulltext crawl log."): Amended,
    Guid("{B4ED0A56-F685-4676-A4FF-CC5528D4C002}"), locale("MS\\0x409"),
    DisplayName("fulltext_crawl_log"): Amended]
class XeSqlPkg_fulltext_crawl_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fulltext_crawl_log: XeSqlPkg_fulltext_crawl_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Session Manager: A work item has been enqueued in the thread pool for execution."): Amended,
    Guid("{b0557893-ba29-4167-9668-d8b337a70716}"), locale("MS\\0x409"),
    DisplayName("session_mgr_work_item_enqueued"): Amended]
class XeSqlPkg_session_mgr_work_item_enqueued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class session_mgr_work_item_enqueued: XeSqlPkg_session_mgr_work_item_enqueued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(93),
				ValueMap { 
					"0" },
				Values { 
					"SM_MATRIX_BRICK_DOWN" }
			] uint32 type;
	[WmiDataId(6), read, 
				XEMapId(92),
				ValueMap { 
					"4", 
					"0", 
					"1", 
					"3", 
					"2" },
				Values { 
					"SM_COUNT_DISTINCT_WORK_ITEM_PRIORITIES", 
					"SM_PRIORITY_CRITICAL", 
					"SM_PRIORITY_HIGH", 
					"SM_PRIORITY_LOW", 
					"SM_PRIORITY_MEDIUM" }
			] uint32 priority;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 creation_time;
};
		
[dynamic: ToInstance, Description("Session Manager: A work item has been dequeued from the thread pool for execution."): Amended,
    Guid("{e14e5168-c9d0-4c5c-9b64-140fb2fe9782}"), locale("MS\\0x409"),
    DisplayName("session_mgr_work_item_dequeued"): Amended]
class XeSqlPkg_session_mgr_work_item_dequeued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class session_mgr_work_item_dequeued: XeSqlPkg_session_mgr_work_item_dequeued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(93),
				ValueMap { 
					"0" },
				Values { 
					"SM_MATRIX_BRICK_DOWN" }
			] uint32 type;
	[WmiDataId(6), read, 
				XEMapId(92),
				ValueMap { 
					"4", 
					"0", 
					"1", 
					"3", 
					"2" },
				Values { 
					"SM_COUNT_DISTINCT_WORK_ITEM_PRIORITIES", 
					"SM_PRIORITY_CRITICAL", 
					"SM_PRIORITY_HIGH", 
					"SM_PRIORITY_LOW", 
					"SM_PRIORITY_MEDIUM" }
			] uint32 priority;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 creation_time;
};
		
[dynamic: ToInstance, Description("Session Manager: Starting the execution of work item."): Amended,
    Guid("{fb87d0f6-1dd7-4024-8a58-4d5720774d40}"), locale("MS\\0x409"),
    DisplayName("session_mgr_work_item_start_execution"): Amended]
class XeSqlPkg_session_mgr_work_item_start_execution: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class session_mgr_work_item_start_execution: XeSqlPkg_session_mgr_work_item_start_execution
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(93),
				ValueMap { 
					"0" },
				Values { 
					"SM_MATRIX_BRICK_DOWN" }
			] uint32 type;
	[WmiDataId(6), read, 
				XEMapId(92),
				ValueMap { 
					"4", 
					"0", 
					"1", 
					"3", 
					"2" },
				Values { 
					"SM_COUNT_DISTINCT_WORK_ITEM_PRIORITIES", 
					"SM_PRIORITY_CRITICAL", 
					"SM_PRIORITY_HIGH", 
					"SM_PRIORITY_LOW", 
					"SM_PRIORITY_MEDIUM" }
			] uint32 priority;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 creation_time;
};
		
[dynamic: ToInstance, Description("Session Manager: Finished the execution of work item."): Amended,
    Guid("{93787835-9453-4a09-ab99-91a53b39b33c}"), locale("MS\\0x409"),
    DisplayName("session_mgr_work_item_end_execution"): Amended]
class XeSqlPkg_session_mgr_work_item_end_execution: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class session_mgr_work_item_end_execution: XeSqlPkg_session_mgr_work_item_end_execution
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(93),
				ValueMap { 
					"0" },
				Values { 
					"SM_MATRIX_BRICK_DOWN" }
			] uint32 type;
	[WmiDataId(6), read, 
				XEMapId(92),
				ValueMap { 
					"4", 
					"0", 
					"1", 
					"3", 
					"2" },
				Values { 
					"SM_COUNT_DISTINCT_WORK_ITEM_PRIORITIES", 
					"SM_PRIORITY_CRITICAL", 
					"SM_PRIORITY_HIGH", 
					"SM_PRIORITY_LOW", 
					"SM_PRIORITY_MEDIUM" }
			] uint32 priority;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 creation_time;
};
		
[dynamic: ToInstance, Description("Session Manager: A session footprint was just created or deleted. This is used to trace session footprint creations and deletions."): Amended,
    Guid("{92e2cbd4-cec4-4dc2-b4d0-64059237813c}"), locale("MS\\0x409"),
    DisplayName("session_footprint_lifecycle_event"): Amended]
class XeSqlPkg_session_footprint_lifecycle_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class session_footprint_lifecycle_event: XeSqlPkg_session_footprint_lifecycle_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 session_id;
	[WmiDataId(6), read] uint64 session_token;
	[WmiDataId(7), read] uint64 brick_incarnation_id;
	[WmiDataId(8), read, 
				XEMapId(141),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"SESSION_FOOTPRINT_CREATED", 
					"SESSION_FOOTPRINT_DELETED" }
			] uint32 event_type;
};
		
[dynamic: ToInstance, Description("Database DDL statement has been parsed and compiled, and start to be executed."): Amended,
    Guid("{e2c02426-af12-44fa-87d2-220075c9da7c}"), locale("MS\\0x409"),
    DisplayName("database_ddl_stmt_start"): Amended]
class XeSqlPkg_database_ddl_stmt_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_ddl_stmt_start: XeSqlPkg_database_ddl_stmt_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(36),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"CREATE DATABASE", 
					"DROP DATABASE", 
					"USE DATABASE", 
					"ALTER DATABASE" }
			] uint8 statement_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Database DDL statement finished run-time check, such as permission check."): Amended,
    Guid("{5b9c43e0-3215-4d9b-bab7-8e9d799e3c7d}"), locale("MS\\0x409"),
    DisplayName("database_ddl_stmt_runtime_check"): Amended]
class XeSqlPkg_database_ddl_stmt_runtime_check: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_ddl_stmt_runtime_check: XeSqlPkg_database_ddl_stmt_runtime_check
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(36),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"CREATE DATABASE", 
					"DROP DATABASE", 
					"USE DATABASE", 
					"ALTER DATABASE" }
			] uint8 statement_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Start to create a database segment at the local brick."): Amended,
    Guid("{4d19bf10-5958-4726-aa16-56575646565f}"), locale("MS\\0x409"),
    DisplayName("database_segment_local_creation_begin"): Amended]
class XeSqlPkg_database_segment_local_creation_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_segment_local_creation_begin: XeSqlPkg_database_segment_local_creation_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 brick_id;
};
		
[dynamic: ToInstance, Description("One database segment is created at the local brick."): Amended,
    Guid("{edbdd3c7-c54b-4dcf-9d9a-7cf47eed3ba6}"), locale("MS\\0x409"),
    DisplayName("database_segment_local_creation_end"): Amended]
class XeSqlPkg_database_segment_local_creation_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_segment_local_creation_end: XeSqlPkg_database_segment_local_creation_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 brick_id;
};
		
[dynamic: ToInstance, Description("All files on one database segment are created, and primary file information is inserted into metadata."): Amended,
    Guid("{8bbf007c-835f-41cb-9998-f60c589e646d}"), locale("MS\\0x409"),
    DisplayName("database_segment_all_files_create"): Amended]
class XeSqlPkg_database_segment_all_files_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_segment_all_files_create: XeSqlPkg_database_segment_all_files_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("All required database segments are created."): Amended,
    Guid("{5e85c44b-a5a1-41cc-89aa-86e93c674ae9}"), locale("MS\\0x409"),
    DisplayName("all_database_segments_create"): Amended]
class XeSqlPkg_all_database_segments_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class all_database_segments_create: XeSqlPkg_all_database_segments_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_count;
	[WmiDataId(7), read] uint32 brick_id;
};
		
[dynamic: ToInstance, Description("All database segment infos are created in masterDB on MDM brick."): Amended,
    Guid("{cee14ccf-bccb-4b7d-ab26-60631a0e5c40}"), locale("MS\\0x409"),
    DisplayName("all_database_segments_metadata_create"): Amended]
class XeSqlPkg_all_database_segments_metadata_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class all_database_segments_metadata_create: XeSqlPkg_all_database_segments_metadata_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("An ex-lock is acquired for dropping a database"): Amended,
    Guid("{4112b30b-64d0-4bea-9e4a-d0f232693ab5}"), locale("MS\\0x409"),
    DisplayName("drop_database_ex_lock_acquire"): Amended]
class XeSqlPkg_drop_database_ex_lock_acquire: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class drop_database_ex_lock_acquire: XeSqlPkg_drop_database_ex_lock_acquire
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Remove global metadata from Master database, including sysdatabases and database segments"): Amended,
    Guid("{5f3c1275-9ea1-4c0c-84f7-3723e50a654e}"), locale("MS\\0x409"),
    DisplayName("drop_database_metadata_remove"): Amended]
class XeSqlPkg_drop_database_metadata_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class drop_database_metadata_remove: XeSqlPkg_drop_database_metadata_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Database compatibility level is changed"): Amended,
    Guid("{799CBF25-EA60-4cb8-9ED8-3513BF59C7ED}"), locale("MS\\0x409"),
    DisplayName("database_cmptlevel_change"): Amended]
class XeSqlPkg_database_cmptlevel_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_cmptlevel_change: XeSqlPkg_database_cmptlevel_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 previous_value;
	[WmiDataId(7), read] uint32 new_value;
};
		
[dynamic: ToInstance, Description("Database compatibility level is changed"): Amended,
    Guid("{799CBF25-EA60-4cb8-9ED8-3513BF59C7ED}"), locale("MS\\0x409"),
    DisplayName("database_cmptlevel_change"): Amended]
class XeSqlPkg_database_cmptlevel_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class database_cmptlevel_change: XeSqlPkg_database_cmptlevel_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint32 previous_value;
	[WmiDataId(7), read] uint32 new_value;
};
		
[dynamic: ToInstance, Description("The logical file group is created."): Amended,
    Guid("{e01343e7-1b02-42c5-bf8a-07ab3141ea65}"), locale("MS\\0x409"),
    DisplayName("logical_filegroup_create"): Amended]
class XeSqlPkg_logical_filegroup_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logical_filegroup_create: XeSqlPkg_logical_filegroup_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 data_space_id;
	[WmiDataId(7), read, 
				XEMapId(96),
				ValueMap { 
					"5", 
					"1", 
					"2", 
					"3", 
					"0", 
					"4" },
				Values { 
					"COLDFG", 
					"FILESTREAM", 
					"FILESTREAMLOG", 
					"MEMORY_OPTIMIZED", 
					"ROWS", 
					"WARMFG" }
			] uint32 filegroup_type;
	[WmiDataId(8), read, Extension("Guid")] guid guid;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string filegroup_name;
};
		
[dynamic: ToInstance, Description("Occurs when an ALTER TABLE ADD column operation is updating base index."): Amended,
    Guid("{9CEE39A4-943F-41F6-91AD-C42C3C4A7BC1}"), locale("MS\\0x409"),
    DisplayName("metadata_ddl_add_column"): Amended]
class XeSqlPkg_metadata_ddl_add_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_ddl_add_column: XeSqlPkg_metadata_ddl_add_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read, 
				XEMapId(100),
				ValueMap { 
					"104", 
					"34", 
					"50", 
					"35", 
					"250", 
					"40", 
					"42", 
					"43", 
					"0", 
					"52", 
					"56", 
					"127", 
					"60", 
					"31", 
					"59", 
					"62", 
					"58", 
					"122", 
					"173", 
					"61", 
					"106", 
					"36", 
					"108", 
					"175", 
					"98", 
					"239", 
					"1", 
					"243", 
					"41", 
					"189", 
					"240", 
					"48", 
					"165", 
					"167", 
					"231", 
					"99", 
					"241", 
					"242" },
				Values { 
					"XE_XVT_BIT", 
					"XE_XVT_BLOB", 
					"XE_XVT_BOOL", 
					"XE_XVT_CLOB", 
					"XE_XVT_CURSOR", 
					"XE_XVT_DATE", 
					"XE_XVT_DATETIME2", 
					"XE_XVT_DATETIMEOFFSET", 
					"XE_XVT_EMPTY", 
					"XE_XVT_I2", 
					"XE_XVT_I4", 
					"XE_XVT_I8", 
					"XE_XVT_MONEY", 
					"XE_XVT_NULL", 
					"XE_XVT_R4", 
					"XE_XVT_R8", 
					"XE_XVT_SMALLDATE", 
					"XE_XVT_SMALLMONEY", 
					"XE_XVT_SSBYTES", 
					"XE_XVT_SSDATE", 
					"XE_XVT_SSDECIMAL", 
					"XE_XVT_SSGUID", 
					"XE_XVT_SSNUMERIC", 
					"XE_XVT_SSSTR", 
					"XE_XVT_SSVARIANT", 
					"XE_XVT_SSWSTR", 
					"XE_XVT_TABLE", 
					"XE_XVT_TABLETYPE", 
					"XE_XVT_TIME", 
					"XE_XVT_TIMESTAMP", 
					"XE_XVT_UDT", 
					"XE_XVT_UI1", 
					"XE_XVT_VARBYTES", 
					"XE_XVT_VARSTR", 
					"XE_XVT_VARWSTR", 
					"XE_XVT_WLOB", 
					"XE_XVT_XML", 
					"XE_XVT_XMLNODE" }
			] uint32 datatype;
	[WmiDataId(9), read, 
				XEMapId(101),
				ValueMap { 
					"822136840", 
					"2030096392", 
					"956362760", 
					"1023463432", 
					"922796040", 
					"939577352", 
					"2046869512", 
					"1543557142", 
					"1526775830", 
					"1409339396", 
					"1392558084", 
					"3070283781", 
					"3523264520", 
					"3674259497", 
					"3540041769", 
					"3657482245", 
					"3556818949", 
					"3573596170", 
					"3590373384", 
					"3607150632", 
					"3623927816", 
					"3640705035", 
					"2617298973", 
					"2600517661", 
					"1442893837", 
					"1426112525", 
					"3120615438", 
					"906031112", 
					"872468488", 
					"855687176", 
					"1375784968", 
					"1359003656", 
					"1778438152", 
					"1761656840", 
					"2080436232", 
					"1912655880", 
					"1895874568", 
					"2181091336", 
					"2164310024", 
					"2315309064", 
					"2298527752", 
					"2449526792", 
					"2432745480", 
					"2583744520", 
					"2566963208", 
					"503382024", 
					"570486792", 
					"536924168", 
					"520142856", 
					"671154184", 
					"671090696", 
					"738258952", 
					"704696328", 
					"687915016", 
					"889245704", 
					"553701384", 
					"721473544", 
					"2650853406", 
					"2634072094", 
					"2684407838", 
					"2667626526", 
					"2013315080", 
					"1476448275", 
					"1459666963", 
					"1510002708", 
					"1493221396", 
					"1006686218", 
					"989904906", 
					"973131786", 
					"1577111575", 
					"1560330263", 
					"1610661916", 
					"1593884700", 
					"3103838218", 
					"3087061002", 
					"1811992603", 
					"1795211291" },
				Values { 
					"SQL_1xCompat_CP850_CI_AS", 
					"SQL_AltDiction_CP1253_CS_AS", 
					"SQL_AltDiction_CP850_CI_AI", 
					"SQL_AltDiction_CP850_CI_AS", 
					"SQL_AltDiction_CP850_CS_AS", 
					"SQL_AltDiction_Pref_CP850_CI_AS", 
					"SQL_AltDiction2_CP1253_CS_AS", 
					"SQL_Croatian_CP1250_CI_AS", 
					"SQL_Croatian_CP1250_CS_AS", 
					"SQL_Czech_CP1250_CI_AS", 
					"SQL_Czech_CP1250_CS_AS", 
					"SQL_Danish_Pref_CP1_CI_AS", 
					"SQL_EBCDIC037_CP1_CS_AS", 
					"SQL_EBCDIC1141_CP1_CS_AS", 
					"SQL_EBCDIC273_CP1_CS_AS", 
					"SQL_EBCDIC277_2_CP1_CS_AS", 
					"SQL_EBCDIC277_CP1_CS_AS", 
					"SQL_EBCDIC278_CP1_CS_AS", 
					"SQL_EBCDIC280_CP1_CS_AS", 
					"SQL_EBCDIC284_CP1_CS_AS", 
					"SQL_EBCDIC285_CP1_CS_AS", 
					"SQL_EBCDIC297_CP1_CS_AS", 
					"SQL_Estonian_CP1257_CI_AS", 
					"SQL_Estonian_CP1257_CS_AS", 
					"SQL_Hungarian_CP1250_CI_AS", 
					"SQL_Hungarian_CP1250_CS_AS", 
					"SQL_Icelandic_Pref_CP1_CI_AS", 
					"SQL_Latin1_General_CP1_CI_AI", 
					"SQL_Latin1_General_CP1_CI_AS", 
					"SQL_Latin1_General_CP1_CS_AS", 
					"SQL_Latin1_General_CP1250_CI_AS", 
					"SQL_Latin1_General_CP1250_CS_AS", 
					"SQL_Latin1_General_CP1251_CI_AS", 
					"SQL_Latin1_General_CP1251_CS_AS", 
					"SQL_Latin1_General_CP1253_CI_AI", 
					"SQL_Latin1_General_CP1253_CI_AS", 
					"SQL_Latin1_General_CP1253_CS_AS", 
					"SQL_Latin1_General_CP1254_CI_AS", 
					"SQL_Latin1_General_CP1254_CS_AS", 
					"SQL_Latin1_General_CP1255_CI_AS", 
					"SQL_Latin1_General_CP1255_CS_AS", 
					"SQL_Latin1_General_CP1256_CI_AS", 
					"SQL_Latin1_General_CP1256_CS_AS", 
					"SQL_Latin1_General_CP1257_CI_AS", 
					"SQL_Latin1_General_CP1257_CS_AS", 
					"SQL_Latin1_General_CP437_BIN", 
					"SQL_Latin1_General_CP437_CI_AI", 
					"SQL_Latin1_General_CP437_CI_AS", 
					"SQL_Latin1_General_CP437_CS_AS", 
					"SQL_Latin1_General_CP850_BIN", 
					"SQL_Latin1_General_CP850_BIN2", 
					"SQL_Latin1_General_CP850_CI_AI", 
					"SQL_Latin1_General_CP850_CI_AS", 
					"SQL_Latin1_General_CP850_CS_AS", 
					"SQL_Latin1_General_Pref_CP1_CI_AS", 
					"SQL_Latin1_General_Pref_CP437_CI_AS", 
					"SQL_Latin1_General_Pref_CP850_CI_AS", 
					"SQL_Latvian_CP1257_CI_AS", 
					"SQL_Latvian_CP1257_CS_AS", 
					"SQL_Lithuanian_CP1257_CI_AS", 
					"SQL_Lithuanian_CP1257_CS_AS", 
					"SQL_MixDiction_CP1253_CS_AS", 
					"SQL_Polish_CP1250_CI_AS", 
					"SQL_Polish_CP1250_CS_AS", 
					"SQL_Romanian_CP1250_CI_AS", 
					"SQL_Romanian_CP1250_CS_AS", 
					"SQL_Scandainavian_CP850_CI_AS", 
					"SQL_Scandainavian_CP850_CS_AS", 
					"SQL_Scandainavian_Pref_CP850_CI_AS", 
					"SQL_Slovak_CP1250_CI_AS", 
					"SQL_Slovak_CP1250_CS_AS", 
					"SQL_Slovenian_CP1250_CI_AS", 
					"SQL_Slovenian_CP1250_CS_AS", 
					"SQL_SwedishPhone_Pref_CP1_CI_AS", 
					"SQL_SwedishStd_Pref_CP1_CI_AS", 
					"SQL_Ukrainian_CP1251_CI_AS", 
					"SQL_Ukrainian_CP1251_CS_AS" }
			] uint32 collation;
	[WmiDataId(10), read] sint8  nullable;
	[WmiDataId(11), read] uint32 maxlen;
};
		
[dynamic: ToInstance, Description("Occurs when an ALTER TABLE ALTER column operation is updating base index."): Amended,
    Guid("{B4B8F27E-F757-4C62-9F9A-108C95470783}"), locale("MS\\0x409"),
    DisplayName("metadata_ddl_alter_column"): Amended]
class XeSqlPkg_metadata_ddl_alter_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_ddl_alter_column: XeSqlPkg_metadata_ddl_alter_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read, 
				XEMapId(100),
				ValueMap { 
					"104", 
					"34", 
					"50", 
					"35", 
					"250", 
					"40", 
					"42", 
					"43", 
					"0", 
					"52", 
					"56", 
					"127", 
					"60", 
					"31", 
					"59", 
					"62", 
					"58", 
					"122", 
					"173", 
					"61", 
					"106", 
					"36", 
					"108", 
					"175", 
					"98", 
					"239", 
					"1", 
					"243", 
					"41", 
					"189", 
					"240", 
					"48", 
					"165", 
					"167", 
					"231", 
					"99", 
					"241", 
					"242" },
				Values { 
					"XE_XVT_BIT", 
					"XE_XVT_BLOB", 
					"XE_XVT_BOOL", 
					"XE_XVT_CLOB", 
					"XE_XVT_CURSOR", 
					"XE_XVT_DATE", 
					"XE_XVT_DATETIME2", 
					"XE_XVT_DATETIMEOFFSET", 
					"XE_XVT_EMPTY", 
					"XE_XVT_I2", 
					"XE_XVT_I4", 
					"XE_XVT_I8", 
					"XE_XVT_MONEY", 
					"XE_XVT_NULL", 
					"XE_XVT_R4", 
					"XE_XVT_R8", 
					"XE_XVT_SMALLDATE", 
					"XE_XVT_SMALLMONEY", 
					"XE_XVT_SSBYTES", 
					"XE_XVT_SSDATE", 
					"XE_XVT_SSDECIMAL", 
					"XE_XVT_SSGUID", 
					"XE_XVT_SSNUMERIC", 
					"XE_XVT_SSSTR", 
					"XE_XVT_SSVARIANT", 
					"XE_XVT_SSWSTR", 
					"XE_XVT_TABLE", 
					"XE_XVT_TABLETYPE", 
					"XE_XVT_TIME", 
					"XE_XVT_TIMESTAMP", 
					"XE_XVT_UDT", 
					"XE_XVT_UI1", 
					"XE_XVT_VARBYTES", 
					"XE_XVT_VARSTR", 
					"XE_XVT_VARWSTR", 
					"XE_XVT_WLOB", 
					"XE_XVT_XML", 
					"XE_XVT_XMLNODE" }
			] uint32 datatype;
	[WmiDataId(9), read, 
				XEMapId(101),
				ValueMap { 
					"822136840", 
					"2030096392", 
					"956362760", 
					"1023463432", 
					"922796040", 
					"939577352", 
					"2046869512", 
					"1543557142", 
					"1526775830", 
					"1409339396", 
					"1392558084", 
					"3070283781", 
					"3523264520", 
					"3674259497", 
					"3540041769", 
					"3657482245", 
					"3556818949", 
					"3573596170", 
					"3590373384", 
					"3607150632", 
					"3623927816", 
					"3640705035", 
					"2617298973", 
					"2600517661", 
					"1442893837", 
					"1426112525", 
					"3120615438", 
					"906031112", 
					"872468488", 
					"855687176", 
					"1375784968", 
					"1359003656", 
					"1778438152", 
					"1761656840", 
					"2080436232", 
					"1912655880", 
					"1895874568", 
					"2181091336", 
					"2164310024", 
					"2315309064", 
					"2298527752", 
					"2449526792", 
					"2432745480", 
					"2583744520", 
					"2566963208", 
					"503382024", 
					"570486792", 
					"536924168", 
					"520142856", 
					"671154184", 
					"671090696", 
					"738258952", 
					"704696328", 
					"687915016", 
					"889245704", 
					"553701384", 
					"721473544", 
					"2650853406", 
					"2634072094", 
					"2684407838", 
					"2667626526", 
					"2013315080", 
					"1476448275", 
					"1459666963", 
					"1510002708", 
					"1493221396", 
					"1006686218", 
					"989904906", 
					"973131786", 
					"1577111575", 
					"1560330263", 
					"1610661916", 
					"1593884700", 
					"3103838218", 
					"3087061002", 
					"1811992603", 
					"1795211291" },
				Values { 
					"SQL_1xCompat_CP850_CI_AS", 
					"SQL_AltDiction_CP1253_CS_AS", 
					"SQL_AltDiction_CP850_CI_AI", 
					"SQL_AltDiction_CP850_CI_AS", 
					"SQL_AltDiction_CP850_CS_AS", 
					"SQL_AltDiction_Pref_CP850_CI_AS", 
					"SQL_AltDiction2_CP1253_CS_AS", 
					"SQL_Croatian_CP1250_CI_AS", 
					"SQL_Croatian_CP1250_CS_AS", 
					"SQL_Czech_CP1250_CI_AS", 
					"SQL_Czech_CP1250_CS_AS", 
					"SQL_Danish_Pref_CP1_CI_AS", 
					"SQL_EBCDIC037_CP1_CS_AS", 
					"SQL_EBCDIC1141_CP1_CS_AS", 
					"SQL_EBCDIC273_CP1_CS_AS", 
					"SQL_EBCDIC277_2_CP1_CS_AS", 
					"SQL_EBCDIC277_CP1_CS_AS", 
					"SQL_EBCDIC278_CP1_CS_AS", 
					"SQL_EBCDIC280_CP1_CS_AS", 
					"SQL_EBCDIC284_CP1_CS_AS", 
					"SQL_EBCDIC285_CP1_CS_AS", 
					"SQL_EBCDIC297_CP1_CS_AS", 
					"SQL_Estonian_CP1257_CI_AS", 
					"SQL_Estonian_CP1257_CS_AS", 
					"SQL_Hungarian_CP1250_CI_AS", 
					"SQL_Hungarian_CP1250_CS_AS", 
					"SQL_Icelandic_Pref_CP1_CI_AS", 
					"SQL_Latin1_General_CP1_CI_AI", 
					"SQL_Latin1_General_CP1_CI_AS", 
					"SQL_Latin1_General_CP1_CS_AS", 
					"SQL_Latin1_General_CP1250_CI_AS", 
					"SQL_Latin1_General_CP1250_CS_AS", 
					"SQL_Latin1_General_CP1251_CI_AS", 
					"SQL_Latin1_General_CP1251_CS_AS", 
					"SQL_Latin1_General_CP1253_CI_AI", 
					"SQL_Latin1_General_CP1253_CI_AS", 
					"SQL_Latin1_General_CP1253_CS_AS", 
					"SQL_Latin1_General_CP1254_CI_AS", 
					"SQL_Latin1_General_CP1254_CS_AS", 
					"SQL_Latin1_General_CP1255_CI_AS", 
					"SQL_Latin1_General_CP1255_CS_AS", 
					"SQL_Latin1_General_CP1256_CI_AS", 
					"SQL_Latin1_General_CP1256_CS_AS", 
					"SQL_Latin1_General_CP1257_CI_AS", 
					"SQL_Latin1_General_CP1257_CS_AS", 
					"SQL_Latin1_General_CP437_BIN", 
					"SQL_Latin1_General_CP437_CI_AI", 
					"SQL_Latin1_General_CP437_CI_AS", 
					"SQL_Latin1_General_CP437_CS_AS", 
					"SQL_Latin1_General_CP850_BIN", 
					"SQL_Latin1_General_CP850_BIN2", 
					"SQL_Latin1_General_CP850_CI_AI", 
					"SQL_Latin1_General_CP850_CI_AS", 
					"SQL_Latin1_General_CP850_CS_AS", 
					"SQL_Latin1_General_Pref_CP1_CI_AS", 
					"SQL_Latin1_General_Pref_CP437_CI_AS", 
					"SQL_Latin1_General_Pref_CP850_CI_AS", 
					"SQL_Latvian_CP1257_CI_AS", 
					"SQL_Latvian_CP1257_CS_AS", 
					"SQL_Lithuanian_CP1257_CI_AS", 
					"SQL_Lithuanian_CP1257_CS_AS", 
					"SQL_MixDiction_CP1253_CS_AS", 
					"SQL_Polish_CP1250_CI_AS", 
					"SQL_Polish_CP1250_CS_AS", 
					"SQL_Romanian_CP1250_CI_AS", 
					"SQL_Romanian_CP1250_CS_AS", 
					"SQL_Scandainavian_CP850_CI_AS", 
					"SQL_Scandainavian_CP850_CS_AS", 
					"SQL_Scandainavian_Pref_CP850_CI_AS", 
					"SQL_Slovak_CP1250_CI_AS", 
					"SQL_Slovak_CP1250_CS_AS", 
					"SQL_Slovenian_CP1250_CI_AS", 
					"SQL_Slovenian_CP1250_CS_AS", 
					"SQL_SwedishPhone_Pref_CP1_CI_AS", 
					"SQL_SwedishStd_Pref_CP1_CI_AS", 
					"SQL_Ukrainian_CP1251_CI_AS", 
					"SQL_Ukrainian_CP1251_CS_AS" }
			] uint32 collation;
	[WmiDataId(10), read] sint8  nullable;
	[WmiDataId(11), read] uint32 maxlen;
};
		
[dynamic: ToInstance, Description("Occurs when an ALTER TABLE DROP column operation is updating base index."): Amended,
    Guid("{6CF3B9DA-D456-4E2E-94C2-FDD69D9B19EB}"), locale("MS\\0x409"),
    DisplayName("metadata_ddl_drop_column"): Amended]
class XeSqlPkg_metadata_ddl_drop_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_ddl_drop_column: XeSqlPkg_metadata_ddl_drop_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint32 column_id;
};
		
[dynamic: ToInstance, Description("Occurs when sp_repl_generateevent is called. this event is an internal repl event for tracing repl stored procedures. The data that is returned from user_event includes the event_id that was specified in the call to sp_repl_generateevent. This can be a value between x and y."): Amended,
    Guid("{C43FAD88-2B31-416c-B521-51D48B7EE17F}"), locale("MS\\0x409"),
    DisplayName("repl_event"): Amended]
class XeSqlPkg_repl_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repl_event: XeSqlPkg_repl_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 event_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string user_info;
	[WmiDataId(7), read, Extension("Variant")] object user_data;
};
		
[dynamic: ToInstance, Description("Profiling function CSQLSource::Execute()."): Amended,
    Guid("{AB3416A5-45CC-4E36-8792-306DB00C5B41}"), locale("MS\\0x409"),
    DisplayName("collect_all_CSQLSourceExecute"): Amended]
class XeSqlPkg_collect_all_CSQLSourceExecute: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class collect_all_CSQLSourceExecute: XeSqlPkg_collect_all_CSQLSourceExecute
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_ticks;
	[WmiDataId(6), read] uint64 f0;
	[WmiDataId(7), read] uint64 f1;
	[WmiDataId(8), read] uint64 f2;
	[WmiDataId(9), read] uint64 g0;
	[WmiDataId(10), read] uint64 g1;
	[WmiDataId(11), read] uint64 g2;
	[WmiDataId(12), read] uint64 g3;
	[WmiDataId(13), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Profiling function HKProc::FExecute()."): Amended,
    Guid("{2C38A25C-6CD3-4C2D-A105-272D5C276DA8}"), locale("MS\\0x409"),
    DisplayName("collect_all_HkProcFExecute"): Amended]
class XeSqlPkg_collect_all_HkProcFExecute: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class collect_all_HkProcFExecute: XeSqlPkg_collect_all_HkProcFExecute
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_ticks;
	[WmiDataId(6), read] uint64 f0;
	[WmiDataId(7), read] uint64 f1;
	[WmiDataId(8), read] uint64 f2;
	[WmiDataId(9), read] uint64 g0;
	[WmiDataId(10), read] uint64 g1;
	[WmiDataId(11), read] uint64 g2;
	[WmiDataId(12), read] uint64 g3;
	[WmiDataId(13), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Profiling function HKProc::ExecuteNested()."): Amended,
    Guid("{3B39C831-6D4D-4301-BBE0-D365D931D45F}"), locale("MS\\0x409"),
    DisplayName("collect_all_HkProcExecuteNested"): Amended]
class XeSqlPkg_collect_all_HkProcExecuteNested: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class collect_all_HkProcExecuteNested: XeSqlPkg_collect_all_HkProcExecuteNested
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_ticks;
	[WmiDataId(6), read] uint64 f0;
	[WmiDataId(7), read] uint64 f1;
	[WmiDataId(8), read] uint64 f2;
	[WmiDataId(9), read] uint64 g0;
	[WmiDataId(10), read] uint64 g1;
	[WmiDataId(11), read] uint64 g2;
	[WmiDataId(12), read] uint64 g3;
	[WmiDataId(13), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Profiling function UDFInvokeExternal()."): Amended,
    Guid("{05836872-56FA-456D-92BD-FA6696C4B8F5}"), locale("MS\\0x409"),
    DisplayName("collect_all_UDFInvokeExternal"): Amended]
class XeSqlPkg_collect_all_UDFInvokeExternal: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class collect_all_UDFInvokeExternal: XeSqlPkg_collect_all_UDFInvokeExternal
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_ticks;
	[WmiDataId(6), read] uint64 f0;
	[WmiDataId(7), read] uint64 f1;
	[WmiDataId(8), read] uint64 f2;
	[WmiDataId(9), read] uint64 g0;
	[WmiDataId(10), read] uint64 g1;
	[WmiDataId(11), read] uint64 g2;
	[WmiDataId(12), read] uint64 g3;
	[WmiDataId(13), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Profiling function ExecUdfLobAccess()."): Amended,
    Guid("{694DAA03-DACD-4EB7-B9D3-10DC9B4D2BD9}"), locale("MS\\0x409"),
    DisplayName("collect_all_ExecUdfLobAccess"): Amended]
class XeSqlPkg_collect_all_ExecUdfLobAccess: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class collect_all_ExecUdfLobAccess: XeSqlPkg_collect_all_ExecUdfLobAccess
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_ticks;
	[WmiDataId(6), read] uint64 f0;
	[WmiDataId(7), read] uint64 f1;
	[WmiDataId(8), read] uint64 f2;
	[WmiDataId(9), read] uint64 g0;
	[WmiDataId(10), read] uint64 g1;
	[WmiDataId(11), read] uint64 g2;
	[WmiDataId(12), read] uint64 g3;
	[WmiDataId(13), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Profiling function ExecUdxDataAccess()."): Amended,
    Guid("{2A0F6195-7A33-4296-8CF2-9B4A70FFBBD7}"), locale("MS\\0x409"),
    DisplayName("collect_all_ExecUdxDataAccess"): Amended]
class XeSqlPkg_collect_all_ExecUdxDataAccess: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class collect_all_ExecUdxDataAccess: XeSqlPkg_collect_all_ExecUdxDataAccess
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_ticks;
	[WmiDataId(6), read] uint64 f0;
	[WmiDataId(7), read] uint64 f1;
	[WmiDataId(8), read] uint64 f2;
	[WmiDataId(9), read] uint64 g0;
	[WmiDataId(10), read] uint64 g1;
	[WmiDataId(11), read] uint64 g2;
	[WmiDataId(12), read] uint64 g3;
	[WmiDataId(13), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Profiling function CTableValuedClrUdf::GetRow()."): Amended,
    Guid("{325EA3D1-B462-4173-9789-BE2B3676BAAC}"), locale("MS\\0x409"),
    DisplayName("collect_all_GetRow"): Amended]
class XeSqlPkg_collect_all_GetRow: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class collect_all_GetRow: XeSqlPkg_collect_all_GetRow
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_ticks;
	[WmiDataId(6), read] uint64 f0;
	[WmiDataId(7), read] uint64 f1;
	[WmiDataId(8), read] uint64 f2;
	[WmiDataId(9), read] uint64 g0;
	[WmiDataId(10), read] uint64 g1;
	[WmiDataId(11), read] uint64 g2;
	[WmiDataId(12), read] uint64 g3;
	[WmiDataId(13), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Profiling function CTableValuedClrUdf::Init()."): Amended,
    Guid("{1EA78AFB-75EA-409F-9EFE-A5A73D87F850}"), locale("MS\\0x409"),
    DisplayName("collect_all_Init"): Amended]
class XeSqlPkg_collect_all_Init: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class collect_all_Init: XeSqlPkg_collect_all_Init
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_ticks;
	[WmiDataId(6), read] uint64 f0;
	[WmiDataId(7), read] uint64 f1;
	[WmiDataId(8), read] uint64 f2;
	[WmiDataId(9), read] uint64 g0;
	[WmiDataId(10), read] uint64 g1;
	[WmiDataId(11), read] uint64 g2;
	[WmiDataId(12), read] uint64 g3;
	[WmiDataId(13), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Reason Many Foreign Key operator not used"): Amended,
    Guid("{F5B2A3F0-1ED0-4B18-B43F-0A2B9CEA7236}"), locale("MS\\0x409"),
    DisplayName("reason_many_foreign_keys_operator_not_used"): Amended]
class XeSqlPkg_reason_many_foreign_keys_operator_not_used: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class reason_many_foreign_keys_operator_not_used: XeSqlPkg_reason_many_foreign_keys_operator_not_used
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 number_of_fk_tables;
	[WmiDataId(6), read, 
				XEMapId(80),
				ValueMap { 
					"13", 
					"4", 
					"0", 
					"3", 
					"11", 
					"10", 
					"12", 
					"1", 
					"8", 
					"2", 
					"6", 
					"5", 
					"7", 
					"9" },
				Values { 
					"ALTERNATE_PLAN_FORCED", 
					"COMPAT_130_DISABLED", 
					"DEFAULT", 
					"FEATURE_DISABLED", 
					"FOREIGN_HAS_COLUMNSTORE", 
					"FOREIGN_IS_HEKATON_TABLE", 
					"FOREIGN_IS_STRETCH_TABLE", 
					"MERGE_OPERATION", 
					"NO_CONSTRAINT", 
					"OPERATOR_DISABLED_BY_TF_9448", 
					"PRIMARY_HAS_COLUMNSTORE", 
					"PRIMARY_IS_HEKATON_TABLE", 
					"TOO_FEW_CONSTRAINTS", 
					"UNSUPPORTED_CONSTRAINT" }
			] uint16 reason_operator_not_used;
};
		
[dynamic: ToInstance, Description("Occurs when an existing DQ session that matches the executing DQ is found in the session cache."): Amended,
    Guid("{EB13A4CB-735B-4888-A49B-EB6C1735F336}"), locale("MS\\0x409"),
    DisplayName("dq_session_cache_hit"): Amended]
class XeSqlPkg_dq_session_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dq_session_cache_hit: XeSqlPkg_dq_session_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 remote_server_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string linked_server_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string provider_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string user_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string nt_user_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string provider_string_openrowset;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string datasource_openrowset;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string location_openrowset;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string catalog_openrowset;
};
		
[dynamic: ToInstance, Description("Telemetry information for Session Context Key"): Amended,
    Guid("{A7B7E49A-6010-4302-9DCE-D3A7905E6EA0}"), locale("MS\\0x409"),
    DisplayName("session_context_statistics"): Amended]
class XeSqlPkg_session_context_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class session_context_statistics: XeSqlPkg_session_context_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 number_of_keys;
	[WmiDataId(6), read] sint64 number_of_readOnly_keys;
	[WmiDataId(7), read] sint64 max_key;
	[WmiDataId(8), read] sint64 max_value;
	[WmiDataId(9), read] sint64 used_cache_size;
};
		
[dynamic: ToInstance, Description("Collects the data for compilation stages."): Amended,
    Guid("{D18341F1-850D-403C-A443-48C1108DBD17}"), locale("MS\\0x409"),
    DisplayName("compilation_stage_statistics"): Amended]
class XeSqlPkg_compilation_stage_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compilation_stage_statistics: XeSqlPkg_compilation_stage_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 total_compilations;
	[WmiDataId(6), read] sint64 tp_serial;
	[WmiDataId(7), read] sint64 tp_parallel;
	[WmiDataId(8), read] sint64 quick_exclusive_batch;
	[WmiDataId(9), read] sint64 quick_serial;
	[WmiDataId(10), read] sint64 quick_parallel;
	[WmiDataId(11), read] sint64 full_optimization;
	[WmiDataId(12), read] sint64 trivial_plan;
	[WmiDataId(13), read] sint64 trivial_plan_scanning_cs_index_discarded;
};
		
[dynamic: ToInstance, Description("Collects the data for operational analytics."): Amended,
    Guid("{4615CACD-7978-40DB-BE46-A85377348637}"), locale("MS\\0x409"),
    DisplayName("analytical_query_statistics"): Amended]
class XeSqlPkg_analytical_query_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class analytical_query_statistics: XeSqlPkg_analytical_query_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 analytical_mode_forced_by_hint_or_db_scoped_config;
	[WmiDataId(6), read] real64 max_tablesize;
	[WmiDataId(7), read] sint8  serial_plan;
	[WmiDataId(8), read] sint8  maxdop_one;
	[WmiDataId(9), read] sint8  time_out;
	[WmiDataId(10), read] sint16 compilation_stage;
};
		
[dynamic: ToInstance, Description("Collects the data for two compilation stages during plan forcing with UsePlan."): Amended,
    Guid("{3238A319-51C5-40C6-9EB0-1F2BBDDF0D45}"), locale("MS\\0x409"),
    DisplayName("quickstage_useplan_statistics"): Amended]
class XeSqlPkg_quickstage_useplan_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class quickstage_useplan_statistics: XeSqlPkg_quickstage_useplan_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  quickstage_useplan_enabled;
	[WmiDataId(6), read] sint8  useplan_successful;
	[WmiDataId(7), read] sint8  quickstage_successful;
	[WmiDataId(8), read] uint64 compilecpu_time_ms;
	[WmiDataId(9), read] uint64 quickstage_time_ms;
	[WmiDataId(10), read] uint64 fullopt_time_ms;
};
		
[dynamic: ToInstance, Description("Collect the compilation progress information for long-running compilations."): Amended,
    Guid("{426C03C0-E345-448F-852E-00754104BB98}"), locale("MS\\0x409"),
    DisplayName("long_compilation_progress"): Amended]
class XeSqlPkg_long_compilation_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class long_compilation_progress: XeSqlPkg_long_compilation_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tasks_count;
	[WmiDataId(6), read] uint64 compile_duration;
	[WmiDataId(7), read] sint8  ongoing_compilation;
};
		
[dynamic: ToInstance, Description("Collect the compilation information for errored out or failed compilations."): Amended,
    Guid("{1B702DB2-C72C-4DDA-A0FF-512FE0E4D402}"), locale("MS\\0x409"),
    DisplayName("failed_compilation"): Amended]
class XeSqlPkg_failed_compilation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failed_compilation: XeSqlPkg_failed_compilation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tasks_count;
	[WmiDataId(6), read] uint64 compile_duration;
	[WmiDataId(7), read] uint32 error_code;
};
		
[dynamic: ToInstance, Description("Collect exception info about Optimization Replay's failure."): Amended,
    Guid("{7B0BFE2E-6ABC-4848-B2C1-C2B8E362D77C}"), locale("MS\\0x409"),
    DisplayName("opt_replay_exception_info"): Amended]
class XeSqlPkg_opt_replay_exception_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class opt_replay_exception_info: XeSqlPkg_opt_replay_exception_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 opt_replay_error_state;
};
		
[dynamic: ToInstance, Description("Occurs when no existing DQ session that matches the executing DQ is found in the session cache."): Amended,
    Guid("{90D34B3A-8CCC-48AD-8CB5-2578F5D2A848}"), locale("MS\\0x409"),
    DisplayName("dq_session_cache_miss"): Amended]
class XeSqlPkg_dq_session_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dq_session_cache_miss: XeSqlPkg_dq_session_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 remote_server_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string linked_server_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string provider_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string user_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string nt_user_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string provider_string_openrowset;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string datasource_openrowset;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string location_openrowset;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string catalog_openrowset;
};
		
[dynamic: ToInstance, Description("Occurs when a DQ session is stored into the session cache."): Amended,
    Guid("{A9BB5E83-513B-4CCE-A181-848F303173CA}"), locale("MS\\0x409"),
    DisplayName("dq_session_cache_insert"): Amended]
class XeSqlPkg_dq_session_cache_insert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dq_session_cache_insert: XeSqlPkg_dq_session_cache_insert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 remote_server_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string user_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string nt_user_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string provider_string_openrowset;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string datasource_openrowset;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string location_openrowset;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string catalog_openrowset;
};
		
[dynamic: ToInstance, Description("Occurs when a DQ session is removed from the session cache."): Amended,
    Guid("{94116679-5AF4-4FA5-9B03-FBAD666D8888}"), locale("MS\\0x409"),
    DisplayName("dq_session_cache_remove"): Amended]
class XeSqlPkg_dq_session_cache_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dq_session_cache_remove: XeSqlPkg_dq_session_cache_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 remote_server_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string user_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string nt_user_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string provider_string_openrowset;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string datasource_openrowset;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string location_openrowset;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string catalog_openrowset;
};
		
[dynamic: ToInstance, Description("Occurs when the session cache is invalidated."): Amended,
    Guid("{FF2F8D03-1CF3-4A31-9D6D-ED2479E2C024}"), locale("MS\\0x409"),
    DisplayName("dq_session_cache_flush"): Amended]
class XeSqlPkg_dq_session_cache_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dq_session_cache_flush: XeSqlPkg_dq_session_cache_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when an attempt to acquire global lock used before attempting to create a global IDataInitialize object"): Amended,
    Guid("{E060F26F-A62B-4CEC-9C70-47ECBEDE8B1B}"), locale("MS\\0x409"),
    DisplayName("data_initialize_lock_request"): Amended]
class XeSqlPkg_data_initialize_lock_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_initialize_lock_request: XeSqlPkg_data_initialize_lock_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when global lock for global IDataInitialize object is acquired"): Amended,
    Guid("{9A895885-23AE-4DBF-8928-738829997E85}"), locale("MS\\0x409"),
    DisplayName("data_initialize_lock_acquired"): Amended]
class XeSqlPkg_data_initialize_lock_acquired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_initialize_lock_acquired: XeSqlPkg_data_initialize_lock_acquired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs immediately before global IDataInitialize object initializes"): Amended,
    Guid("{B01EBFC5-D3A2-4DEF-8AE7-A41371FC97D8}"), locale("MS\\0x409"),
    DisplayName("data_initialize_object_initialization"): Amended]
class XeSqlPkg_data_initialize_object_initialization: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_initialize_object_initialization: XeSqlPkg_data_initialize_object_initialization
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs whenever global IDataInitialize object is returned to calling function"): Amended,
    Guid("{B1C655CD-880C-4EFA-B4E1-E648A6E7B644}"), locale("MS\\0x409"),
    DisplayName("data_initialize_object_return"): Amended]
class XeSqlPkg_data_initialize_object_return: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_initialize_object_return: XeSqlPkg_data_initialize_object_return
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when Hekaton MATGen is invoked"): Amended,
    Guid("{228c0c1e-9eda-45b9-a412-ca96d75a171d}"), locale("MS\\0x409"),
    DisplayName("hekaton_matgen"): Amended]
class XeSqlPkg_hekaton_matgen: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hekaton_matgen: XeSqlPkg_hekaton_matgen
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string proc_text;
};
		
[dynamic: ToInstance, Description("Occurs when Hekaton SAL error is raised"): Amended,
    Guid("{9f4681a8-bd9c-4a1a-b900-9ea0cfbe8fca}"), locale("MS\\0x409"),
    DisplayName("hekaton_sal_error"): Amended]
class XeSqlPkg_hekaton_sal_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hekaton_sal_error: XeSqlPkg_hekaton_sal_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 feature_id;
};
		
[dynamic: ToInstance, Description("Occurs when a Hekaton procedure call dispatch goes to slow parameter passing code path"): Amended,
    Guid("{0ccbad32-1665-4bbd-b91e-cd34a912245e}"), locale("MS\\0x409"),
    DisplayName("natively_compiled_proc_slow_parameter_passing"): Amended]
class XeSqlPkg_natively_compiled_proc_slow_parameter_passing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class natively_compiled_proc_slow_parameter_passing: XeSqlPkg_natively_compiled_proc_slow_parameter_passing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(40),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"reason_none", 
					"parameter_defaults", 
					"named_parameters", 
					"parameter_conversion", 
					"parameter_error" }
			] uint8 reason;
	[WmiDataId(8), read] uint32 parameter_index;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string parameter_name;
};
		
[dynamic: ToInstance, Description("Occurs when a Hekaton module detects a design pattern which could unknowingly lead to performance degredation"): Amended,
    Guid("{8685b144-0ac5-436e-85ac-ae32b3ff10f3}"), locale("MS\\0x409"),
    DisplayName("natively_compiled_module_inefficiency_detected"): Amended]
class XeSqlPkg_natively_compiled_module_inefficiency_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class natively_compiled_module_inefficiency_detected: XeSqlPkg_natively_compiled_module_inefficiency_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(41),
				ValueMap { 
					"0" },
				Values { 
					"No 'EXECUTE AS' clause was specified" }
			] uint8 reason;
};
		
[dynamic: ToInstance, Description("Occurs when an IPC call arrives to the server"): Amended,
    Guid("{cee5a5fd-8ac5-4779-a744-881d3faceb99}"), locale("MS\\0x409"),
    DisplayName("ipc_call"): Amended]
class XeSqlPkg_ipc_call: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ipc_call: XeSqlPkg_ipc_call
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 proc_id;
};
		
[dynamic: ToInstance, Description("Occurs when the diag is notified of quantum end."): Amended,
    Guid("{4d9fd3ab-9cea-414b-961d-121e17791700}"), locale("MS\\0x409"),
    DisplayName("diag_quantum_end"): Amended]
class XeSqlPkg_diag_quantum_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class diag_quantum_end: XeSqlPkg_diag_quantum_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 cpu_time;
	[WmiDataId(6), read] uint32 logical_reads;
	[WmiDataId(7), read] uint32 logical_writes;
};
		
[dynamic: ToInstance, Description("Occurs when the optimizer times out either due to spending too much time or hitting a memory limit.  Use this event to look at all the queries that are impacted by the optimizer timeout in a particular workload. This can be very useful when tuning a particular workload."): Amended,
    Guid("{2d531280-e102-49a9-a3f9-58ef22f2877f}"), locale("MS\\0x409"),
    DisplayName("optimizer_timeout"): Amended]
class XeSqlPkg_optimizer_timeout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class optimizer_timeout: XeSqlPkg_optimizer_timeout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Abort Time out", 
					"Abort Memory limit exceeded" }
			] uint8 timeout_type;
	[WmiDataId(6), read] uint64 optimizer_timeout_task_number;
};
		
[dynamic: ToInstance, Description("Occurs when the optimizer cannot get enough join selectivity information.  Use this event to look at the queries where spatial index could be used and the optimizer guesses the spatial selectivity."): Amended,
    Guid("{d8264e5c-40d1-4b46-80cb-46ab177a380d}"), locale("MS\\0x409"),
    DisplayName("spatial_guess"): Amended]
class XeSqlPkg_spatial_guess: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class spatial_guess: XeSqlPkg_spatial_guess
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  compile_time;
};
		
[dynamic: ToInstance, Description("Occurs when the optimizer cannot use a filtered index due to parameterization.  For each such index an event is fired.  The unmatched_database_name, unmatched_schema_name, unmatched_table_name, unmatched_index_name fields give details of the filtered index that could not be used."): Amended,
    Guid("{5f686532-d28d-4e20-b0c2-d977174dbae1}"), locale("MS\\0x409"),
    DisplayName("unmatched_filtered_indexes"): Amended]
class XeSqlPkg_unmatched_filtered_indexes: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class unmatched_filtered_indexes: XeSqlPkg_unmatched_filtered_indexes
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  compile_time;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string unmatched_database_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string unmatched_schema_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string unmatched_table_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string unmatched_index_name;
};
		
[dynamic: ToInstance, Description("Occurs when a type convert issue affects the plan.  The expression value indicates the conversion that can cause inaccurate Cardinality Estimation or prevent from using a seek based plan in the query plan choice.  If performance is affected, rewriting the query could help."): Amended,
    Guid("{5e8d6c07-6c28-4a98-b96c-02f045cf381f}"), locale("MS\\0x409"),
    DisplayName("plan_affecting_convert"): Amended]
class XeSqlPkg_plan_affecting_convert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class plan_affecting_convert: XeSqlPkg_plan_affecting_convert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  compile_time;
	[WmiDataId(6), read, 
				XEMapId(43),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Unknown", 
					"Cardinality Estimate", 
					"Seek Plan" }
			] uint8 convert_issue;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string expression;
};
		
[dynamic: ToInstance, Description("Occurs when a a query antipattern is present and can potentially affect performance."): Amended,
    Guid("{dfc29279-ff79-478e-8e6b-3ea3495c6371}"), locale("MS\\0x409"),
    DisplayName("query_antipattern"): Amended]
class XeSqlPkg_query_antipattern: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_antipattern: XeSqlPkg_query_antipattern
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(99),
				ValueMap { 
					"2", 
					"3", 
					"4", 
					"1", 
					"0" },
				Values { 
					"LargeIn", 
					"LargeNumberOfOrInPredicate", 
					"Max", 
					"NonOptimalOrLogic", 
					"TypeConvertPreventingSeek" }
			] uint8 antipattern_type;
};
		
[dynamic: ToInstance, Description("Occurs when selective XML index is not used for a XML query due to the user using an unsupported path type."): Amended,
    Guid("{74bef956-4527-4693-a48f-d8a6d5010119}"), locale("MS\\0x409"),
    DisplayName("selective_xml_index_path_not_supported"): Amended]
class XeSqlPkg_selective_xml_index_path_not_supported: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class selective_xml_index_path_not_supported: XeSqlPkg_selective_xml_index_path_not_supported
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string method_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string xml_path;
};
		
[dynamic: ToInstance, Description("Occurs when the path given in the user query is not promoted in the selective XML index, and thus the index is not used."): Amended,
    Guid("{5d4c1568-f545-402e-a7bf-374647e534ef}"), locale("MS\\0x409"),
    DisplayName("selective_xml_index_path_not_indexed"): Amended]
class XeSqlPkg_selective_xml_index_path_not_indexed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class selective_xml_index_path_not_indexed: XeSqlPkg_selective_xml_index_path_not_indexed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string method_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string xml_path;
};
		
[dynamic: ToInstance, Description("Occurs when a value() method is used in a query, specifying a sql type that differs from the type specified during selective XML index creation for that path."): Amended,
    Guid("{56aa363e-e1d3-49ba-b0d8-a6b2008e5846}"), locale("MS\\0x409"),
    DisplayName("selective_xml_index_no_compatible_sql_type"): Amended]
class XeSqlPkg_selective_xml_index_no_compatible_sql_type: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class selective_xml_index_no_compatible_sql_type: XeSqlPkg_selective_xml_index_no_compatible_sql_type
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string method_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string xml_path;
};
		
[dynamic: ToInstance, Description("Occurs when the user specifies a different resulting XSD type in a query, than the one that was used to promote the path during selective XML index creation."): Amended,
    Guid("{b16218fa-8129-4360-a744-e7551f311de3}"), locale("MS\\0x409"),
    DisplayName("selective_xml_index_no_compatible_xsd_types"): Amended]
class XeSqlPkg_selective_xml_index_no_compatible_xsd_types: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class selective_xml_index_no_compatible_xsd_types: XeSqlPkg_selective_xml_index_no_compatible_xsd_types
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string method_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string xml_path;
};
		
[dynamic: ToInstance, Description("Occurs at start of MAT generation."): Amended,
    Guid("{045aa7f9-d644-4c6c-ad35-0554c11d90d5}"), locale("MS\\0x409"),
    DisplayName("xtp_matgen"): Amended]
class XeSqlPkg_xtp_matgen: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_matgen: XeSqlPkg_xtp_matgen
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs at start of XTP table creation."): Amended,
    Guid("{228d4e2f-d6c7-4127-bb55-7bbc5df4ccb2}"), locale("MS\\0x409"),
    DisplayName("xtp_create_table"): Amended]
class XeSqlPkg_xtp_create_table: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_create_table: XeSqlPkg_xtp_create_table
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs after the XTP table is created."): Amended,
    Guid("{462BD161-3CD9-4464-A5BD-99EF312A1F20}"), locale("MS\\0x409"),
    DisplayName("xtp_table_created"): Amended]
class XeSqlPkg_xtp_table_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_table_created: XeSqlPkg_xtp_table_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] sint8  is_non_durable;
};
		
[dynamic: ToInstance, Description("Occurs at start of XTP table altering."): Amended,
    Guid("{f3713875-2d4f-4348-bf80-5a0a6aa01760}"), locale("MS\\0x409"),
    DisplayName("xtp_alter_table"): Amended]
class XeSqlPkg_xtp_alter_table: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_alter_table: XeSqlPkg_xtp_alter_table
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs at start of XTP procedure creation."): Amended,
    Guid("{9d575a23-2663-4d3f-930b-446ad77310e2}"), locale("MS\\0x409"),
    DisplayName("xtp_create_procedure"): Amended]
class XeSqlPkg_xtp_create_procedure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_create_procedure: XeSqlPkg_xtp_create_procedure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs at completion of XTP object deployment."): Amended,
    Guid("{e58d2740-0db4-49c7-b8c7-55ed1804d19c}"), locale("MS\\0x409"),
    DisplayName("xtp_deploy_done"): Amended]
class XeSqlPkg_xtp_deploy_done: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_deploy_done: XeSqlPkg_xtp_deploy_done
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs at just before the XTP storage table is created."): Amended,
    Guid("{179C98A0-5A68-47F9-81F3-A2ABB608C660}"), locale("MS\\0x409"),
    DisplayName("xtp_storage_table_create"): Amended]
class XeSqlPkg_xtp_storage_table_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_storage_table_create: XeSqlPkg_xtp_storage_table_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Fired before a natively compiled procedure is executed."): Amended,
    Guid("{4adf8b3d-f931-483d-b57d-b94885a52689}"), locale("MS\\0x409"),
    DisplayName("natively_compiled_proc_execution_started"): Amended]
class XeSqlPkg_natively_compiled_proc_execution_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class natively_compiled_proc_execution_started: XeSqlPkg_natively_compiled_proc_execution_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Fired before the procedure cache entry is flushed when dropping a natively compiled procedure."): Amended,
    Guid("{d4ba6205-0fc9-4fa5-b279-b2bc50ac8c47}"), locale("MS\\0x409"),
    DisplayName("before_natively_compiled_proc_entry_removal_on_drop"): Amended]
class XeSqlPkg_before_natively_compiled_proc_entry_removal_on_drop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class before_natively_compiled_proc_entry_removal_on_drop: XeSqlPkg_before_natively_compiled_proc_entry_removal_on_drop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Fired after the procedure cache entry is flushed when dropping a natively compiled procedure."): Amended,
    Guid("{2a889a49-3cf4-4e56-abc7-36d95e2bac83}"), locale("MS\\0x409"),
    DisplayName("after_natively_compiled_proc_entry_removal_on_drop"): Amended]
class XeSqlPkg_after_natively_compiled_proc_entry_removal_on_drop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class after_natively_compiled_proc_entry_removal_on_drop: XeSqlPkg_after_natively_compiled_proc_entry_removal_on_drop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Fired after first xtp add container or create database."): Amended,
    Guid("{89C15515-CCB0-4322-AC23-469AB73C7982}"), locale("MS\\0x409"),
    DisplayName("xtp_database_deployed"): Amended]
class XeSqlPkg_xtp_database_deployed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_database_deployed: XeSqlPkg_xtp_database_deployed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(85),
				ValueMap { 
					"2", 
					"0", 
					"4", 
					"3", 
					"1" },
				Values { 
					"InitialCkpt", 
					"Invalid", 
					"Last", 
					"SwitchToInactiveUndeploy", 
					"Version" }
			] uint32 deploy_stage;
};
		
[dynamic: ToInstance, Description("Fired if the Query Store failed to capture query. The Query Store will not track statistics for this query"): Amended,
    Guid("{D09E9B06-B53D-11E1-B12D-AECC6188709B}"), locale("MS\\0x409"),
    DisplayName("query_store_failed_to_capture_query"): Amended]
class XeSqlPkg_query_store_failed_to_capture_query: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_failed_to_capture_query: XeSqlPkg_query_store_failed_to_capture_query
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 line_number;
	[WmiDataId(8), read] sint32 offset;
	[WmiDataId(9), read] sint32 offset_end;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string partial_text;
};
		
[dynamic: ToInstance, Description("Fired if the Query Store failed to capture query. The Query Store will not track statistics for this query"): Amended,
    Guid("{D09E9B06-B53D-11E1-B12D-AECC6188709B}"), locale("MS\\0x409"),
    DisplayName("query_store_failed_to_capture_query"): Amended]
class XeSqlPkg_query_store_failed_to_capture_query: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_store_failed_to_capture_query: XeSqlPkg_query_store_failed_to_capture_query
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 line_number;
	[WmiDataId(8), read] sint32 offset;
	[WmiDataId(9), read] sint32 offset_end;
	[WmiDataId(10), read] sint32 error_number;
	[WmiDataId(11), read] sint32 error_severity;
	[WmiDataId(12), read] sint32 error_state;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string partial_text;
};
		
[dynamic: ToInstance, Description("Fired if the Query Store failed to capture query. The Query Store will not track statistics for this query. Contains only core non-customer data which can be used to identify issue."): Amended,
    Guid("{6C95EBEC-2CA4-4BA0-9B3D-57C8C6977DB0}"), locale("MS\\0x409"),
    DisplayName("query_store_failed_to_capture_query_core"): Amended]
class XeSqlPkg_query_store_failed_to_capture_query_core: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_failed_to_capture_query_core: XeSqlPkg_query_store_failed_to_capture_query_core
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 error_number;
	[WmiDataId(8), read] sint32 error_severity;
	[WmiDataId(9), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Fired if the query failed to load forced plan from Query Store. Forcing policy will not be applied"): Amended,
    Guid("{A741228A-BAD1-11E1-B353-9DEB6088709B}"), locale("MS\\0x409"),
    DisplayName("query_store_failed_to_load_forced_plan"): Amended]
class XeSqlPkg_query_store_failed_to_load_forced_plan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_failed_to_load_forced_plan: XeSqlPkg_query_store_failed_to_load_forced_plan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 line_number;
	[WmiDataId(8), read] sint32 offset;
	[WmiDataId(9), read] sint32 offset_end;
	[WmiDataId(10), read] sint32 error_number;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string partial_text;
};
		
[dynamic: ToInstance, Description("Fired if the query failed to load forced plan from Query Store. Forcing policy will not be applied"): Amended,
    Guid("{A741228A-BAD1-11E1-B353-9DEB6088709B}"), locale("MS\\0x409"),
    DisplayName("query_store_failed_to_load_forced_plan"): Amended]
class XeSqlPkg_query_store_failed_to_load_forced_plan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_store_failed_to_load_forced_plan: XeSqlPkg_query_store_failed_to_load_forced_plan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 line_number;
	[WmiDataId(8), read] sint32 offset;
	[WmiDataId(9), read] sint32 offset_end;
	[WmiDataId(10), read] sint32 error_number;
	[WmiDataId(11), read] sint32 error_severity;
	[WmiDataId(12), read] sint32 error_state;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string partial_text;
};
		
[dynamic: ToInstance, Description("Fired when Query Store resource group is not initialized"): Amended,
    Guid("{898426D8-DFD8-4EE3-98EE-723E6FC469AA}"), locale("MS\\0x409"),
    DisplayName("query_store_failed_to_find_resource_group"): Amended]
class XeSqlPkg_query_store_failed_to_find_resource_group: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_failed_to_find_resource_group: XeSqlPkg_query_store_failed_to_find_resource_group
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 config_version;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string group_name;
};
		
[dynamic: ToInstance, Description("Fired when a task for Query Store is submitted for execution"): Amended,
    Guid("{DF59A99F-53F3-49A9-A659-CB73B37BFE00}"), locale("MS\\0x409"),
    DisplayName("query_store_task_submitted"): Amended]
class XeSqlPkg_query_store_task_submitted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_task_submitted: XeSqlPkg_query_store_task_submitted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 task_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string task_type_name;
};
		
[dynamic: ToInstance, Description("Fired when a task for Query Store starts execution"): Amended,
    Guid("{61A751BA-FCF4-408F-B837-FD0CBBCA27D0}"), locale("MS\\0x409"),
    DisplayName("query_store_task_started"): Amended]
class XeSqlPkg_query_store_task_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_task_started: XeSqlPkg_query_store_task_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 task_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string task_type_name;
};
		
[dynamic: ToInstance, Description("Fired when a task for Query Store finishes execution"): Amended,
    Guid("{57CEB8CB-82AE-430C-80EF-AF723EB5DB52}"), locale("MS\\0x409"),
    DisplayName("query_store_task_finished"): Amended]
class XeSqlPkg_query_store_task_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_task_finished: XeSqlPkg_query_store_task_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 task_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string task_type_name;
};
		
[dynamic: ToInstance, Description("Fired if the query failed to load forced plan from Query Store. Forcing policy will not be applied. Contains only core non-customer data which can be used to identify issue."): Amended,
    Guid("{a64f38d7-b7fd-408b-b82d-ba56f4624e51}"), locale("MS\\0x409"),
    DisplayName("query_store_failed_to_load_forced_plan_core"): Amended]
class XeSqlPkg_query_store_failed_to_load_forced_plan_core: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_failed_to_load_forced_plan_core: XeSqlPkg_query_store_failed_to_load_forced_plan_core
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 error_number;
	[WmiDataId(8), read] sint32 error_severity;
	[WmiDataId(9), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("This debug only xevent fires just after a QDS key has been generated for a query."): Amended,
    Guid("{a74a482f-e61c-4f19-b70f-9360a1808299}"), locale("MS\\0x409"),
    DisplayName("query_store_post_qds_key_generation"): Amended]
class XeSqlPkg_query_store_post_qds_key_generation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_post_qds_key_generation: XeSqlPkg_query_store_post_qds_key_generation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("This debug only xevent fires just before QDS settings are loaded during hadron async recovery."): Amended,
    Guid("{7631e23f-1bcd-40e2-ada3-522ddf155626}"), locale("MS\\0x409"),
    DisplayName("query_store_async_recovery_pre_settings_load"): Amended]
class XeSqlPkg_query_store_async_recovery_pre_settings_load: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_async_recovery_pre_settings_load: XeSqlPkg_query_store_async_recovery_pre_settings_load
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("When QDS cannot process a message correctly this XEvent is emitted with diagnostic information."): Amended,
    Guid("{53befcb6-bde0-4667-885d-908b2dded67b}"), locale("MS\\0x409"),
    DisplayName("query_store_hadron_transport_failures"): Amended]
class XeSqlPkg_query_store_hadron_transport_failures: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_hadron_transport_failures: XeSqlPkg_query_store_hadron_transport_failures
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(133),
				ValueMap { 
					"10", 
					"9", 
					"8", 
					"5", 
					"4", 
					"2", 
					"3", 
					"7", 
					"6", 
					"1" },
				Values { 
					"RECEIVE_MESSAGE_DESERIALIZATION_FAILED", 
					"RECEIVE_MESSAGE_UNABLE_TO_ALLOCATE", 
					"RECEIVE_MESSAGE_UNABLE_TO_FIND_PMO", 
					"SEND_TO_PRIMARY_CANNOT_ALLOCATE_BUFFER", 
					"SEND_TO_PRIMARY_CANNOT_ALLOCATE_MESSAGE", 
					"SEND_TO_PRIMARY_DATABASE_NOT_FOUND", 
					"SEND_TO_PRIMARY_HADRON_MANAGER_NOT_FOUND", 
					"SEND_TO_PRIMARY_UNABLE_TO_FIND_PARTNER", 
					"SEND_TO_PRIMARY_UNABLE_TO_SERIALIZE_MESSAGE", 
					"SEND_TO_PRIMARY_ZERO_SIZE_BATCH" }
			] uint32 diagnostic_info;
};
		
[dynamic: ToInstance, Description("This event will be emitted when the spexec batch compilation serialization occurs"): Amended,
    Guid("{a921eb14-97c5-4c40-aa70-fbfe883aa219}"), locale("MS\\0x409"),
    DisplayName("spexec_batch_compilation_serialization"): Amended]
class XeSqlPkg_spexec_batch_compilation_serialization: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class spexec_batch_compilation_serialization: XeSqlPkg_spexec_batch_compilation_serialization
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement is executed. This event contains stats on query execution and uses lightweight profiling infrastructure but does not have showplan xml. This event is fired only when Query Store is enabled and Query Store is tracking the query."): Amended,
    Guid("{982cdb1a-9458-45ef-b431-07edd1264001}"), locale("MS\\0x409"),
    DisplayName("query_post_execution_stats"): Amended]
class XeSqlPkg_query_post_execution_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_post_execution_stats: XeSqlPkg_query_post_execution_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint64 context_settings_id;
	[WmiDataId(8), read] uint8 query_param_type;
	[WmiDataId(9), read] uint32 statement_key_hash;
	[WmiDataId(10), read] uint64 query_hash;
	[WmiDataId(11), read] uint64 query_plan_hash;
	[WmiDataId(12), read] uint64 cpu_time;
	[WmiDataId(13), read] uint64 duration;
	[WmiDataId(14), read] uint64 dop;
	[WmiDataId(15), read] uint64 buffer_latch_wait_time;
	[WmiDataId(16), read] uint64 latch_wait_time;
	[WmiDataId(17), read] uint64 buffer_io_wait_time;
	[WmiDataId(18), read] uint64 network_io_wait_time;
	[WmiDataId(19), read] uint64 parallelism_wait_time;
	[WmiDataId(20), read, Extension("Variant")] object statement_sql_handle;
	[WmiDataId(21), read, Extension("Variant")] object batch_sql_handle;
};
		
[dynamic: ToInstance, Description("Fired on compile for every query relevant for determining if forced parameterization would be useful for this database."): Amended,
    Guid("{98DFB994-F3CA-4124-83C1-4FAE3B45FC8D}"), locale("MS\\0x409"),
    DisplayName("query_parameterization_data"): Amended]
class XeSqlPkg_query_parameterization_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_parameterization_data: XeSqlPkg_query_parameterization_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 query_param_type;
	[WmiDataId(7), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(8), read, Extension("Variant")] object query_hash;
	[WmiDataId(9), read, Extension("Variant")] object query_plan_hash;
};
		
[dynamic: ToInstance, Description("Fired on compile for every query relevant for determining if forced parameterization would be useful for this database."): Amended,
    Guid("{98DFB994-F3CA-4124-83C1-4FAE3B45FC8D}"), locale("MS\\0x409"),
    DisplayName("query_parameterization_data"): Amended]
class XeSqlPkg_query_parameterization_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_parameterization_data: XeSqlPkg_query_parameterization_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 compile_duration;
	[WmiDataId(7), read] sint64 compile_cpu_time;
	[WmiDataId(8), read] sint32 query_param_type;
	[WmiDataId(9), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(10), read, Extension("Variant")] object query_hash;
	[WmiDataId(11), read, Extension("Variant")] object query_plan_hash;
};
		
[dynamic: ToInstance, Description("Fired on compile for every query relevant for determining if forced parameterization would be useful for this database."): Amended,
    Guid("{98DFB994-F3CA-4124-83C1-4FAE3B45FC8D}"), locale("MS\\0x409"),
    DisplayName("query_parameterization_data"): Amended]
class XeSqlPkg_query_parameterization_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class query_parameterization_data: XeSqlPkg_query_parameterization_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 compile_duration;
	[WmiDataId(7), read] sint64 compile_cpu_time;
	[WmiDataId(8), read] sint32 query_param_type;
	[WmiDataId(9), read] sint8  is_cached;
	[WmiDataId(10), read] sint8  is_recompiled;
	[WmiDataId(11), read, 
				XEMapId(112),
				ValueMap { 
					"33", 
					"1", 
					"13", 
					"5", 
					"27", 
					"2", 
					"3", 
					"12", 
					"21", 
					"20", 
					"23", 
					"15", 
					"31", 
					"28", 
					"17", 
					"4", 
					"19", 
					"30", 
					"22", 
					"29", 
					"14", 
					"25", 
					"26", 
					"24", 
					"8", 
					"32", 
					"11", 
					"6", 
					"9", 
					"7", 
					"0", 
					"10", 
					"18", 
					"34", 
					"16" },
				Values { 
					"AdaptiveJoinBadPlanRecompile", 
					"Continue", 
					"CursorOptionsChanged", 
					"ExitExecStmtsFast", 
					"FidoContinue", 
					"FlushCachedPlan", 
					"FlushXStmt", 
					"ForBrowsePermsChanged", 
					"ForcePlanQDS", 
					"ForceRecompileTraceFlag", 
					"MissingPlanQDS", 
					"MPIViewChanged", 
					"MultiPlanDisabled", 
					"NewQdsHints", 
					"ParamPlanFlushed", 
					"Partial", 
					"PlanAffDBVersionChange", 
					"QDSCaptureCursorQuery", 
					"QDSForcingFailed", 
					"QdsHintsFailed", 
					"QNSubscrChanged", 
					"RecompAltPlan", 
					"RecompForFeedbackSmokeTest", 
					"RecompForInterleavedExec", 
					"RecompileDNR", 
					"ReplayRecompile", 
					"RmtRowsetChanged", 
					"SchemaChanged", 
					"SetOptChanged", 
					"StatsChanged", 
					"Success", 
					"TempTableChanged", 
					"TestPlanLinearization", 
					"UDFInliningRecompile", 
					"WithRecompileOption" }
			] sint32 compile_code;
	[WmiDataId(12), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(13), read, Extension("Variant")] object query_hash;
	[WmiDataId(14), read, Extension("Variant")] object query_plan_hash;
};
		
[dynamic: ToInstance, Description("Fired on compile for every query relevant for determining if forced parameterization would be useful for this database."): Amended,
    Guid("{98DFB994-F3CA-4124-83C1-4FAE3B45FC8D}"), locale("MS\\0x409"),
    DisplayName("query_parameterization_data"): Amended]
class XeSqlPkg_query_parameterization_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class query_parameterization_data: XeSqlPkg_query_parameterization_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 compile_duration;
	[WmiDataId(7), read] sint64 compile_cpu_time;
	[WmiDataId(8), read] sint32 query_param_type;
	[WmiDataId(9), read] sint8  is_cached;
	[WmiDataId(10), read] sint8  is_recompiled;
	[WmiDataId(11), read, 
				XEMapId(112),
				ValueMap { 
					"33", 
					"1", 
					"13", 
					"5", 
					"27", 
					"2", 
					"3", 
					"12", 
					"21", 
					"20", 
					"23", 
					"15", 
					"31", 
					"28", 
					"17", 
					"4", 
					"19", 
					"30", 
					"22", 
					"29", 
					"14", 
					"25", 
					"26", 
					"24", 
					"8", 
					"32", 
					"11", 
					"6", 
					"9", 
					"7", 
					"0", 
					"10", 
					"18", 
					"34", 
					"16" },
				Values { 
					"AdaptiveJoinBadPlanRecompile", 
					"Continue", 
					"CursorOptionsChanged", 
					"ExitExecStmtsFast", 
					"FidoContinue", 
					"FlushCachedPlan", 
					"FlushXStmt", 
					"ForBrowsePermsChanged", 
					"ForcePlanQDS", 
					"ForceRecompileTraceFlag", 
					"MissingPlanQDS", 
					"MPIViewChanged", 
					"MultiPlanDisabled", 
					"NewQdsHints", 
					"ParamPlanFlushed", 
					"Partial", 
					"PlanAffDBVersionChange", 
					"QDSCaptureCursorQuery", 
					"QDSForcingFailed", 
					"QdsHintsFailed", 
					"QNSubscrChanged", 
					"RecompAltPlan", 
					"RecompForFeedbackSmokeTest", 
					"RecompForInterleavedExec", 
					"RecompileDNR", 
					"ReplayRecompile", 
					"RmtRowsetChanged", 
					"SchemaChanged", 
					"SetOptChanged", 
					"StatsChanged", 
					"Success", 
					"TempTableChanged", 
					"TestPlanLinearization", 
					"UDFInliningRecompile", 
					"WithRecompileOption" }
			] sint32 compile_code;
	[WmiDataId(12), read] sint8  is_parameterizable;
	[WmiDataId(13), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(14), read, Extension("Variant")] object query_hash;
	[WmiDataId(15), read, Extension("Variant")] object query_plan_hash;
	[WmiDataId(16), read, Extension("Variant")] object template_hash;
};
		
[dynamic: ToInstance, Description("Fired on compile for every query relevant for determining if forced parameterization would be useful for this database."): Amended,
    Guid("{98DFB994-F3CA-4124-83C1-4FAE3B45FC8D}"), locale("MS\\0x409"),
    DisplayName("query_parameterization_data"): Amended]
class XeSqlPkg_query_parameterization_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class query_parameterization_data: XeSqlPkg_query_parameterization_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 compile_duration;
	[WmiDataId(7), read] sint64 compile_cpu_time;
	[WmiDataId(8), read] sint32 query_param_type;
	[WmiDataId(9), read] sint8  is_cached;
	[WmiDataId(10), read] sint8  is_recompiled;
	[WmiDataId(11), read, 
				XEMapId(112),
				ValueMap { 
					"33", 
					"1", 
					"13", 
					"5", 
					"27", 
					"2", 
					"3", 
					"12", 
					"21", 
					"20", 
					"23", 
					"15", 
					"31", 
					"28", 
					"17", 
					"4", 
					"19", 
					"30", 
					"22", 
					"29", 
					"14", 
					"25", 
					"26", 
					"24", 
					"8", 
					"32", 
					"11", 
					"6", 
					"9", 
					"7", 
					"0", 
					"10", 
					"18", 
					"34", 
					"16" },
				Values { 
					"AdaptiveJoinBadPlanRecompile", 
					"Continue", 
					"CursorOptionsChanged", 
					"ExitExecStmtsFast", 
					"FidoContinue", 
					"FlushCachedPlan", 
					"FlushXStmt", 
					"ForBrowsePermsChanged", 
					"ForcePlanQDS", 
					"ForceRecompileTraceFlag", 
					"MissingPlanQDS", 
					"MPIViewChanged", 
					"MultiPlanDisabled", 
					"NewQdsHints", 
					"ParamPlanFlushed", 
					"Partial", 
					"PlanAffDBVersionChange", 
					"QDSCaptureCursorQuery", 
					"QDSForcingFailed", 
					"QdsHintsFailed", 
					"QNSubscrChanged", 
					"RecompAltPlan", 
					"RecompForFeedbackSmokeTest", 
					"RecompForInterleavedExec", 
					"RecompileDNR", 
					"ReplayRecompile", 
					"RmtRowsetChanged", 
					"SchemaChanged", 
					"SetOptChanged", 
					"StatsChanged", 
					"Success", 
					"TempTableChanged", 
					"TestPlanLinearization", 
					"UDFInliningRecompile", 
					"WithRecompileOption" }
			] sint32 compile_code;
	[WmiDataId(12), read] sint8  is_parameterizable;
	[WmiDataId(13), read] uint64 parameterized_values_count;
	[WmiDataId(14), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(15), read, Extension("Variant")] object query_hash;
	[WmiDataId(16), read, Extension("Variant")] object query_plan_hash;
	[WmiDataId(17), read, Extension("Variant")] object template_hash;
};
		
[dynamic: ToInstance, Description("Fired on compile for every query relevant for determining if forced parameterization would be useful for this database."): Amended,
    Guid("{98DFB994-F3CA-4124-83C1-4FAE3B45FC8D}"), locale("MS\\0x409"),
    DisplayName("query_parameterization_data"): Amended]
class XeSqlPkg_query_parameterization_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class query_parameterization_data: XeSqlPkg_query_parameterization_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 compile_duration;
	[WmiDataId(7), read] sint64 compile_cpu_time;
	[WmiDataId(8), read] sint32 query_param_type;
	[WmiDataId(9), read] sint8  is_cached;
	[WmiDataId(10), read] sint8  is_recompiled;
	[WmiDataId(11), read, 
				XEMapId(112),
				ValueMap { 
					"33", 
					"1", 
					"13", 
					"5", 
					"27", 
					"2", 
					"3", 
					"12", 
					"21", 
					"20", 
					"23", 
					"15", 
					"31", 
					"28", 
					"17", 
					"4", 
					"19", 
					"30", 
					"22", 
					"29", 
					"14", 
					"25", 
					"26", 
					"24", 
					"8", 
					"32", 
					"11", 
					"6", 
					"9", 
					"7", 
					"0", 
					"10", 
					"18", 
					"34", 
					"16" },
				Values { 
					"AdaptiveJoinBadPlanRecompile", 
					"Continue", 
					"CursorOptionsChanged", 
					"ExitExecStmtsFast", 
					"FidoContinue", 
					"FlushCachedPlan", 
					"FlushXStmt", 
					"ForBrowsePermsChanged", 
					"ForcePlanQDS", 
					"ForceRecompileTraceFlag", 
					"MissingPlanQDS", 
					"MPIViewChanged", 
					"MultiPlanDisabled", 
					"NewQdsHints", 
					"ParamPlanFlushed", 
					"Partial", 
					"PlanAffDBVersionChange", 
					"QDSCaptureCursorQuery", 
					"QDSForcingFailed", 
					"QdsHintsFailed", 
					"QNSubscrChanged", 
					"RecompAltPlan", 
					"RecompForFeedbackSmokeTest", 
					"RecompForInterleavedExec", 
					"RecompileDNR", 
					"ReplayRecompile", 
					"RmtRowsetChanged", 
					"SchemaChanged", 
					"SetOptChanged", 
					"StatsChanged", 
					"Success", 
					"TempTableChanged", 
					"TestPlanLinearization", 
					"UDFInliningRecompile", 
					"WithRecompileOption" }
			] sint32 compile_code;
	[WmiDataId(12), read] sint8  has_literals;
	[WmiDataId(13), read] sint8  is_parameterizable;
	[WmiDataId(14), read] uint64 parameterized_values_count;
	[WmiDataId(15), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(16), read, Extension("Variant")] object query_hash;
	[WmiDataId(17), read, Extension("Variant")] object query_plan_hash;
	[WmiDataId(18), read, Extension("Variant")] object template_hash;
};
		
[dynamic: ToInstance, Description("Fired on compile for every query relevant for determining if forced parameterization would be useful for this database."): Amended,
    Guid("{98DFB994-F3CA-4124-83C1-4FAE3B45FC8D}"), locale("MS\\0x409"),
    DisplayName("query_parameterization_data"): Amended]
class XeSqlPkg_query_parameterization_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(7)]
class query_parameterization_data: XeSqlPkg_query_parameterization_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 compile_duration;
	[WmiDataId(7), read] sint64 compile_cpu_time;
	[WmiDataId(8), read] sint32 query_param_type;
	[WmiDataId(9), read] sint8  is_cached;
	[WmiDataId(10), read] sint8  is_recompiled;
	[WmiDataId(11), read, 
				XEMapId(112),
				ValueMap { 
					"33", 
					"1", 
					"13", 
					"5", 
					"27", 
					"2", 
					"3", 
					"12", 
					"21", 
					"20", 
					"23", 
					"15", 
					"31", 
					"28", 
					"17", 
					"4", 
					"19", 
					"30", 
					"22", 
					"29", 
					"14", 
					"25", 
					"26", 
					"24", 
					"8", 
					"32", 
					"11", 
					"6", 
					"9", 
					"7", 
					"0", 
					"10", 
					"18", 
					"34", 
					"16" },
				Values { 
					"AdaptiveJoinBadPlanRecompile", 
					"Continue", 
					"CursorOptionsChanged", 
					"ExitExecStmtsFast", 
					"FidoContinue", 
					"FlushCachedPlan", 
					"FlushXStmt", 
					"ForBrowsePermsChanged", 
					"ForcePlanQDS", 
					"ForceRecompileTraceFlag", 
					"MissingPlanQDS", 
					"MPIViewChanged", 
					"MultiPlanDisabled", 
					"NewQdsHints", 
					"ParamPlanFlushed", 
					"Partial", 
					"PlanAffDBVersionChange", 
					"QDSCaptureCursorQuery", 
					"QDSForcingFailed", 
					"QdsHintsFailed", 
					"QNSubscrChanged", 
					"RecompAltPlan", 
					"RecompForFeedbackSmokeTest", 
					"RecompForInterleavedExec", 
					"RecompileDNR", 
					"ReplayRecompile", 
					"RmtRowsetChanged", 
					"SchemaChanged", 
					"SetOptChanged", 
					"StatsChanged", 
					"Success", 
					"TempTableChanged", 
					"TestPlanLinearization", 
					"UDFInliningRecompile", 
					"WithRecompileOption" }
			] sint32 compile_code;
	[WmiDataId(12), read] sint8  has_literals;
	[WmiDataId(13), read] sint8  is_parameterizable;
	[WmiDataId(14), read] uint64 parameterized_values_count;
	[WmiDataId(15), read] sint8  has_external_extraction;
	[WmiDataId(16), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(17), read, Extension("Variant")] object query_hash;
	[WmiDataId(18), read, Extension("Variant")] object query_plan_hash;
	[WmiDataId(19), read, Extension("Variant")] object template_hash;
};
		
[dynamic: ToInstance, Description("Fired on compile for every query relevant for determining if forced parameterization would be useful for this database."): Amended,
    Guid("{98DFB994-F3CA-4124-83C1-4FAE3B45FC8D}"), locale("MS\\0x409"),
    DisplayName("query_parameterization_data"): Amended]
class XeSqlPkg_query_parameterization_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(8)]
class query_parameterization_data: XeSqlPkg_query_parameterization_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 compile_duration;
	[WmiDataId(7), read] sint64 compile_cpu_time;
	[WmiDataId(8), read] sint32 query_param_type;
	[WmiDataId(9), read] sint8  is_cached;
	[WmiDataId(10), read] sint8  is_recompiled;
	[WmiDataId(11), read, 
				XEMapId(112),
				ValueMap { 
					"33", 
					"1", 
					"13", 
					"5", 
					"27", 
					"2", 
					"3", 
					"12", 
					"21", 
					"20", 
					"23", 
					"15", 
					"31", 
					"28", 
					"17", 
					"4", 
					"19", 
					"30", 
					"22", 
					"29", 
					"14", 
					"25", 
					"26", 
					"24", 
					"8", 
					"32", 
					"11", 
					"6", 
					"9", 
					"7", 
					"0", 
					"10", 
					"18", 
					"34", 
					"16" },
				Values { 
					"AdaptiveJoinBadPlanRecompile", 
					"Continue", 
					"CursorOptionsChanged", 
					"ExitExecStmtsFast", 
					"FidoContinue", 
					"FlushCachedPlan", 
					"FlushXStmt", 
					"ForBrowsePermsChanged", 
					"ForcePlanQDS", 
					"ForceRecompileTraceFlag", 
					"MissingPlanQDS", 
					"MPIViewChanged", 
					"MultiPlanDisabled", 
					"NewQdsHints", 
					"ParamPlanFlushed", 
					"Partial", 
					"PlanAffDBVersionChange", 
					"QDSCaptureCursorQuery", 
					"QDSForcingFailed", 
					"QdsHintsFailed", 
					"QNSubscrChanged", 
					"RecompAltPlan", 
					"RecompForFeedbackSmokeTest", 
					"RecompForInterleavedExec", 
					"RecompileDNR", 
					"ReplayRecompile", 
					"RmtRowsetChanged", 
					"SchemaChanged", 
					"SetOptChanged", 
					"StatsChanged", 
					"Success", 
					"TempTableChanged", 
					"TestPlanLinearization", 
					"UDFInliningRecompile", 
					"WithRecompileOption" }
			] sint32 compile_code;
	[WmiDataId(12), read] sint8  has_literals;
	[WmiDataId(13), read] sint8  is_parameterizable;
	[WmiDataId(14), read] uint64 parameterized_values_count;
	[WmiDataId(15), read] sint8  has_external_extraction;
	[WmiDataId(16), read, 
				XEMapId(113),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"0" },
				Values { 
					"FeedbackApplied", 
					"FeedbackGetTimeOut", 
					"FeedbackInvalid", 
					"FeedbackNotApplied" }
			] uint8 mgf_persistence_used_status;
	[WmiDataId(17), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(18), read, Extension("Variant")] object query_hash;
	[WmiDataId(19), read, Extension("Variant")] object query_plan_hash;
	[WmiDataId(20), read, Extension("Variant")] object template_hash;
};
		
[dynamic: ToInstance, Description("Fired on compile for every query relevant for determining if forced parameterization would be useful for this database."): Amended,
    Guid("{98DFB994-F3CA-4124-83C1-4FAE3B45FC8D}"), locale("MS\\0x409"),
    DisplayName("query_parameterization_data"): Amended]
class XeSqlPkg_query_parameterization_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(9)]
class query_parameterization_data: XeSqlPkg_query_parameterization_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 compile_duration;
	[WmiDataId(7), read] sint64 compile_cpu_time;
	[WmiDataId(8), read] sint64 compile_memory;
	[WmiDataId(9), read] sint64 cached_plan_size;
	[WmiDataId(10), read] sint32 query_param_type;
	[WmiDataId(11), read] sint8  is_cached;
	[WmiDataId(12), read] sint8  is_recompiled;
	[WmiDataId(13), read, 
				XEMapId(112),
				ValueMap { 
					"33", 
					"1", 
					"13", 
					"5", 
					"27", 
					"2", 
					"3", 
					"12", 
					"21", 
					"20", 
					"23", 
					"15", 
					"31", 
					"28", 
					"17", 
					"4", 
					"19", 
					"30", 
					"22", 
					"29", 
					"14", 
					"25", 
					"26", 
					"24", 
					"8", 
					"32", 
					"11", 
					"6", 
					"9", 
					"7", 
					"0", 
					"10", 
					"18", 
					"34", 
					"16" },
				Values { 
					"AdaptiveJoinBadPlanRecompile", 
					"Continue", 
					"CursorOptionsChanged", 
					"ExitExecStmtsFast", 
					"FidoContinue", 
					"FlushCachedPlan", 
					"FlushXStmt", 
					"ForBrowsePermsChanged", 
					"ForcePlanQDS", 
					"ForceRecompileTraceFlag", 
					"MissingPlanQDS", 
					"MPIViewChanged", 
					"MultiPlanDisabled", 
					"NewQdsHints", 
					"ParamPlanFlushed", 
					"Partial", 
					"PlanAffDBVersionChange", 
					"QDSCaptureCursorQuery", 
					"QDSForcingFailed", 
					"QdsHintsFailed", 
					"QNSubscrChanged", 
					"RecompAltPlan", 
					"RecompForFeedbackSmokeTest", 
					"RecompForInterleavedExec", 
					"RecompileDNR", 
					"ReplayRecompile", 
					"RmtRowsetChanged", 
					"SchemaChanged", 
					"SetOptChanged", 
					"StatsChanged", 
					"Success", 
					"TempTableChanged", 
					"TestPlanLinearization", 
					"UDFInliningRecompile", 
					"WithRecompileOption" }
			] sint32 compile_code;
	[WmiDataId(14), read] sint8  has_literals;
	[WmiDataId(15), read] sint8  is_parameterizable;
	[WmiDataId(16), read] uint64 parameterized_values_count;
	[WmiDataId(17), read] sint8  has_external_extraction;
	[WmiDataId(18), read, 
				XEMapId(113),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"0" },
				Values { 
					"FeedbackApplied", 
					"FeedbackGetTimeOut", 
					"FeedbackInvalid", 
					"FeedbackNotApplied" }
			] uint8 mgf_persistence_used_status;
	[WmiDataId(19), read] sint8  is_query_variant;
	[WmiDataId(20), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(21), read, Extension("Variant")] object query_hash;
	[WmiDataId(22), read, Extension("Variant")] object query_plan_hash;
	[WmiDataId(23), read, Extension("Variant")] object template_hash;
};
		
[dynamic: ToInstance, Description("Fired if generating parameter prefix failed due to an exception."): Amended,
    Guid("{4277D409-5CFC-47C1-AD94-F893DE652C3A}"), locale("MS\\0x409"),
    DisplayName("generate_parameter_prefix_failed"): Amended]
class XeSqlPkg_generate_parameter_prefix_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class generate_parameter_prefix_failed: XeSqlPkg_generate_parameter_prefix_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 error_number;
	[WmiDataId(7), read] uint32 error_severity;
	[WmiDataId(8), read] uint32 error_state;
};
		
[dynamic: ToInstance, Description("Fired when forced parameterization was not applied for the whole statement."): Amended,
    Guid("{57ee9718-64d0-4214-b676-e2e600d51591}"), locale("MS\\0x409"),
    DisplayName("forced_param_statement_ignored_reason"): Amended]
class XeSqlPkg_forced_param_statement_ignored_reason: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class forced_param_statement_ignored_reason: XeSqlPkg_forced_param_statement_ignored_reason
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(115),
				ValueMap { 
					"19", 
					"18", 
					"12", 
					"11", 
					"14", 
					"13", 
					"15", 
					"9", 
					"10", 
					"25", 
					"1", 
					"8", 
					"7", 
					"17", 
					"20", 
					"22", 
					"21", 
					"23", 
					"24", 
					"28", 
					"2", 
					"0", 
					"27", 
					"16", 
					"26", 
					"4", 
					"3", 
					"5", 
					"6" },
				Values { 
					"AnsiNullsOff", 
					"AnsiPaddingOff", 
					"BucketEndStatementNoVarsBucketized", 
					"BucketEndStatementUnreplacedVar", 
					"BucketVarCursor", 
					"BucketVarNotParameter", 
					"BucketVarOutput", 
					"BucketXvtEmpty", 
					"BucketXvtXml", 
					"Cursor", 
					"Error", 
					"HintCompileVarValue", 
					"HintRecompile", 
					"HintSimpleParam", 
					"InsideFunction", 
					"InsideReplProc", 
					"InsideStoredProc", 
					"InsideTrigger", 
					"InsideView", 
					"Max", 
					"MaxVars", 
					"None", 
					"QueryStoreHintSimpleParam", 
					"RegularPlanGuide", 
					"ReplacedTooMuchConstants", 
					"TableVariable", 
					"Variable", 
					"VariableAssignment", 
					"WhereCurrentOf" }
			] uint8 reason;
};
		
[dynamic: ToInstance, Description("Fired for every clause that was skipped during forced parameterization."): Amended,
    Guid("{a13dd547-ccfd-4c7e-b895-5f3dba267e4d}"), locale("MS\\0x409"),
    DisplayName("forced_param_clause_skipped_reason"): Amended]
class XeSqlPkg_forced_param_clause_skipped_reason: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class forced_param_clause_skipped_reason: XeSqlPkg_forced_param_clause_skipped_reason
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(116),
				ValueMap { 
					"17", 
					"15", 
					"11", 
					"8", 
					"4", 
					"3", 
					"6", 
					"9", 
					"5", 
					"1", 
					"10", 
					"2", 
					"7", 
					"0", 
					"16", 
					"12", 
					"13", 
					"14" },
				Values { 
					"CheckSum", 
					"ConstFoldableExpr", 
					"EcDMLOutput", 
					"EcDoubleColonFunctionCall", 
					"EcGroupBy", 
					"EcHaving", 
					"EcLike", 
					"EcOpenRowset", 
					"EcOrderBy", 
					"EcSelectList", 
					"EcTableSample", 
					"EcTopOrPaging", 
					"EcTSEqualCall", 
					"None", 
					"StyleConvert", 
					"XvtDate", 
					"XvtGuid", 
					"XvtNull" }
			] uint8 reason;
};
		
[dynamic: ToInstance, Description("Occurs when the parameter sensitive plan feature is skipped. Use this event to monitor the reason why parameter sensitive plan optimization is skipped."): Amended,
    Guid("{ADF4FB2A-453D-41D4-9B2B-A00E9F9A0EF3}"), locale("MS\\0x409"),
    DisplayName("parameter_sensitive_plan_optimization_skipped_reason"): Amended]
class XeSqlPkg_parameter_sensitive_plan_optimization_skipped_reason: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parameter_sensitive_plan_optimization_skipped_reason: XeSqlPkg_parameter_sensitive_plan_optimization_skipped_reason
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(117),
				ValueMap { 
					"4", 
					"14", 
					"31", 
					"36", 
					"13", 
					"24", 
					"9", 
					"16", 
					"22", 
					"17", 
					"23", 
					"11", 
					"3", 
					"25", 
					"5", 
					"0", 
					"28", 
					"2", 
					"37", 
					"30", 
					"18", 
					"27", 
					"20", 
					"26", 
					"21", 
					"10", 
					"12", 
					"1", 
					"29", 
					"34", 
					"8", 
					"15", 
					"7", 
					"33", 
					"35", 
					"32", 
					"19", 
					"6" },
				Values { 
					"AutoParameterized", 
					"CLRModule", 
					"CompatLevelBelow160", 
					"CompilationTimeThresholdExceeded", 
					"CursorWithPopulate", 
					"DatatypesIncompat", 
					"DBScopedConfigOff", 
					"DistributedQuery", 
					"EDC", 
					"FullText", 
					"GQ", 
					"HasLocalVar", 
					"InMemoryOLTP", 
					"LoadStatsFailed", 
					"NonCacheable", 
					"None", 
					"NonInlinedUDF", 
					"NoParameter", 
					"NotUserQuery", 
					"OtherThresholdNotMet", 
					"OutputOrModifiedParam", 
					"ParamSniffDisabled", 
					"PDW", 
					"PlanGuide", 
					"Polybase", 
					"QueryHint", 
					"QueryTextTooLarge", 
					"QueryVariant", 
					"SkewnessThresholdNotMet", 
					"SystemDB", 
					"TableVariable", 
					"Tvf", 
					"Unrecompilable", 
					"UnsupportedComparisonType", 
					"UnsupportedObject", 
					"UnsupportedStatementType", 
					"UsePlan", 
					"WithRecompileFlag" }
			] sint32 reason;
};
		
[dynamic: ToInstance, Description("This event is fired when a query is discovered to have parameter sensitivity. This telemetry will help us in identifying queries that          are parameter sensitive and how skewed the columns involved in the query are. This is for internal analysis only."): Amended,
    Guid("{7cc89484-7863-49d6-b4f3-4f762d1d5742}"), locale("MS\\0x409"),
    DisplayName("query_with_parameter_sensitivity"): Amended]
class XeSqlPkg_query_with_parameter_sensitivity: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_with_parameter_sensitivity: XeSqlPkg_query_with_parameter_sensitivity
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 interesting_predicate_count;
	[WmiDataId(6), read] real64 max_skewness;
};
		
[dynamic: ToInstance, Description("This event is fired when a query is discovered to have parameter sensitivity. This telemetry will help us in identifying queries that          are parameter sensitive and how skewed the columns involved in the query are. This is for internal analysis only."): Amended,
    Guid("{7cc89484-7863-49d6-b4f3-4f762d1d5742}"), locale("MS\\0x409"),
    DisplayName("query_with_parameter_sensitivity"): Amended]
class XeSqlPkg_query_with_parameter_sensitivity: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_with_parameter_sensitivity: XeSqlPkg_query_with_parameter_sensitivity
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 interesting_predicate_count;
	[WmiDataId(6), read] real64 max_skewness;
	[WmiDataId(7), read] uint16 query_type;
	[WmiDataId(8), read] sint8  psp_optimization_supported;
};
		
[dynamic: ToInstance, Description("Fired when parameter sensitive plan is tested."): Amended,
    Guid("{0395550D-2697-484A-9103-545E4F2335B5}"), locale("MS\\0x409"),
    DisplayName("parameter_sensitive_plan_testing"): Amended]
class XeSqlPkg_parameter_sensitive_plan_testing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parameter_sensitive_plan_testing: XeSqlPkg_parameter_sensitive_plan_testing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("This event is fired when a query uses Parameter Sensitive Plan (PSP) Optimization feature."): Amended,
    Guid("{3673C3DE-238B-4689-B741-D6396CE34A83}"), locale("MS\\0x409"),
    DisplayName("parameter_sensitive_plan_optimization"): Amended]
class XeSqlPkg_parameter_sensitive_plan_optimization: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parameter_sensitive_plan_optimization: XeSqlPkg_parameter_sensitive_plan_optimization
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_query_variant;
	[WmiDataId(6), read] uint32 predicate_count;
	[WmiDataId(7), read] uint32 query_variant_id;
	[WmiDataId(8), read] sint64 original_query_plan_hash_signed;
};
		
[dynamic: ToInstance, Description("Occurs when trivial plan is detected"): Amended,
    Guid("{B9CC4259-E48F-479D-9BEB-384D1718C6C1}"), locale("MS\\0x409"),
    DisplayName("index_advisor_trivial_plan_scan"): Amended]
class XeSqlPkg_index_advisor_trivial_plan_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class index_advisor_trivial_plan_scan: XeSqlPkg_index_advisor_trivial_plan_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_trivial_plan;
	[WmiDataId(6), read] sint8  is_scan_table_or_index_with_predicate;
	[WmiDataId(7), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(8), read, Extension("Variant")] object query_hash;
	[WmiDataId(9), read, Extension("Variant")] object query_plan_hash;
};
		
[dynamic: ToInstance, Description("Occurs when the query optimizer chooses to use index marked with Ignore in Optimization flag."): Amended,
    Guid("{c3e95d27-a610-4a55-8721-f0722c3542b2}"), locale("MS\\0x409"),
    DisplayName("index_advisor_ignore_in_optimization_failed"): Amended]
class XeSqlPkg_index_advisor_ignore_in_optimization_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class index_advisor_ignore_in_optimization_failed: XeSqlPkg_index_advisor_ignore_in_optimization_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read, Extension("Variant")] object query_hash;
};
		
[dynamic: ToInstance, Description("Changing the RgLog value for RbIo log managed databases."): Amended,
    Guid("{4c227383-30b3-4201-9bba-0bceb072dcc4}"), locale("MS\\0x409"),
    DisplayName("set_rbio_rg_log_limit"): Amended]
class XeSqlPkg_set_rbio_rg_log_limit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class set_rbio_rg_log_limit: XeSqlPkg_set_rbio_rg_log_limit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 log_rate_bps;
	[WmiDataId(6), read] uint32 duration_ms;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string wait_type;
	[WmiDataId(8), read, Extension("Guid")] guid actor;
	[WmiDataId(9), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string throttle_reason;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Indicates if RbIoRg log throttle has happened and the Actor responsible for it."): Amended,
    Guid("{df4bfca6-fa85-4cce-aa05-9656faafa6cc}"), locale("MS\\0x409"),
    DisplayName("rbio_rg_log_throttle_info"): Amended]
class XeSqlPkg_rbio_rg_log_throttle_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbio_rg_log_throttle_info: XeSqlPkg_rbio_rg_log_throttle_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  enabled;
	[WmiDataId(6), read] uint32 log_rate_bps;
	[WmiDataId(7), read] uint32 duration_ms;
	[WmiDataId(8), read] uint64 wait_time_ms;
	[WmiDataId(9), read] uint64 wait_count;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string wait_type;
	[WmiDataId(11), read, Extension("Guid")] guid actor;
	[WmiDataId(12), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(13), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string throttling_source;
};
		
[dynamic: ToInstance, Description("Occurs after an XTP table has been dropped."): Amended,
    Guid("{e21c21df-2366-402f-b78a-10b289387412}"), locale("MS\\0x409"),
    DisplayName("xtp_drop_table"): Amended]
class XeSqlPkg_xtp_drop_table: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_drop_table: XeSqlPkg_xtp_drop_table
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs when a stackHasher failure was injected."): Amended,
    Guid("{DFCB03C5-DD44-4DA8-86A7-35E33383ED66}"), locale("MS\\0x409"),
    DisplayName("sqlserver_stackhasher_failure_injection"): Amended]
class XeSqlPkg_sqlserver_stackhasher_failure_injection: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sqlserver_stackhasher_failure_injection: XeSqlPkg_sqlserver_stackhasher_failure_injection
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Security Policy DDL stage reporting."): Amended,
    Guid("{8572c3bc-af1e-441d-b7db-bfbb2e438246}"), locale("MS\\0x409"),
    DisplayName("security_policy_ddl_stage"): Amended]
class XeSqlPkg_security_policy_ddl_stage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_policy_ddl_stage: XeSqlPkg_security_policy_ddl_stage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_alter;
	[WmiDataId(6), read] uint8 stage;
};
		
[dynamic: ToInstance, Description("Specifies whether the security policy was enforce for the query."): Amended,
    Guid("{010a82f4-830e-4829-ae18-1988f707f520}"), locale("MS\\0x409"),
    DisplayName("security_policy_enforced"): Amended]
class XeSqlPkg_security_policy_enforced: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class security_policy_enforced: XeSqlPkg_security_policy_enforced
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_enforced;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs when the table T-SQL ddl for stretching data is processed."): Amended,
    Guid("{5AA7AAA3-C5BD-4C9A-BFD3-8363A48C733A}"), locale("MS\\0x409"),
    DisplayName("remote_data_archive_table_ddl"): Amended]
class XeSqlPkg_remote_data_archive_table_ddl: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class remote_data_archive_table_ddl: XeSqlPkg_remote_data_archive_table_ddl
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(102),
				ValueMap { 
					"0", 
					"1", 
					"6", 
					"2", 
					"5", 
					"3", 
					"4" },
				Values { 
					"eAlterTableStmt_disable", 
					"eAlterTableStmt_enable", 
					"eAlterTableStmt_merge", 
					"eAlterTableStmt_rebuild", 
					"eAlterTableStmt_split", 
					"eAlterTableStmt_switch", 
					"eAlterTableStmt_unstretch" }
			] uint8 statement_type;
	[WmiDataId(6), read, 
				XEMapId(105),
				ValueMap { 
					"2", 
					"1", 
					"0" },
				Values { 
					"x_esd_Inbound", 
					"x_esd_Outbound", 
					"x_esd_Paused" }
			] uint8 migration_state;
	[WmiDataId(7), read] sint8  is_predicate_specified;
};
		
[dynamic: ToInstance, Description("Occurs when the database T-SQL ddl for stretching data is processed."): Amended,
    Guid("{9AEC5058-A45C-47FA-B98F-E310F3E07AD6}"), locale("MS\\0x409"),
    DisplayName("remote_data_archive_db_ddl"): Amended]
class XeSqlPkg_remote_data_archive_db_ddl: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class remote_data_archive_db_ddl: XeSqlPkg_remote_data_archive_db_ddl
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(103),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"STRETCHDB_DISABLE", 
					"STRETCHDB_ENABLE", 
					"STRETCHDB_MODIFY" }
			] uint8 ddl_action;
	[WmiDataId(6), read] sint8  federated_service_account;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string server_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string credential_name;
};
		
[dynamic: ToInstance, Description("Occurs when a provisioning operation starts or ends."): Amended,
    Guid("{23B8B77E-D766-44A8-9D08-D7838716B289}"), locale("MS\\0x409"),
    DisplayName("remote_data_archive_provision_operation"): Amended]
class XeSqlPkg_remote_data_archive_provision_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class remote_data_archive_provision_operation: XeSqlPkg_remote_data_archive_provision_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read, 
				XEMapId(106),
				ValueMap { 
					"10", 
					"3", 
					"5", 
					"7", 
					"12", 
					"13", 
					"1", 
					"9", 
					"0", 
					"11" },
				Values { 
					"OpCreateDbCopy", 
					"OpCreateExtDataSource", 
					"OpCreateRemoteDatabase", 
					"OpDropRemoteDatabase", 
					"OpGetEngineEdition", 
					"OpInsertOrUpdateRpoDuration", 
					"OpPrepareMetadata", 
					"OpRemoveMetadata", 
					"OpValidatePrerequisites", 
					"OpWaitForDbCopy" }
			] uint8 operation_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string properties;
};
		
[dynamic: ToInstance, Description("Occurs when RelOp_Get is replaced during query rewrite for Stretch."): Amended,
    Guid("{6714452B-6AB3-405F-9A54-0350447CC78C}"), locale("MS\\0x409"),
    DisplayName("remote_data_archive_query_rewrite"): Amended]
class XeSqlPkg_remote_data_archive_query_rewrite: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class remote_data_archive_query_rewrite: XeSqlPkg_remote_data_archive_query_rewrite
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Debug trace of stretch migration actions."): Amended,
    Guid("{E477C497-A8AB-4838-8358-0EE3E75A3F25}"), locale("MS\\0x409"),
    DisplayName("stretch_migration_debug_trace"): Amended]
class XeSqlPkg_stretch_migration_debug_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_migration_debug_trace: XeSqlPkg_stretch_migration_debug_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string debug_trace;
};
		
[dynamic: ToInstance, Description("Queue a packet for starting migration of the database and object."): Amended,
    Guid("{EEB2A618-8983-45df-B75B-DA4C4AE1485E}"), locale("MS\\0x409"),
    DisplayName("stretch_migration_queue_migration"): Amended]
class XeSqlPkg_stretch_migration_queue_migration: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_migration_queue_migration: XeSqlPkg_stretch_migration_queue_migration
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint8  next_object;
};
		
[dynamic: ToInstance, Description("Event raised when a stretch migration task packet is requeued."): Amended,
    Guid("{8B7E0435-6F67-404D-85B6-8B9CD7A8A0FD}"), locale("MS\\0x409"),
    DisplayName("stretch_migration_requeue_migration"): Amended]
class XeSqlPkg_stretch_migration_requeue_migration: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_migration_requeue_migration: XeSqlPkg_stretch_migration_requeue_migration
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Event raised when a stretch migration task is dequeued for a database."): Amended,
    Guid("{B19B6472-00E6-4C61-8F1A-1463574666AF}"), locale("MS\\0x409"),
    DisplayName("stretch_migration_dequeue_migration"): Amended]
class XeSqlPkg_stretch_migration_dequeue_migration: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_migration_dequeue_migration: XeSqlPkg_stretch_migration_dequeue_migration
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint8  database_not_updateable;
	[WmiDataId(7), read] sint8  no_stretched_objects;
	[WmiDataId(8), read] sint8  stretch_not_connected;
};
		
[dynamic: ToInstance, Description("Signals that reauthorization is going to try to acquire lock"): Amended,
    Guid("{D8A9DEF2-701C-45e5-82A1-9C269CECF46E}"), locale("MS\\0x409"),
    DisplayName("stretch_reauthorization_start_wait_for_lock"): Amended]
class XeSqlPkg_stretch_reauthorization_start_wait_for_lock: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_reauthorization_start_wait_for_lock: XeSqlPkg_stretch_reauthorization_start_wait_for_lock
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
};
		
[dynamic: ToInstance, Description("Signals that reauthorization acquired exclusive lock on stretch resource"): Amended,
    Guid("{ED13D291-3206-4C0A-A9EE-E7DF05F948E1}"), locale("MS\\0x409"),
    DisplayName("stretch_reauthorization_acquired_lock"): Amended]
class XeSqlPkg_stretch_reauthorization_acquired_lock: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_reauthorization_acquired_lock: XeSqlPkg_stretch_reauthorization_acquired_lock
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
};
		
[dynamic: ToInstance, Description("Migration thread is going to sleep for few minutes"): Amended,
    Guid("{75D3D545-8B12-4321-9322-0C7EFAE0B79F}"), locale("MS\\0x409"),
    DisplayName("stretch_start_migration_sleep"): Amended]
class XeSqlPkg_stretch_start_migration_sleep: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_start_migration_sleep: XeSqlPkg_stretch_start_migration_sleep
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Migration going to try to acquire lock"): Amended,
    Guid("{02B4CC90-51BB-41DB-99AA-B21DDC9FADCB}"), locale("MS\\0x409"),
    DisplayName("stretch_migration_start_wait_for_lock"): Amended]
class XeSqlPkg_stretch_migration_start_wait_for_lock: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_migration_start_wait_for_lock: XeSqlPkg_stretch_migration_start_wait_for_lock
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Migration has acquired shared lock on stretch resource"): Amended,
    Guid("{9AF1A071-220E-49EC-A050-29FB19C1AF76}"), locale("MS\\0x409"),
    DisplayName("stretch_migration_acquired_lock"): Amended]
class XeSqlPkg_stretch_migration_acquired_lock: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_migration_acquired_lock: XeSqlPkg_stretch_migration_acquired_lock
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Migration failed to acquire lock"): Amended,
    Guid("{77359BE2-206A-41BC-B567-B503AECEF8AC}"), locale("MS\\0x409"),
    DisplayName("stretch_migration_failed_to_acquire_lock"): Amended]
class XeSqlPkg_stretch_migration_failed_to_acquire_lock: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_migration_failed_to_acquire_lock: XeSqlPkg_stretch_migration_failed_to_acquire_lock
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Start migration of the database and object."): Amended,
    Guid("{9A19731D-02F9-40fd-9196-048142A3BBC5}"), locale("MS\\0x409"),
    DisplayName("stretch_migration_start_migration"): Amended]
class XeSqlPkg_stretch_migration_start_migration: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_migration_start_migration: XeSqlPkg_stretch_migration_start_migration
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Start unmigration of the database and object."): Amended,
    Guid("{DCD97144-0EAA-4DB0-9802-8FD83D3407E6}"), locale("MS\\0x409"),
    DisplayName("stretch_migration_start_unmigration"): Amended]
class XeSqlPkg_stretch_migration_start_unmigration: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_migration_start_unmigration: XeSqlPkg_stretch_migration_start_unmigration
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Start data reconciliation of the database and object."): Amended,
    Guid("{65A170BA-2E93-482E-98E3-DD2EB69724BD}"), locale("MS\\0x409"),
    DisplayName("stretch_table_start_data_reconciliation"): Amended]
class XeSqlPkg_stretch_table_start_data_reconciliation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_start_data_reconciliation: XeSqlPkg_stretch_table_start_data_reconciliation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Complete data reconciliation of the database and object."): Amended,
    Guid("{8FCD78EE-2AA1-40FB-810F-948B52283763}"), locale("MS\\0x409"),
    DisplayName("stretch_table_complete_data_reconciliation"): Amended]
class XeSqlPkg_stretch_table_complete_data_reconciliation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_complete_data_reconciliation: XeSqlPkg_stretch_table_complete_data_reconciliation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Call sp_stretch_get_batch_id"): Amended,
    Guid("{4C4E69E2-0ED8-44F0-9A4B-3216D1F0F13A}"), locale("MS\\0x409"),
    DisplayName("stretch_sp_migration_get_batch_id"): Amended]
class XeSqlPkg_stretch_sp_migration_get_batch_id: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class stretch_sp_migration_get_batch_id: XeSqlPkg_stretch_sp_migration_get_batch_id
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint8  modify_batch_id;
	[WmiDataId(8), read] sint32 direction;
	[WmiDataId(9), read] sint64 batch_id;
	[WmiDataId(10), read, 
				XEMapId(107),
				ValueMap { 
					"0", 
					"16" },
				Values { 
					"AtTheBeginning", 
					"AtTheEnd" }
			] uint8 operation_position;
};
		
[dynamic: ToInstance, Description("Reports the duration of a stretched table provisioning operation"): Amended,
    Guid("{EB879287-D72D-4A3C-B6A9-9A341C9DDBEE}"), locale("MS\\0x409"),
    DisplayName("stretch_table_provisioning_step_completed"): Amended]
class XeSqlPkg_stretch_table_provisioning_step_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_provisioning_step_completed: XeSqlPkg_stretch_table_provisioning_step_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string provisioning_step;
};
		
[dynamic: ToInstance, Description("Reports the duration of a stretched index update operation"): Amended,
    Guid("{71BB11CA-D0F2-44C8-B1F0-E4E3923BC9EB}"), locale("MS\\0x409"),
    DisplayName("stretch_index_update_step_completed"): Amended]
class XeSqlPkg_stretch_index_update_step_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_index_update_step_completed: XeSqlPkg_stretch_index_update_step_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string index_update_step;
};
		
[dynamic: ToInstance, Description("Reports when a packet is about to be queued for processing a schema task for the database and object."): Amended,
    Guid("{AA31E572-46FA-4578-B5C2-FAB8668FE9BC}"), locale("MS\\0x409"),
    DisplayName("stretch_schema_queue_task"): Amended]
class XeSqlPkg_stretch_schema_queue_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_schema_queue_task: XeSqlPkg_stretch_schema_queue_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Reports the output from the code generator"): Amended,
    Guid("{A473AF51-E8B5-4D45-9BA0-803BAF79D529}"), locale("MS\\0x409"),
    DisplayName("stretch_codegen_errorlog"): Amended]
class XeSqlPkg_stretch_codegen_errorlog: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_codegen_errorlog: XeSqlPkg_stretch_codegen_errorlog
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string error_log;
};
		
[dynamic: ToInstance, Description("Reports the start of metadata checks during the migration task."): Amended,
    Guid("{C12AFABF-D72E-49C9-833B-D40F35610FE8}"), locale("MS\\0x409"),
    DisplayName("stretch_sync_metadata_start"): Amended]
class XeSqlPkg_stretch_sync_metadata_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_sync_metadata_start: XeSqlPkg_stretch_sync_metadata_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Reports the start or completion of the T-SQL batch generation for stretch migration"): Amended,
    Guid("{a254f7fb-2e39-419e-8dfb-77f51e99ca29}"), locale("MS\\0x409"),
    DisplayName("stretch_migration_batch_generation"): Amended]
class XeSqlPkg_stretch_migration_batch_generation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_migration_batch_generation: XeSqlPkg_stretch_migration_batch_generation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] sint32 direction;
};
		
[dynamic: ToInstance, Description("Reports the start of stretch code generation"): Amended,
    Guid("{5D50C7C5-906E-4CE3-BB5A-F49E98FB126D}"), locale("MS\\0x409"),
    DisplayName("stretch_codegen_start"): Amended]
class XeSqlPkg_stretch_codegen_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_codegen_start: XeSqlPkg_stretch_codegen_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string message_file_path;
};
		
[dynamic: ToInstance, Description("Reports the start of remote table creation"): Amended,
    Guid("{421200F6-EDA9-4EF8-A532-CB5CB5B7A638}"), locale("MS\\0x409"),
    DisplayName("stretch_create_remote_table_start"): Amended]
class XeSqlPkg_stretch_create_remote_table_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_create_remote_table_start: XeSqlPkg_stretch_create_remote_table_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Reports the start of stretch table un-provisioning"): Amended,
    Guid("{C22573FC-F62F-4B01-8225-825C6CF72C72}"), locale("MS\\0x409"),
    DisplayName("stretch_unprovision_table_start"): Amended]
class XeSqlPkg_stretch_unprovision_table_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_unprovision_table_start: XeSqlPkg_stretch_unprovision_table_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Reports the start of stretch schema function during the stretch schema task."): Amended,
    Guid("{D56467F7-A468-4398-B02B-10F39EFCC30A}"), locale("MS\\0x409"),
    DisplayName("stretch_schema_task_start"): Amended]
class XeSqlPkg_stretch_schema_task_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_schema_task_start: XeSqlPkg_stretch_schema_task_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint64 task_id;
	[WmiDataId(8), read, 
				XEMapId(104),
				ValueMap { 
					"0" },
				Values { 
					"STT_RECONCILE_INDEX" }
			] uint8 task_type;
};
		
[dynamic: ToInstance, Description("Reports the stretch schema task is skipped during the stretch schema function."): Amended,
    Guid("{FD676DA1-0C64-4361-952B-2937AE0A36D8}"), locale("MS\\0x409"),
    DisplayName("stretch_schema_task_skipped"): Amended]
class XeSqlPkg_stretch_schema_task_skipped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_schema_task_skipped: XeSqlPkg_stretch_schema_task_skipped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint64 task_id;
	[WmiDataId(8), read, 
				XEMapId(104),
				ValueMap { 
					"0" },
				Values { 
					"STT_RECONCILE_INDEX" }
			] uint8 task_type;
};
		
[dynamic: ToInstance, Description("Reports the start of repopulating stretch schema task queue."): Amended,
    Guid("{7D5C4A3C-247F-4B37-8264-53A715B36F14}"), locale("MS\\0x409"),
    DisplayName("repopulate_stretch_schema_task_queue_start"): Amended]
class XeSqlPkg_repopulate_stretch_schema_task_queue_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repopulate_stretch_schema_task_queue_start: XeSqlPkg_repopulate_stretch_schema_task_queue_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Reports the completion of repopulating stretch schema task queue."): Amended,
    Guid("{A49A692F-62DA-4B8E-8A29-82ECD92E2B4B}"), locale("MS\\0x409"),
    DisplayName("repopulate_stretch_schema_task_queue_complete"): Amended]
class XeSqlPkg_repopulate_stretch_schema_task_queue_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repopulate_stretch_schema_task_queue_complete: XeSqlPkg_repopulate_stretch_schema_task_queue_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Reports the successful completion of stretch schema function during the stretch schema task."): Amended,
    Guid("{B31173A8-0C52-40DA-A43F-FEE52E793761}"), locale("MS\\0x409"),
    DisplayName("stretch_schema_task_succeeded"): Amended]
class XeSqlPkg_stretch_schema_task_succeeded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_schema_task_succeeded: XeSqlPkg_stretch_schema_task_succeeded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint64 task_id;
	[WmiDataId(8), read, 
				XEMapId(104),
				ValueMap { 
					"0" },
				Values { 
					"STT_RECONCILE_INDEX" }
			] uint8 task_type;
};
		
[dynamic: ToInstance, Description("Reports the failure of a stretch schema function during the stretch schema task."): Amended,
    Guid("{A82E0D02-9A4F-4A6D-8925-DB355B9E525A}"), locale("MS\\0x409"),
    DisplayName("stretch_schema_task_failed"): Amended]
class XeSqlPkg_stretch_schema_task_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_schema_task_failed: XeSqlPkg_stretch_schema_task_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint64 task_id;
	[WmiDataId(8), read, 
				XEMapId(104),
				ValueMap { 
					"0" },
				Values { 
					"STT_RECONCILE_INDEX" }
			] uint8 task_type;
};
		
[dynamic: ToInstance, Description("Reports the start of stretch script execution during processing stretch schema task."): Amended,
    Guid("{44517437-C071-4DEF-8E8D-8E5184785FAF}"), locale("MS\\0x409"),
    DisplayName("stretch_schema_script_execution_start"): Amended]
class XeSqlPkg_stretch_schema_script_execution_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_schema_script_execution_start: XeSqlPkg_stretch_schema_script_execution_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint64 task_id;
};
		
[dynamic: ToInstance, Description("Reports the completion of stretch script execution during processing stretch schema task."): Amended,
    Guid("{FF249AB6-5041-4F29-8B53-3DAF20E66202}"), locale("MS\\0x409"),
    DisplayName("stretch_schema_script_execution_completed"): Amended]
class XeSqlPkg_stretch_schema_script_execution_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_schema_script_execution_completed: XeSqlPkg_stretch_schema_script_execution_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint64 task_id;
};
		
[dynamic: ToInstance, Description("Reports the skipping of stretch script execution during processing stretch schema task."): Amended,
    Guid("{6937726F-A508-419A-9B68-460CB37EBB0A}"), locale("MS\\0x409"),
    DisplayName("stretch_schema_script_execution_skipped"): Amended]
class XeSqlPkg_stretch_schema_script_execution_skipped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_schema_script_execution_skipped: XeSqlPkg_stretch_schema_script_execution_skipped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint64 task_id;
};
		
[dynamic: ToInstance, Description("Reports the completion of the migration of a batch of rows"): Amended,
    Guid("{843B2880-5AC8-4CD3-BB9C-19B74D365DC5}"), locale("MS\\0x409"),
    DisplayName("stretch_table_row_migration_event"): Amended]
class XeSqlPkg_stretch_table_row_migration_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class stretch_table_row_migration_event: XeSqlPkg_stretch_table_row_migration_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read] sint64 rows;
	[WmiDataId(12), read] sint8  skip_reconciliation;
};
		
[dynamic: ToInstance, Description("Reports the completion of the unmigration of a batch of rows"): Amended,
    Guid("{DEFC1A53-13B3-4101-948C-1CC612FD9468}"), locale("MS\\0x409"),
    DisplayName("stretch_table_row_unmigration_event"): Amended]
class XeSqlPkg_stretch_table_row_unmigration_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_row_unmigration_event: XeSqlPkg_stretch_table_row_unmigration_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read] sint64 rows;
};
		
[dynamic: ToInstance, Description("Reports the completion of the data reconciliation of a batch of rows"): Amended,
    Guid("{C0AEB4D9-192F-43AF-9AFA-B2893A914878}"), locale("MS\\0x409"),
    DisplayName("stretch_table_data_reconciliation_event"): Amended]
class XeSqlPkg_stretch_table_data_reconciliation_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_data_reconciliation_event: XeSqlPkg_stretch_table_data_reconciliation_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read] sint64 rows;
};
		
[dynamic: ToInstance, Description("Reports the release of the table lock"): Amended,
    Guid("{A3920A6C-674C-4B2A-A48C-2636A51DFECE}"), locale("MS\\0x409"),
    DisplayName("stretch_table_lock_released"): Amended]
class XeSqlPkg_stretch_table_lock_released: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_lock_released: XeSqlPkg_stretch_table_lock_released
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
};
		
[dynamic: ToInstance, Description("Occurs whenever TRCFLG_TEMP_STRETCH_SIGNAL_INITIALIZE_DSO_COMPLETE is enabled and one opf the phases: initialize DSO during remote connection completes"): Amended,
    Guid("{0b939ba7-1043-41ca-882b-b21b4b65753d}"), locale("MS\\0x409"),
    DisplayName("stretch_initialize_dso_started"): Amended]
class XeSqlPkg_stretch_initialize_dso_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_initialize_dso_started: XeSqlPkg_stretch_initialize_dso_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when the stretch is enabled from CREATE TABLE DDL."): Amended,
    Guid("{8A1130FE-BC0F-4B74-A423-A0FD27EFB31C}"), locale("MS\\0x409"),
    DisplayName("stretch_table_create_ddl"): Amended]
class XeSqlPkg_stretch_table_create_ddl: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_create_ddl: XeSqlPkg_stretch_table_create_ddl
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Occurs when the stretch is enabled from ALTER TABLE DDL."): Amended,
    Guid("{1C445757-0ACB-420D-9758-87753186C542}"), locale("MS\\0x409"),
    DisplayName("stretch_table_alter_ddl"): Amended]
class XeSqlPkg_stretch_table_alter_ddl: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_alter_ddl: XeSqlPkg_stretch_table_alter_ddl
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Occurs when predicate is specified during stretching of table."): Amended,
    Guid("{7151D53F-3F69-49A7-8D42-703ADE90AEDD}"), locale("MS\\0x409"),
    DisplayName("stretch_table_predicate_specified"): Amended]
class XeSqlPkg_stretch_table_predicate_specified: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_predicate_specified: XeSqlPkg_stretch_table_predicate_specified
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Occurs when predicate is not specified during stretching of table."): Amended,
    Guid("{E9B1FFE0-9025-43F4-B2EC-E6B842F1B32F}"), locale("MS\\0x409"),
    DisplayName("stretch_table_predicate_not_specified"): Amended]
class XeSqlPkg_stretch_table_predicate_not_specified: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_predicate_not_specified: XeSqlPkg_stretch_table_predicate_not_specified
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Reports the completion of a ALTER DATABASE SET REMOTE_DATA_ARCHIVE ON command"): Amended,
    Guid("{703AA2C1-E899-4679-82B5-8AD0781DB15F}"), locale("MS\\0x409"),
    DisplayName("stretch_database_enable_completed"): Amended]
class XeSqlPkg_stretch_database_enable_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_database_enable_completed: XeSqlPkg_stretch_database_enable_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_success;
	[WmiDataId(7), read] sint64 duration_ms;
	[WmiDataId(8), read] sint32 error_number;
	[WmiDataId(9), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Reports the completion of a sp_rda_reauthorize_db spec proc"): Amended,
    Guid("{5F697FDA-0D00-4F2F-92E6-96605995CDC7}"), locale("MS\\0x409"),
    DisplayName("stretch_database_reauthorize_completed"): Amended]
class XeSqlPkg_stretch_database_reauthorize_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_database_reauthorize_completed: XeSqlPkg_stretch_database_reauthorize_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_success;
	[WmiDataId(7), read] sint64 duration_ms;
	[WmiDataId(8), read] sint32 error_number;
	[WmiDataId(9), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Reports the completion of a ALTER DATABASE SET REMOTE_DATA_ARCHIVE OFF command"): Amended,
    Guid("{799F03AD-4075-466E-BB13-1946B20AB9C3}"), locale("MS\\0x409"),
    DisplayName("stretch_database_disable_completed"): Amended]
class XeSqlPkg_stretch_database_disable_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_database_disable_completed: XeSqlPkg_stretch_database_disable_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_success;
	[WmiDataId(7), read] sint64 duration_ms;
	[WmiDataId(8), read] sint32 error_number;
	[WmiDataId(9), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Reports the completion of validation for a table when the user enables stretch"): Amended,
    Guid("{4AAF7C1E-234D-43F9-884E-9784F13534E1}"), locale("MS\\0x409"),
    DisplayName("stretch_table_validation_error"): Amended]
class XeSqlPkg_stretch_table_validation_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_validation_error: XeSqlPkg_stretch_table_validation_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint32 error_number;
	[WmiDataId(9), read] sint32 error_state;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Reports the completion of code generation for a stretched table"): Amended,
    Guid("{9CA47064-16DC-4329-BC6A-1881E7C0E7DE}"), locale("MS\\0x409"),
    DisplayName("stretch_table_codegen_completed"): Amended]
class XeSqlPkg_stretch_table_codegen_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class stretch_table_codegen_completed: XeSqlPkg_stretch_table_codegen_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Reports the completion of code generation for stretch remote index operation"): Amended,
    Guid("{F732029A-02C2-4E8D-8604-FE529EE24EDD}"), locale("MS\\0x409"),
    DisplayName("stretch_index_reconciliation_codegen_completed"): Amended]
class XeSqlPkg_stretch_index_reconciliation_codegen_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_index_reconciliation_codegen_completed: XeSqlPkg_stretch_index_reconciliation_codegen_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Reports the completion of code generation for stretch remote column reconciliation"): Amended,
    Guid("{5195859A-0BE3-42CC-AE95-FAC3E0306FE6}"), locale("MS\\0x409"),
    DisplayName("stretch_remote_column_reconciliation_codegen_completed"): Amended]
class XeSqlPkg_stretch_remote_column_reconciliation_codegen_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_remote_column_reconciliation_codegen_completed: XeSqlPkg_stretch_remote_column_reconciliation_codegen_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Reports the completion of remote execution for the generated code for a stretched table"): Amended,
    Guid("{ABE74D8F-4741-4C5F-AC6A-E6DF80057EF1}"), locale("MS\\0x409"),
    DisplayName("stretch_table_remote_creation_completed"): Amended]
class XeSqlPkg_stretch_table_remote_creation_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_remote_creation_completed: XeSqlPkg_stretch_table_remote_creation_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Reports the completion of remote execution for the generated code for a stretched index"): Amended,
    Guid("{6E52F3F8-6A3D-4B0C-997B-271380ADBE6E}"), locale("MS\\0x409"),
    DisplayName("stretch_remote_index_execution_completed"): Amended]
class XeSqlPkg_stretch_remote_index_execution_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_remote_index_execution_completed: XeSqlPkg_stretch_remote_index_execution_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Reports the completion of remote execution for the generated code for a stretched column"): Amended,
    Guid("{A6909897-2742-4033-B845-6F79D93FFCF2}"), locale("MS\\0x409"),
    DisplayName("stretch_remote_column_execution_completed"): Amended]
class XeSqlPkg_stretch_remote_column_execution_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_remote_column_execution_completed: XeSqlPkg_stretch_remote_column_execution_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Reports an error or completion of a successful migration of a number of batches of rows"): Amended,
    Guid("{5F754937-69D5-4732-9D99-CD27A8570892}"), locale("MS\\0x409"),
    DisplayName("stretch_table_row_migration_results_event"): Amended]
class XeSqlPkg_stretch_table_row_migration_results_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_row_migration_results_event: XeSqlPkg_stretch_table_row_migration_results_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read] sint64 rows;
};
		
[dynamic: ToInstance, Description("Reports an error or completion of a successful unmigration of a number of batches of rows"): Amended,
    Guid("{B96AD780-60D3-4A22-B7F9-54F832F9B9AE}"), locale("MS\\0x409"),
    DisplayName("stretch_table_row_unmigration_results_event"): Amended]
class XeSqlPkg_stretch_table_row_unmigration_results_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_row_unmigration_results_event: XeSqlPkg_stretch_table_row_unmigration_results_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read] sint64 rows;
};
		
[dynamic: ToInstance, Description("Reports an error or completion of a successful data reconciliation of a number of batches of rows"): Amended,
    Guid("{4EC7253F-F923-4C37-935C-8AAF546FD4EB}"), locale("MS\\0x409"),
    DisplayName("stretch_table_data_reconciliation_results_event"): Amended]
class XeSqlPkg_stretch_table_data_reconciliation_results_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_data_reconciliation_results_event: XeSqlPkg_stretch_table_data_reconciliation_results_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read] sint64 rows;
};
		
[dynamic: ToInstance, Description("Reports the completion removal of local resources for a table that was unstretched"): Amended,
    Guid("{CB571559-1CF8-4CD9-B269-3109BC829C22}"), locale("MS\\0x409"),
    DisplayName("stretch_table_unprovision_completed"): Amended]
class XeSqlPkg_stretch_table_unprovision_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_unprovision_completed: XeSqlPkg_stretch_table_unprovision_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Reports the execution of a Stretch update DML operation that uses an admin hint"): Amended,
    Guid("{EC369788-59D7-45EA-B9AB-A40403F48BE6}"), locale("MS\\0x409"),
    DisplayName("stretch_table_hinted_admin_update_event"): Amended]
class XeSqlPkg_stretch_table_hinted_admin_update_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_hinted_admin_update_event: XeSqlPkg_stretch_table_hinted_admin_update_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Reports the execution of a Stretch delete DML operation that uses an admin hint"): Amended,
    Guid("{E456A9E0-3951-46FB-8357-34F72D2A6020}"), locale("MS\\0x409"),
    DisplayName("stretch_table_hinted_admin_delete_event"): Amended]
class XeSqlPkg_stretch_table_hinted_admin_delete_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_hinted_admin_delete_event: XeSqlPkg_stretch_table_hinted_admin_delete_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint32 error_number;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Reports an error thrown during Stretch query rewrite"): Amended,
    Guid("{87420F06-961D-4B24-8E2B-B9911308A27A}"), locale("MS\\0x409"),
    DisplayName("stretch_table_query_error"): Amended]
class XeSqlPkg_stretch_table_query_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_table_query_error: XeSqlPkg_stretch_table_query_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint32 error_number;
	[WmiDataId(9), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Occurs whenever an on premise system transmits a telemetry event to Azure DB."): Amended,
    Guid("{2DED87B4-7DCD-43CF-AFD0-054FC8AFD11C}"), locale("MS\\0x409"),
    DisplayName("remote_data_archive_telemetry"): Amended]
class XeSqlPkg_remote_data_archive_telemetry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_data_archive_telemetry: XeSqlPkg_remote_data_archive_telemetry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 local_database_id;
	[WmiDataId(6), read] sint32 local_table_id;
	[WmiDataId(7), read] sint8  is_success;
	[WmiDataId(8), read] sint64 duration_ms;
	[WmiDataId(9), read] sint64 rows;
	[WmiDataId(10), read] sint32 error_number;
	[WmiDataId(11), read] sint32 error_state;
	[WmiDataId(12), read, Extension("WmiTime")] uint64 event_timestamp;
	[WmiDataId(13), read, Extension("Guid")] guid local_instance_guid;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string server_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string local_event_name;
};
		
[dynamic: ToInstance, Description("Occurs whenever an AzureDB Stretch telemetry event is rejected"): Amended,
    Guid("{D927AF2E-7CD6-483E-A6DA-80F0692EB0BB}"), locale("MS\\0x409"),
    DisplayName("remote_data_archive_telemetry_rejected"): Amended]
class XeSqlPkg_remote_data_archive_telemetry_rejected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_data_archive_telemetry_rejected: XeSqlPkg_remote_data_archive_telemetry_rejected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 local_database_id;
	[WmiDataId(6), read] sint32 local_table_id;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 event_timestamp;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string local_event_name;
};
		
[dynamic: ToInstance, Description("Occurs when an operation that may require a data purity check for dbcompat level 130 occurs."): Amended,
    Guid("{bf4d2142-c7ca-4f81-8c07-de53ba9dfc64}"), locale("MS\\0x409"),
    DisplayName("data_purity_checks_for_dbcompat_130"): Amended]
class XeSqlPkg_data_purity_checks_for_dbcompat_130: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_purity_checks_for_dbcompat_130: XeSqlPkg_data_purity_checks_for_dbcompat_130
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when SQL Server is unable to perform Authenticode signature verification on binaries."): Amended,
    Guid("{D27A1483-E562-4863-8148-B81EEB158B58}"), locale("MS\\0x409"),
    DisplayName("unable_to_verify_trust"): Amended]
class XeSqlPkg_unable_to_verify_trust: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class unable_to_verify_trust: XeSqlPkg_unable_to_verify_trust
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_code;
};
		
[dynamic: ToInstance, Description("Occurs when a SQL Server binary fails Authenticode signature verification."): Amended,
    Guid("{B5F52677-5258-43DB-B75A-0E70FEEA9E53}"), locale("MS\\0x409"),
    DisplayName("trust_verification_failed"): Amended]
class XeSqlPkg_trust_verification_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class trust_verification_failed: XeSqlPkg_trust_verification_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string binary_path_name;
};
		
[dynamic: ToInstance, Description("Occurs when JSON path is not referencing property."): Amended,
    Guid("{287A4807-E4C4-43C2-A6E6-69196BFF09B7}"), locale("MS\\0x409"),
    DisplayName("json_referenced_property_not_found"): Amended]
class XeSqlPkg_json_referenced_property_not_found: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class json_referenced_property_not_found: XeSqlPkg_json_referenced_property_not_found
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string debug_trace;
};
		
[dynamic: ToInstance, Description("Property referenced by specified JSON path does not fit in the range of the returning data type."): Amended,
    Guid("{A436B209-F3E0-4700-B532-C40B7786DFDA}"), locale("MS\\0x409"),
    DisplayName("json_referenced_property_out_of_range"): Amended]
class XeSqlPkg_json_referenced_property_out_of_range: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class json_referenced_property_out_of_range: XeSqlPkg_json_referenced_property_out_of_range
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Indicates start of JSON text processing."): Amended,
    Guid("{E2E76744-EC92-4626-8BC3-1CD824311F2C}"), locale("MS\\0x409"),
    DisplayName("json_processing_started"): Amended]
class XeSqlPkg_json_processing_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class json_processing_started: XeSqlPkg_json_processing_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string json_function_name;
};
		
[dynamic: ToInstance, Description("Indicates start of JSON text processing."): Amended,
    Guid("{F4097351-79A2-4BE4-9DFF-727B57E3D825}"), locale("MS\\0x409"),
    DisplayName("json_processing_completed"): Amended]
class XeSqlPkg_json_processing_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class json_processing_completed: XeSqlPkg_json_processing_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 json_characters_parsed;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string json_function_name;
};
		
[dynamic: ToInstance, Description("SQL_VARIANT used for column type in Openjson with explicit schema."): Amended,
    Guid("{E0A29FC4-BEA3-4B6C-BAF0-1D5D52C83EBA}"), locale("MS\\0x409"),
    DisplayName("json_sql_variant_in_openjson_column"): Amended]
class XeSqlPkg_json_sql_variant_in_openjson_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class json_sql_variant_in_openjson_column: XeSqlPkg_json_sql_variant_in_openjson_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Indicates that JSON function is compiled."): Amended,
    Guid("{FBC284D9-0B99-4D2F-B70F-4D5448496389}"), locale("MS\\0x409"),
    DisplayName("json_function_compiled"): Amended]
class XeSqlPkg_json_function_compiled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class json_function_compiled: XeSqlPkg_json_function_compiled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string json_function_name;
};
		
[dynamic: ToInstance, Description("Indicates that STRING_ESCAPE function is compiled."): Amended,
    Guid("{FEEAD5B2-8836-4579-8199-9BFB2E9B1411}"), locale("MS\\0x409"),
    DisplayName("string_escape_compiled"): Amended]
class XeSqlPkg_string_escape_compiled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class string_escape_compiled: XeSqlPkg_string_escape_compiled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string escape_type;
};
		
[dynamic: ToInstance, Description("Occurs when system versioning option for a table is being changed."): Amended,
    Guid("{B85E6AA9-358A-478C-8164-53169C99ED58}"), locale("MS\\0x409"),
    DisplayName("temporal_ddl_system_versioning"): Amended]
class XeSqlPkg_temporal_ddl_system_versioning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class temporal_ddl_system_versioning: XeSqlPkg_temporal_ddl_system_versioning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 history_table_id;
	[WmiDataId(8), read] sint8  history_table_columnstore;
	[WmiDataId(9), read] sint8  is_alter;
	[WmiDataId(10), read] sint8  trigger_present;
	[WmiDataId(11), read] sint8  default_history;
	[WmiDataId(12), read] sint8  data_consistency;
	[WmiDataId(13), read] sint8  data_consistency_forced;
	[WmiDataId(14), read] sint8  finite_retention_period_set;
	[WmiDataId(15), read] sint8  infinite_retention_period_set;
	[WmiDataId(16), read] sint8  system_versioning_on;
};
		
[dynamic: ToInstance, Description("Occurs when temporal period is being added."): Amended,
    Guid("{AAF7216B-E99B-4A1F-9081-C161D3AD8E5F}"), locale("MS\\0x409"),
    DisplayName("temporal_ddl_period_add"): Amended]
class XeSqlPkg_temporal_ddl_period_add: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_ddl_period_add: XeSqlPkg_temporal_ddl_period_add
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_alter;
	[WmiDataId(8), read] sint8  implicit_period_def;
	[WmiDataId(9), read] sint8  col_start_hidden;
	[WmiDataId(10), read] sint8  col_end_hidden;
	[WmiDataId(11), read, 
				XEMapId(108),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"APP_TIME", 
					"SYSTEM_TIME" }
			] uint8 period_type;
};
		
[dynamic: ToInstance, Description("Occurs when temporal period is being dropped."): Amended,
    Guid("{589198F5-72D7-4BFD-A1D8-A13DEC7FD2C6}"), locale("MS\\0x409"),
    DisplayName("temporal_ddl_period_drop"): Amended]
class XeSqlPkg_temporal_ddl_period_drop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_ddl_period_drop: XeSqlPkg_temporal_ddl_period_drop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read, 
				XEMapId(108),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"APP_TIME", 
					"SYSTEM_TIME" }
			] uint8 period_type;
};
		
[dynamic: ToInstance, Description("Occurs when trying to create temporal period on memory-optimized table."): Amended,
    Guid("{589198F5-72D7-4BFD-A1D8-A13DEC7FD2C7}"), locale("MS\\0x409"),
    DisplayName("temporal_xtp_ddl_period"): Amended]
class XeSqlPkg_temporal_xtp_ddl_period: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_xtp_ddl_period: XeSqlPkg_temporal_xtp_ddl_period
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
};
		
[dynamic: ToInstance, Description("Occurs when temporal ddl data consistency check fails."): Amended,
    Guid("{589198F5-72D7-4BFD-A1D8-A13DEC7FD2C8}"), locale("MS\\0x409"),
    DisplayName("temporal_ddl_schema_check_fail"): Amended]
class XeSqlPkg_temporal_ddl_schema_check_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_ddl_schema_check_fail: XeSqlPkg_temporal_ddl_schema_check_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_alter;
	[WmiDataId(8), read] uint32 error_number;
};
		
[dynamic: ToInstance, Description("Occurs when temporal audit column definition is added or removed."): Amended,
    Guid("{7A37CB88-BEB6-48A3-BA86-925D90B5B5F3}"), locale("MS\\0x409"),
    DisplayName("temporal_audit_column_definition"): Amended]
class XeSqlPkg_temporal_audit_column_definition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_audit_column_definition: XeSqlPkg_temporal_audit_column_definition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read, 
				XEMapId(46),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"add_generated_always", 
					"remove_generated_always" }
			] uint8 event_type;
	[WmiDataId(9), read, 
				XEMapId(45),
				ValueMap { 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"suser_sid_start", 
					"suser_sid_end", 
					"suser_sname_start", 
					"suser_sname_end" }
			] uint8 audit_column_type;
	[WmiDataId(10), read] sint8  is_changed_with_period;
};
		
[dynamic: ToInstance, Description("Occurs when creating default history table with page compression fails."): Amended,
    Guid("{589198F5-72D7-4BFD-A1D8-A13DEC7FD2C9}"), locale("MS\\0x409"),
    DisplayName("temporal_ddl_default_history_page_compression_fail"): Amended]
class XeSqlPkg_temporal_ddl_default_history_page_compression_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_ddl_default_history_page_compression_fail: XeSqlPkg_temporal_ddl_default_history_page_compression_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 error_number;
	[WmiDataId(8), read] uint32 severity;
	[WmiDataId(9), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Occurs when a user attempts to make a temporal table with finite retention, CCI history and LOB columns."): Amended,
    Guid("{7C6FF385-EFF1-47E9-938F-5E1BB0308CDC}"), locale("MS\\0x409"),
    DisplayName("temporal_retention_cci_lob_attempt"): Amended]
class XeSqlPkg_temporal_retention_cci_lob_attempt: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_retention_cci_lob_attempt: XeSqlPkg_temporal_retention_cci_lob_attempt
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint32 error_number;
};
		
[dynamic: ToInstance, Description("Occurs when background task for conducting cleanup tasks related to temporal starts."): Amended,
    Guid("{3C9E027E-00FD-4B43-90E3-5DEB65C503F2}"), locale("MS\\0x409"),
    DisplayName("temporal_cleanup_task_started"): Amended]
class XeSqlPkg_temporal_cleanup_task_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_cleanup_task_started: XeSqlPkg_temporal_cleanup_task_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when background task for conducting cleanup tasks related to temporal ends."): Amended,
    Guid("{8160DC35-040C-4673-A572-1421F3B02D6E}"), locale("MS\\0x409"),
    DisplayName("temporal_cleanup_task_ended"): Amended]
class XeSqlPkg_temporal_cleanup_task_ended: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_cleanup_task_ended: XeSqlPkg_temporal_cleanup_task_ended
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 previous_sleep_duration;
	[WmiDataId(6), read] uint64 new_sleep_duration;
};
		
[dynamic: ToInstance, Description("Occurs when background task for conducting cleanup tasks related to temporal fails."): Amended,
    Guid("{D714C369-36E9-4F5C-B56B-87279041C297}"), locale("MS\\0x409"),
    DisplayName("temporal_cleanup_task_exception"): Amended]
class XeSqlPkg_temporal_cleanup_task_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_cleanup_task_exception: XeSqlPkg_temporal_cleanup_task_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error;
	[WmiDataId(6), read] uint32 severity;
	[WmiDataId(7), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Occurs when background task for moving history data of memory-optimized temporal table from internal history table to history table starts."): Amended,
    Guid("{A10D7FDE-3C62-44C4-AC4A-41CD790041A9}"), locale("MS\\0x409"),
    DisplayName("temporal_xtp_flush_task_started"): Amended]
class XeSqlPkg_temporal_xtp_flush_task_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_xtp_flush_task_started: XeSqlPkg_temporal_xtp_flush_task_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when background task for moving history data of memory-optimized temporal table from internal history table to history table ends."): Amended,
    Guid("{D105D1B4-BE6D-4F10-B271-3CDFEE5217CF}"), locale("MS\\0x409"),
    DisplayName("temporal_xtp_flush_task_ended"): Amended]
class XeSqlPkg_temporal_xtp_flush_task_ended: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_xtp_flush_task_ended: XeSqlPkg_temporal_xtp_flush_task_ended
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] uint64 previous_sleep_duration;
	[WmiDataId(7), read] uint64 new_sleep_duration;
};
		
[dynamic: ToInstance, Description("Occurs when move of history data of memory-optimized temporal table from internal history table to history table starts."): Amended,
    Guid("{C61406C9-23F6-4126-A17B-D71F2999150B}"), locale("MS\\0x409"),
    DisplayName("temporal_memory_optimized_table_history_flush_started"): Amended]
class XeSqlPkg_temporal_memory_optimized_table_history_flush_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_memory_optimized_table_history_flush_started: XeSqlPkg_temporal_memory_optimized_table_history_flush_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
};
		
[dynamic: ToInstance, Description("Occurs when move of history data of memory-optimized temporal table from internal history table to history table ends."): Amended,
    Guid("{70E64A52-7D47-4EC8-996B-2A24822CE10E}"), locale("MS\\0x409"),
    DisplayName("temporal_memory_optimized_table_history_flush_ended"): Amended]
class XeSqlPkg_temporal_memory_optimized_table_history_flush_ended: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class temporal_memory_optimized_table_history_flush_ended: XeSqlPkg_temporal_memory_optimized_table_history_flush_ended
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read] uint64 moved_rows;
	[WmiDataId(9), read] sint8  migration_done;
};
		
[dynamic: ToInstance, Description("Occurs when move of history data of memory-optimized temporal table from internal history table to history table fails."): Amended,
    Guid("{5488C8DC-B0A2-45DA-89AA-42341E71FF73}"), locale("MS\\0x409"),
    DisplayName("temporal_memory_optimized_table_history_flush_exception"): Amended]
class XeSqlPkg_temporal_memory_optimized_table_history_flush_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_memory_optimized_table_history_flush_exception: XeSqlPkg_temporal_memory_optimized_table_history_flush_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 error;
	[WmiDataId(8), read] uint32 severity;
	[WmiDataId(9), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Occurs when background task for moving history data of memory-optimized temporal table from internal history table to history table fails outside of flush process specific to table."): Amended,
    Guid("{C0786610-E84C-47C7-BA10-EF35629BCABE}"), locale("MS\\0x409"),
    DisplayName("temporal_xtp_flush_task_exception"): Amended]
class XeSqlPkg_temporal_xtp_flush_task_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_xtp_flush_task_exception: XeSqlPkg_temporal_xtp_flush_task_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error;
	[WmiDataId(6), read] uint32 severity;
	[WmiDataId(7), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Occurs when background task for cleanup of temporal history tables with retention policy starts."): Amended,
    Guid("{ADA71844-ADA8-464B-90A4-F7059C5BB3B4}"), locale("MS\\0x409"),
    DisplayName("temporal_retention_task_started"): Amended]
class XeSqlPkg_temporal_retention_task_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_retention_task_started: XeSqlPkg_temporal_retention_task_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_cci_retention;
};
		
[dynamic: ToInstance, Description("Occurs when background task for cleanup of temporal history tables with retention policy ends."): Amended,
    Guid("{E33ED9DB-32AC-4110-B5C7-ACF58CE57A84}"), locale("MS\\0x409"),
    DisplayName("temporal_retention_task_ended"): Amended]
class XeSqlPkg_temporal_retention_task_ended: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_retention_task_ended: XeSqlPkg_temporal_retention_task_ended
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 previous_sleep_duration;
	[WmiDataId(6), read] uint64 new_sleep_duration;
	[WmiDataId(7), read] sint8  is_cci_retention;
};
		
[dynamic: ToInstance, Description("Occurs when background task for cleanup of temporal history tables with retention policy fails outside of retention cleanup process specific to table."): Amended,
    Guid("{8B6E1B9A-4675-4AB1-8A5B-606082CC173A}"), locale("MS\\0x409"),
    DisplayName("temporal_retention_task_exception"): Amended]
class XeSqlPkg_temporal_retention_task_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_retention_task_exception: XeSqlPkg_temporal_retention_task_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_cci_retention;
	[WmiDataId(6), read] uint32 error;
	[WmiDataId(7), read] uint32 severity;
	[WmiDataId(8), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup process of temporal history table with retention policy starts."): Amended,
    Guid("{280EDB0F-9A34-44C1-B087-70027A2AB4AC}"), locale("MS\\0x409"),
    DisplayName("temporal_table_retention_cleanup_started"): Amended]
class XeSqlPkg_temporal_table_retention_cleanup_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_table_retention_cleanup_started: XeSqlPkg_temporal_table_retention_cleanup_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_history_cci;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup process of temporal history table with retention policy ends."): Amended,
    Guid("{AC951439-949E-40F0-91FA-5992EC55F4DB}"), locale("MS\\0x409"),
    DisplayName("temporal_table_retention_cleanup_ended"): Amended]
class XeSqlPkg_temporal_table_retention_cleanup_ended: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_table_retention_cleanup_ended: XeSqlPkg_temporal_table_retention_cleanup_ended
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_history_cci;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint64 deleted_rows;
	[WmiDataId(10), read] sint8  deletion_done;
};
		
[dynamic: ToInstance, Description("Occurs cleanup process of temporal history table with retention policy fails."): Amended,
    Guid("{985F7D7F-FAAD-4115-9BF0-623D3E23DE64}"), locale("MS\\0x409"),
    DisplayName("temporal_table_retention_cleanup_exception"): Amended]
class XeSqlPkg_temporal_table_retention_cleanup_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_table_retention_cleanup_exception: XeSqlPkg_temporal_table_retention_cleanup_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] sint8  is_history_cci;
	[WmiDataId(8), read] uint32 error;
	[WmiDataId(9), read] uint32 severity;
	[WmiDataId(10), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Occurs when a data masking function is modified on a table column definition (ADD, CHANGE or DROP)."): Amended,
    Guid("{096EC3D9-647C-4539-A64B-BB9C43CF2CCB}"), locale("MS\\0x409"),
    DisplayName("data_masking_ddl_column_definition"): Amended]
class XeSqlPkg_data_masking_ddl_column_definition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_masking_ddl_column_definition: XeSqlPkg_data_masking_ddl_column_definition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read] uint8 column_type;
	[WmiDataId(9), read, 
				XEMapId(47),
				ValueMap { 
					"1", 
					"2", 
					"3" },
				Values { 
					"DataMaskingAdd", 
					"DataMaskingChange", 
					"DataMaskingDrop" }
			] uint8 ddl_operation;
	[WmiDataId(10), read, 
				XEMapId(109),
				ValueMap { 
					"5", 
					"1", 
					"2", 
					"0", 
					"3", 
					"4" },
				Values { 
					"x_edmft_DateTime", 
					"x_edmft_Default", 
					"x_edmft_Email", 
					"x_edmft_None", 
					"x_edmft_Partial", 
					"x_edmft_Random" }
			] uint8 function_type;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string function_arg1;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string function_arg2;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string function_arg3;
};
		
[dynamic: ToInstance, Description("Occurs when data masking is applied to a query."): Amended,
    Guid("{049EE7AD-BD71-49D0-863B-DCA0628A9DC3}"), locale("MS\\0x409"),
    DisplayName("data_masking_traffic"): Amended]
class XeSqlPkg_data_masking_traffic: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_masking_traffic: XeSqlPkg_data_masking_traffic
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_privileged_user;
	[WmiDataId(6), read] sint8  is_hekaton_query;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string component;
};
		
[dynamic: ToInstance, Description("Occurs when data masking is applied to a query and the query is actually masked."): Amended,
    Guid("{73bb54a2-2dc4-4759-aaba-0e7cf7412574}"), locale("MS\\0x409"),
    DisplayName("data_masking_traffic_masked_only"): Amended]
class XeSqlPkg_data_masking_traffic_masked_only: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_masking_traffic_masked_only: XeSqlPkg_data_masking_traffic_masked_only
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string component;
};
		
[dynamic: ToInstance, Description("Fires when result column sources get calculated"): Amended,
    Guid("{432CDE3A-B7F7-4B5B-BE0E-82A979FDDBB4}"), locale("MS\\0x409"),
    DisplayName("data_masking_rcs"): Amended]
class XeSqlPkg_data_masking_rcs: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_masking_rcs: XeSqlPkg_data_masking_rcs
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string rcs;
};
		
[dynamic: ToInstance, Description("Occurs when a data classification label is applied on a table column definition (ADD or DROP)."): Amended,
    Guid("{011435cb-9778-4d3c-8633-f76f54de0b5f}"), locale("MS\\0x409"),
    DisplayName("data_classification_ddl_column_definition"): Amended]
class XeSqlPkg_data_classification_ddl_column_definition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_classification_ddl_column_definition: XeSqlPkg_data_classification_ddl_column_definition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 schema_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 column_id;
	[WmiDataId(9), read] uint8 column_type;
	[WmiDataId(10), read, 
				XEMapId(48),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"DataClassificationUnknown", 
					"DataClassificationAdd", 
					"DataClassificationDrop" }
			] uint8 ddl_operation;
};
		
[dynamic: ToInstance, Description("Occurs when a data classification label is applied on a table column definition (ADD or DROP)."): Amended,
    Guid("{011435cb-9778-4d3c-8633-f76f54de0b5f}"), locale("MS\\0x409"),
    DisplayName("data_classification_ddl_column_definition"): Amended]
class XeSqlPkg_data_classification_ddl_column_definition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class data_classification_ddl_column_definition: XeSqlPkg_data_classification_ddl_column_definition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 schema_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 column_id;
	[WmiDataId(9), read] uint8 column_type;
	[WmiDataId(10), read, 
				XEMapId(48),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"DataClassificationUnknown", 
					"DataClassificationAdd", 
					"DataClassificationDrop" }
			] uint8 ddl_operation;
	[WmiDataId(11), read] sint8  is_internal_connection;
};
		
[dynamic: ToInstance, Description("Occurs when a query results column has a data classification label."): Amended,
    Guid("{588747ae-d5cc-459b-b38d-a11961dbfabb}"), locale("MS\\0x409"),
    DisplayName("data_classification_traffic"): Amended]
class XeSqlPkg_data_classification_traffic: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_classification_traffic: XeSqlPkg_data_classification_traffic
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 sensitivity_labels;
	[WmiDataId(7), read] uint32 information_types;
};
		
[dynamic: ToInstance, Description("Occurs when auditing a query when the results column has a data classification label."): Amended,
    Guid("{36c2d781-1fae-4118-8e7b-a1907902a98e}"), locale("MS\\0x409"),
    DisplayName("data_classification_auditing_traffic"): Amended]
class XeSqlPkg_data_classification_auditing_traffic: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_classification_auditing_traffic: XeSqlPkg_data_classification_auditing_traffic
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 sensitivity_attributes;
};
		
[dynamic: ToInstance, Description("Used for testing DBCC INPUTBUFFER command."): Amended,
    Guid("{910AA1BE-F12B-4710-8FBB-B17A4639E4F5}"), locale("MS\\0x409"),
    DisplayName("dbcc_inputbuffer_initialize"): Amended]
class XeSqlPkg_dbcc_inputbuffer_initialize: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbcc_inputbuffer_initialize: XeSqlPkg_dbcc_inputbuffer_initialize
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Fires when a connection request is found eligible for implied authentication."): Amended,
    Guid("{062C2D2B-895D-4972-BA2D-155AFD7963A2}"), locale("MS\\0x409"),
    DisplayName("implied_auth_eligible_connection_request"): Amended]
class XeSqlPkg_implied_auth_eligible_connection_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class implied_auth_eligible_connection_request: XeSqlPkg_implied_auth_eligible_connection_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string incoming_login_name;
};
		
[dynamic: ToInstance, Description("Fires when an incoming connection's security context is overridden by implied login's security context."): Amended,
    Guid("{E8F8AE36-7E36-46C7-819F-4EAF7D479FDB}"), locale("MS\\0x409"),
    DisplayName("implied_auth_security_context_overridden"): Amended]
class XeSqlPkg_implied_auth_security_context_overridden: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class implied_auth_security_context_overridden: XeSqlPkg_implied_auth_security_context_overridden
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string incoming_login_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string implied_login_name;
};
		
[dynamic: ToInstance, Description("Fires when an implied login entry is added to implied login hash store."): Amended,
    Guid("{23700457-5CDF-45C7-AB07-73AC08B93735}"), locale("MS\\0x409"),
    DisplayName("implied_auth_login_entry_added_to_store"): Amended]
class XeSqlPkg_implied_auth_login_entry_added_to_store: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class implied_auth_login_entry_added_to_store: XeSqlPkg_implied_auth_login_entry_added_to_store
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string implied_login_name;
	[WmiDataId(6), read, Extension("Variant")] object external_user_sid;
};
		
[dynamic: ToInstance, Description("Fires when an implied login entry is added to implied login hash store."): Amended,
    Guid("{23700457-5CDF-45C7-AB07-73AC08B93735}"), locale("MS\\0x409"),
    DisplayName("implied_auth_login_entry_added_to_store"): Amended]
class XeSqlPkg_implied_auth_login_entry_added_to_store: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class implied_auth_login_entry_added_to_store: XeSqlPkg_implied_auth_login_entry_added_to_store
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string implied_login_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string external_user_sid;
};
		
[dynamic: ToInstance, Description("Fires when an implied login entry is removed from implied login hash store."): Amended,
    Guid("{56CFA523-D6F0-4BA7-B563-388C5109EB3F}"), locale("MS\\0x409"),
    DisplayName("implied_auth_login_entry_removed_from_store"): Amended]
class XeSqlPkg_implied_auth_login_entry_removed_from_store: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class implied_auth_login_entry_removed_from_store: XeSqlPkg_implied_auth_login_entry_removed_from_store
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string implied_login_name;
	[WmiDataId(6), read, Extension("Variant")] object external_user_sid;
};
		
[dynamic: ToInstance, Description("Fires when an implied login entry is removed from implied login hash store."): Amended,
    Guid("{56CFA523-D6F0-4BA7-B563-388C5109EB3F}"), locale("MS\\0x409"),
    DisplayName("implied_auth_login_entry_removed_from_store"): Amended]
class XeSqlPkg_implied_auth_login_entry_removed_from_store: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class implied_auth_login_entry_removed_from_store: XeSqlPkg_implied_auth_login_entry_removed_from_store
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string implied_login_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string external_user_sid;
};
		
[dynamic: ToInstance, Description("Fires when a login token is swapped via implied authentication."): Amended,
    Guid("{3bb39266-b1ef-4bbf-a881-685831eb9db9}"), locale("MS\\0x409"),
    DisplayName("implied_auth_login_token_loaded"): Amended]
class XeSqlPkg_implied_auth_login_token_loaded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class implied_auth_login_token_loaded: XeSqlPkg_implied_auth_login_token_loaded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string swapped_login_name;
	[WmiDataId(6), read, Extension("Variant")] object external_user_sid;
};
		
[dynamic: ToInstance, Description("Fires when a login token is swapped via implied authentication."): Amended,
    Guid("{3bb39266-b1ef-4bbf-a881-685831eb9db9}"), locale("MS\\0x409"),
    DisplayName("implied_auth_login_token_loaded"): Amended]
class XeSqlPkg_implied_auth_login_token_loaded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class implied_auth_login_token_loaded: XeSqlPkg_implied_auth_login_token_loaded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string swapped_login_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string external_user_sid;
};
		
[dynamic: ToInstance, Description("Tracking TVM's scope id change"): Amended,
    Guid("{FE3C601E-348D-4CE2-81F0-FB9DE6E4DF99}"), locale("MS\\0x409"),
    DisplayName("tvm_scope_change"): Amended]
class XeSqlPkg_tvm_scope_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tvm_scope_change: XeSqlPkg_tvm_scope_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tvm_pointer;
	[WmiDataId(6), read] sint32 scope_old;
	[WmiDataId(7), read] sint32 scope_new;
};
		
[dynamic: ToInstance, Description("Occurs when a disconnection happens."): Amended,
    Guid("{CA041397-149B-4939-B4D5-CEC72A81EBE1}"), locale("MS\\0x409"),
    DisplayName("process_close_connection"): Amended]
class XeSqlPkg_process_close_connection: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class process_close_connection: XeSqlPkg_process_close_connection
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 session_elapsed_time_ms;
	[WmiDataId(6), read] sint8  is_normal_logout;
	[WmiDataId(7), read, 
				XEMapId(111),
				ValueMap { 
					"1", 
					"2", 
					"0", 
					"3" },
				Values { 
					"BATCH_ENQUEUED", 
					"BATCH_IDLE", 
					"", 
					"_NO_TASK" }
			] uint8 batch_state;
	[WmiDataId(8), read] sint32 error;
	[WmiDataId(9), read] sint32 state;
	[WmiDataId(10), read] sint32 severity;
	[WmiDataId(11), read] sint32 spid;
	[WmiDataId(12), read] sint32 batch_id;
	[WmiDataId(13), read, 
				XEMapId(110),
				ValueMap { 
					"32", 
					"14", 
					"2", 
					"3", 
					"15", 
					"16", 
					"17", 
					"4", 
					"109", 
					"111", 
					"24", 
					"33", 
					"34", 
					"110", 
					"19", 
					"0", 
					"5", 
					"29", 
					"28", 
					"10", 
					"18", 
					"35", 
					"31", 
					"36", 
					"7", 
					"1", 
					"9", 
					"23", 
					"6", 
					"20", 
					"21", 
					"22", 
					"11", 
					"102", 
					"100", 
					"108", 
					"104", 
					"106", 
					"107", 
					"103", 
					"101", 
					"105", 
					"27", 
					"26", 
					"30", 
					"12", 
					"13", 
					"25", 
					"8" },
				Values { 
					"ekrAbortIdleTransactions", 
					"ekrCloudPartitionFatalError", 
					"ekrCloudPartitionUsersKill", 
					"ekrCloudPartitionUsersKillOnDrainTimeout", 
					"ekrCloudReplicationFatalError", 
					"ekrCloudThrottlingFatalError", 
					"ekrCloudWatchDogLimitFatalError", 
					"ekrDBTableStateChange", 
					"ekrDeactivation", 
					"ekrDeadTdsSessionKiller", 
					"ekrDefaultHandlerKill", 
					"ekrDwFidoGlmRoleChange", 
					"ekrDwFidoKillSystemTasks", 
					"ekrElapsedMaxDuration", 
					"ekrFabricMonitorKill", 
					"", 
					"ekrGatewayKillActiveDBConnections", 
					"ekrHandlerKill", 
					"ekrIdleSessionKiller", 
					"ekrKillBlockersLockRequest", 
					"ekrKillSpid", 
					"ekrLoadSrvMasterKey", 
					"ekrManagedInstanceCreateDatabase", 
					"ekrManagedInstanceDropDatabase", 
					"ekrMirroringStateChange", 
					"ekrNormalLogout", 
					"ekrRedoExclusiveOperation", 
					"ekrRedoLoginFailure", 
					"ekrRemoteXactHardenFailure", 
					"ekrSessionResetException", 
					"ekrSessionResetFailpoint", 
					"ekrSessionResetSecurity", 
					"ekrSptLimitExceeded", 
					"ekrSqlWatchdogBlockingSystemTasks", 
					"ekrSqlWatchdogFirst", 
					"ekrSqlWatchdogLast", 
					"ekrSqlWatchdogLogBytesUsed", 
					"ekrSqlWatchdogMemoryUse", 
					"ekrSqlWatchdogTempDbLogUsage", 
					"ekrSqlWatchdogTempDbUsage", 
					"ekrSqlWatchdogTooManyRequests", 
					"ekrSqlWatchdogTransactionLogLength", 
					"ekrTdsNetworkStreamFailure", 
					"ekrTdsNetworkWriteFailure", 
					"ekrTdsPacketSizeOrFormatError", 
					"ekrTdsProtocolError", 
					"ekrUnhandledCCException", 
					"ekrUtHandlerKill", 
					"ekrVersioningInvalid" }
			] uint8 kill_reason;
	[WmiDataId(14), read] sint8  is_mars;
	[WmiDataId(15), read] sint8  in_quorum_catchup;
	[WmiDataId(16), read] sint8  batch_drain_complete;
	[WmiDataId(17), read, Extension("Guid")] guid connection_id;
	[WmiDataId(18), read, Extension("Guid")] guid connection_peer_id;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string peer_address;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string logical_server_name;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string extra_info;
};
		
[dynamic: ToInstance, Description("Event marking the interleaved execution in QO"): Amended,
    Guid("{EA2503DE-EA1D-4FCA-BA30-367426FC74D5}"), locale("MS\\0x409"),
    DisplayName("interleaved_exec_status"): Amended]
class XeSqlPkg_interleaved_exec_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class interleaved_exec_status: XeSqlPkg_interleaved_exec_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 operator_code;
	[WmiDataId(6), read] uint32 event_type;
	[WmiDataId(7), read] uint64 time_ticks;
};
		
[dynamic: ToInstance, Description("Event marking the interleaved execution in QO"): Amended,
    Guid("{EA2503DE-EA1D-4FCA-BA30-367426FC74D5}"), locale("MS\\0x409"),
    DisplayName("interleaved_exec_status"): Amended]
class XeSqlPkg_interleaved_exec_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class interleaved_exec_status: XeSqlPkg_interleaved_exec_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 operator_code;
	[WmiDataId(6), read] sint64 event_type;
	[WmiDataId(7), read] uint64 time_ticks;
};
		
[dynamic: ToInstance, Description("Event describing the statistics updated by interleaved execution"): Amended,
    Guid("{2DA44FEA-5B9B-4CBC-84B5-31490CEB30FD}"), locale("MS\\0x409"),
    DisplayName("interleaved_exec_stats_update"): Amended]
class XeSqlPkg_interleaved_exec_stats_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class interleaved_exec_stats_update: XeSqlPkg_interleaved_exec_stats_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] real64 estimated_card;
	[WmiDataId(6), read] real64 actual_card;
	[WmiDataId(7), read] uint64 estimated_pages;
	[WmiDataId(8), read] uint64 actual_pages;
};
		
[dynamic: ToInstance, Description("Build time for TVF."): Amended,
    Guid("{1CF065C7-4373-4FFC-84B0-AE9EBD2D8B2A}"), locale("MS\\0x409"),
    DisplayName("sql_tvf_build"): Amended]
class XeSqlPkg_sql_tvf_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_tvf_build: XeSqlPkg_sql_tvf_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  interleaved_executed;
	[WmiDataId(6), read] uint32 function_id;
	[WmiDataId(7), read] uint64 exec_time;
	[WmiDataId(8), read] uint64 exec_context_pointer;
};
		
[dynamic: ToInstance, Description("Failed to interleaved execute tvf."): Amended,
    Guid("{94DBA5A7-C18F-4F33-B014-111F7AA8DC0F}"), locale("MS\\0x409"),
    DisplayName("interleaved_exec_tvf_failed"): Amended]
class XeSqlPkg_interleaved_exec_tvf_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class interleaved_exec_tvf_failed: XeSqlPkg_interleaved_exec_tvf_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 tvf_instance_id;
	[WmiDataId(6), read, 
				XEMapId(114),
				ValueMap { 
					"4", 
					"1", 
					"3", 
					"2", 
					"0" },
				Values { 
					"Count", 
					"Failed_Args", 
					"Failed_Query", 
					"Failed_TmpTable", 
					"Successful" }
			] sint32 failure_code;
	[WmiDataId(7), read] sint32 sql_error_code;
	[WmiDataId(8), read] sint32 sql_severity;
	[WmiDataId(9), read] sint32 sql_error_state;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string function_name;
};
		
[dynamic: ToInstance, Description("Occurs if a batch mode hash join can be implemented as collocated join. "): Amended,
    Guid("{B1F3AF11-FE06-40B7-8C16-077A7ED79AAD}"), locale("MS\\0x409"),
    DisplayName("potential_batch_mode_colocated_join"): Amended]
class XeSqlPkg_potential_batch_mode_colocated_join: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class potential_batch_mode_colocated_join: XeSqlPkg_potential_batch_mode_colocated_join
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(100),
				ValueMap { 
					"104", 
					"34", 
					"50", 
					"35", 
					"250", 
					"40", 
					"42", 
					"43", 
					"0", 
					"52", 
					"56", 
					"127", 
					"60", 
					"31", 
					"59", 
					"62", 
					"58", 
					"122", 
					"173", 
					"61", 
					"106", 
					"36", 
					"108", 
					"175", 
					"98", 
					"239", 
					"1", 
					"243", 
					"41", 
					"189", 
					"240", 
					"48", 
					"165", 
					"167", 
					"231", 
					"99", 
					"241", 
					"242" },
				Values { 
					"XE_XVT_BIT", 
					"XE_XVT_BLOB", 
					"XE_XVT_BOOL", 
					"XE_XVT_CLOB", 
					"XE_XVT_CURSOR", 
					"XE_XVT_DATE", 
					"XE_XVT_DATETIME2", 
					"XE_XVT_DATETIMEOFFSET", 
					"XE_XVT_EMPTY", 
					"XE_XVT_I2", 
					"XE_XVT_I4", 
					"XE_XVT_I8", 
					"XE_XVT_MONEY", 
					"XE_XVT_NULL", 
					"XE_XVT_R4", 
					"XE_XVT_R8", 
					"XE_XVT_SMALLDATE", 
					"XE_XVT_SMALLMONEY", 
					"XE_XVT_SSBYTES", 
					"XE_XVT_SSDATE", 
					"XE_XVT_SSDECIMAL", 
					"XE_XVT_SSGUID", 
					"XE_XVT_SSNUMERIC", 
					"XE_XVT_SSSTR", 
					"XE_XVT_SSVARIANT", 
					"XE_XVT_SSWSTR", 
					"XE_XVT_TABLE", 
					"XE_XVT_TABLETYPE", 
					"XE_XVT_TIME", 
					"XE_XVT_TIMESTAMP", 
					"XE_XVT_UDT", 
					"XE_XVT_UI1", 
					"XE_XVT_VARBYTES", 
					"XE_XVT_VARSTR", 
					"XE_XVT_VARWSTR", 
					"XE_XVT_WLOB", 
					"XE_XVT_XML", 
					"XE_XVT_XMLNODE" }
			] uint32 partition_key_data_type;
	[WmiDataId(6), read] uint64 estimated_build_side_row_count;
	[WmiDataId(7), read] uint64 estimated_probe_side_row_count;
};
		
[dynamic: ToInstance, Description("Record logical join condition properties"): Amended,
    Guid("{1973bd81-4278-47e8-b8c7-2b7957a096c9}"), locale("MS\\0x409"),
    DisplayName("join_condition_description"): Amended]
class XeSqlPkg_join_condition_description: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class join_condition_description: XeSqlPkg_join_condition_description
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  has_expensive_compare_type;
	[WmiDataId(6), read, 
				XEMapId(100),
				ValueMap { 
					"104", 
					"34", 
					"50", 
					"35", 
					"250", 
					"40", 
					"42", 
					"43", 
					"0", 
					"52", 
					"56", 
					"127", 
					"60", 
					"31", 
					"59", 
					"62", 
					"58", 
					"122", 
					"173", 
					"61", 
					"106", 
					"36", 
					"108", 
					"175", 
					"98", 
					"239", 
					"1", 
					"243", 
					"41", 
					"189", 
					"240", 
					"48", 
					"165", 
					"167", 
					"231", 
					"99", 
					"241", 
					"242" },
				Values { 
					"XE_XVT_BIT", 
					"XE_XVT_BLOB", 
					"XE_XVT_BOOL", 
					"XE_XVT_CLOB", 
					"XE_XVT_CURSOR", 
					"XE_XVT_DATE", 
					"XE_XVT_DATETIME2", 
					"XE_XVT_DATETIMEOFFSET", 
					"XE_XVT_EMPTY", 
					"XE_XVT_I2", 
					"XE_XVT_I4", 
					"XE_XVT_I8", 
					"XE_XVT_MONEY", 
					"XE_XVT_NULL", 
					"XE_XVT_R4", 
					"XE_XVT_R8", 
					"XE_XVT_SMALLDATE", 
					"XE_XVT_SMALLMONEY", 
					"XE_XVT_SSBYTES", 
					"XE_XVT_SSDATE", 
					"XE_XVT_SSDECIMAL", 
					"XE_XVT_SSGUID", 
					"XE_XVT_SSNUMERIC", 
					"XE_XVT_SSSTR", 
					"XE_XVT_SSVARIANT", 
					"XE_XVT_SSWSTR", 
					"XE_XVT_TABLE", 
					"XE_XVT_TABLETYPE", 
					"XE_XVT_TIME", 
					"XE_XVT_TIMESTAMP", 
					"XE_XVT_UDT", 
					"XE_XVT_UI1", 
					"XE_XVT_VARBYTES", 
					"XE_XVT_VARSTR", 
					"XE_XVT_VARWSTR", 
					"XE_XVT_WLOB", 
					"XE_XVT_XML", 
					"XE_XVT_XMLNODE" }
			] uint32 leading_column_type;
	[WmiDataId(7), read] uint32 leading_column_length;
	[WmiDataId(8), read, 
				XEMapId(101),
				ValueMap { 
					"822136840", 
					"2030096392", 
					"956362760", 
					"1023463432", 
					"922796040", 
					"939577352", 
					"2046869512", 
					"1543557142", 
					"1526775830", 
					"1409339396", 
					"1392558084", 
					"3070283781", 
					"3523264520", 
					"3674259497", 
					"3540041769", 
					"3657482245", 
					"3556818949", 
					"3573596170", 
					"3590373384", 
					"3607150632", 
					"3623927816", 
					"3640705035", 
					"2617298973", 
					"2600517661", 
					"1442893837", 
					"1426112525", 
					"3120615438", 
					"906031112", 
					"872468488", 
					"855687176", 
					"1375784968", 
					"1359003656", 
					"1778438152", 
					"1761656840", 
					"2080436232", 
					"1912655880", 
					"1895874568", 
					"2181091336", 
					"2164310024", 
					"2315309064", 
					"2298527752", 
					"2449526792", 
					"2432745480", 
					"2583744520", 
					"2566963208", 
					"503382024", 
					"570486792", 
					"536924168", 
					"520142856", 
					"671154184", 
					"671090696", 
					"738258952", 
					"704696328", 
					"687915016", 
					"889245704", 
					"553701384", 
					"721473544", 
					"2650853406", 
					"2634072094", 
					"2684407838", 
					"2667626526", 
					"2013315080", 
					"1476448275", 
					"1459666963", 
					"1510002708", 
					"1493221396", 
					"1006686218", 
					"989904906", 
					"973131786", 
					"1577111575", 
					"1560330263", 
					"1610661916", 
					"1593884700", 
					"3103838218", 
					"3087061002", 
					"1811992603", 
					"1795211291" },
				Values { 
					"SQL_1xCompat_CP850_CI_AS", 
					"SQL_AltDiction_CP1253_CS_AS", 
					"SQL_AltDiction_CP850_CI_AI", 
					"SQL_AltDiction_CP850_CI_AS", 
					"SQL_AltDiction_CP850_CS_AS", 
					"SQL_AltDiction_Pref_CP850_CI_AS", 
					"SQL_AltDiction2_CP1253_CS_AS", 
					"SQL_Croatian_CP1250_CI_AS", 
					"SQL_Croatian_CP1250_CS_AS", 
					"SQL_Czech_CP1250_CI_AS", 
					"SQL_Czech_CP1250_CS_AS", 
					"SQL_Danish_Pref_CP1_CI_AS", 
					"SQL_EBCDIC037_CP1_CS_AS", 
					"SQL_EBCDIC1141_CP1_CS_AS", 
					"SQL_EBCDIC273_CP1_CS_AS", 
					"SQL_EBCDIC277_2_CP1_CS_AS", 
					"SQL_EBCDIC277_CP1_CS_AS", 
					"SQL_EBCDIC278_CP1_CS_AS", 
					"SQL_EBCDIC280_CP1_CS_AS", 
					"SQL_EBCDIC284_CP1_CS_AS", 
					"SQL_EBCDIC285_CP1_CS_AS", 
					"SQL_EBCDIC297_CP1_CS_AS", 
					"SQL_Estonian_CP1257_CI_AS", 
					"SQL_Estonian_CP1257_CS_AS", 
					"SQL_Hungarian_CP1250_CI_AS", 
					"SQL_Hungarian_CP1250_CS_AS", 
					"SQL_Icelandic_Pref_CP1_CI_AS", 
					"SQL_Latin1_General_CP1_CI_AI", 
					"SQL_Latin1_General_CP1_CI_AS", 
					"SQL_Latin1_General_CP1_CS_AS", 
					"SQL_Latin1_General_CP1250_CI_AS", 
					"SQL_Latin1_General_CP1250_CS_AS", 
					"SQL_Latin1_General_CP1251_CI_AS", 
					"SQL_Latin1_General_CP1251_CS_AS", 
					"SQL_Latin1_General_CP1253_CI_AI", 
					"SQL_Latin1_General_CP1253_CI_AS", 
					"SQL_Latin1_General_CP1253_CS_AS", 
					"SQL_Latin1_General_CP1254_CI_AS", 
					"SQL_Latin1_General_CP1254_CS_AS", 
					"SQL_Latin1_General_CP1255_CI_AS", 
					"SQL_Latin1_General_CP1255_CS_AS", 
					"SQL_Latin1_General_CP1256_CI_AS", 
					"SQL_Latin1_General_CP1256_CS_AS", 
					"SQL_Latin1_General_CP1257_CI_AS", 
					"SQL_Latin1_General_CP1257_CS_AS", 
					"SQL_Latin1_General_CP437_BIN", 
					"SQL_Latin1_General_CP437_CI_AI", 
					"SQL_Latin1_General_CP437_CI_AS", 
					"SQL_Latin1_General_CP437_CS_AS", 
					"SQL_Latin1_General_CP850_BIN", 
					"SQL_Latin1_General_CP850_BIN2", 
					"SQL_Latin1_General_CP850_CI_AI", 
					"SQL_Latin1_General_CP850_CI_AS", 
					"SQL_Latin1_General_CP850_CS_AS", 
					"SQL_Latin1_General_Pref_CP1_CI_AS", 
					"SQL_Latin1_General_Pref_CP437_CI_AS", 
					"SQL_Latin1_General_Pref_CP850_CI_AS", 
					"SQL_Latvian_CP1257_CI_AS", 
					"SQL_Latvian_CP1257_CS_AS", 
					"SQL_Lithuanian_CP1257_CI_AS", 
					"SQL_Lithuanian_CP1257_CS_AS", 
					"SQL_MixDiction_CP1253_CS_AS", 
					"SQL_Polish_CP1250_CI_AS", 
					"SQL_Polish_CP1250_CS_AS", 
					"SQL_Romanian_CP1250_CI_AS", 
					"SQL_Romanian_CP1250_CS_AS", 
					"SQL_Scandainavian_CP850_CI_AS", 
					"SQL_Scandainavian_CP850_CS_AS", 
					"SQL_Scandainavian_Pref_CP850_CI_AS", 
					"SQL_Slovak_CP1250_CI_AS", 
					"SQL_Slovak_CP1250_CS_AS", 
					"SQL_Slovenian_CP1250_CI_AS", 
					"SQL_Slovenian_CP1250_CS_AS", 
					"SQL_SwedishPhone_Pref_CP1_CI_AS", 
					"SQL_SwedishStd_Pref_CP1_CI_AS", 
					"SQL_Ukrainian_CP1251_CI_AS", 
					"SQL_Ukrainian_CP1251_CS_AS" }
			] uint32 leading_column_collation;
	[WmiDataId(9), read] uint32 leading_column_precision;
	[WmiDataId(10), read] uint32 leading_column_scale;
	[WmiDataId(11), read] uint32 join_column_count;
};
		
[dynamic: ToInstance, Description("Resumable Index Build DDL Reporting"): Amended,
    Guid("{004e7951-17f2-4d48-a453-72abade5bc56}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_ddl"): Amended]
class XeSqlPkg_resumable_index_build_ddl: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_ddl: XeSqlPkg_resumable_index_build_ddl
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  resumable;
	[WmiDataId(6), read] uint32 max_duration;
	[WmiDataId(7), read] sint32 max_dop;
};
		
[dynamic: ToInstance, Description("Session Disconnect Before Drop Temp Objects Reporting"): Amended,
    Guid("{d08d7f02-890c-458f-82eb-684344e92508}"), locale("MS\\0x409"),
    DisplayName("session_disconnect_before_drop_temp_objects"): Amended]
class XeSqlPkg_session_disconnect_before_drop_temp_objects: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class session_disconnect_before_drop_temp_objects: XeSqlPkg_session_disconnect_before_drop_temp_objects
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Truncate execute reporting"): Amended,
    Guid("{7b1290e7-3390-4f36-93ef-379b64730e58}"), locale("MS\\0x409"),
    DisplayName("truncate_execute"): Amended]
class XeSqlPkg_truncate_execute: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class truncate_execute: XeSqlPkg_truncate_execute
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Truncate compile reporting"): Amended,
    Guid("{4ccb639b-f3e1-4878-a937-e18f3f56e0c9}"), locale("MS\\0x409"),
    DisplayName("truncate_compile"): Amended]
class XeSqlPkg_truncate_compile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class truncate_compile: XeSqlPkg_truncate_compile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when an index is defragmented by the ALTER INDEX REBUILD or ALTER INDEX REORGANIZE statement. Add the nt_username or server_principal_name actions to this event to determine who altered the object."): Amended,
    Guid("{e878dc44-2a49-40c7-bbff-826114542f9d}"), locale("MS\\0x409"),
    DisplayName("index_defragmentation"): Amended]
class XeSqlPkg_index_defragmentation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class index_defragmentation: XeSqlPkg_index_defragmentation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 transaction_id;
	[WmiDataId(6), read, 
				XEMapId(4),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Begin", 
					"Commit", 
					"Rollback" }
			] uint8 ddl_phase;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] sint32 object_id;
	[WmiDataId(9), read] sint8  all_indexes;
	[WmiDataId(10), read] sint32 index_id;
	[WmiDataId(11), read] sint32 partition_id;
	[WmiDataId(12), read, 
				XEMapId(121),
				ValueMap { 
					"7", 
					"2", 
					"0", 
					"8", 
					"1", 
					"3", 
					"6", 
					"4", 
					"5" },
				Values { 
					"abort", 
					"disable", 
					"invalid", 
					"pause", 
					"rebuild", 
					"reorganize", 
					"resume", 
					"setOptions", 
					"setSXIPaths" }
			] sint32 alter_type;
	[WmiDataId(13), read] uint8 index_type;
	[WmiDataId(14), read] uint64 index_build_duration_sec;
	[WmiDataId(15), read] sint8  pad_index;
	[WmiDataId(16), read] sint8 fill_factor;
	[WmiDataId(17), read] sint8  sort_in_tempdb;
	[WmiDataId(18), read] sint8  ignore_dup_key;
	[WmiDataId(19), read] sint8  statistics_norecompute;
	[WmiDataId(20), read] sint8  statistics_incremental;
	[WmiDataId(21), read] sint8  online;
	[WmiDataId(22), read] sint32 low_priority_timeout;
	[WmiDataId(23), read] uint8 kill_lock_option;
	[WmiDataId(24), read] sint8  allow_row_locks;
	[WmiDataId(25), read] sint8  allow_page_locks;
	[WmiDataId(26), read] sint8  data_compression;
	[WmiDataId(27), read] sint64 data_compression_delay;
	[WmiDataId(28), read] sint32 max_dop;
	[WmiDataId(29), read] sint8  resumable;
	[WmiDataId(30), read] uint64 max_duration;
	[WmiDataId(31), read] sint8  text_compaction;
	[WmiDataId(32), read] sint8  compress_all_row_groups;
};
		
[dynamic: ToInstance, Description("A USE HINT query hint is enabled for the currently compiling query."): Amended,
    Guid("{CDF42780-EFE6-4946-B99A-BEA861D98AFD}"), locale("MS\\0x409"),
    DisplayName("use_hint_enabled"): Amended]
class XeSqlPkg_use_hint_enabled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class use_hint_enabled: XeSqlPkg_use_hint_enabled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string hint_types;
};
		
[dynamic: ToInstance, Description("Resumable Index Build Resume Loaded Options"): Amended,
    Guid("{b25da262-9fcd-43a7-a6f9-5bc50457b9f2}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_load"): Amended]
class XeSqlPkg_resumable_index_build_load: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_load: XeSqlPkg_resumable_index_build_load
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] sint32 index_id;
	[WmiDataId(7), read] sint32 partition_id;
	[WmiDataId(8), read] sint32 stage;
	[WmiDataId(9), read] sint32 last_max_dop;
};
		
[dynamic: ToInstance, Description("Resumable Index Build Phase Start"): Amended,
    Guid("{84110513-1c39-404a-9f7a-08df95c30e26}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_phase_start"): Amended]
class XeSqlPkg_resumable_index_build_phase_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_phase_start: XeSqlPkg_resumable_index_build_phase_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] sint32 index_id;
	[WmiDataId(7), read] sint32 stage;
};
		
[dynamic: ToInstance, Description("Resumable Index Build Phase End"): Amended,
    Guid("{350a0f44-0779-420b-b6e7-72787ac52945}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_phase_end"): Amended]
class XeSqlPkg_resumable_index_build_phase_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_phase_end: XeSqlPkg_resumable_index_build_phase_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] sint32 index_id;
	[WmiDataId(7), read] sint32 stage;
};
		
[dynamic: ToInstance, Description("Fired while testing update stats phase of a resumable index build"): Amended,
    Guid("{9a3e22bd-c008-49bc-88fc-9b0450faa105}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_update_stats"): Amended]
class XeSqlPkg_resumable_index_build_update_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_update_stats: XeSqlPkg_resumable_index_build_update_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 index_id;
	[WmiDataId(6), read] sint8  is_start;
};
		
[dynamic: ToInstance, Description("Resumable Index Build Execution Times"): Amended,
    Guid("{e7dd2da1-4505-4cb7-a709-9c3b9736a5f3}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_execution_times"): Amended]
class XeSqlPkg_resumable_index_build_execution_times: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_execution_times: XeSqlPkg_resumable_index_build_execution_times
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] sint32 index_id;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 last_start_time;
	[WmiDataId(8), read, Extension("WmiTime")] uint64 last_progress_time;
	[WmiDataId(9), read] uint64 total_execution_time;
};
		
[dynamic: ToInstance, Description("Occurs when global transaction is started."): Amended,
    Guid("{b44955ce-30b0-478f-b979-48f81fdc69fb}"), locale("MS\\0x409"),
    DisplayName("global_transaction"): Amended]
class XeSqlPkg_global_transaction: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class global_transaction: XeSqlPkg_global_transaction
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(50),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"NULL", 
					"Exception", 
					"Error", 
					"Info", 
					"Warning" }
			] uint8 type;
	[WmiDataId(6), read] sint64 database_id;
	[WmiDataId(7), read, Extension("Guid")] guid unit_of_work_id;
	[WmiDataId(8), read, Extension("Guid")] guid resource_manager_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string physical_server;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string logical_server;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string func;
};
		
[dynamic: ToInstance, Description("Occurs when global transaction ucs message is started."): Amended,
    Guid("{4c889835-3aed-4ac5-a27b-8a27ca8b8390}"), locale("MS\\0x409"),
    DisplayName("global_transaction_ucs"): Amended]
class XeSqlPkg_global_transaction_ucs: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class global_transaction_ucs: XeSqlPkg_global_transaction_ucs
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(49),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"NULL", 
					"Error", 
					"Info", 
					"Warning", 
					"Exception" }
			] uint8 event_type;
	[WmiDataId(6), read, Extension("Guid")] guid message_hash;
	[WmiDataId(7), read, Extension("Guid")] guid unit_of_work_id;
	[WmiDataId(8), read, Extension("Guid")] guid transport_stream_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string physical_server;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string func;
};
		
[dynamic: ToInstance, Description("Resumable Index Build Abort Ending"): Amended,
    Guid("{bc666997-f5b1-45ec-9a20-2cd2194f3a6e}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_abort_end"): Amended]
class XeSqlPkg_resumable_index_build_abort_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_abort_end: XeSqlPkg_resumable_index_build_abort_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] sint32 index_id;
};
		
[dynamic: ToInstance, Description("Occurs when workload group definition changes."): Amended,
    Guid("{8f0a4775-a2dd-430e-8e05-860cb8f47d6a}"), locale("MS\\0x409"),
    DisplayName("resource_governor_workload_group_definition_changed"): Amended]
class XeSqlPkg_resource_governor_workload_group_definition_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resource_governor_workload_group_definition_changed: XeSqlPkg_resource_governor_workload_group_definition_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 group_id;
	[WmiDataId(6), read] uint64 resource_pool_id;
	[WmiDataId(7), read] real64 request_max_memory_grant_percent;
	[WmiDataId(8), read] uint64 request_max_cpu_time_sec;
	[WmiDataId(9), read] uint64 request_memory_grant_timeout_sec;
	[WmiDataId(10), read] uint64 max_dop;
	[WmiDataId(11), read] uint64 group_max_requests;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string importance;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string operation_type;
};
		
[dynamic: ToInstance, Description("Occurs when resource pool definition changes."): Amended,
    Guid("{7e0f5310-f450-465e-beca-a66c7620cf2b}"), locale("MS\\0x409"),
    DisplayName("resource_governor_resource_pool_definition_changed"): Amended]
class XeSqlPkg_resource_governor_resource_pool_definition_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resource_governor_resource_pool_definition_changed: XeSqlPkg_resource_governor_resource_pool_definition_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 resource_pool_id;
	[WmiDataId(6), read] uint32 min_cpu_percent;
	[WmiDataId(7), read] uint32 max_cpu_percent;
	[WmiDataId(8), read] uint32 cap_cpu_percent;
	[WmiDataId(9), read] uint32 min_memory_percent;
	[WmiDataId(10), read] uint32 max_memory_percent;
	[WmiDataId(11), read] uint64 min_iops_per_volume;
	[WmiDataId(12), read] uint64 max_iops_per_volume;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string operation_type;
};
		
[dynamic: ToInstance, Description("Occurs when Resource Governor classifier function is changed."): Amended,
    Guid("{fcf5140d-a353-4d3e-8a0c-778822d84868}"), locale("MS\\0x409"),
    DisplayName("resource_governor_classifier_changed"): Amended]
class XeSqlPkg_resource_governor_classifier_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resource_governor_classifier_changed: XeSqlPkg_resource_governor_classifier_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 classifier_id;
	[WmiDataId(6), read] sint8  is_disable_command;
};
		
[dynamic: ToInstance, Description("Shows classifier data before and after rg reconfigure."): Amended,
    Guid("{412121d5-af58-4ee5-9377-4911477d5445}"), locale("MS\\0x409"),
    DisplayName("resource_governor_reconfigure_classifier_details"): Amended]
class XeSqlPkg_resource_governor_reconfigure_classifier_details: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resource_governor_reconfigure_classifier_details: XeSqlPkg_resource_governor_reconfigure_classifier_details
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 classifier_id;
	[WmiDataId(6), read] uint64 classifier_id_previous;
	[WmiDataId(7), read] sint8  was_enabled;
	[WmiDataId(8), read] sint8  try_enable;
};
		
[dynamic: ToInstance, Description("FIDO Temp DB Trace."): Amended,
    Guid("{4960f182-6b70-4c23-95f4-61f5726f7eef}"), locale("MS\\0x409"),
    DisplayName("fido_temp_db_events"): Amended]
class XeSqlPkg_fido_temp_db_events: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_temp_db_events: XeSqlPkg_fido_temp_db_events
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string fido_component;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("FIDO temp table name mapping"): Amended,
    Guid("{9a718e74-259b-4716-b7f1-f9742aff45cf}"), locale("MS\\0x409"),
    DisplayName("fido_temp_table_mapping"): Amended]
class XeSqlPkg_fido_temp_table_mapping: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_temp_table_mapping: XeSqlPkg_fido_temp_table_mapping
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 session_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string user_table_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string generated_table_name;
};
		
[dynamic: ToInstance, Description("FIDO DDL step for multi-step DDL operation."): Amended,
    Guid("{31f97214-c618-4995-85b1-86c6fb4eb205}"), locale("MS\\0x409"),
    DisplayName("fido_multi_step_ddl_operation"): Amended]
class XeSqlPkg_fido_multi_step_ddl_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_multi_step_ddl_operation: XeSqlPkg_fido_multi_step_ddl_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 txn_version;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint16 ddl_step_index;
	[WmiDataId(8), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string statement_type;
};
		
[dynamic: ToInstance, Description("Occurs when bulk insert statement is compiled."): Amended,
    Guid("{e3b83ca2-4690-4e96-b59d-3af9bfefcb6b}"), locale("MS\\0x409"),
    DisplayName("bulk_insert_usage"): Amended]
class XeSqlPkg_bulk_insert_usage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bulk_insert_usage: XeSqlPkg_bulk_insert_usage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(119),
				ValueMap { 
					"1", 
					"3", 
					"0", 
					"2", 
					"4" },
				Values { 
					"CSV", 
					"ExternallyExtracted", 
					"None", 
					"PARALLEL_CSV", 
					"x_BulkImp_DataTableFormat_ExternallyExtracted" }
			] uint8 datafile_format_type;
	[WmiDataId(6), read, 
				XEMapId(51),
				ValueMap { 
					"0", 
					"1", 
					"65001", 
					"99999" },
				Values { 
					"ACP", 
					"OEM", 
					"UTF8", 
					"RAW" }
			] uint32 codepage;
	[WmiDataId(7), read] sint8  is_external_data_source;
};
		
[dynamic: ToInstance, Description("Occurs when openrowset bulk statement is compiled."): Amended,
    Guid("{2489f3b2-0ca1-4c08-93b2-86f2899cdd28}"), locale("MS\\0x409"),
    DisplayName("openrowset_bulk_usage"): Amended]
class XeSqlPkg_openrowset_bulk_usage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class openrowset_bulk_usage: XeSqlPkg_openrowset_bulk_usage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(119),
				ValueMap { 
					"1", 
					"3", 
					"0", 
					"2", 
					"4" },
				Values { 
					"CSV", 
					"ExternallyExtracted", 
					"None", 
					"PARALLEL_CSV", 
					"x_BulkImp_DataTableFormat_ExternallyExtracted" }
			] uint8 datafile_format_type;
	[WmiDataId(6), read, 
				XEMapId(51),
				ValueMap { 
					"0", 
					"1", 
					"65001", 
					"99999" },
				Values { 
					"ACP", 
					"OEM", 
					"UTF8", 
					"RAW" }
			] uint32 codepage;
	[WmiDataId(7), read] sint8  is_external_data_source;
};
		
[dynamic: ToInstance, Description("Index Build Usage Telemetry"): Amended,
    Guid("{b9b0ce16-72e3-494d-89b5-b4414407711b}"), locale("MS\\0x409"),
    DisplayName("create_index_event"): Amended]
class XeSqlPkg_create_index_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class create_index_event: XeSqlPkg_create_index_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint8 index_type;
	[WmiDataId(8), read] uint64 index_build_duration_sec;
	[WmiDataId(9), read] sint8  is_clustered;
	[WmiDataId(10), read] sint8  pad_index;
	[WmiDataId(11), read] sint8 fill_factor;
	[WmiDataId(12), read] sint8  sort_in_tempdb;
	[WmiDataId(13), read] sint8  ignore_dup_key;
	[WmiDataId(14), read] sint8  statistics_norecompute;
	[WmiDataId(15), read] sint8  statistics_incremental;
	[WmiDataId(16), read] sint8  allow_row_locks;
	[WmiDataId(17), read] sint8  allow_page_locks;
	[WmiDataId(18), read] sint32 max_dop;
	[WmiDataId(19), read] sint8  online;
	[WmiDataId(20), read] sint8  resumable;
	[WmiDataId(21), read] uint64 max_duration;
	[WmiDataId(22), read] sint8  is_in_remote_storage;
};
		
[dynamic: ToInstance, Description("Index Build Error Event"): Amended,
    Guid("{7e22d97e-d813-476d-ba17-876f304a3bf2}"), locale("MS\\0x409"),
    DisplayName("index_build_error_event"): Amended]
class XeSqlPkg_index_build_error_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class index_build_error_event: XeSqlPkg_index_build_error_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 index_id;
	[WmiDataId(8), read] sint32 column_id;
	[WmiDataId(9), read] sint8  is_index_alter;
	[WmiDataId(10), read] sint8  is_column_alter;
	[WmiDataId(11), read] sint8  online;
	[WmiDataId(12), read] sint8  resumable;
	[WmiDataId(13), read] sint32 error_number;
	[WmiDataId(14), read] uint64 index_build_duration_sec;
};
		
[dynamic: ToInstance, Description("Alter Column Event"): Amended,
    Guid("{a1f207f1-3eff-4c11-a48b-ca9e8f9126f7}"), locale("MS\\0x409"),
    DisplayName("alter_column_event"): Amended]
class XeSqlPkg_alter_column_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class alter_column_event: XeSqlPkg_alter_column_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 column_id;
	[WmiDataId(8), read] sint8  online;
	[WmiDataId(9), read] uint64 index_build_duration_sec;
};
		
[dynamic: ToInstance, Description("Index Build Pause Event"): Amended,
    Guid("{24f67a12-3857-4ecc-8a73-ad25c3f3039f}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_pause_event"): Amended]
class XeSqlPkg_resumable_index_build_pause_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_pause_event: XeSqlPkg_resumable_index_build_pause_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 index_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string host_name;
};
		
[dynamic: ToInstance, Description("Index Build Abort Event"): Amended,
    Guid("{55416da4-52bc-4783-ab84-bd99c960cb22}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_abort_event"): Amended]
class XeSqlPkg_resumable_index_build_abort_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_abort_event: XeSqlPkg_resumable_index_build_abort_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 index_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string host_name;
};
		
[dynamic: ToInstance, Description("Fired to test the ELEVATE_ONLINE or ELEVATE_RESUMABLE DB scoped options."): Amended,
    Guid("{9001cc54-2a5f-4e3f-8786-908d7ac3a4de}"), locale("MS\\0x409"),
    DisplayName("elevate_online_resumable_dbsco"): Amended]
class XeSqlPkg_elevate_online_resumable_dbsco: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class elevate_online_resumable_dbsco: XeSqlPkg_elevate_online_resumable_dbsco
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  online;
	[WmiDataId(6), read] sint8  resumable;
	[WmiDataId(7), read, 
				XEMapId(132),
				ValueMap { 
					"2", 
					"0", 
					"1" },
				Values { 
					"ELEVATE_FAIL_UNSUPPORTED", 
					"ELEVATE_OFF", 
					"ELEVATE_WHEN_SUPPORTED" }
			] uint16 elevate_online;
	[WmiDataId(8), read, 
				XEMapId(132),
				ValueMap { 
					"2", 
					"0", 
					"1" },
				Values { 
					"ELEVATE_FAIL_UNSUPPORTED", 
					"ELEVATE_OFF", 
					"ELEVATE_WHEN_SUPPORTED" }
			] uint16 elevate_resumable;
	[WmiDataId(9), read, 
				XEMapId(130),
				ValueMap { 
					"0", 
					"1", 
					"4", 
					"7", 
					"3", 
					"6", 
					"2", 
					"5" },
				Values { 
					"CANDIDATE", 
					"ELEVATING_ONLINE", 
					"ELEVATING_RESUMABLE", 
					"EXECUTING_STATEMENT", 
					"FAILING_ONLINE", 
					"FAILING_RESUMABLE", 
					"FORCING_ONLINE", 
					"FORCING_RESUMABLE" }
			] uint16 action;
	[WmiDataId(10), read, 
				XEMapId(131),
				ValueMap { 
					"2", 
					"1", 
					"9", 
					"5", 
					"7", 
					"6", 
					"8", 
					"0", 
					"3", 
					"4" },
				Values { 
					"ALTER_INDEX_ALL_REBUILD", 
					"ALTER_INDEX_REBUILD", 
					"ALTER_TABLE_ADD_COLUMN", 
					"ALTER_TABLE_ADD_CONSTRAINT", 
					"ALTER_TABLE_ALTER_COLUMN", 
					"ALTER_TABLE_DROP_CONSTRAINT", 
					"ALTER_TABLE_REBUILD", 
					"BAD", 
					"CREATE_INDEX", 
					"DROP_INDEX" }
			] uint16 statement_type;
};
		
[dynamic: ToInstance, Description("Occurs when refresh of one snapshot view is started"): Amended,
    Guid("{081C7291-964D-4905-B7E8-5E0164CF4F44}"), locale("MS\\0x409"),
    DisplayName("refresh_single_snapshot_view_started"): Amended]
class XeSqlPkg_refresh_single_snapshot_view_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class refresh_single_snapshot_view_started: XeSqlPkg_refresh_single_snapshot_view_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_group_level;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string view_name;
};
		
[dynamic: ToInstance, Description("Occurs when refresh of one snapshot view is finished"): Amended,
    Guid("{C545A866-37CD-4BA1-ABC9-ACFE22919DD6}"), locale("MS\\0x409"),
    DisplayName("refresh_single_snapshot_view_finished"): Amended]
class XeSqlPkg_refresh_single_snapshot_view_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class refresh_single_snapshot_view_finished: XeSqlPkg_refresh_single_snapshot_view_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_group_level;
	[WmiDataId(7), read] uint64 duration_ms;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string view_name;
};
		
[dynamic: ToInstance, Description("Occurs when refresh of one snapshot view fails"): Amended,
    Guid("{DEED4D65-18F8-4A31-9528-396812EA7763}"), locale("MS\\0x409"),
    DisplayName("refresh_single_snapshot_view_exception"): Amended]
class XeSqlPkg_refresh_single_snapshot_view_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class refresh_single_snapshot_view_exception: XeSqlPkg_refresh_single_snapshot_view_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_group_level;
	[WmiDataId(7), read] uint32 error;
	[WmiDataId(8), read] uint32 severity;
	[WmiDataId(9), read] uint32 state;
	[WmiDataId(10), read] sint8  is_refresh_all;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string view_name;
};
		
[dynamic: ToInstance, Description("Occurs when refresh of all snapshot views is started"): Amended,
    Guid("{2CE561F9-231A-4A40-A858-86FE2ED2AF84}"), locale("MS\\0x409"),
    DisplayName("refresh_all_snapshot_views_started"): Amended]
class XeSqlPkg_refresh_all_snapshot_views_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class refresh_all_snapshot_views_started: XeSqlPkg_refresh_all_snapshot_views_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_group_level;
};
		
[dynamic: ToInstance, Description("Occurs when refresh of all snapshot views is finished"): Amended,
    Guid("{CDBD3E0B-CD2E-4B39-AC4C-03E0ED048B89}"), locale("MS\\0x409"),
    DisplayName("refresh_all_snapshot_views_finished"): Amended]
class XeSqlPkg_refresh_all_snapshot_views_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class refresh_all_snapshot_views_finished: XeSqlPkg_refresh_all_snapshot_views_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_group_level;
	[WmiDataId(7), read] uint64 duration_ms;
};
		
[dynamic: ToInstance, Description("Occurs during refresh of all snapshot views when refresh of one of the snapshot views fails"): Amended,
    Guid("{2DBBB817-9903-4BAF-80D2-31E619C7F7DD}"), locale("MS\\0x409"),
    DisplayName("refresh_all_snapshot_views_exception"): Amended]
class XeSqlPkg_refresh_all_snapshot_views_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class refresh_all_snapshot_views_exception: XeSqlPkg_refresh_all_snapshot_views_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_group_level;
};
		
[dynamic: ToInstance, Description("Number of graph match queries for the database"): Amended,
    Guid("{62e4aafc-4294-459c-b821-b7f301e53215}"), locale("MS\\0x409"),
    DisplayName("graph_match_query_compiled"): Amended]
class XeSqlPkg_graph_match_query_compiled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class graph_match_query_compiled: XeSqlPkg_graph_match_query_compiled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Fired when a T-SQL statement with a graph match predicate is compiled."): Amended,
    Guid("{62e4aafc-4294-459c-b821-b7f301e53215}"), locale("MS\\0x409"),
    DisplayName("graph_match_query_compiled"): Amended]
class XeSqlPkg_graph_match_query_compiled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class graph_match_query_compiled: XeSqlPkg_graph_match_query_compiled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(59),
				ValueMap { 
					"216", 
					"217", 
					"86", 
					"96", 
					"268", 
					"52", 
					"88", 
					"180", 
					"114", 
					"140", 
					"126", 
					"242", 
					"239", 
					"61", 
					"110", 
					"223", 
					"123", 
					"131", 
					"253", 
					"103", 
					"261", 
					"134", 
					"150", 
					"128", 
					"145", 
					"271", 
					"266", 
					"263", 
					"91", 
					"221", 
					"117", 
					"67", 
					"227", 
					"191", 
					"189", 
					"186", 
					"84", 
					"236", 
					"81", 
					"255", 
					"250", 
					"137", 
					"248", 
					"94", 
					"225", 
					"99", 
					"64", 
					"280", 
					"286", 
					"283", 
					"41", 
					"78", 
					"153", 
					"2", 
					"55", 
					"58", 
					"166", 
					"167", 
					"246", 
					"237", 
					"229", 
					"244", 
					"219", 
					"169", 
					"170", 
					"51", 
					"177", 
					"121", 
					"106", 
					"120", 
					"256", 
					"257", 
					"157", 
					"158", 
					"199", 
					"54", 
					"57", 
					"240", 
					"87", 
					"179", 
					"113", 
					"139", 
					"241", 
					"238", 
					"60", 
					"109", 
					"184", 
					"222", 
					"122", 
					"130", 
					"251", 
					"133", 
					"149", 
					"127", 
					"143", 
					"45", 
					"270", 
					"265", 
					"262", 
					"274", 
					"142", 
					"144", 
					"90", 
					"102", 
					"220", 
					"116", 
					"66", 
					"226", 
					"188", 
					"185", 
					"83", 
					"235", 
					"80", 
					"254", 
					"156", 
					"249", 
					"136", 
					"93", 
					"224", 
					"71", 
					"76", 
					"75", 
					"72", 
					"73", 
					"74", 
					"196", 
					"63", 
					"279", 
					"285", 
					"282", 
					"69", 
					"42", 
					"50", 
					"183", 
					"77", 
					"155", 
					"152", 
					"125", 
					"207", 
					"208", 
					"204", 
					"212", 
					"209", 
					"213", 
					"210", 
					"206", 
					"214", 
					"205", 
					"211", 
					"194", 
					"22", 
					"24", 
					"23", 
					"21", 
					"39", 
					"203", 
					"8", 
					"53", 
					"193", 
					"4", 
					"70", 
					"56", 
					"59", 
					"89", 
					"181", 
					"115", 
					"141", 
					"243", 
					"62", 
					"111", 
					"124", 
					"132", 
					"252", 
					"135", 
					"151", 
					"129", 
					"147", 
					"272", 
					"267", 
					"264", 
					"275", 
					"146", 
					"148", 
					"92", 
					"104", 
					"118", 
					"43", 
					"68", 
					"190", 
					"187", 
					"85", 
					"82", 
					"269", 
					"138", 
					"95", 
					"198", 
					"65", 
					"228", 
					"281", 
					"287", 
					"284", 
					"49", 
					"79", 
					"154", 
					"112", 
					"33", 
					"107", 
					"289", 
					"277", 
					"288", 
					"100", 
					"36", 
					"38", 
					"182", 
					"259", 
					"258", 
					"260", 
					"195", 
					"218", 
					"247", 
					"230", 
					"245", 
					"175", 
					"276", 
					"163", 
					"97", 
					"164", 
					"165", 
					"20", 
					"234", 
					"159", 
					"192", 
					"46", 
					"44", 
					"47", 
					"5", 
					"7", 
					"6", 
					"48", 
					"15", 
					"174", 
					"32", 
					"108", 
					"278", 
					"101", 
					"35", 
					"34", 
					"37", 
					"290", 
					"10", 
					"231", 
					"273", 
					"0", 
					"105", 
					"119", 
					"12", 
					"173", 
					"3", 
					"200", 
					"1", 
					"233", 
					"160", 
					"162", 
					"161", 
					"98", 
					"178", 
					"11", 
					"13", 
					"168", 
					"232", 
					"31", 
					"26", 
					"30", 
					"27", 
					"25", 
					"29", 
					"28", 
					"215", 
					"171", 
					"176", 
					"40", 
					"9", 
					"201", 
					"197", 
					"172", 
					"202", 
					"19", 
					"16", 
					"17", 
					"18", 
					"14" },
				Values { 
					"x_estpyCreateEvtNotif", 
					"x_estpyDropEvtNotif", 
					"AddDropRoleMember", 
					"AddDropServerRoleMember", 
					"AddSensitivityClassification", 
					"AFTIndex", 
					"AlterAppRole", 
					"AlterAssembly", 
					"AlterAsymKey", 
					"AlterAuditSpecification", 
					"AlterAuthorization", 
					"AlterAvailabilityGroup", 
					"AlterBinding", 
					"AlterCatalog", 
					"AlterCert", 
					"AlterContract", 
					"AlterCredential", 
					"AlterCryptoProvider", 
					"AlterDatabaseAudit", 
					"AlterDBMasterKey", 
					"AlterDBScopedConfig", 
					"AlterDEK", 
					"AlterEndpoint", 
					"AlterEventSession", 
					"AlterExtDataSource", 
					"AlterExternalLanguage", 
					"AlterExternalLibrary", 
					"AlterExternalRG_Pool", 
					"AlterLogin", 
					"AlterMsgType", 
					"AlterObfusKey", 
					"AlterPropertyList", 
					"AlterQueue", 
					"AlterRG_Configuration", 
					"AlterRG_Group", 
					"AlterRG_Pool", 
					"AlterRole", 
					"AlterRoute", 
					"AlterSchema", 
					"AlterSecurityPolicy", 
					"AlterSequence", 
					"AlterServerAudit", 
					"AlterServerConfiguration", 
					"AlterServerRole", 
					"AlterService", 
					"AlterSrvMasterKey", 
					"AlterStoplist", 
					"AlterSynapsePool", 
					"AlterSynapseWLC", 
					"AlterSynapseWLG", 
					"AlterTab", 
					"AlterUser", 
					"AlterXMLSchemaCollection", 
					"AltPlanStub", 
					"APrtFn", 
					"APrtScm", 
					"Assign", 
					"AssignWithQuery", 
					"BeginCatch", 
					"BeginConvTimer", 
					"BeginDialog", 
					"BeginTry", 
					"BrokerDDL", 
					"BulkInsert", 
					"BulkInsert65", 
					"CFTIndex", 
					"Checkpoint", 
					"CloseAllObfusKeys", 
					"CloseDBMasterKey", 
					"CloseObfusKey", 
					"ColMasterKeyDefCreate", 
					"ColMasterKeyDefDrop", 
					"Cond", 
					"CondWithQuery", 
					"Config", 
					"CPrtFn", 
					"CPrtScm", 
					"CreateAlterBrokerPriority", 
					"CreateAppRole", 
					"CreateAssembly", 
					"CreateAsymKey", 
					"CreateAuditSpecification", 
					"CreateAvailabilityGroup", 
					"CreateBinding", 
					"CreateCatalog", 
					"CreateCert", 
					"CreateClrTrigger", 
					"CreateContract", 
					"CreateCredential", 
					"CreateCryptoProvider", 
					"CreateDatabaseAudit", 
					"CreateDEK", 
					"CreateEndpoint", 
					"CreateEventSession", 
					"CreateExtDataSource", 
					"CreateExtendedIndex", 
					"CreateExternalLanguage", 
					"CreateExternalLibrary", 
					"CreateExternalRG_Pool", 
					"CreateExternalStream", 
					"CreateExtFileFormat", 
					"CreateExtTable", 
					"CreateLogin", 
					"CreateMasterKey", 
					"CreateMsgType", 
					"CreateObfusKey", 
					"CreatePropertyList", 
					"CreateQueue", 
					"CreateRG_Group", 
					"CreateRG_Pool", 
					"CreateRole", 
					"CreateRoute", 
					"CreateSchema", 
					"CreateSecurityPolicy", 
					"CreateSelectiveXMLIndex", 
					"CreateSequence", 
					"CreateServerAudit", 
					"CreateServerRole", 
					"CreateService", 
					"CreateSql", 
					"CreateSqlExpr", 
					"CreateSqlFunc", 
					"CreateSqlProc", 
					"CreateSqlTrig", 
					"CreateSqlView", 
					"CreateStats", 
					"CreateStoplist", 
					"CreateSynapsePool", 
					"CreateSynapseWLC", 
					"CreateSynapseWLG", 
					"CreateSynonym", 
					"CreateTab", 
					"CreateType", 
					"CreateUdx", 
					"CreateUser", 
					"CreateXMLIndex", 
					"CreateXMLSchemaCollection", 
					"CryptoOp", 
					"CursorClose", 
					"CursorDealloc", 
					"CursorDeclare", 
					"CursorDelete", 
					"CursorFetch", 
					"CursorInsert", 
					"CursorModifyRow", 
					"CursorOpen", 
					"CursorQuery", 
					"CursorSimple", 
					"CursorUpdate", 
					"Dbcc", 
					"DBCreate", 
					"DBDestroy", 
					"DBExtend", 
					"DBOpen", 
					"DDL", 
					"Declare", 
					"Delete", 
					"DFTIndex", 
					"Disk", 
					"DML", 
					"DMLInternal", 
					"DPrtFn", 
					"DPrtScm", 
					"DropAppRole", 
					"DropAssembly", 
					"DropAsymKey", 
					"DropAuditSpecification", 
					"DropAvailabilityGroup", 
					"DropCatalog", 
					"DropCert", 
					"DropCredential", 
					"DropCryptoProvider", 
					"DropDatabaseAudit", 
					"DropDEK", 
					"DropEndpoint", 
					"DropEventSession", 
					"DropExtDataSource", 
					"DropExternalLanguage", 
					"DropExternalLibrary", 
					"DropExternalRG_Pool", 
					"DropExternalStream", 
					"DropExtFileFormat", 
					"DropExtTable", 
					"DropLogin", 
					"DropMasterKey", 
					"DropObfusKey", 
					"DropObj", 
					"DropPropertyList", 
					"DropRG_Group", 
					"DropRG_Pool", 
					"DropRole", 
					"DropSchema", 
					"DropSensitivityClassification", 
					"DropServerAudit", 
					"DropServerRole", 
					"DropStats", 
					"DropStoplist", 
					"DropSvcBrokerObj", 
					"DropSynapsePool", 
					"DropSynapseWLC", 
					"DropSynapseWLG", 
					"DropType", 
					"DropUser", 
					"DropXMLSchemaCollection", 
					"DumpCert", 
					"DumpDB", 
					"DumpDBMasterKey", 
					"DumpGroup", 
					"DumpObfusKey", 
					"DumpServer", 
					"DumpSrvMasterKey", 
					"DumpTab", 
					"DumpXact", 
					"eClrUdxDDL", 
					"eColEncryptionKeyAlter", 
					"eColEncryptionKeyCreate", 
					"eColEncryptionKeyDrop", 
					"eFetchStats", 
					"EnableDisableTrigger", 
					"EndCatch", 
					"EndConversation", 
					"EndTry", 
					"Error", 
					"ExecExternalLanguage", 
					"Execute", 
					"ExecuteAs", 
					"ExecuteProc", 
					"ExecuteString", 
					"FlushLazyCommit", 
					"GetCG", 
					"Goto", 
					"Grant", 
					"IndAlter", 
					"IndCreate", 
					"IndDrop", 
					"Insert", 
					"InsertBulk", 
					"InsertExec", 
					"Invoke", 
					"JSONSelect", 
					"Kill", 
					"LoadDB", 
					"LoadDBMasterKey", 
					"LoadObfusKey", 
					"LoadSrvMasterKey", 
					"LoadTab", 
					"LoadVol", 
					"LoadXact", 
					"MaxType", 
					"Merge", 
					"MoveConversation", 
					"MultiPlan", 
					"Nil", 
					"OpenDBMasterKey", 
					"OpenObfusKey", 
					"PrepQuery", 
					"Print", 
					"Query", 
					"ReadText", 
					"Recompile", 
					"RecvMsg", 
					"Return", 
					"ReturnNone", 
					"ReturnWithQuery", 
					"Revert", 
					"SecurityAudit", 
					"Select", 
					"SelectInto", 
					"SelectWithoutQuery", 
					"SendMsg", 
					"SetCmd", 
					"SetIdent", 
					"SetOnOff", 
					"SetRowCnt", 
					"SetStat", 
					"SetTxtSize", 
					"SetUser", 
					"SetXctIsoL", 
					"Shutdown", 
					"Throw", 
					"TruncTab", 
					"Update", 
					"UpdateText", 
					"UpdStats", 
					"Wait", 
					"WriteText", 
					"XactAbort", 
					"XactBegin", 
					"XactEnd", 
					"XactSave", 
					"XMLSelect" }
			] uint32 statement_type;
};
		
[dynamic: ToInstance, Description("Fired when a T-SQL statement with a graph match predicate is compiled."): Amended,
    Guid("{62e4aafc-4294-459c-b821-b7f301e53215}"), locale("MS\\0x409"),
    DisplayName("graph_match_query_compiled"): Amended]
class XeSqlPkg_graph_match_query_compiled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class graph_match_query_compiled: XeSqlPkg_graph_match_query_compiled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(59),
				ValueMap { 
					"216", 
					"217", 
					"86", 
					"96", 
					"268", 
					"52", 
					"88", 
					"180", 
					"114", 
					"140", 
					"126", 
					"242", 
					"239", 
					"61", 
					"110", 
					"223", 
					"123", 
					"131", 
					"253", 
					"103", 
					"261", 
					"134", 
					"150", 
					"128", 
					"145", 
					"271", 
					"266", 
					"263", 
					"91", 
					"221", 
					"117", 
					"67", 
					"227", 
					"191", 
					"189", 
					"186", 
					"84", 
					"236", 
					"81", 
					"255", 
					"250", 
					"137", 
					"248", 
					"94", 
					"225", 
					"99", 
					"64", 
					"280", 
					"286", 
					"283", 
					"41", 
					"78", 
					"153", 
					"2", 
					"55", 
					"58", 
					"166", 
					"167", 
					"246", 
					"237", 
					"229", 
					"244", 
					"219", 
					"169", 
					"170", 
					"51", 
					"177", 
					"121", 
					"106", 
					"120", 
					"256", 
					"257", 
					"157", 
					"158", 
					"199", 
					"54", 
					"57", 
					"240", 
					"87", 
					"179", 
					"113", 
					"139", 
					"241", 
					"238", 
					"60", 
					"109", 
					"184", 
					"222", 
					"122", 
					"130", 
					"251", 
					"133", 
					"149", 
					"127", 
					"143", 
					"45", 
					"270", 
					"265", 
					"262", 
					"274", 
					"142", 
					"144", 
					"90", 
					"102", 
					"220", 
					"116", 
					"66", 
					"226", 
					"188", 
					"185", 
					"83", 
					"235", 
					"80", 
					"254", 
					"156", 
					"249", 
					"136", 
					"93", 
					"224", 
					"71", 
					"76", 
					"75", 
					"72", 
					"73", 
					"74", 
					"196", 
					"63", 
					"279", 
					"285", 
					"282", 
					"69", 
					"42", 
					"50", 
					"183", 
					"77", 
					"155", 
					"152", 
					"125", 
					"207", 
					"208", 
					"204", 
					"212", 
					"209", 
					"213", 
					"210", 
					"206", 
					"214", 
					"205", 
					"211", 
					"194", 
					"22", 
					"24", 
					"23", 
					"21", 
					"39", 
					"203", 
					"8", 
					"53", 
					"193", 
					"4", 
					"70", 
					"56", 
					"59", 
					"89", 
					"181", 
					"115", 
					"141", 
					"243", 
					"62", 
					"111", 
					"124", 
					"132", 
					"252", 
					"135", 
					"151", 
					"129", 
					"147", 
					"272", 
					"267", 
					"264", 
					"275", 
					"146", 
					"148", 
					"92", 
					"104", 
					"118", 
					"43", 
					"68", 
					"190", 
					"187", 
					"85", 
					"82", 
					"269", 
					"138", 
					"95", 
					"198", 
					"65", 
					"228", 
					"281", 
					"287", 
					"284", 
					"49", 
					"79", 
					"154", 
					"112", 
					"33", 
					"107", 
					"289", 
					"277", 
					"288", 
					"100", 
					"36", 
					"38", 
					"182", 
					"259", 
					"258", 
					"260", 
					"195", 
					"218", 
					"247", 
					"230", 
					"245", 
					"175", 
					"276", 
					"163", 
					"97", 
					"164", 
					"165", 
					"20", 
					"234", 
					"159", 
					"192", 
					"46", 
					"44", 
					"47", 
					"5", 
					"7", 
					"6", 
					"48", 
					"15", 
					"174", 
					"32", 
					"108", 
					"278", 
					"101", 
					"35", 
					"34", 
					"37", 
					"290", 
					"10", 
					"231", 
					"273", 
					"0", 
					"105", 
					"119", 
					"12", 
					"173", 
					"3", 
					"200", 
					"1", 
					"233", 
					"160", 
					"162", 
					"161", 
					"98", 
					"178", 
					"11", 
					"13", 
					"168", 
					"232", 
					"31", 
					"26", 
					"30", 
					"27", 
					"25", 
					"29", 
					"28", 
					"215", 
					"171", 
					"176", 
					"40", 
					"9", 
					"201", 
					"197", 
					"172", 
					"202", 
					"19", 
					"16", 
					"17", 
					"18", 
					"14" },
				Values { 
					"x_estpyCreateEvtNotif", 
					"x_estpyDropEvtNotif", 
					"AddDropRoleMember", 
					"AddDropServerRoleMember", 
					"AddSensitivityClassification", 
					"AFTIndex", 
					"AlterAppRole", 
					"AlterAssembly", 
					"AlterAsymKey", 
					"AlterAuditSpecification", 
					"AlterAuthorization", 
					"AlterAvailabilityGroup", 
					"AlterBinding", 
					"AlterCatalog", 
					"AlterCert", 
					"AlterContract", 
					"AlterCredential", 
					"AlterCryptoProvider", 
					"AlterDatabaseAudit", 
					"AlterDBMasterKey", 
					"AlterDBScopedConfig", 
					"AlterDEK", 
					"AlterEndpoint", 
					"AlterEventSession", 
					"AlterExtDataSource", 
					"AlterExternalLanguage", 
					"AlterExternalLibrary", 
					"AlterExternalRG_Pool", 
					"AlterLogin", 
					"AlterMsgType", 
					"AlterObfusKey", 
					"AlterPropertyList", 
					"AlterQueue", 
					"AlterRG_Configuration", 
					"AlterRG_Group", 
					"AlterRG_Pool", 
					"AlterRole", 
					"AlterRoute", 
					"AlterSchema", 
					"AlterSecurityPolicy", 
					"AlterSequence", 
					"AlterServerAudit", 
					"AlterServerConfiguration", 
					"AlterServerRole", 
					"AlterService", 
					"AlterSrvMasterKey", 
					"AlterStoplist", 
					"AlterSynapsePool", 
					"AlterSynapseWLC", 
					"AlterSynapseWLG", 
					"AlterTab", 
					"AlterUser", 
					"AlterXMLSchemaCollection", 
					"AltPlanStub", 
					"APrtFn", 
					"APrtScm", 
					"Assign", 
					"AssignWithQuery", 
					"BeginCatch", 
					"BeginConvTimer", 
					"BeginDialog", 
					"BeginTry", 
					"BrokerDDL", 
					"BulkInsert", 
					"BulkInsert65", 
					"CFTIndex", 
					"Checkpoint", 
					"CloseAllObfusKeys", 
					"CloseDBMasterKey", 
					"CloseObfusKey", 
					"ColMasterKeyDefCreate", 
					"ColMasterKeyDefDrop", 
					"Cond", 
					"CondWithQuery", 
					"Config", 
					"CPrtFn", 
					"CPrtScm", 
					"CreateAlterBrokerPriority", 
					"CreateAppRole", 
					"CreateAssembly", 
					"CreateAsymKey", 
					"CreateAuditSpecification", 
					"CreateAvailabilityGroup", 
					"CreateBinding", 
					"CreateCatalog", 
					"CreateCert", 
					"CreateClrTrigger", 
					"CreateContract", 
					"CreateCredential", 
					"CreateCryptoProvider", 
					"CreateDatabaseAudit", 
					"CreateDEK", 
					"CreateEndpoint", 
					"CreateEventSession", 
					"CreateExtDataSource", 
					"CreateExtendedIndex", 
					"CreateExternalLanguage", 
					"CreateExternalLibrary", 
					"CreateExternalRG_Pool", 
					"CreateExternalStream", 
					"CreateExtFileFormat", 
					"CreateExtTable", 
					"CreateLogin", 
					"CreateMasterKey", 
					"CreateMsgType", 
					"CreateObfusKey", 
					"CreatePropertyList", 
					"CreateQueue", 
					"CreateRG_Group", 
					"CreateRG_Pool", 
					"CreateRole", 
					"CreateRoute", 
					"CreateSchema", 
					"CreateSecurityPolicy", 
					"CreateSelectiveXMLIndex", 
					"CreateSequence", 
					"CreateServerAudit", 
					"CreateServerRole", 
					"CreateService", 
					"CreateSql", 
					"CreateSqlExpr", 
					"CreateSqlFunc", 
					"CreateSqlProc", 
					"CreateSqlTrig", 
					"CreateSqlView", 
					"CreateStats", 
					"CreateStoplist", 
					"CreateSynapsePool", 
					"CreateSynapseWLC", 
					"CreateSynapseWLG", 
					"CreateSynonym", 
					"CreateTab", 
					"CreateType", 
					"CreateUdx", 
					"CreateUser", 
					"CreateXMLIndex", 
					"CreateXMLSchemaCollection", 
					"CryptoOp", 
					"CursorClose", 
					"CursorDealloc", 
					"CursorDeclare", 
					"CursorDelete", 
					"CursorFetch", 
					"CursorInsert", 
					"CursorModifyRow", 
					"CursorOpen", 
					"CursorQuery", 
					"CursorSimple", 
					"CursorUpdate", 
					"Dbcc", 
					"DBCreate", 
					"DBDestroy", 
					"DBExtend", 
					"DBOpen", 
					"DDL", 
					"Declare", 
					"Delete", 
					"DFTIndex", 
					"Disk", 
					"DML", 
					"DMLInternal", 
					"DPrtFn", 
					"DPrtScm", 
					"DropAppRole", 
					"DropAssembly", 
					"DropAsymKey", 
					"DropAuditSpecification", 
					"DropAvailabilityGroup", 
					"DropCatalog", 
					"DropCert", 
					"DropCredential", 
					"DropCryptoProvider", 
					"DropDatabaseAudit", 
					"DropDEK", 
					"DropEndpoint", 
					"DropEventSession", 
					"DropExtDataSource", 
					"DropExternalLanguage", 
					"DropExternalLibrary", 
					"DropExternalRG_Pool", 
					"DropExternalStream", 
					"DropExtFileFormat", 
					"DropExtTable", 
					"DropLogin", 
					"DropMasterKey", 
					"DropObfusKey", 
					"DropObj", 
					"DropPropertyList", 
					"DropRG_Group", 
					"DropRG_Pool", 
					"DropRole", 
					"DropSchema", 
					"DropSensitivityClassification", 
					"DropServerAudit", 
					"DropServerRole", 
					"DropStats", 
					"DropStoplist", 
					"DropSvcBrokerObj", 
					"DropSynapsePool", 
					"DropSynapseWLC", 
					"DropSynapseWLG", 
					"DropType", 
					"DropUser", 
					"DropXMLSchemaCollection", 
					"DumpCert", 
					"DumpDB", 
					"DumpDBMasterKey", 
					"DumpGroup", 
					"DumpObfusKey", 
					"DumpServer", 
					"DumpSrvMasterKey", 
					"DumpTab", 
					"DumpXact", 
					"eClrUdxDDL", 
					"eColEncryptionKeyAlter", 
					"eColEncryptionKeyCreate", 
					"eColEncryptionKeyDrop", 
					"eFetchStats", 
					"EnableDisableTrigger", 
					"EndCatch", 
					"EndConversation", 
					"EndTry", 
					"Error", 
					"ExecExternalLanguage", 
					"Execute", 
					"ExecuteAs", 
					"ExecuteProc", 
					"ExecuteString", 
					"FlushLazyCommit", 
					"GetCG", 
					"Goto", 
					"Grant", 
					"IndAlter", 
					"IndCreate", 
					"IndDrop", 
					"Insert", 
					"InsertBulk", 
					"InsertExec", 
					"Invoke", 
					"JSONSelect", 
					"Kill", 
					"LoadDB", 
					"LoadDBMasterKey", 
					"LoadObfusKey", 
					"LoadSrvMasterKey", 
					"LoadTab", 
					"LoadVol", 
					"LoadXact", 
					"MaxType", 
					"Merge", 
					"MoveConversation", 
					"MultiPlan", 
					"Nil", 
					"OpenDBMasterKey", 
					"OpenObfusKey", 
					"PrepQuery", 
					"Print", 
					"Query", 
					"ReadText", 
					"Recompile", 
					"RecvMsg", 
					"Return", 
					"ReturnNone", 
					"ReturnWithQuery", 
					"Revert", 
					"SecurityAudit", 
					"Select", 
					"SelectInto", 
					"SelectWithoutQuery", 
					"SendMsg", 
					"SetCmd", 
					"SetIdent", 
					"SetOnOff", 
					"SetRowCnt", 
					"SetStat", 
					"SetTxtSize", 
					"SetUser", 
					"SetXctIsoL", 
					"Shutdown", 
					"Throw", 
					"TruncTab", 
					"Update", 
					"UpdateText", 
					"UpdStats", 
					"Wait", 
					"WriteText", 
					"XactAbort", 
					"XactBegin", 
					"XactEnd", 
					"XactSave", 
					"XMLSelect" }
			] uint32 statement_type;
	[WmiDataId(7), read] uint32 heterogeneous_table_types;
};
		
[dynamic: ToInstance, Description("Count of approximate count distinct queries for the database"): Amended,
    Guid("{c2ebfa18-3808-4fa6-9e2d-6c4947c62cad}"), locale("MS\\0x409"),
    DisplayName("approximate_count_distinct_query_compiled"): Amended]
class XeSqlPkg_approximate_count_distinct_query_compiled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class approximate_count_distinct_query_compiled: XeSqlPkg_approximate_count_distinct_query_compiled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(100),
				ValueMap { 
					"104", 
					"34", 
					"50", 
					"35", 
					"250", 
					"40", 
					"42", 
					"43", 
					"0", 
					"52", 
					"56", 
					"127", 
					"60", 
					"31", 
					"59", 
					"62", 
					"58", 
					"122", 
					"173", 
					"61", 
					"106", 
					"36", 
					"108", 
					"175", 
					"98", 
					"239", 
					"1", 
					"243", 
					"41", 
					"189", 
					"240", 
					"48", 
					"165", 
					"167", 
					"231", 
					"99", 
					"241", 
					"242" },
				Values { 
					"XE_XVT_BIT", 
					"XE_XVT_BLOB", 
					"XE_XVT_BOOL", 
					"XE_XVT_CLOB", 
					"XE_XVT_CURSOR", 
					"XE_XVT_DATE", 
					"XE_XVT_DATETIME2", 
					"XE_XVT_DATETIMEOFFSET", 
					"XE_XVT_EMPTY", 
					"XE_XVT_I2", 
					"XE_XVT_I4", 
					"XE_XVT_I8", 
					"XE_XVT_MONEY", 
					"XE_XVT_NULL", 
					"XE_XVT_R4", 
					"XE_XVT_R8", 
					"XE_XVT_SMALLDATE", 
					"XE_XVT_SMALLMONEY", 
					"XE_XVT_SSBYTES", 
					"XE_XVT_SSDATE", 
					"XE_XVT_SSDECIMAL", 
					"XE_XVT_SSGUID", 
					"XE_XVT_SSNUMERIC", 
					"XE_XVT_SSSTR", 
					"XE_XVT_SSVARIANT", 
					"XE_XVT_SSWSTR", 
					"XE_XVT_TABLE", 
					"XE_XVT_TABLETYPE", 
					"XE_XVT_TIME", 
					"XE_XVT_TIMESTAMP", 
					"XE_XVT_UDT", 
					"XE_XVT_UI1", 
					"XE_XVT_VARBYTES", 
					"XE_XVT_VARSTR", 
					"XE_XVT_VARWSTR", 
					"XE_XVT_WLOB", 
					"XE_XVT_XML", 
					"XE_XVT_XMLNODE" }
			] uint32 datatype;
	[WmiDataId(7), read, 
				XEMapId(101),
				ValueMap { 
					"822136840", 
					"2030096392", 
					"956362760", 
					"1023463432", 
					"922796040", 
					"939577352", 
					"2046869512", 
					"1543557142", 
					"1526775830", 
					"1409339396", 
					"1392558084", 
					"3070283781", 
					"3523264520", 
					"3674259497", 
					"3540041769", 
					"3657482245", 
					"3556818949", 
					"3573596170", 
					"3590373384", 
					"3607150632", 
					"3623927816", 
					"3640705035", 
					"2617298973", 
					"2600517661", 
					"1442893837", 
					"1426112525", 
					"3120615438", 
					"906031112", 
					"872468488", 
					"855687176", 
					"1375784968", 
					"1359003656", 
					"1778438152", 
					"1761656840", 
					"2080436232", 
					"1912655880", 
					"1895874568", 
					"2181091336", 
					"2164310024", 
					"2315309064", 
					"2298527752", 
					"2449526792", 
					"2432745480", 
					"2583744520", 
					"2566963208", 
					"503382024", 
					"570486792", 
					"536924168", 
					"520142856", 
					"671154184", 
					"671090696", 
					"738258952", 
					"704696328", 
					"687915016", 
					"889245704", 
					"553701384", 
					"721473544", 
					"2650853406", 
					"2634072094", 
					"2684407838", 
					"2667626526", 
					"2013315080", 
					"1476448275", 
					"1459666963", 
					"1510002708", 
					"1493221396", 
					"1006686218", 
					"989904906", 
					"973131786", 
					"1577111575", 
					"1560330263", 
					"1610661916", 
					"1593884700", 
					"3103838218", 
					"3087061002", 
					"1811992603", 
					"1795211291" },
				Values { 
					"SQL_1xCompat_CP850_CI_AS", 
					"SQL_AltDiction_CP1253_CS_AS", 
					"SQL_AltDiction_CP850_CI_AI", 
					"SQL_AltDiction_CP850_CI_AS", 
					"SQL_AltDiction_CP850_CS_AS", 
					"SQL_AltDiction_Pref_CP850_CI_AS", 
					"SQL_AltDiction2_CP1253_CS_AS", 
					"SQL_Croatian_CP1250_CI_AS", 
					"SQL_Croatian_CP1250_CS_AS", 
					"SQL_Czech_CP1250_CI_AS", 
					"SQL_Czech_CP1250_CS_AS", 
					"SQL_Danish_Pref_CP1_CI_AS", 
					"SQL_EBCDIC037_CP1_CS_AS", 
					"SQL_EBCDIC1141_CP1_CS_AS", 
					"SQL_EBCDIC273_CP1_CS_AS", 
					"SQL_EBCDIC277_2_CP1_CS_AS", 
					"SQL_EBCDIC277_CP1_CS_AS", 
					"SQL_EBCDIC278_CP1_CS_AS", 
					"SQL_EBCDIC280_CP1_CS_AS", 
					"SQL_EBCDIC284_CP1_CS_AS", 
					"SQL_EBCDIC285_CP1_CS_AS", 
					"SQL_EBCDIC297_CP1_CS_AS", 
					"SQL_Estonian_CP1257_CI_AS", 
					"SQL_Estonian_CP1257_CS_AS", 
					"SQL_Hungarian_CP1250_CI_AS", 
					"SQL_Hungarian_CP1250_CS_AS", 
					"SQL_Icelandic_Pref_CP1_CI_AS", 
					"SQL_Latin1_General_CP1_CI_AI", 
					"SQL_Latin1_General_CP1_CI_AS", 
					"SQL_Latin1_General_CP1_CS_AS", 
					"SQL_Latin1_General_CP1250_CI_AS", 
					"SQL_Latin1_General_CP1250_CS_AS", 
					"SQL_Latin1_General_CP1251_CI_AS", 
					"SQL_Latin1_General_CP1251_CS_AS", 
					"SQL_Latin1_General_CP1253_CI_AI", 
					"SQL_Latin1_General_CP1253_CI_AS", 
					"SQL_Latin1_General_CP1253_CS_AS", 
					"SQL_Latin1_General_CP1254_CI_AS", 
					"SQL_Latin1_General_CP1254_CS_AS", 
					"SQL_Latin1_General_CP1255_CI_AS", 
					"SQL_Latin1_General_CP1255_CS_AS", 
					"SQL_Latin1_General_CP1256_CI_AS", 
					"SQL_Latin1_General_CP1256_CS_AS", 
					"SQL_Latin1_General_CP1257_CI_AS", 
					"SQL_Latin1_General_CP1257_CS_AS", 
					"SQL_Latin1_General_CP437_BIN", 
					"SQL_Latin1_General_CP437_CI_AI", 
					"SQL_Latin1_General_CP437_CI_AS", 
					"SQL_Latin1_General_CP437_CS_AS", 
					"SQL_Latin1_General_CP850_BIN", 
					"SQL_Latin1_General_CP850_BIN2", 
					"SQL_Latin1_General_CP850_CI_AI", 
					"SQL_Latin1_General_CP850_CI_AS", 
					"SQL_Latin1_General_CP850_CS_AS", 
					"SQL_Latin1_General_Pref_CP1_CI_AS", 
					"SQL_Latin1_General_Pref_CP437_CI_AS", 
					"SQL_Latin1_General_Pref_CP850_CI_AS", 
					"SQL_Latvian_CP1257_CI_AS", 
					"SQL_Latvian_CP1257_CS_AS", 
					"SQL_Lithuanian_CP1257_CI_AS", 
					"SQL_Lithuanian_CP1257_CS_AS", 
					"SQL_MixDiction_CP1253_CS_AS", 
					"SQL_Polish_CP1250_CI_AS", 
					"SQL_Polish_CP1250_CS_AS", 
					"SQL_Romanian_CP1250_CI_AS", 
					"SQL_Romanian_CP1250_CS_AS", 
					"SQL_Scandainavian_CP850_CI_AS", 
					"SQL_Scandainavian_CP850_CS_AS", 
					"SQL_Scandainavian_Pref_CP850_CI_AS", 
					"SQL_Slovak_CP1250_CI_AS", 
					"SQL_Slovak_CP1250_CS_AS", 
					"SQL_Slovenian_CP1250_CI_AS", 
					"SQL_Slovenian_CP1250_CS_AS", 
					"SQL_SwedishPhone_Pref_CP1_CI_AS", 
					"SQL_SwedishStd_Pref_CP1_CI_AS", 
					"SQL_Ukrainian_CP1251_CI_AS", 
					"SQL_Ukrainian_CP1251_CS_AS" }
			] uint32 collation;
	[WmiDataId(8), read] sint8  nullable;
	[WmiDataId(9), read] uint32 maxlen;
};
		
[dynamic: ToInstance, Description("Track usage of t-sql features in queries for the database"): Amended,
    Guid("{ba241ed7-fe48-4d79-af67-5367c573b7e8}"), locale("MS\\0x409"),
    DisplayName("tsql_feature_usage_tracking"): Amended]
class XeSqlPkg_tsql_feature_usage_tracking: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tsql_feature_usage_tracking: XeSqlPkg_tsql_feature_usage_tracking
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, Extension("Variant")] object features_used;
};
		
[dynamic: ToInstance, Description("Tracks changes to Automatic tuning settings."): Amended,
    Guid("{0c5b06bf-360a-471d-947b-3d5cae9ab2c8}"), locale("MS\\0x409"),
    DisplayName("automatic_tuning_settings_changed"): Amended]
class XeSqlPkg_automatic_tuning_settings_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class automatic_tuning_settings_changed: XeSqlPkg_automatic_tuning_settings_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(122),
				ValueMap { 
					"3", 
					"2", 
					"1", 
					"0", 
					"4" },
				Values { 
					"Auto", 
					"Custom", 
					"Inherit", 
					"NotSet", 
					"Unspecified" }
			] uint8 new_database_tuning_mode;
	[WmiDataId(7), read, 
				XEMapId(122),
				ValueMap { 
					"3", 
					"2", 
					"1", 
					"0", 
					"4" },
				Values { 
					"Auto", 
					"Custom", 
					"Inherit", 
					"NotSet", 
					"Unspecified" }
			] uint8 old_database_tuning_mode;
	[WmiDataId(8), read] sint8  new_database_tuning_mode_set_by_system;
	[WmiDataId(9), read] sint8  old_database_tuning_mode_set_by_system;
	[WmiDataId(10), read, 
				XEMapId(122),
				ValueMap { 
					"3", 
					"2", 
					"1", 
					"0", 
					"4" },
				Values { 
					"Auto", 
					"Custom", 
					"Inherit", 
					"NotSet", 
					"Unspecified" }
			] uint8 new_server_tuning_mode;
	[WmiDataId(11), read, 
				XEMapId(122),
				ValueMap { 
					"3", 
					"2", 
					"1", 
					"0", 
					"4" },
				Values { 
					"Auto", 
					"Custom", 
					"Inherit", 
					"NotSet", 
					"Unspecified" }
			] uint8 old_server_tuning_mode;
	[WmiDataId(12), read] uint64 new_database_advisor_on_off_flags;
	[WmiDataId(13), read] uint64 old_database_advisor_on_off_flags;
	[WmiDataId(14), read] uint64 new_server_advisor_flags;
	[WmiDataId(15), read] uint64 old_server_advisor_flags;
	[WmiDataId(16), read] uint64 new_database_advisor_set_by_system_flags;
	[WmiDataId(17), read] uint64 old_database_advisor_set_by_system_flags;
	[WmiDataId(18), read] uint64 new_database_advisor_system_disabled_flags;
	[WmiDataId(19), read] uint64 old_database_advisor_system_disabled_flags;
	[WmiDataId(20), read] uint64 new_database_advisor_user_override_flags;
	[WmiDataId(21), read] uint64 old_database_advisor_user_override_flags;
};
		
[dynamic: ToInstance, Description("Tracks invalid Automatic tuning settings."): Amended,
    Guid("{55ab5075-d44c-43bc-9884-4c61f9afd4c6}"), locale("MS\\0x409"),
    DisplayName("automatic_tuning_advisor_settings_invalid"): Amended]
class XeSqlPkg_automatic_tuning_advisor_settings_invalid: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class automatic_tuning_advisor_settings_invalid: XeSqlPkg_automatic_tuning_advisor_settings_invalid
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 database_tuning_mode;
	[WmiDataId(7), read] sint32 advisor_id;
	[WmiDataId(8), read] sint32 advisor_desired_tuning_mode;
	[WmiDataId(9), read] sint8  advisor_desired_state;
	[WmiDataId(10), read] sint8  advisor_actual_state;
};
		
[dynamic: ToInstance, Description("Tracks Frontend memory usage which belongs to CACHESTORE_PHDR memory clerk."): Amended,
    Guid("{194f37a2-cef5-4582-8345-0cdea7af70f0}"), locale("MS\\0x409"),
    DisplayName("frontend_memory_usage"): Amended]
class XeSqlPkg_frontend_memory_usage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class frontend_memory_usage: XeSqlPkg_frontend_memory_usage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint64 line_number;
	[WmiDataId(8), read] uint64 memory_allocated_kb;
	[WmiDataId(9), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"Algebrizer", 
					"Parser" }
			] uint8 frontend_component;
	[WmiDataId(10), read] sint64 offset;
	[WmiDataId(11), read] sint64 offset_end;
	[WmiDataId(12), read] uint64 batch_size;
	[WmiDataId(13), read] sint64 resource_pool_id;
	[WmiDataId(14), read] sint64 resource_group_id;
	[WmiDataId(15), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(16), read, Extension("Variant")] object batch_sql_hash;
};
		
[dynamic: ToInstance, Description("Indicates that shallow metadata checks are enabled early during view binding, for earlier failure detection."): Amended,
    Guid("{E78AF27D-532C-4A2F-B9AB-680D41F476C7}"), locale("MS\\0x409"),
    DisplayName("shallow_scan_in_view_enabled"): Amended]
class XeSqlPkg_shallow_scan_in_view_enabled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class shallow_scan_in_view_enabled: XeSqlPkg_shallow_scan_in_view_enabled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 recompile_time_threshold;
	[WmiDataId(6), read] uint64 recompile_time;
	[WmiDataId(7), read] uint32 number_of_recompiles_triggered;
	[WmiDataId(8), read] uint32 threshold_number_of_recompiles_triggered;
};
		
[dynamic: ToInstance, Description("Fires when query to SQL FE is submitted."): Amended,
    Guid("{e36a406f-9391-4d25-866c-6dedf71b35b3}"), locale("MS\\0x409"),
    DisplayName("vdw_client_batch_submitted"): Amended]
class XeSqlPkg_vdw_client_batch_submitted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_client_batch_submitted: XeSqlPkg_vdw_client_batch_submitted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string batch_text;
};
		
[dynamic: ToInstance, Description("Fires when query to SQL FE is submitted."): Amended,
    Guid("{e36a406f-9391-4d25-866c-6dedf71b35b3}"), locale("MS\\0x409"),
    DisplayName("vdw_client_batch_submitted"): Amended]
class XeSqlPkg_vdw_client_batch_submitted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class vdw_client_batch_submitted: XeSqlPkg_vdw_client_batch_submitted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
};
		
[dynamic: ToInstance, Description("Fires when query to SQL FE is cancelled."): Amended,
    Guid("{899772b2-693c-49b9-bf0f-9431ea07eab7}"), locale("MS\\0x409"),
    DisplayName("vdw_client_batch_cancelled"): Amended]
class XeSqlPkg_vdw_client_batch_cancelled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_client_batch_cancelled: XeSqlPkg_vdw_client_batch_cancelled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
};
		
[dynamic: ToInstance, Description("Fires when query to SQL FE is completed."): Amended,
    Guid("{bc888c6a-8a11-4016-8c28-a5988170f284}"), locale("MS\\0x409"),
    DisplayName("vdw_client_batch_completed"): Amended]
class XeSqlPkg_vdw_client_batch_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_client_batch_completed: XeSqlPkg_vdw_client_batch_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(34),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"OK", 
					"Error", 
					"Abort", 
					"Skipped" }
			] uint8 result;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
};
		
[dynamic: ToInstance, Description("Fires when a sql statement in SQL FE is compiled."): Amended,
    Guid("{deb3f3c6-b164-4efc-9fb5-80a4995c5489}"), locale("MS\\0x409"),
    DisplayName("vdw_sql_statement_compiled"): Amended]
class XeSqlPkg_vdw_sql_statement_compiled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_sql_statement_compiled: XeSqlPkg_vdw_sql_statement_compiled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 line_number;
	[WmiDataId(6), read] sint32 offset;
	[WmiDataId(7), read] sint32 offset_end;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string compile_plan_guid;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string statement_type;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Fires when a sql statement is started in SQL FE."): Amended,
    Guid("{ebf0ef98-6c06-4261-823c-e1e8f2c3ec79}"), locale("MS\\0x409"),
    DisplayName("vdw_sql_statement_starting"): Amended]
class XeSqlPkg_vdw_sql_statement_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_sql_statement_starting: XeSqlPkg_vdw_sql_statement_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 line_number;
	[WmiDataId(6), read] sint32 offset;
	[WmiDataId(7), read] sint32 offset_end;
	[WmiDataId(8), read] sint32 statement_number;
	[WmiDataId(9), read] sint32 error_code;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string compile_plan_guid;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string statement_type;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Fires when a sql statement is started in SQL FE."): Amended,
    Guid("{ebf0ef98-6c06-4261-823c-e1e8f2c3ec79}"), locale("MS\\0x409"),
    DisplayName("vdw_sql_statement_starting"): Amended]
class XeSqlPkg_vdw_sql_statement_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class vdw_sql_statement_starting: XeSqlPkg_vdw_sql_statement_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 line_number;
	[WmiDataId(6), read] sint32 offset;
	[WmiDataId(7), read] sint32 offset_end;
	[WmiDataId(8), read] sint32 statement_number;
	[WmiDataId(9), read] sint32 error_code;
	[WmiDataId(10), read, Extension("Variant")] object query_text_hash;
	[WmiDataId(11), read, Extension("Variant")] object obfuscated_query_text_hash;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string compile_plan_guid;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string statement_type;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Fires when a sql statement is completed in SQL FE."): Amended,
    Guid("{1e85c26a-3334-4b0b-bed7-25bcf266a868}"), locale("MS\\0x409"),
    DisplayName("vdw_sql_statement_completed"): Amended]
class XeSqlPkg_vdw_sql_statement_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_sql_statement_completed: XeSqlPkg_vdw_sql_statement_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 line_number;
	[WmiDataId(6), read] sint32 offset;
	[WmiDataId(7), read] sint32 offset_end;
	[WmiDataId(8), read] sint32 statement_number;
	[WmiDataId(9), read] sint32 error_code;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string compile_plan_guid;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string statement_type;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Fires when a sql statement is completed in SQL FE."): Amended,
    Guid("{1e85c26a-3334-4b0b-bed7-25bcf266a868}"), locale("MS\\0x409"),
    DisplayName("vdw_sql_statement_completed"): Amended]
class XeSqlPkg_vdw_sql_statement_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class vdw_sql_statement_completed: XeSqlPkg_vdw_sql_statement_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 line_number;
	[WmiDataId(6), read] sint32 offset;
	[WmiDataId(7), read] sint32 offset_end;
	[WmiDataId(8), read] sint32 statement_number;
	[WmiDataId(9), read] sint32 error_code;
	[WmiDataId(10), read, Extension("Variant")] object query_text_hash;
	[WmiDataId(11), read, Extension("Variant")] object obfuscated_query_text_hash;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string compile_plan_guid;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string statement_type;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("SQL FE statement and fido transaction trace."): Amended,
    Guid("{9d563fd1-f42c-4201-b449-8ef33cda292d}"), locale("MS\\0x409"),
    DisplayName("vdw_sql_statement_fido_transaction"): Amended]
class XeSqlPkg_vdw_sql_statement_fido_transaction: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_sql_statement_fido_transaction: XeSqlPkg_vdw_sql_statement_fido_transaction
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 read_version;
	[WmiDataId(6), read] uint64 write_version;
	[WmiDataId(7), read] uint64 nested_write_version;
	[WmiDataId(8), read] uint8 event_position;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
};
		
[dynamic: ToInstance, Description("Fires when query to SQL FE is submitted and log to Pii table."): Amended,
    Guid("{c893b8a1-ab6f-45e5-8605-5c628b1f2023}"), locale("MS\\0x409"),
    DisplayName("private_vdw_client_batch_submitted"): Amended]
class XeSqlPkg_private_vdw_client_batch_submitted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class private_vdw_client_batch_submitted: XeSqlPkg_private_vdw_client_batch_submitted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string batch_text;
};
		
[dynamic: ToInstance, Description("Fires when a sql statement in SQL FE is compiled and log to Pii table."): Amended,
    Guid("{4b4de56f-4e00-4098-9ea9-410b7e75cab1}"), locale("MS\\0x409"),
    DisplayName("private_vdw_sql_statement_compiled"): Amended]
class XeSqlPkg_private_vdw_sql_statement_compiled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class private_vdw_sql_statement_compiled: XeSqlPkg_private_vdw_sql_statement_compiled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 line_number;
	[WmiDataId(6), read] sint32 offset;
	[WmiDataId(7), read] sint32 offset_end;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string compile_plan_guid;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string statement_type;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Fires when a sql statement is started in SQL FE and log to Pii table."): Amended,
    Guid("{cd72f693-1e03-4096-af0c-f783e9cc023c}"), locale("MS\\0x409"),
    DisplayName("private_vdw_sql_statement_starting"): Amended]
class XeSqlPkg_private_vdw_sql_statement_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class private_vdw_sql_statement_starting: XeSqlPkg_private_vdw_sql_statement_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 line_number;
	[WmiDataId(6), read] sint32 offset;
	[WmiDataId(7), read] sint32 offset_end;
	[WmiDataId(8), read] sint32 statement_number;
	[WmiDataId(9), read] sint32 error_code;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string compile_plan_guid;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string statement_type;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("Fires when a sql statement is started in SQL FE and log to Pii table."): Amended,
    Guid("{cd72f693-1e03-4096-af0c-f783e9cc023c}"), locale("MS\\0x409"),
    DisplayName("private_vdw_sql_statement_starting"): Amended]
class XeSqlPkg_private_vdw_sql_statement_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class private_vdw_sql_statement_starting: XeSqlPkg_private_vdw_sql_statement_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 line_number;
	[WmiDataId(6), read] sint32 offset;
	[WmiDataId(7), read] sint32 offset_end;
	[WmiDataId(8), read] sint32 statement_number;
	[WmiDataId(9), read] sint32 error_code;
	[WmiDataId(10), read, Extension("Variant")] object query_text_hash;
	[WmiDataId(11), read, Extension("Variant")] object obfuscated_query_text_hash;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string root_batch_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string compile_plan_guid;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string statement_type;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string statement;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate execution of failover proc."): Amended,
    Guid("{9aef8bd4-7af2-4b42-9b48-c539002f95af}"), locale("MS\\0x409"),
    DisplayName("failover_proc_execution_status"): Amended]
class XeSqlPkg_failover_proc_execution_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failover_proc_execution_status: XeSqlPkg_failover_proc_execution_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 result;
	[WmiDataId(6), read, 
				XEMapId(124),
				ValueMap { 
					"3", 
					"2", 
					"4", 
					"5", 
					"0", 
					"1" },
				Values { 
					"CREATE_PROC_FAILED", 
					"DROP_PROC_FAILED", 
					"EXECUTE_PROC_FAILED", 
					"EXECUTE_PROC_SUCCESS", 
					"FAILED_TO_GET_SECRET_BLOCK", 
					"PROPERTY_NOT_FOUND" }
			] sint32 result_desc;
	[WmiDataId(7), read] sint32 error_number;
	[WmiDataId(8), read] sint32 error_severity;
	[WmiDataId(9), read] sint32 error_state;
};
		
[dynamic: ToInstance, Description("Spec proc sp_cloud_update_sys_databases_post_termination completed (with or without error)."): Amended,
    Guid("{AEFA57DB-8382-4D2B-BEC2-675E5F0DFFBE}"), locale("MS\\0x409"),
    DisplayName("sp_cloud_update_sys_databases_post_termination_completed"): Amended]
class XeSqlPkg_sp_cloud_update_sys_databases_post_termination_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sp_cloud_update_sys_databases_post_termination_completed: XeSqlPkg_sp_cloud_update_sys_databases_post_termination_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] sint8  is_using_ctr_pvs_in_xact;
	[WmiDataId(7), read] sint8  is_successful;
	[WmiDataId(8), read] uint64 error_code;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string physical_database_name;
};
		
[dynamic: ToInstance, Description("Fires when a unique query is completed."): Amended,
    Guid("{26749f51-d6e4-40b2-ba3c-e9b5976bcf32}"), locale("MS\\0x409"),
    DisplayName("distinct_query_completed"): Amended]
class XeSqlPkg_distinct_query_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class distinct_query_completed: XeSqlPkg_distinct_query_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 execution_error_code;
	[WmiDataId(7), read] uint32 error_severity;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string batch;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string peer_address;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("Fires when a unique query is completed."): Amended,
    Guid("{26749f51-d6e4-40b2-ba3c-e9b5976bcf32}"), locale("MS\\0x409"),
    DisplayName("distinct_query_completed"): Amended]
class XeSqlPkg_distinct_query_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class distinct_query_completed: XeSqlPkg_distinct_query_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 execution_error_code;
	[WmiDataId(7), read] uint32 error_severity;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string batch;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string peer_address;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string error_message;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string data_sensitivity_information;
};
		
[dynamic: ToInstance, Description("Fires when a request to create external table request is completed."): Amended,
    Guid("{15C05EBD-3661-45A6-927D-0F0BF4DE1D01}"), locale("MS\\0x409"),
    DisplayName("bdc_create_external_table_request_completed"): Amended]
class XeSqlPkg_bdc_create_external_table_request_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bdc_create_external_table_request_completed: XeSqlPkg_bdc_create_external_table_request_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 http_result_code;
	[WmiDataId(6), read, Extension("Guid")] guid http_request_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string datapool_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string response_message;
};
		
[dynamic: ToInstance, Description("Fires when a request to drop external table request is completed."): Amended,
    Guid("{BB2F56F1-FFC7-4278-9A01-E724CBBA5605}"), locale("MS\\0x409"),
    DisplayName("bdc_drop_external_table_request_completed"): Amended]
class XeSqlPkg_bdc_drop_external_table_request_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bdc_drop_external_table_request_completed: XeSqlPkg_bdc_drop_external_table_request_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 http_result_code;
	[WmiDataId(6), read, Extension("Guid")] guid http_request_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string datapool_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string response_message;
};
		
[dynamic: ToInstance, Description("Fires when a request to truncate external table request is completed."): Amended,
    Guid("{B81FB514-7D29-4556-97A8-8A7242BA1567}"), locale("MS\\0x409"),
    DisplayName("bdc_truncate_external_table_request_completed"): Amended]
class XeSqlPkg_bdc_truncate_external_table_request_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bdc_truncate_external_table_request_completed: XeSqlPkg_bdc_truncate_external_table_request_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 http_result_code;
	[WmiDataId(6), read, Extension("Guid")] guid http_request_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string datapool_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string response_message;
};
		
[dynamic: ToInstance, Description("Fires when a request to drop database request is completed."): Amended,
    Guid("{BE04F55E-1577-4E46-9A74-6E413B5FB731}"), locale("MS\\0x409"),
    DisplayName("bdc_drop_database_request_completed"): Amended]
class XeSqlPkg_bdc_drop_database_request_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bdc_drop_database_request_completed: XeSqlPkg_bdc_drop_database_request_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 http_result_code;
	[WmiDataId(6), read, Extension("Guid")] guid http_request_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string response_message;
};
		
[dynamic: ToInstance, Description("Fires when a request to alter database collation is completed."): Amended,
    Guid("{8D68B996-5232-4366-B817-FE19CB5145A3}"), locale("MS\\0x409"),
    DisplayName("bdc_alter_database_collation_request_completed"): Amended]
class XeSqlPkg_bdc_alter_database_collation_request_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bdc_alter_database_collation_request_completed: XeSqlPkg_bdc_alter_database_collation_request_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 http_result_code;
	[WmiDataId(6), read, Extension("Guid")] guid http_request_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_collation;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string response_message;
};
		
[dynamic: ToInstance, Description("Fires when a request to alter database name is completed."): Amended,
    Guid("{BF784682-A3A4-4D1B-A785-F7414B35346C}"), locale("MS\\0x409"),
    DisplayName("bdc_alter_database_name_request_completed"): Amended]
class XeSqlPkg_bdc_alter_database_name_request_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bdc_alter_database_name_request_completed: XeSqlPkg_bdc_alter_database_name_request_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 http_result_code;
	[WmiDataId(6), read, Extension("Guid")] guid http_request_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string new_database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string response_message;
};
		
[dynamic: ToInstance, Description("Fires when a request to query state of external table request is completed."): Amended,
    Guid("{8119AF6B-544D-429F-82A4-62000FAE5087}"), locale("MS\\0x409"),
    DisplayName("bdc_query_external_table_state_request_completed"): Amended]
class XeSqlPkg_bdc_query_external_table_state_request_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bdc_query_external_table_state_request_completed: XeSqlPkg_bdc_query_external_table_state_request_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 http_result_code;
	[WmiDataId(6), read, Extension("Guid")] guid http_request_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string datapool_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string response_message;
};
		
[dynamic: ToInstance, Description("Fires when a request to query state of external database request is completed."): Amended,
    Guid("{87832517-4A70-4569-8E99-E42B4A05A330}"), locale("MS\\0x409"),
    DisplayName("bdc_query_external_database_state_request_completed"): Amended]
class XeSqlPkg_bdc_query_external_database_state_request_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bdc_query_external_database_state_request_completed: XeSqlPkg_bdc_query_external_database_state_request_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 http_result_code;
	[WmiDataId(6), read, Extension("Guid")] guid http_request_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string datapool_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string response_message;
};
		
[dynamic: ToInstance, Description("Fires when a request to query state of the data pool request is completed."): Amended,
    Guid("{C3ECF58F-5F47-4FF7-BBA8-E7CF8579A92E}"), locale("MS\\0x409"),
    DisplayName("bdc_query_data_pool_request_state_completed"): Amended]
class XeSqlPkg_bdc_query_data_pool_request_state_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bdc_query_data_pool_request_state_completed: XeSqlPkg_bdc_query_data_pool_request_state_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 http_result_code;
	[WmiDataId(6), read, Extension("Guid")] guid http_request_id;
	[WmiDataId(7), read, Extension("Guid")] guid data_pool_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string response_message;
};
		
[dynamic: ToInstance, Description("big data cluster Controller Client ring buffer recorded"): Amended,
    Guid("{8493E4C0-C177-4107-BD48-F937F60A2A47}"), locale("MS\\0x409"),
    DisplayName("bdc_controller_client_ring_buffer_recorded"): Amended]
class XeSqlPkg_bdc_controller_client_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bdc_controller_client_ring_buffer_recorded: XeSqlPkg_bdc_controller_client_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read] sint32 hresult;
	[WmiDataId(8), read, Extension("Guid")] guid requestId;
	[WmiDataId(9), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("Fires when a request to query cluster endpoints is completed."): Amended,
    Guid("{03952FF3-14E5-44DD-9B98-4C60E75D95A5}"), locale("MS\\0x409"),
    DisplayName("bdc_query_cluster_endpoint_completed"): Amended]
class XeSqlPkg_bdc_query_cluster_endpoint_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bdc_query_cluster_endpoint_completed: XeSqlPkg_bdc_query_cluster_endpoint_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 http_result_code;
	[WmiDataId(6), read, Extension("Guid")] guid http_request_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string uri;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string response_message;
};
		
[dynamic: ToInstance, Description("A new PolyBase request added to authorization table"): Amended,
    Guid("{95391bc7-0cb6-4060-bd23-db61db48e4f8}"), locale("MS\\0x409"),
    DisplayName("polybase_authorization_add"): Amended]
class XeSqlPkg_polybase_authorization_add: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polybase_authorization_add: XeSqlPkg_polybase_authorization_add
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
	[WmiDataId(6), read, Extension("Guid")] guid app_name;
};
		
[dynamic: ToInstance, Description("A lookup for PolyBase request from authorization table"): Amended,
    Guid("{036cb370-688c-44c0-91c4-5082b4a8b9e1}"), locale("MS\\0x409"),
    DisplayName("polybase_authorization_lookup"): Amended]
class XeSqlPkg_polybase_authorization_lookup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polybase_authorization_lookup: XeSqlPkg_polybase_authorization_lookup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  lookup_found;
	[WmiDataId(6), read, Extension("Guid")] guid app_name;
};
		
[dynamic: ToInstance, Description("Remove PolyBase request from authorization table"): Amended,
    Guid("{f3fdd042-e2a5-4f71-8dcd-4dcfd80a748b}"), locale("MS\\0x409"),
    DisplayName("polybase_authorization_remove"): Amended]
class XeSqlPkg_polybase_authorization_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polybase_authorization_remove: XeSqlPkg_polybase_authorization_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
	[WmiDataId(6), read, Extension("Guid")] guid app_name;
};
		
[dynamic: ToInstance, Description("This xevent is fired when a dump is generated."): Amended,
    Guid("{a6ca100a-bc01-c379-78a0-aa07708dd0e0}"), locale("MS\\0x409"),
    DisplayName("dump_request_xevent"): Amended]
class XeSqlPkg_dump_request_xevent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dump_request_xevent: XeSqlPkg_dump_request_xevent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(52),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"MiniDump", 
					"FilteredDump", 
					"FullDump", 
					"FilteredDoubleDump", 
					"FullDoubleDump" }
			] uint8 dump_type;
};
		
[dynamic: ToInstance, Description("Non yield copied stack ring buffer recorded"): Amended,
    Guid("{5C98BFAA-A7AB-45EB-8C1D-03FFFDC59C1D}"), locale("MS\\0x409"),
    DisplayName("nonyield_copiedstack_ring_buffer_recorded"): Amended]
class XeSqlPkg_nonyield_copiedstack_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class nonyield_copiedstack_ring_buffer_recorded: XeSqlPkg_nonyield_copiedstack_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read] uint32 nonyield_type;
	[WmiDataId(8), read] sint32 scheduler_id;
	[WmiDataId(9), read] sint32 thread_id;
	[WmiDataId(10), read, Pointer] object  task;
	[WmiDataId(11), read, Pointer] object  worker;
	[WmiDataId(12), read] sint32 session_id;
	[WmiDataId(13), read] sint32 request_id;
	[WmiDataId(14), read] uint64 user_mode_time;
	[WmiDataId(15), read] uint64 kernel_mode_time;
	[WmiDataId(16), read, Extension("Variant"), XEVLD("callstack")] object stack_frames;
	[WmiDataId(17), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
	[WmiDataId(18), read, StringTermination("NullTerminated")] string call_stack_rva;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string worker_wait_stats;
};
		
[dynamic: ToInstance, Description("Fires when VDW query execution starts or completed."): Amended,
    Guid("{c9fa20e0-174c-057c-3925-30610be55fed}"), locale("MS\\0x409"),
    DisplayName("vdw_statement_execution"): Amended]
class XeSqlPkg_vdw_statement_execution: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_statement_execution: XeSqlPkg_vdw_statement_execution
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] uint64 cpu_time;
	[WmiDataId(7), read] uint64 logical_io_reads;
	[WmiDataId(8), read] uint64 logical_io_writes;
	[WmiDataId(9), read] uint64 physical_io_reads;
	[WmiDataId(10), read] uint64 clr_time;
	[WmiDataId(11), read] uint64 dop;
	[WmiDataId(12), read] uint64 query_max_used_memory;
	[WmiDataId(13), read] uint64 rowcount;
	[WmiDataId(14), read] uint64 log_bytes_used;
	[WmiDataId(15), read] uint64 num_physical_io_reads;
	[WmiDataId(16), read] uint64 temp_db_space_used;
	[WmiDataId(17), read] uint64 wait_category_unknown_ms;
	[WmiDataId(18), read] uint64 wait_category_cpu_ms;
	[WmiDataId(19), read] uint64 wait_category_workerthread_ms;
	[WmiDataId(20), read] uint64 wait_category_lock_ms;
	[WmiDataId(21), read] uint64 wait_category_latch_ms;
	[WmiDataId(22), read] uint64 wait_category_bufferlatch_ms;
	[WmiDataId(23), read] uint64 wait_category_bufferio_ms;
	[WmiDataId(24), read] uint64 wait_category_compilation_ms;
	[WmiDataId(25), read] uint64 wait_category_sqlclr_ms;
	[WmiDataId(26), read] uint64 wait_category_mirroring_ms;
	[WmiDataId(27), read] uint64 wait_category_transaction_ms;
	[WmiDataId(28), read] uint64 wait_category_idle_ms;
	[WmiDataId(29), read] uint64 wait_category_preemptive_ms;
	[WmiDataId(30), read] uint64 wait_category_servicebroker_ms;
	[WmiDataId(31), read] uint64 wait_category_tranlogio_ms;
	[WmiDataId(32), read] uint64 wait_category_networkio_ms;
	[WmiDataId(33), read] uint64 wait_category_parallelism_ms;
	[WmiDataId(34), read] uint64 wait_category_memory_ms;
	[WmiDataId(35), read] uint64 wait_category_userwait_ms;
	[WmiDataId(36), read] uint64 wait_category_tracing_ms;
	[WmiDataId(37), read] uint64 wait_category_fulltextsearch_ms;
	[WmiDataId(38), read] uint64 wait_category_otherdiskio_ms;
	[WmiDataId(39), read] uint64 wait_category_replication_ms;
	[WmiDataId(40), read] uint64 wait_category_logrategovernor_ms;
	[WmiDataId(41), read] uint64 daily_limit_tb;
	[WmiDataId(42), read] uint64 weekly_limit_tb;
	[WmiDataId(43), read] uint64 monthly_limit_tb;
	[WmiDataId(44), read] uint64 data_processed_current_day_tb;
	[WmiDataId(45), read] uint64 data_processed_current_week_tb;
	[WmiDataId(46), read] uint64 data_processed_current_month_tb;
	[WmiDataId(47), read] uint64 data_processed_query_mb;
	[WmiDataId(48), read] sint8  is_recompile;
	[WmiDataId(49), read] sint8  is_openrowset_stats;
	[WmiDataId(50), read] sint8  is_external_table_stats;
	[WmiDataId(51), read] sint8  is_cardinality_query;
	[WmiDataId(52), read] sint8  is_metadatadiscovery_internalquery;
	[WmiDataId(53), read] sint8  is_rejected_because_of_budget_limit;
	[WmiDataId(54), read] sint32 sql_error_number;
	[WmiDataId(55), read] sint32 sql_error_state;
	[WmiDataId(56), read] sint32 sql_error_severity;
	[WmiDataId(57), read] sint32 statement_number;
	[WmiDataId(58), read] sint32 parent_statement_number;
	[WmiDataId(59), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(60), read, StringTermination("NullTerminated"), Format("w")] string stats_creation_id;
	[WmiDataId(61), read, StringTermination("NullTerminated"), Format("w")] string cardinality_query_id;
	[WmiDataId(62), read, StringTermination("NullTerminated"), Format("w")] string parent_batch_id;
	[WmiDataId(63), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(64), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(65), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(66), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
	[WmiDataId(67), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
	[WmiDataId(68), read, StringTermination("NullTerminated"), Format("w")] string statement_type;
};
		
[dynamic: ToInstance, Description("Fires when execution of local query on SQL backend instance starts or completed."): Amended,
    Guid("{73c96470-d5c4-fefc-c0b8-71cd6e44d1c0}"), locale("MS\\0x409"),
    DisplayName("vdw_backend_execution"): Amended]
class XeSqlPkg_vdw_backend_execution: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_backend_execution: XeSqlPkg_vdw_backend_execution
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] uint64 cpu_time;
	[WmiDataId(7), read] uint64 logical_io_reads;
	[WmiDataId(8), read] uint64 logical_io_writes;
	[WmiDataId(9), read] uint64 physical_io_reads;
	[WmiDataId(10), read] uint64 clr_time;
	[WmiDataId(11), read] uint64 dop;
	[WmiDataId(12), read] uint64 query_max_used_memory;
	[WmiDataId(13), read] uint64 rowcount;
	[WmiDataId(14), read] uint64 log_bytes_used;
	[WmiDataId(15), read] uint64 num_physical_io_reads;
	[WmiDataId(16), read] uint64 temp_db_space_used;
	[WmiDataId(17), read] uint64 wait_category_unknown_ms;
	[WmiDataId(18), read] uint64 wait_category_cpu_ms;
	[WmiDataId(19), read] uint64 wait_category_workerthread_ms;
	[WmiDataId(20), read] uint64 wait_category_lock_ms;
	[WmiDataId(21), read] uint64 wait_category_latch_ms;
	[WmiDataId(22), read] uint64 wait_category_bufferlatch_ms;
	[WmiDataId(23), read] uint64 wait_category_bufferio_ms;
	[WmiDataId(24), read] uint64 wait_category_compilation_ms;
	[WmiDataId(25), read] uint64 wait_category_sqlclr_ms;
	[WmiDataId(26), read] uint64 wait_category_mirroring_ms;
	[WmiDataId(27), read] uint64 wait_category_transaction_ms;
	[WmiDataId(28), read] uint64 wait_category_idle_ms;
	[WmiDataId(29), read] uint64 wait_category_preemptive_ms;
	[WmiDataId(30), read] uint64 wait_category_servicebroker_ms;
	[WmiDataId(31), read] uint64 wait_category_tranlogio_ms;
	[WmiDataId(32), read] uint64 wait_category_networkio_ms;
	[WmiDataId(33), read] uint64 wait_category_parallelism_ms;
	[WmiDataId(34), read] uint64 wait_category_memory_ms;
	[WmiDataId(35), read] uint64 wait_category_userwait_ms;
	[WmiDataId(36), read] uint64 wait_category_tracing_ms;
	[WmiDataId(37), read] uint64 wait_category_fulltextsearch_ms;
	[WmiDataId(38), read] uint64 wait_category_otherdiskio_ms;
	[WmiDataId(39), read] uint64 wait_category_replication_ms;
	[WmiDataId(40), read] uint64 wait_category_logrategovernor_ms;
	[WmiDataId(41), read] sint8  is_recompile;
	[WmiDataId(42), read] sint8  is_openrowset_stats;
	[WmiDataId(43), read] sint8  is_cardinality_query;
	[WmiDataId(44), read] sint8  is_metadatadiscovery_internalquery;
	[WmiDataId(45), read] sint32 sql_error_number;
	[WmiDataId(46), read] sint32 sql_error_state;
	[WmiDataId(47), read] sint32 sql_error_severity;
	[WmiDataId(48), read, StringTermination("NullTerminated"), Format("w")] string stats_creation_id;
	[WmiDataId(49), read, StringTermination("NullTerminated"), Format("w")] string cardinality_query_id;
	[WmiDataId(50), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(51), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(52), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(53), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(54), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(55), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(56), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(57), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(58), read, StringTermination("NullTerminated"), Format("w")] string distributed_step_index;
	[WmiDataId(59), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(60), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
	[WmiDataId(61), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
	[WmiDataId(62), read, Extension("Variant")] object local_query_hash;
	[WmiDataId(63), read, Extension("Variant")] object local_query_plan_hash;
};
		
[dynamic: ToInstance, Description("Collect annotations from queries."): Amended,
    Guid("{6dcf0b1d-bc4e-4912-a962-951362d2707c}"), locale("MS\\0x409"),
    DisplayName("vdw_annotations"): Amended]
class XeSqlPkg_vdw_annotations: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_annotations: XeSqlPkg_vdw_annotations
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 annotationFragmentId;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string annotationId;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string annotationType;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string annotationProperties;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string annotationFragment;
};
		
[dynamic: ToInstance, Description("Fired by the VDW backend to report collected metrics when going out of sp_executesql_metrics scope."): Amended,
    Guid("{B1C21BF1-C0FC-453E-8128-3586ED80AB14}"), locale("MS\\0x409"),
    DisplayName("vdw_distributed_query_metrics"): Amended]
class XeSqlPkg_vdw_distributed_query_metrics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_distributed_query_metrics: XeSqlPkg_vdw_distributed_query_metrics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 data_scanned_bytes;
	[WmiDataId(6), read] uint64 data_moved_bytes;
	[WmiDataId(7), read] uint64 data_written_bytes;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string sp_metrics_output;
};
		
[dynamic: ToInstance, Description("Billing report - Estimated data scanned during query compilation phase."): Amended,
    Guid("{A142B5A0-CE6F-4C4E-9C88-60CD156BFD06}"), locale("MS\\0x409"),
    DisplayName("polaris_billing_estimated_data_scanned"): Amended]
class XeSqlPkg_polaris_billing_estimated_data_scanned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_billing_estimated_data_scanned: XeSqlPkg_polaris_billing_estimated_data_scanned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 data_scanned_bytes;
	[WmiDataId(6), read] uint64 data_scanned_bytes_without_pruned_partitions;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
};
		
[dynamic: ToInstance, Description("Unexpected exceptions during data_export or distributed_move operations."): Amended,
    Guid("{DEDDAE75-C1F1-40D4-8084-261B4ECC929A}"), locale("MS\\0x409"),
    DisplayName("polaris_billing_exception"): Amended]
class XeSqlPkg_polaris_billing_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_billing_exception: XeSqlPkg_polaris_billing_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 data_processed;
	[WmiDataId(6), read] sint8  is_openrowset_local_stats_query;
	[WmiDataId(7), read] sint8  is_polaris_external_table_stats_query;
	[WmiDataId(8), read] sint8  is_vdw_frontend_instance;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
	[WmiDataId(11), read, Extension("Variant")] object path_pattern_hash;
};
		
[dynamic: ToInstance, Description("Unexpected exceptions during SQL On-Demand budget limit related operations."): Amended,
    Guid("{AAF0409C-607D-4C1A-A3D8-53CF06A6888D}"), locale("MS\\0x409"),
    DisplayName("polaris_budget_limit_exception"): Amended]
class XeSqlPkg_polaris_budget_limit_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_budget_limit_exception: XeSqlPkg_polaris_budget_limit_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error;
	[WmiDataId(6), read] uint32 severity;
	[WmiDataId(7), read] uint32 state;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
};
		
[dynamic: ToInstance, Description("Unexpected exceptions during execution of Polaris background task."): Amended,
    Guid("{A1B11587-582A-423E-B1BE-E55DB3F74807}"), locale("MS\\0x409"),
    DisplayName("polaris_background_task_exception"): Amended]
class XeSqlPkg_polaris_background_task_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_background_task_exception: XeSqlPkg_polaris_background_task_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error;
	[WmiDataId(6), read] uint32 severity;
	[WmiDataId(7), read] uint32 state;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
};
		
[dynamic: ToInstance, Description("Reports status about internal query that is calculating current state of data processed in SQL On Demand."): Amended,
    Guid("{EB31E1A2-D329-4D2A-A040-FF2800B150E2}"), locale("MS\\0x409"),
    DisplayName("polaris_current_state_of_data_processed"): Amended]
class XeSqlPkg_polaris_current_state_of_data_processed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_current_state_of_data_processed: XeSqlPkg_polaris_current_state_of_data_processed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint32 sql_error_number;
	[WmiDataId(7), read] sint32 sql_error_state;
	[WmiDataId(8), read] sint32 sql_error_severity;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Fired when Polaris background tasks resource group is not initialized."): Amended,
    Guid("{95D2088D-66D4-4678-B299-70A20719D4BB}"), locale("MS\\0x409"),
    DisplayName("polaris_failed_to_find_resource_group"): Amended]
class XeSqlPkg_polaris_failed_to_find_resource_group: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_failed_to_find_resource_group: XeSqlPkg_polaris_failed_to_find_resource_group
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string group_name;
};
		
[dynamic: ToInstance, Description("Fired when Polaris background tasks resource group is initialized."): Amended,
    Guid("{7F4A5778-3E87-4F2F-914D-A04F54DAEC2C}"), locale("MS\\0x409"),
    DisplayName("polaris_created_in_memory_resource_group"): Amended]
class XeSqlPkg_polaris_created_in_memory_resource_group: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_created_in_memory_resource_group: XeSqlPkg_polaris_created_in_memory_resource_group
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string group_name;
};
		
[dynamic: ToInstance, Description("Configuration changes for SQL On-Demand budget limit."): Amended,
    Guid("{8752CC6C-320C-4CE0-8FFF-F82CEFDA191D}"), locale("MS\\0x409"),
    DisplayName("polaris_configuration_budget_limit_change"): Amended]
class XeSqlPkg_polaris_configuration_budget_limit_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_configuration_budget_limit_change: XeSqlPkg_polaris_configuration_budget_limit_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string service_config_text;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Daily configuration snapshot for SQL On-Demand budget limit."): Amended,
    Guid("{1744D2FC-FA51-4B80-A51C-B19E70E859C5}"), locale("MS\\0x409"),
    DisplayName("polaris_configuration_budget_limit_snapshot"): Amended]
class XeSqlPkg_polaris_configuration_budget_limit_snapshot: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_configuration_budget_limit_snapshot: XeSqlPkg_polaris_configuration_budget_limit_snapshot
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 daily_limit_tb;
	[WmiDataId(6), read] uint64 weekly_limit_tb;
	[WmiDataId(7), read] uint64 monthly_limit_tb;
};
		
[dynamic: ToInstance, Description("Configuration state changes for background tasks."): Amended,
    Guid("{6D7DB986-9337-41BB-A7EF-878F77B250F3}"), locale("MS\\0x409"),
    DisplayName("polaris_configuration_background_task"): Amended]
class XeSqlPkg_polaris_configuration_background_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_configuration_background_task: XeSqlPkg_polaris_configuration_background_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string service_config_text;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Optimizer fires this event when PhyOp tree for the query on VDW frontend is available."): Amended,
    Guid("{2f5c1a47-ead7-2895-a3a7-3a6ca0130338}"), locale("MS\\0x409"),
    DisplayName("vdw_query_phy_op"): Amended]
class XeSqlPkg_vdw_query_phy_op: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_query_phy_op: XeSqlPkg_vdw_query_phy_op
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string phy_op_xml;
};
		
[dynamic: ToInstance, Description("Fired by the VDW backend instance for OPENROWSET(BULK) queries that use TABLESAMPLE clause."): Amended,
    Guid("{74a2f9ff-0767-48e3-9cd9-dc16ee9c1e6d}"), locale("MS\\0x409"),
    DisplayName("vdw_file_level_sampling"): Amended]
class XeSqlPkg_vdw_file_level_sampling: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_file_level_sampling: XeSqlPkg_vdw_file_level_sampling
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] uint32 logical_path_count;
	[WmiDataId(7), read] uint32 file_count_before_smpl;
	[WmiDataId(8), read] uint32 file_count_after_smpl;
	[WmiDataId(9), read] uint64 file_size_before_smpl;
	[WmiDataId(10), read] uint64 file_size_after_smpl;
	[WmiDataId(11), read] real64 requested_sampling_percent;
	[WmiDataId(12), read] real64 file_level_sampling_percent;
	[WmiDataId(13), read] real64 extractor_level_sampling_percent;
	[WmiDataId(14), read] sint8  is_file_level_sampling_applied;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
};
		
[dynamic: ToInstance, Description("Fired by the VDW frontend during resolve operation of parser version for provided format."): Amended,
    Guid("{3a95c870-13d8-4b5c-b321-8985f55f9a7f}"), locale("MS\\0x409"),
    DisplayName("vdw_file_format_parser_version_usage"): Amended]
class XeSqlPkg_vdw_file_format_parser_version_usage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_file_format_parser_version_usage: XeSqlPkg_vdw_file_format_parser_version_usage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 statement_number;
	[WmiDataId(6), read] sint8  is_supported_combination;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_format;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string parser_version;
};
		
[dynamic: ToInstance, Description("Emits information related to logical file splits after memo generation."): Amended,
    Guid("{52DCF835-9EE3-4614-B377-585DEAD56ED9}"), locale("MS\\0x409"),
    DisplayName("vdw_logical_file_splits_memo_generation"): Amended]
class XeSqlPkg_vdw_logical_file_splits_memo_generation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_logical_file_splits_memo_generation: XeSqlPkg_vdw_logical_file_splits_memo_generation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 files_logically_split_count;
	[WmiDataId(6), read] uint32 total_logical_file_splits_count;
	[WmiDataId(7), read] uint64 total_size_bytes;
};
		
[dynamic: ToInstance, Description("Emits information related to file distribution elimination on frontend."): Amended,
    Guid("{22b19f6f-678b-4e52-9e13-39b1f92224a0}"), locale("MS\\0x409"),
    DisplayName("vdw_file_distribution_elimination_on_frontend"): Amended]
class XeSqlPkg_vdw_file_distribution_elimination_on_frontend: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_file_distribution_elimination_on_frontend: XeSqlPkg_vdw_file_distribution_elimination_on_frontend
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 total_estimated_data_scan_size;
	[WmiDataId(6), read] uint64 total_file_size;
	[WmiDataId(7), read] sint32 internal_query_error_code;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Management service operation started."): Amended,
    Guid("{1741D174-75FB-49A0-8678-BD1E041D4C85}"), locale("MS\\0x409"),
    DisplayName("management_service_operation_started"): Amended]
class XeSqlPkg_management_service_operation_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class management_service_operation_started: XeSqlPkg_management_service_operation_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string logical_server_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string operation_name;
};
		
[dynamic: ToInstance, Description("Management service operation succeeded."): Amended,
    Guid("{C3FA57DB-8382-4B2B-BEC2-675E590DA3BE}"), locale("MS\\0x409"),
    DisplayName("management_service_operation_succeeded"): Amended]
class XeSqlPkg_management_service_operation_succeeded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class management_service_operation_succeeded: XeSqlPkg_management_service_operation_succeeded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string logical_server_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string operation_name;
};
		
[dynamic: ToInstance, Description("Management Service operation failed."): Amended,
    Guid("{41BCE817-B979-42B0-8912-D878BE540AD1}"), locale("MS\\0x409"),
    DisplayName("management_service_operation_failed"): Amended]
class XeSqlPkg_management_service_operation_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class management_service_operation_failed: XeSqlPkg_management_service_operation_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_code;
	[WmiDataId(6), read] uint32 http_code;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string logical_server_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string operation_name;
};
		
[dynamic: ToInstance, Description("Fires after computing openrowset table level stats."): Amended,
    Guid("{02a0b39f-3b42-4c84-bade-4747f15ecb8d}"), locale("MS\\0x409"),
    DisplayName("openrowset_table_level_stats"): Amended]
class XeSqlPkg_openrowset_table_level_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class openrowset_table_level_stats: XeSqlPkg_openrowset_table_level_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] uint32 algorithm;
	[WmiDataId(7), read] uint32 file_count;
	[WmiDataId(8), read] uint64 total_file_size;
	[WmiDataId(9), read] sint64 estimated_row_count;
	[WmiDataId(10), read] uint64 estimated_row_size;
	[WmiDataId(11), read] sint32 statement_number;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_format;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string remote_source_name;
};
		
[dynamic: ToInstance, Description("Fires after computing openrowset table level stats."): Amended,
    Guid("{02a0b39f-3b42-4c84-bade-4747f15ecb8d}"), locale("MS\\0x409"),
    DisplayName("openrowset_table_level_stats"): Amended]
class XeSqlPkg_openrowset_table_level_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class openrowset_table_level_stats: XeSqlPkg_openrowset_table_level_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] uint32 algorithm;
	[WmiDataId(7), read] uint32 file_count;
	[WmiDataId(8), read] uint64 total_file_size;
	[WmiDataId(9), read] sint64 estimated_row_count;
	[WmiDataId(10), read] uint64 estimated_row_size;
	[WmiDataId(11), read] sint32 statement_number;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_format;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string remote_source_name;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string parser_version;
};
		
[dynamic: ToInstance, Description("Fires after computing openrowset or external table stats on table level."): Amended,
    Guid("{02a0b39f-3b42-4c84-bade-4747f15ecb8d}"), locale("MS\\0x409"),
    DisplayName("openrowset_table_level_stats"): Amended]
class XeSqlPkg_openrowset_table_level_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class openrowset_table_level_stats: XeSqlPkg_openrowset_table_level_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] uint32 algorithm;
	[WmiDataId(7), read] uint32 file_count;
	[WmiDataId(8), read] uint64 total_file_size;
	[WmiDataId(9), read] sint64 estimated_row_count;
	[WmiDataId(10), read] uint64 estimated_row_size;
	[WmiDataId(11), read] sint32 statement_number;
	[WmiDataId(12), read] sint8  is_openrowset;
	[WmiDataId(13), read] sint8  is_auto_stats;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string file_format;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string remote_source_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string parser_version;
};
		
[dynamic: ToInstance, Description("Fires after executing internal sampled cardinality estimation query."): Amended,
    Guid("{9db0a81b-176b-4143-b231-26ff6dd71513}"), locale("MS\\0x409"),
    DisplayName("openrowset_cardinality_query"): Amended]
class XeSqlPkg_openrowset_cardinality_query: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class openrowset_cardinality_query: XeSqlPkg_openrowset_cardinality_query
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint64 estimated_row_count;
	[WmiDataId(7), read] sint64 average_column_length_count;
	[WmiDataId(8), read] sint8  is_openrowset;
	[WmiDataId(9), read] sint32 sql_error_number;
	[WmiDataId(10), read] sint32 sql_error_state;
	[WmiDataId(11), read] sint32 sql_error_severity;
	[WmiDataId(12), read] sint8  from_internal_query;
	[WmiDataId(13), read] sint32 statement_number;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string cardinality_query_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Fires after computing openrowset stats."): Amended,
    Guid("{8b3259ae-f9b2-4dd6-9c76-fea47f470fc7}"), locale("MS\\0x409"),
    DisplayName("openrowset_stats_creation"): Amended]
class XeSqlPkg_openrowset_stats_creation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class openrowset_stats_creation: XeSqlPkg_openrowset_stats_creation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] uint64 maxdop;
	[WmiDataId(7), read] sint8  is_auto_stats;
	[WmiDataId(8), read] sint8  is_bound_by_name;
	[WmiDataId(9), read] sint8  reusing_sketches_and_smpl;
	[WmiDataId(10), read] sint8  filters_prepared;
	[WmiDataId(11), read] sint8  is_recompile;
	[WmiDataId(12), read] sint8  is_filtered;
	[WmiDataId(13), read] real64 sampling_percent;
	[WmiDataId(14), read] uint32 file_count;
	[WmiDataId(15), read] sint64 cardinality;
	[WmiDataId(16), read] real64 avg_column_len;
	[WmiDataId(17), read] sint64 count_distinct;
	[WmiDataId(18), read] sint64 null_count;
	[WmiDataId(19), read] sint32 histogram_steps;
	[WmiDataId(20), read] sint64 max_histogram_eq_rows;
	[WmiDataId(21), read] sint32 sql_error_number;
	[WmiDataId(22), read] sint32 sql_error_state;
	[WmiDataId(23), read] sint32 sql_error_severity;
	[WmiDataId(24), read] sint32 statement_number;
	[WmiDataId(25), read] sint8  is_parallel_stats;
	[WmiDataId(26), read] uint64 parallel_stats_count;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string stats_creation_id;
	[WmiDataId(29), read, StringTermination("NullTerminated"), Format("w")] string openrowset_stats_hash;
	[WmiDataId(30), read, StringTermination("NullTerminated"), Format("w")] string remote_source_name;
	[WmiDataId(31), read, StringTermination("NullTerminated"), Format("w")] string target_column;
	[WmiDataId(32), read, StringTermination("NullTerminated"), Format("w")] string column_alias;
	[WmiDataId(33), read, StringTermination("NullTerminated"), Format("w")] string column_type;
	[WmiDataId(34), read, StringTermination("NullTerminated"), Format("w")] string file_format;
	[WmiDataId(35), read, StringTermination("NullTerminated"), Format("w")] string histogram_eq_rows_distribution;
	[WmiDataId(36), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Fires after computing openrowset stats."): Amended,
    Guid("{8b3259ae-f9b2-4dd6-9c76-fea47f470fc7}"), locale("MS\\0x409"),
    DisplayName("openrowset_stats_creation"): Amended]
class XeSqlPkg_openrowset_stats_creation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class openrowset_stats_creation: XeSqlPkg_openrowset_stats_creation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] uint64 maxdop;
	[WmiDataId(7), read] sint8  is_auto_stats;
	[WmiDataId(8), read] sint8  is_bound_by_name;
	[WmiDataId(9), read] sint8  reusing_sketches_and_smpl;
	[WmiDataId(10), read] sint8  filters_prepared;
	[WmiDataId(11), read] sint8  is_recompile;
	[WmiDataId(12), read] sint8  is_filtered;
	[WmiDataId(13), read] real64 sampling_percent;
	[WmiDataId(14), read] uint32 file_count;
	[WmiDataId(15), read] sint64 cardinality;
	[WmiDataId(16), read] real64 avg_column_len;
	[WmiDataId(17), read] sint64 count_distinct;
	[WmiDataId(18), read] sint64 null_count;
	[WmiDataId(19), read] sint32 histogram_steps;
	[WmiDataId(20), read] sint64 max_histogram_eq_rows;
	[WmiDataId(21), read] sint32 sql_error_number;
	[WmiDataId(22), read] sint32 sql_error_state;
	[WmiDataId(23), read] sint32 sql_error_severity;
	[WmiDataId(24), read] sint32 statement_number;
	[WmiDataId(25), read] sint8  is_parallel_stats;
	[WmiDataId(26), read] uint64 parallel_stats_count;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string stats_creation_id;
	[WmiDataId(29), read, StringTermination("NullTerminated"), Format("w")] string openrowset_stats_hash;
	[WmiDataId(30), read, StringTermination("NullTerminated"), Format("w")] string remote_source_name;
	[WmiDataId(31), read, StringTermination("NullTerminated"), Format("w")] string target_column;
	[WmiDataId(32), read, StringTermination("NullTerminated"), Format("w")] string column_alias;
	[WmiDataId(33), read, StringTermination("NullTerminated"), Format("w")] string column_type;
	[WmiDataId(34), read, StringTermination("NullTerminated"), Format("w")] string file_format;
	[WmiDataId(35), read, StringTermination("NullTerminated"), Format("w")] string histogram_eq_rows_distribution;
	[WmiDataId(36), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(37), read, StringTermination("NullTerminated"), Format("w")] string parser_version;
};
		
[dynamic: ToInstance, Description("Fires after loading openrowset stats."): Amended,
    Guid("{2b51423a-7e57-47eb-8366-aa6dd4f5bf1d}"), locale("MS\\0x409"),
    DisplayName("openrowset_stats_loading"): Amended]
class XeSqlPkg_openrowset_stats_loading: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class openrowset_stats_loading: XeSqlPkg_openrowset_stats_loading
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint8  is_auto_stats;
	[WmiDataId(7), read] sint8  is_bound_by_name;
	[WmiDataId(8), read] sint8  filters_prepared;
	[WmiDataId(9), read] sint8  is_recompile;
	[WmiDataId(10), read] sint8  is_filtered;
	[WmiDataId(11), read] sint8  is_average_column_length;
	[WmiDataId(12), read] sint8  is_openrowset;
	[WmiDataId(13), read] real64 sampling_percent;
	[WmiDataId(14), read] uint32 file_count;
	[WmiDataId(15), read] sint64 cardinality;
	[WmiDataId(16), read] real64 avg_column_len;
	[WmiDataId(17), read] sint64 count_distinct;
	[WmiDataId(18), read] sint64 null_count;
	[WmiDataId(19), read] sint32 histogram_steps;
	[WmiDataId(20), read] sint64 max_histogram_eq_rows;
	[WmiDataId(21), read] sint32 statement_number;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string openrowset_stats_hash;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string remote_source_name;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string target_column;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string column_alias;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string column_type;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string file_format;
	[WmiDataId(29), read, StringTermination("NullTerminated"), Format("w")] string histogram_eq_rows_distribution;
};
		
[dynamic: ToInstance, Description("Fires after loading openrowset stats."): Amended,
    Guid("{2b51423a-7e57-47eb-8366-aa6dd4f5bf1d}"), locale("MS\\0x409"),
    DisplayName("openrowset_stats_loading"): Amended]
class XeSqlPkg_openrowset_stats_loading: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class openrowset_stats_loading: XeSqlPkg_openrowset_stats_loading
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint8  is_auto_stats;
	[WmiDataId(7), read] sint8  is_bound_by_name;
	[WmiDataId(8), read] sint8  filters_prepared;
	[WmiDataId(9), read] sint8  is_recompile;
	[WmiDataId(10), read] sint8  is_filtered;
	[WmiDataId(11), read] sint8  is_average_column_length;
	[WmiDataId(12), read] sint8  is_openrowset;
	[WmiDataId(13), read] real64 sampling_percent;
	[WmiDataId(14), read] uint32 file_count;
	[WmiDataId(15), read] sint64 cardinality;
	[WmiDataId(16), read] real64 avg_column_len;
	[WmiDataId(17), read] sint64 count_distinct;
	[WmiDataId(18), read] sint64 null_count;
	[WmiDataId(19), read] sint32 histogram_steps;
	[WmiDataId(20), read] sint64 max_histogram_eq_rows;
	[WmiDataId(21), read] sint32 statement_number;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string openrowset_stats_hash;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string remote_source_name;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string target_column;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string column_alias;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string column_type;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string file_format;
	[WmiDataId(29), read, StringTermination("NullTerminated"), Format("w")] string histogram_eq_rows_distribution;
	[WmiDataId(30), read, StringTermination("NullTerminated"), Format("w")] string parser_version;
};
		
[dynamic: ToInstance, Description("Fires after algorithm for stale stats detection finishes."): Amended,
    Guid("{afeb0a4c-275c-489c-abd3-11096b11fb86}"), locale("MS\\0x409"),
    DisplayName("openrowset_stats_stale_detection"): Amended]
class XeSqlPkg_openrowset_stats_stale_detection: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class openrowset_stats_stale_detection: XeSqlPkg_openrowset_stats_stale_detection
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint8  is_auto_stats;
	[WmiDataId(7), read] sint8  is_bound_by_name;
	[WmiDataId(8), read] sint8  is_cardinality_entry;
	[WmiDataId(9), read] uint32 file_count;
	[WmiDataId(10), read] sint32 statement_number;
	[WmiDataId(11), read] sint8  are_stats_stale;
	[WmiDataId(12), read] sint8  simple_stale_stats_detect;
	[WmiDataId(13), read] sint8  is_openrowset;
	[WmiDataId(14), read] uint64 total_dataset_size_old;
	[WmiDataId(15), read] uint64 total_dataset_size_new;
	[WmiDataId(16), read] uint64 total_data_diff;
	[WmiDataId(17), read] uint64 total_file_count_old;
	[WmiDataId(18), read] uint64 total_file_count_new;
	[WmiDataId(19), read] uint64 file_count_deleted;
	[WmiDataId(20), read] uint64 file_count_created;
	[WmiDataId(21), read] uint64 file_count_unchanged;
	[WmiDataId(22), read] uint64 file_count_changed_smaller;
	[WmiDataId(23), read] uint64 file_count_changed_bigger_equal;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string openrowset_stats_hash;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string remote_source_name;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string target_column;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string column_alias;
	[WmiDataId(29), read, StringTermination("NullTerminated"), Format("w")] string column_type;
	[WmiDataId(30), read, StringTermination("NullTerminated"), Format("w")] string file_format;
	[WmiDataId(31), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Fires after algorithm for stale stats detection finishes."): Amended,
    Guid("{afeb0a4c-275c-489c-abd3-11096b11fb86}"), locale("MS\\0x409"),
    DisplayName("openrowset_stats_stale_detection"): Amended]
class XeSqlPkg_openrowset_stats_stale_detection: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class openrowset_stats_stale_detection: XeSqlPkg_openrowset_stats_stale_detection
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint8  is_auto_stats;
	[WmiDataId(7), read] sint8  is_bound_by_name;
	[WmiDataId(8), read] sint8  is_cardinality_entry;
	[WmiDataId(9), read] uint32 file_count;
	[WmiDataId(10), read] sint32 statement_number;
	[WmiDataId(11), read] sint8  are_stats_stale;
	[WmiDataId(12), read] sint8  simple_stale_stats_detect;
	[WmiDataId(13), read] sint8  is_openrowset;
	[WmiDataId(14), read] uint64 total_dataset_size_old;
	[WmiDataId(15), read] uint64 total_dataset_size_new;
	[WmiDataId(16), read] uint64 total_data_diff;
	[WmiDataId(17), read] uint64 total_file_count_old;
	[WmiDataId(18), read] uint64 total_file_count_new;
	[WmiDataId(19), read] uint64 file_count_deleted;
	[WmiDataId(20), read] uint64 file_count_created;
	[WmiDataId(21), read] uint64 file_count_unchanged;
	[WmiDataId(22), read] uint64 file_count_changed_smaller;
	[WmiDataId(23), read] uint64 file_count_changed_bigger_equal;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string openrowset_stats_hash;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string remote_source_name;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string target_column;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string column_alias;
	[WmiDataId(29), read, StringTermination("NullTerminated"), Format("w")] string column_type;
	[WmiDataId(30), read, StringTermination("NullTerminated"), Format("w")] string file_format;
	[WmiDataId(31), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(32), read, StringTermination("NullTerminated"), Format("w")] string parser_version;
};
		
[dynamic: ToInstance, Description("Fires after computing external table stats."): Amended,
    Guid("{25e5b423-1d5a-44e9-86ec-767edc0e2d0f}"), locale("MS\\0x409"),
    DisplayName("external_table_stats_creation"): Amended]
class XeSqlPkg_external_table_stats_creation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_table_stats_creation: XeSqlPkg_external_table_stats_creation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint8  is_auto_stats;
	[WmiDataId(7), read] sint8  is_bound_by_name;
	[WmiDataId(8), read] real64 sampling_percent;
	[WmiDataId(9), read] sint64 cardinality;
	[WmiDataId(10), read] real64 avg_column_len;
	[WmiDataId(11), read] sint64 count_distinct;
	[WmiDataId(12), read] sint32 histogram_steps;
	[WmiDataId(13), read] sint32 sql_error_number;
	[WmiDataId(14), read] sint32 sql_error_state;
	[WmiDataId(15), read] sint32 sql_error_severity;
	[WmiDataId(16), read] sint32 statement_number;
	[WmiDataId(17), read] sint8  is_parallel_stats;
	[WmiDataId(18), read] uint64 parallel_stats_count;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string stats_creation_id;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string target_column;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string column_alias;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string column_type;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string file_format;
};
		
[dynamic: ToInstance, Description("Fires after computing external table stats."): Amended,
    Guid("{25e5b423-1d5a-44e9-86ec-767edc0e2d0f}"), locale("MS\\0x409"),
    DisplayName("external_table_stats_creation"): Amended]
class XeSqlPkg_external_table_stats_creation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class external_table_stats_creation: XeSqlPkg_external_table_stats_creation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint8  is_auto_stats;
	[WmiDataId(7), read] sint8  is_bound_by_name;
	[WmiDataId(8), read] real64 sampling_percent;
	[WmiDataId(9), read] sint64 cardinality;
	[WmiDataId(10), read] real64 avg_column_len;
	[WmiDataId(11), read] sint64 count_distinct;
	[WmiDataId(12), read] sint32 histogram_steps;
	[WmiDataId(13), read] sint32 sql_error_number;
	[WmiDataId(14), read] sint32 sql_error_state;
	[WmiDataId(15), read] sint32 sql_error_severity;
	[WmiDataId(16), read] sint32 statement_number;
	[WmiDataId(17), read] sint8  is_parallel_stats;
	[WmiDataId(18), read] uint64 parallel_stats_count;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string stats_creation_id;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string target_column;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string column_alias;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string column_type;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string file_format;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string parser_version;
};
		
[dynamic: ToInstance, Description("Fires during Metadata Discovery statistics staleness detection routine."): Amended,
    Guid("{6917091f-bd94-4b5d-b637-125e417c7670}"), locale("MS\\0x409"),
    DisplayName("md_discovery_staleness_detection"): Amended]
class XeSqlPkg_md_discovery_staleness_detection: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class md_discovery_staleness_detection: XeSqlPkg_md_discovery_staleness_detection
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] uint64 table_mod_ctr;
	[WmiDataId(7), read] uint64 latest_update_mod_ctr;
	[WmiDataId(8), read] uint64 table_mod_rows;
	[WmiDataId(9), read] uint64 column_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string column_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Fires after computing trident table stats."): Amended,
    Guid("{4c2e39cc-52f4-4385-9643-84fff5dec154}"), locale("MS\\0x409"),
    DisplayName("trident_table_stats_creation"): Amended]
class XeSqlPkg_trident_table_stats_creation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class trident_table_stats_creation: XeSqlPkg_trident_table_stats_creation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint8  is_auto_stats;
	[WmiDataId(7), read] uint64 column_id;
	[WmiDataId(8), read] real64 sampling_percent;
	[WmiDataId(9), read] sint64 cardinality;
	[WmiDataId(10), read] real64 avg_column_len;
	[WmiDataId(11), read] sint64 count_distinct;
	[WmiDataId(12), read] sint32 histogram_steps;
	[WmiDataId(13), read] sint32 statement_number;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string column_name;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string stats_creation_id;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
};
		
[dynamic: ToInstance, Description("Occurs during schema inference in openrowset bulk statement."): Amended,
    Guid("{fa2113b0-fb8c-4bc6-aec5-8aa0947f48a5}"), locale("MS\\0x409"),
    DisplayName("openrowset_bulk_schema_inference"): Amended]
class XeSqlPkg_openrowset_bulk_schema_inference: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class openrowset_bulk_schema_inference: XeSqlPkg_openrowset_bulk_schema_inference
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] sint32 column_count;
	[WmiDataId(7), read] sint32 sql_error_number;
	[WmiDataId(8), read] sint32 sql_error_state;
	[WmiDataId(9), read] sint32 sql_error_severity;
	[WmiDataId(10), read] sint32 statement_number;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Occurs during schema inference in openrowset bulk statement."): Amended,
    Guid("{fa2113b0-fb8c-4bc6-aec5-8aa0947f48a5}"), locale("MS\\0x409"),
    DisplayName("openrowset_bulk_schema_inference"): Amended]
class XeSqlPkg_openrowset_bulk_schema_inference: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class openrowset_bulk_schema_inference: XeSqlPkg_openrowset_bulk_schema_inference
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] sint32 column_count;
	[WmiDataId(7), read] sint32 se_column_count;
	[WmiDataId(8), read] sint32 se_column_different_type;
	[WmiDataId(9), read] sint32 se_column_missing;
	[WmiDataId(10), read] sint32 se_column_added;
	[WmiDataId(11), read] sint32 sql_error_number;
	[WmiDataId(12), read] sint32 sql_error_state;
	[WmiDataId(13), read] sint32 sql_error_severity;
	[WmiDataId(14), read] sint32 statement_number;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Occurs when updating resolved files within openrowset bulk statement."): Amended,
    Guid("{5c01bf21-de5a-43e8-a382-504361904e47}"), locale("MS\\0x409"),
    DisplayName("openrowset_bulk_file_resolvement"): Amended]
class XeSqlPkg_openrowset_bulk_file_resolvement: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class openrowset_bulk_file_resolvement: XeSqlPkg_openrowset_bulk_file_resolvement
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] sint8  multiple_logical_paths_enabled;
	[WmiDataId(7), read] sint8  is_metadatadiscovery_internalquery;
	[WmiDataId(8), read] sint8  is_view_in_replicated_db;
	[WmiDataId(9), read] uint32 logical_path_count;
	[WmiDataId(10), read] uint64 logical_path_count_limit;
	[WmiDataId(11), read] sint32 sql_error_number;
	[WmiDataId(12), read] sint32 sql_error_state;
	[WmiDataId(13), read] sint32 sql_error_severity;
	[WmiDataId(14), read] sint32 statement_number;
	[WmiDataId(15), read] sint32 unresolved_logical_path_count;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Fires during metadata publishing to SyMS."): Amended,
    Guid("{c42bc45c-c940-4507-9835-e3f40b6f6cac}"), locale("MS\\0x409"),
    DisplayName("sql_syms_publishing"): Amended]
class XeSqlPkg_sql_syms_publishing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_syms_publishing: XeSqlPkg_sql_syms_publishing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 syms_object_version;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string syms_object_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string operation_type;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string operation_status;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string metadata_sync_message;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string connector_type;
};
		
[dynamic: ToInstance, Description("Fires when metadata publishing to SyMS hits exception."): Amended,
    Guid("{f165d5bc-c280-49a1-aabf-6b2241439c20}"), locale("MS\\0x409"),
    DisplayName("sql_syms_publishing_exception"): Amended]
class XeSqlPkg_sql_syms_publishing_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_syms_publishing_exception: XeSqlPkg_sql_syms_publishing_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 sql_error_number;
	[WmiDataId(6), read] sint32 sql_error_state;
	[WmiDataId(7), read] sint32 sql_error_severity;
	[WmiDataId(8), read] sint64 syms_object_version;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string syms_object_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string object_type;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string operation_type;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string operation_status;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string metadata_sync_message;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string connector_type;
};
		
[dynamic: ToInstance, Description("Fires on metadata publishing HTTP requests to SyMS."): Amended,
    Guid("{75069393-e9f9-4bb0-87cf-17136f95933b}"), locale("MS\\0x409"),
    DisplayName("sql_syms_publishing_http_request"): Amended]
class XeSqlPkg_sql_syms_publishing_http_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_syms_publishing_http_request: XeSqlPkg_sql_syms_publishing_http_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 syms_object_version;
	[WmiDataId(6), read] uint64 syms_http_response_code;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string syms_http_response;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string syms_object_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string object_type;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string operation_type;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string operation_status;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string metadata_sync_message;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string connector_type;
};
		
[dynamic: ToInstance, Description("Fires when partition elimination routine gets called."): Amended,
    Guid("{84e48941-ea1d-4a98-998d-e412b8406acd}"), locale("MS\\0x409"),
    DisplayName("partition_elimination_routine"): Amended]
class XeSqlPkg_partition_elimination_routine: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class partition_elimination_routine: XeSqlPkg_partition_elimination_routine
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] sint32 original_data_source_id;
	[WmiDataId(7), read] sint8  is_openrowset;
	[WmiDataId(8), read] sint32 virtual_column_count;
	[WmiDataId(9), read] sint32 stats_column_count;
	[WmiDataId(10), read] uint32 virtual_columns_conjunct_count;
	[WmiDataId(11), read] uint32 stats_columns_conjunct_count;
	[WmiDataId(12), read] uint32 virtual_columns_replacement_count;
	[WmiDataId(13), read] uint16 stats_columns_filter_count;
	[WmiDataId(14), read] uint32 total_conjunct_count;
	[WmiDataId(15), read] uint64 original_source_size;
	[WmiDataId(16), read] uint64 remaining_source_size;
	[WmiDataId(17), read] uint32 original_file_count;
	[WmiDataId(18), read] uint32 remaining_file_count;
	[WmiDataId(19), read] sint32 statement_number;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string virtual_columns_referenced;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Fires when pruned data source is added to the list of reduced sources."): Amended,
    Guid("{1c93e0b1-d2db-4396-a601-904fb5453042}"), locale("MS\\0x409"),
    DisplayName("partition_elimination_mapping"): Amended]
class XeSqlPkg_partition_elimination_mapping: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class partition_elimination_mapping: XeSqlPkg_partition_elimination_mapping
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 original_data_source_id;
	[WmiDataId(6), read] sint32 pruned_data_source_id;
	[WmiDataId(7), read] sint32 statement_number;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
};
		
[dynamic: ToInstance, Description("Fires when partition elimination routine gets called on local execution path."): Amended,
    Guid("{fb9f8350-1d90-4245-ad70-43452b256e25}"), locale("MS\\0x409"),
    DisplayName("polybase_partition_elimination_routine_started"): Amended]
class XeSqlPkg_polybase_partition_elimination_routine_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polybase_partition_elimination_routine_started: XeSqlPkg_polybase_partition_elimination_routine_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] sint32 original_data_source_id;
	[WmiDataId(7), read] sint8  is_openrowset;
	[WmiDataId(8), read] sint32 virtual_column_count;
	[WmiDataId(9), read] sint32 stats_column_count;
	[WmiDataId(10), read] uint32 virtual_columns_conjunct_count;
	[WmiDataId(11), read] uint32 stats_columns_conjunct_count;
	[WmiDataId(12), read] uint32 virtual_columns_replacement_count;
	[WmiDataId(13), read] uint16 stats_columns_filter_count;
	[WmiDataId(14), read] uint32 total_conjunct_count;
	[WmiDataId(15), read] uint64 original_source_size;
	[WmiDataId(16), read] uint64 remaining_source_size;
	[WmiDataId(17), read] uint32 original_file_count;
	[WmiDataId(18), read] uint32 remaining_file_count;
	[WmiDataId(19), read] sint32 statement_number;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string virtual_columns_referenced;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Fires when pruned data source is added to the list of reduced sources on local execution path."): Amended,
    Guid("{da2cf2af-3075-40d3-a753-b18bbd67a6aa}"), locale("MS\\0x409"),
    DisplayName("polybase_partition_elimination_routine_ended"): Amended]
class XeSqlPkg_polybase_partition_elimination_routine_ended: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polybase_partition_elimination_routine_ended: XeSqlPkg_polybase_partition_elimination_routine_ended
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 original_data_source_id;
	[WmiDataId(6), read] sint32 pruned_data_source_id;
	[WmiDataId(7), read] sint32 statement_number;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
};
		
[dynamic: ToInstance, Description("Fires after login to Polaris frontend is finished."): Amended,
    Guid("{532FC4CB-9406-4B1A-86F8-BFD95F16290C}"), locale("MS\\0x409"),
    DisplayName("polaris_metrics_connections"): Amended]
class XeSqlPkg_polaris_metrics_connections: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_metrics_connections: XeSqlPkg_polaris_metrics_connections
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 Connections;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string Result;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string PoolName;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string NodeName;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string ClusterName;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Fires Resource Health signal after login to Polaris frontend is finished."): Amended,
    Guid("{C0AE1B92-343A-486A-8928-1341DD4DB99D}"), locale("MS\\0x409"),
    DisplayName("polaris_metrics_login_rh"): Amended]
class XeSqlPkg_polaris_metrics_login_rh: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_metrics_login_rh: XeSqlPkg_polaris_metrics_login_rh
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 login_finish;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string is_success;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string is_user_error;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string arm_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string PoolName;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Fires after login to Synapse SQL Pool frontend completes."): Amended,
    Guid("{72386A08-8BA4-41A3-A4EA-911E32D44212}"), locale("MS\\0x409"),
    DisplayName("synapse_sql_pool_metrics_login"): Amended]
class XeSqlPkg_synapse_sql_pool_metrics_login: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_sql_pool_metrics_login: XeSqlPkg_synapse_sql_pool_metrics_login
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 LoginFinish;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string is_success;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string is_user_error;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string arm_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string PoolName;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Fires if the DML part of a CETAS fails in pre-Gen3 Polaris."): Amended,
    Guid("{cb03bff2-d16c-4370-b476-10cff9f4213c}"), locale("MS\\0x409"),
    DisplayName("vdw_cetas_drop_ext_table_metadata"): Amended]
class XeSqlPkg_vdw_cetas_drop_ext_table_metadata: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_cetas_drop_ext_table_metadata: XeSqlPkg_vdw_cetas_drop_ext_table_metadata
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 sql_error_number;
	[WmiDataId(6), read] sint32 sql_error_state;
	[WmiDataId(7), read] sint32 sql_error_severity;
	[WmiDataId(8), read] sint32 statement_number;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
};
		
[dynamic: ToInstance, Description("Fires when login request is routed to a page server instead of compute. This is fired only for unexpected frontend connections."): Amended,
    Guid("{f4ce6d74-9c1b-4f4d-a94a-3b1fa0eab402}"), locale("MS\\0x409"),
    DisplayName("login_request_to_page_server"): Amended]
class XeSqlPkg_login_request_to_page_server: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class login_request_to_page_server: XeSqlPkg_login_request_to_page_server
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Ledger verification operation started."): Amended,
    Guid("{884f56c1-c4e4-400d-ae10-e0353add3c7b}"), locale("MS\\0x409"),
    DisplayName("ledger_verification_started"): Amended]
class XeSqlPkg_ledger_verification_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_verification_started: XeSqlPkg_ledger_verification_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  verify_all_tables;
	[WmiDataId(6), read] sint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("Ledger verification operation completed."): Amended,
    Guid("{677bf2e0-c134-4e7a-966d-92f6ea63064e}"), locale("MS\\0x409"),
    DisplayName("ledger_verification_completed"): Amended]
class XeSqlPkg_ledger_verification_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_verification_completed: XeSqlPkg_ledger_verification_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  verify_all_tables;
	[WmiDataId(6), read] sint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] sint8  from_storage;
	[WmiDataId(9), read] sint8  is_successful;
	[WmiDataId(10), read] sint8  input_error;
	[WmiDataId(11), read] sint8  digest_verification_failed;
	[WmiDataId(12), read] sint8  inter_block_verification_failed;
	[WmiDataId(13), read] sint8  intra_block_verification_failed;
	[WmiDataId(14), read] uint64 database_ledger_verification_time_seconds;
	[WmiDataId(15), read] uint64 total_verification_time_seconds;
	[WmiDataId(16), read] uint32 error_code;
};
		
[dynamic: ToInstance, Description("Ledger table verification operation started."): Amended,
    Guid("{c27ab2f4-a0a6-4ea5-9574-0f7c7ac97099}"), locale("MS\\0x409"),
    DisplayName("ledger_table_verification_started"): Amended]
class XeSqlPkg_ledger_table_verification_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_table_verification_started: XeSqlPkg_ledger_table_verification_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint8  is_append_only;
};
		
[dynamic: ToInstance, Description("Ledger table verification operation completed."): Amended,
    Guid("{aa8946f1-4305-4689-8e53-281589823e27}"), locale("MS\\0x409"),
    DisplayName("ledger_table_verification_completed"): Amended]
class XeSqlPkg_ledger_table_verification_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_table_verification_completed: XeSqlPkg_ledger_table_verification_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint8  is_append_only;
	[WmiDataId(8), read] sint8  is_successful;
	[WmiDataId(9), read] uint64 verification_time_seconds;
	[WmiDataId(10), read] uint32 error_code;
};
		
[dynamic: ToInstance, Description("Ledger table verification operation completed."): Amended,
    Guid("{aa8946f1-4305-4689-8e53-281589823e27}"), locale("MS\\0x409"),
    DisplayName("ledger_table_verification_completed"): Amended]
class XeSqlPkg_ledger_table_verification_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class ledger_table_verification_completed: XeSqlPkg_ledger_table_verification_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint8  is_append_only;
	[WmiDataId(8), read] sint8  is_successful;
	[WmiDataId(9), read] uint64 verification_time_seconds;
	[WmiDataId(10), read] uint32 error_code;
	[WmiDataId(11), read] uint64 base_table_verification_time_seconds;
	[WmiDataId(12), read] sint8  index_verification_successful;
};
		
[dynamic: ToInstance, Description("Ledger table verification operation completed."): Amended,
    Guid("{aa8946f1-4305-4689-8e53-281589823e27}"), locale("MS\\0x409"),
    DisplayName("ledger_table_verification_completed"): Amended]
class XeSqlPkg_ledger_table_verification_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class ledger_table_verification_completed: XeSqlPkg_ledger_table_verification_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint8  is_append_only;
	[WmiDataId(8), read] sint8  is_successful;
	[WmiDataId(9), read] uint64 verification_time_seconds;
	[WmiDataId(10), read] uint32 error_code;
	[WmiDataId(11), read] uint64 base_table_verification_time_seconds;
	[WmiDataId(12), read] sint8  index_verification_successful;
	[WmiDataId(13), read] sint8  is_view_consistent;
};
		
[dynamic: ToInstance, Description("Shows PLPGSQL statements sent to PostgreSQL server during Exec External Language statement"): Amended,
    Guid("{176ebdb5-8b26-4efa-a850-906b3ad0fbd9}"), locale("MS\\0x409"),
    DisplayName("exec_plpgsql"): Amended]
class XeSqlPkg_exec_plpgsql: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class exec_plpgsql: XeSqlPkg_exec_plpgsql
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string plpgsql;
};
		
[dynamic: ToInstance, Description("QP pushdown not available."): Amended,
    Guid("{51EB3AF9-866A-42C0-A3BF-CEEA2FFDA316}"), locale("MS\\0x409"),
    DisplayName("hyperscale_no_pushdown"): Amended]
class XeSqlPkg_hyperscale_no_pushdown: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hyperscale_no_pushdown: XeSqlPkg_hyperscale_no_pushdown
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(138),
				BitMap { 
					"16", 
					"64", 
					"8192", 
					"512", 
					"32", 
					"1024", 
					"1", 
					"2", 
					"0", 
					"128", 
					"16384", 
					"256", 
					"4096", 
					"2048", 
					"8", 
					"4" },
				BitValues { 
					"ClrType", 
					"Columnstore", 
					"Cursor", 
					"DataReductionTooLow", 
					"Encrypted", 
					"Fetch", 
					"HekatonTable", 
					"LargeObject", 
					"None", 
					"OrderedScan", 
					"Sample", 
					"ScanTooSmall", 
					"SystemTable", 
					"Tempdb", 
					"UnsupportedIntrinsic", 
					"UnsupportedScaOp" }
			] uint32 no_pushdown_reason;
	[WmiDataId(6), read] sint8  is_internal;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string table_alias;
};
		
[dynamic: ToInstance, Description("External Table Extractor event. Should encapsulate resolving file and schema (and possible initialization)."): Amended,
    Guid("{3EFB7AE7-852D-4D21-B2BF-B5406C911CB3}"), locale("MS\\0x409"),
    DisplayName("ext_table_extr_operation"): Amended]
class XeSqlPkg_ext_table_extr_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ext_table_extr_operation: XeSqlPkg_ext_table_extr_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 statement_number;
	[WmiDataId(6), read] sint32 sql_error_number;
	[WmiDataId(7), read] sint32 sql_error_state;
	[WmiDataId(8), read] sint32 sql_error_severity;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string operation_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string error_log;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string additional_info;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
};
		
[dynamic: ToInstance, Description("XEvent used for testing purposes to generate the proper synchronization."): Amended,
    Guid("{86689f58-0a95-4ace-a529-4eb152db27c7}"), locale("MS\\0x409"),
    DisplayName("ledger_synchronization_sqllang_xevent"): Amended]
class XeSqlPkg_ledger_synchronization_sqllang_xevent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_synchronization_sqllang_xevent: XeSqlPkg_ledger_synchronization_sqllang_xevent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Fired on compile for every query targeting external data sources."): Amended,
    Guid("{CA4A5D8E-13E1-4D6A-8357-561F5BE4B6EF}"), locale("MS\\0x409"),
    DisplayName("data_virtualization_query"): Amended]
class XeSqlPkg_data_virtualization_query: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_virtualization_query: XeSqlPkg_data_virtualization_query
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_openrowset;
	[WmiDataId(7), read] sint8  is_external_table;
	[WmiDataId(8), read] sint32 statement_number;
	[WmiDataId(9), read, Extension("Variant")] object statement_sql_hash;
	[WmiDataId(10), read, Extension("Variant")] object query_hash;
	[WmiDataId(11), read, Extension("Variant")] object query_plan_hash;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
};
		
[dynamic: ToInstance, Description("Fired when OPENROWSET or query against external table or external file format fails during parsing."): Amended,
    Guid("{65356E6E-0D7E-4D4A-90E6-6F1F849D08B9}"), locale("MS\\0x409"),
    DisplayName("data_virtualization_failed_query"): Amended]
class XeSqlPkg_data_virtualization_failed_query: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_virtualization_failed_query: XeSqlPkg_data_virtualization_failed_query
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 polybase_enabled;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string query_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string format_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string failure_reason;
};
		
[dynamic: ToInstance, Description("Fired for each execution of sp_invoke_external_rest_endpoint."): Amended,
    Guid("{34F4B264-ACC3-4097-A6AB-7E94A1772234}"), locale("MS\\0x409"),
    DisplayName("external_rest_endpoint_summary"): Amended]
class XeSqlPkg_external_rest_endpoint_summary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_rest_endpoint_summary: XeSqlPkg_external_rest_endpoint_summary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(54),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"unknown", 
					"http", 
					"https" }
			] uint8 internet_scheme;
	[WmiDataId(6), read] uint32 url_size;
	[WmiDataId(7), read] uint32 headers_size;
	[WmiDataId(8), read] sint32 request_payload_size_unicode;
	[WmiDataId(9), read] sint32 request_payload_size_utf8;
	[WmiDataId(10), read] sint32 request_payload_sent;
	[WmiDataId(11), read] sint32 request_headers_size;
	[WmiDataId(12), read] sint32 response_payload_size_utf8;
	[WmiDataId(13), read] sint32 response_payload_size_unicode;
	[WmiDataId(14), read] sint32 response_payload_read;
	[WmiDataId(15), read] sint32 http_response_code;
	[WmiDataId(16), read] uint64 execution_duration_in_ms;
	[WmiDataId(17), read] sint16 timeout_in_sec;
	[WmiDataId(18), read, 
				XEMapId(55),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"http1", 
					"http2" }
			] sint32 http_protocol;
	[WmiDataId(19), read, 
				XEMapId(134),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"0" },
				Values { 
					"ExternalEndpointWinHttpRequestState_Active", 
					"ExternalEndpointWinHttpRequestState_Closing", 
					"ExternalEndpointWinHttpRequestState_Completing", 
					"ExternalEndpointWinHttpRequestState_Invalid" }
			] uint32 request_state;
	[WmiDataId(20), read] uint32 error_code;
	[WmiDataId(21), read] uint32 severity;
	[WmiDataId(22), read] uint32 state;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string domain_name;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string relative_path;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string method;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string credential_name;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string credential_identity;
};
		
[dynamic: ToInstance, Description("Request access token for Azure virutal machine MSI."): Amended,
    Guid("{7ac54f53-ea8e-4027-b736-4efcb87a0f3a}"), locale("MS\\0x409"),
    DisplayName("vm_msi_access_token_retrieval"): Amended]
class XeSqlPkg_vm_msi_access_token_retrieval: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vm_msi_access_token_retrieval: XeSqlPkg_vm_msi_access_token_retrieval
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string client_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string resource_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string imds_endpoint;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string imds_api_version;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string http_request_url;
};
		
[dynamic: ToInstance, Description("Fired when a winhttp API call fails without stopping the execution"): Amended,
    Guid("{8B489257-F2FB-4120-AFC0-841F1D0D572B}"), locale("MS\\0x409"),
    DisplayName("external_rest_endpoint_error_winhttp_calls"): Amended]
class XeSqlPkg_external_rest_endpoint_error_winhttp_calls: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_rest_endpoint_error_winhttp_calls: XeSqlPkg_external_rest_endpoint_error_winhttp_calls
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 last_error;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string winhttp_call;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string function_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string description;
};
		
[dynamic: ToInstance, Description("A resumable add constraint operation was executed."): Amended,
    Guid("{1ec74ebc-9bec-4dbf-9ee3-947da234d90f}"), locale("MS\\0x409"),
    DisplayName("resumable_add_constraint_executed"): Amended]
class XeSqlPkg_resumable_add_constraint_executed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_add_constraint_executed: XeSqlPkg_resumable_add_constraint_executed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("XEvent used for Babylon testing purposes."): Amended,
    Guid("{0eddda4b-83c3-4182-a01e-517fbf0a0206}"), locale("MS\\0x409"),
    DisplayName("babylon_synchronization_xevent"): Amended]
class XeSqlPkg_babylon_synchronization_xevent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class babylon_synchronization_xevent: XeSqlPkg_babylon_synchronization_xevent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 state;
};
		
[dynamic: ToInstance, Description("XEvent for policy pull start"): Amended,
    Guid("{9C6895C5-0F55-4159-ABF5-6332CE9EB639}"), locale("MS\\0x409"),
    DisplayName("external_governance_policy_pulltask_started"): Amended]
class XeSqlPkg_external_governance_policy_pulltask_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_governance_policy_pulltask_started: XeSqlPkg_external_governance_policy_pulltask_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string service_endpoint_uri;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string policy_pull_type;
};
		
[dynamic: ToInstance, Description("XEvent for policy pull retries diagnostics"): Amended,
    Guid("{A0BFD5DD-C8AA-466A-8920-6BE5D5D9AA7E}"), locale("MS\\0x409"),
    DisplayName("external_governance_policy_pulltask_retries"): Amended]
class XeSqlPkg_external_governance_policy_pulltask_retries: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_governance_policy_pulltask_retries: XeSqlPkg_external_governance_policy_pulltask_retries
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 retry_number;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("XEvent for policy pull finish"): Amended,
    Guid("{6DF55DB0-B78F-4C1C-B71F-CCC2D27805EA}"), locale("MS\\0x409"),
    DisplayName("external_governance_policy_pulltask_finished"): Amended]
class XeSqlPkg_external_governance_policy_pulltask_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_governance_policy_pulltask_finished: XeSqlPkg_external_governance_policy_pulltask_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 policy_elements_count_after_pull;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string modified_policy_elements_information;
};
		