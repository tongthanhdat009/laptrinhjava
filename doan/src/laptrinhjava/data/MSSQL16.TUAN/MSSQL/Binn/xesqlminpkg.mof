
//*********************************************************************
//              Copyright (c) Microsoft Corporation.
//
//*********************************************************************

#pragma classflags("forceupdate")
#pragma AUTORECOVER
#pragma namespace("\\\\.\\root\\wmi")

[dynamic: ToInstance, Description("sqlserver"),
    Guid("{03FDA7D0-91BA-45F8-9875-8B6DD0B8E9F2}"), locale("MS\\0x409")]
class XeSqlPkg: EventTrace
{
	
	[Description ("Enable flags") : amended,
	ValueDescriptions{
		"Events related to SQL Server service operations",
		"Events related to database operations",
		"Events related to transactions",
		"Events related to disk I/O",
		"Events related to locks",
		"Events related to query execution",
		"Events related to latch operations",
		"Events related to exceptions",
		"Events related to errors",
		"Events related to memory state transitions and allocations",
		"Events related to access methods components.",
		"Events related to SQL Server Change Tracking",
		"Events related to deadlock monitor",
		"Events related to Change Data Capture Logscan sessions",
		"Events related to Change Data Capture jobs scheduler",
		"Events related to Logreader, sp_repldone and sp_replcmds",
		"Events related to Synapse Link",
		"Events related to Change Data Capture DDL sessions",
		"Events related to Change Data Cleanup job",
		"Events releated to SQL Server Replication.",
		"Events related to SQL Server Scale Out Engine DMV Infrastructure.",
		"Events related to SQL Server indexing",
		"Events related to OLEDB",
		"Events related to SQL Server storage management component.",
		"Events related to the stretch database.",
		"Events related to backup and restore",
		"Events related to AlwaysOn.",
		"Events related to XTP.",
		"Events related to Checkpoint.",
		"Events related to the query store.",
		"Events related to Physical Seeding.",
		"Events related to SQL Server Columnstore Indexes.",
		"Events related to SQL Server Temporal.",
		"Events related to VLDB.",
		"Failure injection XEvent.",
		"Events related to DW FIDO.",
		"Events related to SQL external file access.",
		"Events related to Chimera Hybrid."
	} : amended,
	DefineValues{
		"ETW_XESQLPKG_SERVER"
		,
		"ETW_XESQLPKG_DATABASE"
		,
		"ETW_XESQLPKG_TRANSACTIONS"
		,
		"ETW_XESQLPKG_IO"
		,
		"ETW_XESQLPKG_LOCK"
		,
		"ETW_XESQLPKG_EXECUTION"
		,
		"ETW_XESQLPKG_LATCH"
		,
		"ETW_XESQLPKG_EXCEPTION"
		,
		"ETW_XESQLPKG_ERRORS"
		,
		"ETW_XESQLPKG_MEMORY"
		,
		"ETW_XESQLPKG_ACCESS_METHODS"
		,
		"ETW_XESQLPKG_CHANGE_TRACKING"
		,
		"ETW_XESQLPKG_DEADLOCK_MONITOR"
		,
		"ETW_XESQLPKG_CDC_LOGSCAN"
		,
		"ETW_XESQLPKG_CDC_JOBS_SCHEDULER"
		,
		"ETW_XESQLPKG_LOGREADER"
		,
		"ETW_XESQLPKG_SYNAPSE_LINK"
		,
		"ETW_XESQLPKG_CDC_DDL_HANDLING"
		,
		"ETW_XESQLPKG_CDC_CLEANUP_JOB_STATUS"
		,
		"ETW_XESQLPKG_REPLICATION"
		,
		"ETW_XESQLPKG_DMV"
		,
		"ETW_XESQLPKG_INDEX"
		,
		"ETW_XESQLPKG_OLEDB"
		,
		"ETW_XESQLPKG_STORAGE_MANAGEMENT"
		,
		"ETW_XESQLPKG_STRETCH"
		,
		"ETW_XESQLPKG_BACKUP_RESTORE"
		,
		"ETW_XESQLPKG_ALWAYSON"
		,
		"ETW_XESQLPKG_XTP"
		,
		"ETW_XESQLPKG_CHECKPOINT"
		,
		"ETW_XESQLPKG_QUERY_STORE"
		,
		"ETW_XESQLPKG_DBSEED"
		,
		"ETW_XESQLPKG_COLUMNSTORE"
		,
		"ETW_XESQLPKG_TEMPORAL"
		,
		"ETW_XESQLPKG_VLDB"
		,
		"ETW_XESQLPKG_FAILPOINT"
		,
		"ETW_XESQLPKG_FIDO"
		,
		"ETW_XESQLPKG_XFILE"
		,
		"ETW_XESQLPKG_CHIMERA"
		},
	Values{
		"server",
		"database",
		"transactions",
		"io",
		"lock",
		"execution",
		"latch",
		"exception",
		"errors",
		"memory",
		"access_methods",
		"change_tracking",
		"deadlock_monitor",
		"cdc_logscan",
		"cdc_jobs_scheduler",
		"logreader",
		"synapse_link",
		"cdc_ddl_handling",
		"cdc_cleanup_job_status",
		"replication",
		"dmv",
		"index",
		"oledb",
		"storage_management",
		"stretch",
		"backup_restore",
		"alwayson",
		"xtp",
		"checkpoint",
		"query_store",
		"dbseed",
		"columnstore",
		"temporal",
		"vldb",
		"failpoint",
		"fido",
		"xfile",
		"chimera"
		},
	ValueMap{
		"1",
		"2",
		"4",
		"8",
		"16",
		"32",
		"64",
		"128",
		"256",
		"512",
		"1024",
		"2048",
		"4096",
		"8192",
		"16384",
		"32768",
		"65536",
		"131072",
		"262144",
		"524288",
		"1048576",
		"2097152",
		"4194304",
		"8388608",
		"16777216",
		"33554432",
		"67108864",
		"134217728",
		"268435456",
		"536870912",
		"1073741824",
		"2147483648",
		"4294967296",
		"8589934592",
		"17179869184",
		"34359738368",
		"68719476736",
		"137438953472"
		}
	]
	uint32 Flags;

};

	
[dynamic: ToInstance, Description("File read completed"): Amended,
    Guid("{e4b53496-919d-4766-904f-07049e9b6129}"), locale("MS\\0x409"),
    DisplayName("file_read_completed"): Amended]
class XeSqlPkg_file_read_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_read_completed: XeSqlPkg_file_read_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Pointer] object  file_handle;
	[WmiDataId(8), read] uint64 offset;
	[WmiDataId(9), read] uint16 database_id;
	[WmiDataId(10), read] uint16 file_id;
	[WmiDataId(11), read] uint16 file_group_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(13), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File read completed"): Amended,
    Guid("{e4b53496-919d-4766-904f-07049e9b6129}"), locale("MS\\0x409"),
    DisplayName("file_read_completed"): Amended]
class XeSqlPkg_file_read_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_read_completed: XeSqlPkg_file_read_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Pointer] object  file_handle;
	[WmiDataId(8), read] uint64 offset;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read] uint16 file_id;
	[WmiDataId(11), read] uint16 filegroup_id;
	[WmiDataId(12), read] uint64 size;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(14), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File write completed"): Amended,
    Guid("{d4901105-a95c-4f87-bdfc-520213b64c7a}"), locale("MS\\0x409"),
    DisplayName("file_write_completed"): Amended]
class XeSqlPkg_file_write_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_write_completed: XeSqlPkg_file_write_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Pointer] object  file_handle;
	[WmiDataId(8), read] uint64 offset;
	[WmiDataId(9), read] uint16 database_id;
	[WmiDataId(10), read] uint16 file_id;
	[WmiDataId(11), read] uint16 file_group_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("File write completed"): Amended,
    Guid("{d4901105-a95c-4f87-bdfc-520213b64c7a}"), locale("MS\\0x409"),
    DisplayName("file_write_completed"): Amended]
class XeSqlPkg_file_write_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_write_completed: XeSqlPkg_file_write_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Pointer] object  file_handle;
	[WmiDataId(8), read] uint64 offset;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read] uint16 file_id;
	[WmiDataId(11), read] uint16 filegroup_id;
	[WmiDataId(12), read] uint64 size;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("Buffer manager database pages"): Amended,
    Guid("{E8B363F1-CB25-4BE7-88DB-5DF50768ECDC}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_database_pages"): Amended]
class XeSqlPkg_buffer_manager_database_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_database_pages: XeSqlPkg_buffer_manager_database_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer manager free pages"): Amended,
    Guid("{290EF709-7CA2-4AE4-92B7-A29B42222ADA}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_free_pages"): Amended]
class XeSqlPkg_buffer_manager_free_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_free_pages: XeSqlPkg_buffer_manager_free_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer manager page life expectancy in milliseconds"): Amended,
    Guid("{20960f60-5a70-40bb-aa83-62fdf22da03c}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_page_life_expectancy"): Amended]
class XeSqlPkg_buffer_manager_page_life_expectancy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_page_life_expectancy: XeSqlPkg_buffer_manager_page_life_expectancy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer manager stolen pages"): Amended,
    Guid("{900391BE-C396-4C00-86F4-D63E3F9C5737}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_stolen_pages"): Amended]
class XeSqlPkg_buffer_manager_stolen_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_stolen_pages: XeSqlPkg_buffer_manager_stolen_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer manager target pages"): Amended,
    Guid("{74CE12CC-2B87-40BC-9AEC-2F8F1024656B}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_target_pages"): Amended]
class XeSqlPkg_buffer_manager_target_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_target_pages: XeSqlPkg_buffer_manager_target_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer manager total pages"): Amended,
    Guid("{A18C34FD-2DA7-4E4D-8FFF-1B1D183C8789}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_total_pages"): Amended]
class XeSqlPkg_buffer_manager_total_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_total_pages: XeSqlPkg_buffer_manager_total_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer node database pages"): Amended,
    Guid("{a54ff743-eb52-47b9-b9de-74993fe8857d}"), locale("MS\\0x409"),
    DisplayName("buffer_node_database_pages"): Amended]
class XeSqlPkg_buffer_node_database_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_database_pages: XeSqlPkg_buffer_node_database_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer node free pages"): Amended,
    Guid("{f3da400d-bdfc-4e66-8d0b-7f0a9636bbf6}"), locale("MS\\0x409"),
    DisplayName("buffer_node_free_pages"): Amended]
class XeSqlPkg_buffer_node_free_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_free_pages: XeSqlPkg_buffer_node_free_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer node page life expectancy in milliseconds"): Amended,
    Guid("{cfb669ea-96f3-4950-bb1b-aaba5cd1c467}"), locale("MS\\0x409"),
    DisplayName("buffer_node_page_life_expectancy"): Amended]
class XeSqlPkg_buffer_node_page_life_expectancy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_page_life_expectancy: XeSqlPkg_buffer_node_page_life_expectancy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer node stolen pages"): Amended,
    Guid("{24f283ce-e002-4402-aabf-736869da3e45}"), locale("MS\\0x409"),
    DisplayName("buffer_node_stolen_pages"): Amended]
class XeSqlPkg_buffer_node_stolen_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_stolen_pages: XeSqlPkg_buffer_node_stolen_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer node target pages"): Amended,
    Guid("{feed82d7-dac4-4eab-b64c-37a1bb641660}"), locale("MS\\0x409"),
    DisplayName("buffer_node_target_pages"): Amended]
class XeSqlPkg_buffer_node_target_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_target_pages: XeSqlPkg_buffer_node_target_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer node total pages"): Amended,
    Guid("{3d4059f9-219e-4e6c-a32a-9a85dc35b251}"), locale("MS\\0x409"),
    DisplayName("buffer_node_total_pages"): Amended]
class XeSqlPkg_buffer_node_total_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_total_pages: XeSqlPkg_buffer_node_total_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer partition free list empty"): Amended,
    Guid("{734b6942-7b38-40b7-90eb-7933f66d9ab0}"), locale("MS\\0x409"),
    DisplayName("buffer_partition_free_list_empty"): Amended]
class XeSqlPkg_buffer_partition_free_list_empty: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_partition_free_list_empty: XeSqlPkg_buffer_partition_free_list_empty
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 partition_id;
};
		
[dynamic: ToInstance, Description("Buffer partition free list requests"): Amended,
    Guid("{fd8a6deb-df0a-4644-b2de-19ecaf25648b}"), locale("MS\\0x409"),
    DisplayName("buffer_partition_free_list_requests"): Amended]
class XeSqlPkg_buffer_partition_free_list_requests: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_partition_free_list_requests: XeSqlPkg_buffer_partition_free_list_requests
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 partition_id;
};
		
[dynamic: ToInstance, Description("Buffer partition free pages"): Amended,
    Guid("{0607cd0c-a4e0-4cfc-9a8c-686061f7a6b6}"), locale("MS\\0x409"),
    DisplayName("buffer_partition_free_pages"): Amended]
class XeSqlPkg_buffer_partition_free_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_partition_free_pages: XeSqlPkg_buffer_partition_free_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 partition_id;
};
		
[dynamic: ToInstance, Description("Amount of memory the server is currently using for database cache."): Amended,
    Guid("{21cba386-becd-4572-aadb-9f5a59a12b57}"), locale("MS\\0x409"),
    DisplayName("memory_manager_database_cache_memory"): Amended]
class XeSqlPkg_memory_manager_database_cache_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_database_cache_memory: XeSqlPkg_memory_manager_database_cache_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Amount of memory the server is currently not using."): Amended,
    Guid("{fb948675-1160-4c16-83b9-c5b1ea49e9c3}"), locale("MS\\0x409"),
    DisplayName("memory_manager_free_memory"): Amended]
class XeSqlPkg_memory_manager_free_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_free_memory: XeSqlPkg_memory_manager_free_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Amount of memory the server has reserved for future usage. This value shows current unused amount of the initial grant shown in Granted Workspace Memory (KB)."): Amended,
    Guid("{92eb90cb-1ee7-4d83-bdfc-692725490cac}"), locale("MS\\0x409"),
    DisplayName("memory_manager_reserved_server_memory"): Amended]
class XeSqlPkg_memory_manager_reserved_server_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_reserved_server_memory: XeSqlPkg_memory_manager_reserved_server_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Amount of memory the server is currently using for the purposes other than the database pages."): Amended,
    Guid("{375aab6c-63db-4e85-92a1-e8dae6072e2b}"), locale("MS\\0x409"),
    DisplayName("memory_manager_stolen_server_memory"): Amended]
class XeSqlPkg_memory_manager_stolen_server_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_stolen_server_memory: XeSqlPkg_memory_manager_stolen_server_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Ideal amount of memory for the server."): Amended,
    Guid("{c6338bb7-2f0c-4dc9-8d22-6c19a56a18c5}"), locale("MS\\0x409"),
    DisplayName("memory_manager_target_server_memory"): Amended]
class XeSqlPkg_memory_manager_target_server_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_target_server_memory: XeSqlPkg_memory_manager_target_server_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Total amount of memory the server has committed."): Amended,
    Guid("{362bc68e-6d92-44c2-b51b-5c358e5c710c}"), locale("MS\\0x409"),
    DisplayName("memory_manager_total_server_memory"): Amended]
class XeSqlPkg_memory_manager_total_server_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_total_server_memory: XeSqlPkg_memory_manager_total_server_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Amount of memory the server is using on this node for database pages."): Amended,
    Guid("{89815577-1547-4dd5-9667-c15603bd17e9}"), locale("MS\\0x409"),
    DisplayName("memory_node_database_node_memory"): Amended]
class XeSqlPkg_memory_node_database_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_database_node_memory: XeSqlPkg_memory_node_database_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description(" Amount of memory the server is not using on this node"): Amended,
    Guid("{d4764848-b36d-493a-93fb-f0a36b1e418b}"), locale("MS\\0x409"),
    DisplayName("memory_node_free_node_memory"): Amended]
class XeSqlPkg_memory_node_free_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_free_node_memory: XeSqlPkg_memory_node_free_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description("Non NUMA-local amount of memory on this node"): Amended,
    Guid("{b29db5da-ebe5-41ce-97ac-d04cf8be608b}"), locale("MS\\0x409"),
    DisplayName("memory_node_foreign_node_memory"): Amended]
class XeSqlPkg_memory_node_foreign_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_foreign_node_memory: XeSqlPkg_memory_node_foreign_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description("Amount of memory the server is using on this node for the purposes other than database pages."): Amended,
    Guid("{2760b17b-ba37-44c1-89f1-9c2d18d983ea}"), locale("MS\\0x409"),
    DisplayName("memory_node_stolen_node_memory"): Amended]
class XeSqlPkg_memory_node_stolen_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_stolen_node_memory: XeSqlPkg_memory_node_stolen_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description("Ideal amount of memory for this node"): Amended,
    Guid("{92e4fe7d-c0d1-4c87-b3c4-bf2766011820}"), locale("MS\\0x409"),
    DisplayName("memory_node_target_node_memory"): Amended]
class XeSqlPkg_memory_node_target_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_target_node_memory: XeSqlPkg_memory_node_target_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description("Total amount of memory the server has committed on this node."): Amended,
    Guid("{d87cbf00-bead-47f9-9f0a-e21a3f5100e1}"), locale("MS\\0x409"),
    DisplayName("memory_node_total_node_memory"): Amended]
class XeSqlPkg_memory_node_total_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_total_node_memory: XeSqlPkg_memory_node_total_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry added"): Amended,
    Guid("{23C800FD-E765-43B5-9CA1-A97BF0A12829}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_added"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_added: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class catalog_metadata_cache_entry_added: XeSqlPkg_catalog_metadata_cache_entry_added
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry removed"): Amended,
    Guid("{6EE0F2C9-CFA1-4ACC-B4EA-213CBD1C0CA1}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_removed"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_removed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class catalog_metadata_cache_entry_removed: XeSqlPkg_catalog_metadata_cache_entry_removed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry removed"): Amended,
    Guid("{6EE0F2C9-CFA1-4ACC-B4EA-213CBD1C0CA1}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_removed"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_removed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class catalog_metadata_cache_entry_removed: XeSqlPkg_catalog_metadata_cache_entry_removed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry pinned"): Amended,
    Guid("{FF4C5FB5-2F39-4B29-A82B-29CD61D49D02}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_pinned"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_pinned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class catalog_metadata_cache_entry_pinned: XeSqlPkg_catalog_metadata_cache_entry_pinned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry pinned"): Amended,
    Guid("{FF4C5FB5-2F39-4B29-A82B-29CD61D49D02}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_pinned"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_pinned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class catalog_metadata_cache_entry_pinned: XeSqlPkg_catalog_metadata_cache_entry_pinned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry unpinned"): Amended,
    Guid("{AF97C47E-3A34-4B16-8223-6CEDD804121F}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_unpinned"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_unpinned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class catalog_metadata_cache_entry_unpinned: XeSqlPkg_catalog_metadata_cache_entry_unpinned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry unpinned"): Amended,
    Guid("{AF97C47E-3A34-4B16-8223-6CEDD804121F}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_unpinned"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_unpinned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class catalog_metadata_cache_entry_unpinned: XeSqlPkg_catalog_metadata_cache_entry_unpinned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache hit"): Amended,
    Guid("{5A734119-AB36-491B-B64F-B4BA09914BE5}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_hit"): Amended]
class XeSqlPkg_catalog_metadata_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class catalog_metadata_cache_hit: XeSqlPkg_catalog_metadata_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache hit"): Amended,
    Guid("{5A734119-AB36-491B-B64F-B4BA09914BE5}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_hit"): Amended]
class XeSqlPkg_catalog_metadata_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class catalog_metadata_cache_hit: XeSqlPkg_catalog_metadata_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases backup/restore throughput"): Amended,
    Guid("{cdfcdf14-5178-44fa-a1fb-68414d31365a}"), locale("MS\\0x409"),
    DisplayName("databases_backup_restore_throughput"): Amended]
class XeSqlPkg_databases_backup_restore_throughput: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_backup_restore_throughput: XeSqlPkg_databases_backup_restore_throughput
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases backup/restore throughput"): Amended,
    Guid("{cdfcdf14-5178-44fa-a1fb-68414d31365a}"), locale("MS\\0x409"),
    DisplayName("databases_backup_restore_throughput"): Amended]
class XeSqlPkg_databases_backup_restore_throughput: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_backup_restore_throughput: XeSqlPkg_databases_backup_restore_throughput
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Prints backup/restore progress trace messages with details"): Amended,
    Guid("{92c4d441-5442-40d7-83d9-3b0250920361}"), locale("MS\\0x409"),
    DisplayName("backup_restore_progress_trace"): Amended]
class XeSqlPkg_backup_restore_progress_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_restore_progress_trace: XeSqlPkg_backup_restore_progress_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(16),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Backup", 
					"Restore" }
			] uint8 operation_type;
	[WmiDataId(6), read, 
				XEMapId(17),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Information of major steps in the operation", 
					"Verbose I/O related information" }
			] uint8 trace_level;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string trace_message;
};
		
[dynamic: ToInstance, Description("Fired at locations where it's useful for test to inject a delay"): Amended,
    Guid("{8D569C50-CB55-4e7b-A2D7-2B522FE55500}"), locale("MS\\0x409"),
    DisplayName("backup_restore_test_delay"): Amended]
class XeSqlPkg_backup_restore_test_delay: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_restore_test_delay: XeSqlPkg_backup_restore_test_delay
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string delay_location_name;
};
		
[dynamic: ToInstance, Description("Fired when transient IO operations are retried"): Amended,
    Guid("{4f0eadaa-026c-429c-867f-a9f7cb36bd67}"), locale("MS\\0x409"),
    DisplayName("backup_restore_test_io_retry"): Amended]
class XeSqlPkg_backup_restore_test_io_retry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_restore_test_io_retry: XeSqlPkg_backup_restore_test_io_retry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 retry_count;
	[WmiDataId(6), read] uint64 operation;
};
		
[dynamic: ToInstance, Description("Force data page copy in database backup to hang."): Amended,
    Guid("{3419dd82-1f25-4864-a88e-a207fc6bb3a0}"), locale("MS\\0x409"),
    DisplayName("backup_copy_failpoint"): Amended]
class XeSqlPkg_backup_copy_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_copy_failpoint: XeSqlPkg_backup_copy_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  first_hit;
};
		
[dynamic: ToInstance, Description("Used for seeding, force data page copy in database backup to hang."): Amended,
    Guid("{ab56b304-03a5-435e-9a00-969920468470}"), locale("MS\\0x409"),
    DisplayName("backup_copy_seeding_failpoint"): Amended]
class XeSqlPkg_backup_copy_seeding_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_copy_seeding_failpoint: XeSqlPkg_backup_copy_seeding_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  first_hit_seeding;
};
		
[dynamic: ToInstance, Description("Used for testing change of delay log pin for full backup."): Amended,
    Guid("{568b9a76-ae50-479e-b856-8ecd6aad8ddd}"), locale("MS\\0x409"),
    DisplayName("backup_diff_copy"): Amended]
class XeSqlPkg_backup_diff_copy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_diff_copy: XeSqlPkg_backup_diff_copy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_happening;
};
		
[dynamic: ToInstance, Description("Used for testing change of delay log pin for full backup seeding."): Amended,
    Guid("{fa0aed26-aae8-4e09-bc59-44d31ab222d6}"), locale("MS\\0x409"),
    DisplayName("backup_diff_copy_seeding"): Amended]
class XeSqlPkg_backup_diff_copy_seeding: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_diff_copy_seeding: XeSqlPkg_backup_diff_copy_seeding
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_happening_seeding;
};
		
[dynamic: ToInstance, Description("Used for signaling the diff copy is about to finish and hang."): Amended,
    Guid("{97ae1dae-48f7-4c02-9d88-f5f2abfd5f41}"), locale("MS\\0x409"),
    DisplayName("backup_diff_copy_finished_failpoint"): Amended]
class XeSqlPkg_backup_diff_copy_finished_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_diff_copy_finished_failpoint: XeSqlPkg_backup_diff_copy_finished_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_diff_copy_finished;
};
		
[dynamic: ToInstance, Description("Used for testing restore hang if blob lease is broken during the restore"): Amended,
    Guid("{808d1b99-14db-498e-87ae-b7816c567689}"), locale("MS\\0x409"),
    DisplayName("failure_injection_before_or_after_thread_main_routine"): Amended]
class XeSqlPkg_failure_injection_before_or_after_thread_main_routine: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failure_injection_before_or_after_thread_main_routine: XeSqlPkg_failure_injection_before_or_after_thread_main_routine
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(83),
				ValueMap { 
					"1", 
					"17", 
					"3", 
					"2", 
					"4", 
					"5", 
					"7", 
					"8", 
					"6", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"0", 
					"9", 
					"16", 
					"10" },
				Values { 
					"BotBackupDatabase", 
					"BotBackupFSLog", 
					"BotBackupLogicalLog", 
					"BotBackupPH6Data", 
					"BotCloseStream", 
					"BotOpenForBackup", 
					"BotOpenForRead", 
					"BotPositionForRead", 
					"BotPrepareForBackup", 
					"BotProcessConfiguration", 
					"BotRestartStream", 
					"BotRestore", 
					"BotScanLabel", 
					"BotScanMedia", 
					"BotUnknownOperation", 
					"BotWriteLeadingConfiguration", 
					"BotWriteMbc", 
					"BotWriteTrailingConfiguration" }
			] uint32 operation;
	[WmiDataId(6), read] uint32 stream_number;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string before_or_after;
};
		
[dynamic: ToInstance, Description("Used for testing restore hang if an exception is thrown on one backup stream but other streams are marked as completed"): Amended,
    Guid("{080d1b99-14db-498e-ae87-b7816c567689}"), locale("MS\\0x409"),
    DisplayName("failure_injection_during_backup_device_restoring"): Amended]
class XeSqlPkg_failure_injection_during_backup_device_restoring: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failure_injection_during_backup_device_restoring: XeSqlPkg_failure_injection_during_backup_device_restoring
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  ShouldFail;
};
		
[dynamic: ToInstance, Description("Used for setting the partialLogBackupCkptLsn to NullLSN"): Amended,
    Guid("{222eadf9-dfe9-477a-bc15-6fef41cd137c}"), locale("MS\\0x409"),
    DisplayName("set_partial_log_backup_checkpoint_lsn_to_null"): Amended]
class XeSqlPkg_set_partial_log_backup_checkpoint_lsn_to_null: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class set_partial_log_backup_checkpoint_lsn_to_null: XeSqlPkg_set_partial_log_backup_checkpoint_lsn_to_null
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Used for signaling the point in a full/diff backup after the data copy is finished but before the log copy has started."): Amended,
    Guid("{2e103e75-aa56-49ab-9b5d-4a74bda7c925}"), locale("MS\\0x409"),
    DisplayName("backup_between_data_and_log"): Amended]
class XeSqlPkg_backup_between_data_and_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_between_data_and_log: XeSqlPkg_backup_between_data_and_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Used for mock downgrade max supported db version to 1"): Amended,
    Guid("{aabaaa18-a38e-4089-9b0b-f45a242c505d}"), locale("MS\\0x409"),
    DisplayName("override_max_supported_db_version_to_1"): Amended]
class XeSqlPkg_override_max_supported_db_version_to_1: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class override_max_supported_db_version_to_1: XeSqlPkg_override_max_supported_db_version_to_1
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Databases bulk insert rows (due to BULK INSERT)"): Amended,
    Guid("{75DE02FD-6437-4792-A5B5-6E2AB9DF2503}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_insert_rows"): Amended]
class XeSqlPkg_databases_bulk_insert_rows: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_bulk_insert_rows: XeSqlPkg_databases_bulk_insert_rows
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases bulk insert rows (due to BULK INSERT)"): Amended,
    Guid("{75DE02FD-6437-4792-A5B5-6E2AB9DF2503}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_insert_rows"): Amended]
class XeSqlPkg_databases_bulk_insert_rows: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_bulk_insert_rows: XeSqlPkg_databases_bulk_insert_rows
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases bulk insert throughput in KB (due to BULK INSERT)"): Amended,
    Guid("{80426564-ECB4-4d80-90C1-6E34806D5FB0}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_insert_throughput"): Amended]
class XeSqlPkg_databases_bulk_insert_throughput: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_bulk_insert_throughput: XeSqlPkg_databases_bulk_insert_throughput
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases bulk insert throughput in KB (due to BULK INSERT)"): Amended,
    Guid("{80426564-ECB4-4d80-90C1-6E34806D5FB0}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_insert_throughput"): Amended]
class XeSqlPkg_databases_bulk_insert_throughput: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_bulk_insert_throughput: XeSqlPkg_databases_bulk_insert_throughput
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("bulk operation pages failed."): Amended,
    Guid("{CBE85FA2-FFCC-49FE-92CD-393E8DA916AC}"), locale("MS\\0x409"),
    DisplayName("bulk_operation_page_check_failed"): Amended]
class XeSqlPkg_bulk_operation_page_check_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bulk_operation_page_check_failed: XeSqlPkg_bulk_operation_page_check_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 first_IAM_file_id;
	[WmiDataId(8), read] uint32 first_IAM_page_id;
	[WmiDataId(9), read] uint64 allocation_unit_id;
	[WmiDataId(10), read, 
				XEMapId(200),
				ValueMap { 
					"1", 
					"0", 
					"3", 
					"2", 
					"4" },
				Values { 
					"BULK_PAGE_CHECK_LATCH_FAIL", 
					"BULK_PAGE_CHECK_LOCK_FAIL", 
					"BULK_PAGE_CHECK_OWNERSHIP_FAIL", 
					"BULK_PAGE_CHECK_PAGE_TYPE_FAIL", 
					"BULK_PAGE_CHECK_SUCCESS" }
			] uint32 check_failed_reason;
};
		
[dynamic: ToInstance, Description("Databases DBCC logical scan"): Amended,
    Guid("{6CCB4909-9E30-4905-BA84-CBD06A091D4B}"), locale("MS\\0x409"),
    DisplayName("databases_dbcc_logical_scan"): Amended]
class XeSqlPkg_databases_dbcc_logical_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_dbcc_logical_scan: XeSqlPkg_databases_dbcc_logical_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases DBCC logical scan"): Amended,
    Guid("{6CCB4909-9E30-4905-BA84-CBD06A091D4B}"), locale("MS\\0x409"),
    DisplayName("databases_dbcc_logical_scan"): Amended]
class XeSqlPkg_databases_dbcc_logical_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_dbcc_logical_scan: XeSqlPkg_databases_dbcc_logical_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log cache hit"): Amended,
    Guid("{BD596484-E053-4DA4-8344-3D9823948B0C}"), locale("MS\\0x409"),
    DisplayName("databases_log_cache_hit"): Amended]
class XeSqlPkg_databases_log_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_cache_hit: XeSqlPkg_databases_log_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log cache hit"): Amended,
    Guid("{BD596484-E053-4DA4-8344-3D9823948B0C}"), locale("MS\\0x409"),
    DisplayName("databases_log_cache_hit"): Amended]
class XeSqlPkg_databases_log_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_cache_hit: XeSqlPkg_databases_log_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log cache read"): Amended,
    Guid("{BF283DA2-E587-458F-8C79-2DF03291E685}"), locale("MS\\0x409"),
    DisplayName("databases_log_cache_read"): Amended]
class XeSqlPkg_databases_log_cache_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_cache_read: XeSqlPkg_databases_log_cache_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log cache read"): Amended,
    Guid("{BF283DA2-E587-458F-8C79-2DF03291E685}"), locale("MS\\0x409"),
    DisplayName("databases_log_cache_read"): Amended]
class XeSqlPkg_databases_log_cache_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_cache_read: XeSqlPkg_databases_log_cache_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log file size changed"): Amended,
    Guid("{811B1DF8-2074-434A-98DF-2F4508147FA0}"), locale("MS\\0x409"),
    DisplayName("databases_log_file_size_changed"): Amended]
class XeSqlPkg_databases_log_file_size_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_file_size_changed: XeSqlPkg_databases_log_file_size_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log file size changed"): Amended,
    Guid("{811B1DF8-2074-434A-98DF-2F4508147FA0}"), locale("MS\\0x409"),
    DisplayName("databases_log_file_size_changed"): Amended]
class XeSqlPkg_databases_log_file_size_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_file_size_changed: XeSqlPkg_databases_log_file_size_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log file used size changed"): Amended,
    Guid("{56D3131A-870A-4BEB-ACF5-C1B4B9326B56}"), locale("MS\\0x409"),
    DisplayName("databases_log_file_used_size_changed"): Amended]
class XeSqlPkg_databases_log_file_used_size_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_file_used_size_changed: XeSqlPkg_databases_log_file_used_size_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log file used size changed"): Amended,
    Guid("{56D3131A-870A-4BEB-ACF5-C1B4B9326B56}"), locale("MS\\0x409"),
    DisplayName("databases_log_file_used_size_changed"): Amended]
class XeSqlPkg_databases_log_file_used_size_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_file_used_size_changed: XeSqlPkg_databases_log_file_used_size_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log truncation"): Amended,
    Guid("{2BAE30B2-C645-45A0-AF16-664528E41B86}"), locale("MS\\0x409"),
    DisplayName("databases_log_truncation"): Amended]
class XeSqlPkg_databases_log_truncation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_truncation: XeSqlPkg_databases_log_truncation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log truncation"): Amended,
    Guid("{2BAE30B2-C645-45A0-AF16-664528E41B86}"), locale("MS\\0x409"),
    DisplayName("databases_log_truncation"): Amended]
class XeSqlPkg_databases_log_truncation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_truncation: XeSqlPkg_databases_log_truncation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log flush wait in milliseconds"): Amended,
    Guid("{B7C1E909-8146-4F67-AD50-6C4FEA17D020}"), locale("MS\\0x409"),
    DisplayName("databases_log_flush_wait"): Amended]
class XeSqlPkg_databases_log_flush_wait: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_flush_wait: XeSqlPkg_databases_log_flush_wait
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log flush wait in milliseconds"): Amended,
    Guid("{B7C1E909-8146-4F67-AD50-6C4FEA17D020}"), locale("MS\\0x409"),
    DisplayName("databases_log_flush_wait"): Amended]
class XeSqlPkg_databases_log_flush_wait: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_flush_wait: XeSqlPkg_databases_log_flush_wait
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log flush"): Amended,
    Guid("{C5E4FC0B-4BC6-4490-98B5-B4C4D0E492A1}"), locale("MS\\0x409"),
    DisplayName("databases_log_flush"): Amended]
class XeSqlPkg_databases_log_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_flush: XeSqlPkg_databases_log_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log flush"): Amended,
    Guid("{C5E4FC0B-4BC6-4490-98B5-B4C4D0E492A1}"), locale("MS\\0x409"),
    DisplayName("databases_log_flush"): Amended]
class XeSqlPkg_databases_log_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_flush: XeSqlPkg_databases_log_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log growth"): Amended,
    Guid("{543C0DD2-9F4D-44C5-85DD-BEE76221CA0C}"), locale("MS\\0x409"),
    DisplayName("databases_log_growth"): Amended]
class XeSqlPkg_databases_log_growth: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_growth: XeSqlPkg_databases_log_growth
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log growth"): Amended,
    Guid("{543C0DD2-9F4D-44C5-85DD-BEE76221CA0C}"), locale("MS\\0x409"),
    DisplayName("databases_log_growth"): Amended]
class XeSqlPkg_databases_log_growth: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_growth: XeSqlPkg_databases_log_growth
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log shrink"): Amended,
    Guid("{AD1239BA-BAB3-4A38-8736-0EFA77238730}"), locale("MS\\0x409"),
    DisplayName("databases_log_shrink"): Amended]
class XeSqlPkg_databases_log_shrink: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_shrink: XeSqlPkg_databases_log_shrink
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log shrink"): Amended,
    Guid("{AD1239BA-BAB3-4A38-8736-0EFA77238730}"), locale("MS\\0x409"),
    DisplayName("databases_log_shrink"): Amended]
class XeSqlPkg_databases_log_shrink: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_shrink: XeSqlPkg_databases_log_shrink
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Auto shrink log ended."): Amended,
    Guid("{7328E874-D15C-4191-B825-DA1304FCBAC8}"), locale("MS\\0x409"),
    DisplayName("auto_shrink_log"): Amended]
class XeSqlPkg_auto_shrink_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class auto_shrink_log: XeSqlPkg_auto_shrink_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 initial_file_size_mb;
	[WmiDataId(8), read] uint64 final_file_size_mb;
	[WmiDataId(9), read] uint64 duration_sec;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string physical_db_name;
};
		
[dynamic: ToInstance, Description("Auto shrink log caught an exception."): Amended,
    Guid("{4E007AA1-1B90-446f-81FB-CE19FBBD76B0}"), locale("MS\\0x409"),
    DisplayName("auto_shrink_log_caught_exception"): Amended]
class XeSqlPkg_auto_shrink_log_caught_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class auto_shrink_log_caught_exception: XeSqlPkg_auto_shrink_log_caught_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] sint32 error_number;
	[WmiDataId(8), read] sint32 severity;
	[WmiDataId(9), read] sint32 state;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string physical_db_name;
};
		
[dynamic: ToInstance, Description("Databases shrink data movement"): Amended,
    Guid("{9A68AF7C-56B6-401E-9FBF-81FCB6C1F929}"), locale("MS\\0x409"),
    DisplayName("databases_shrink_data_movement"): Amended]
class XeSqlPkg_databases_shrink_data_movement: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_shrink_data_movement: XeSqlPkg_databases_shrink_data_movement
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases shrink data movement"): Amended,
    Guid("{9A68AF7C-56B6-401E-9FBF-81FCB6C1F929}"), locale("MS\\0x409"),
    DisplayName("databases_shrink_data_movement"): Amended]
class XeSqlPkg_databases_shrink_data_movement: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_shrink_data_movement: XeSqlPkg_databases_shrink_data_movement
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Locks lock timeouts greater than 0"): Amended,
    Guid("{8517805E-E85B-4303-AE92-653C03BA8CC8}"), locale("MS\\0x409"),
    DisplayName("locks_lock_timeouts_greater_than_0"): Amended]
class XeSqlPkg_locks_lock_timeouts_greater_than_0: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class locks_lock_timeouts_greater_than_0: XeSqlPkg_locks_lock_timeouts_greater_than_0
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint64 lock_type;
};
		
[dynamic: ToInstance, Description("Locks lock timeouts"): Amended,
    Guid("{03182F70-B33D-4B2A-971C-9996F48CA361}"), locale("MS\\0x409"),
    DisplayName("locks_lock_timeouts"): Amended]
class XeSqlPkg_locks_lock_timeouts: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class locks_lock_timeouts: XeSqlPkg_locks_lock_timeouts
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint64 lock_type;
};
		
[dynamic: ToInstance, Description("Locks lock waits"): Amended,
    Guid("{969fe884-3fa1-44bc-98a9-6d2e839ad188}"), locale("MS\\0x409"),
    DisplayName("locks_lock_waits"): Amended]
class XeSqlPkg_locks_lock_waits: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class locks_lock_waits: XeSqlPkg_locks_lock_waits
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint64 lock_type;
};
		
[dynamic: ToInstance, Description("User settable"): Amended,
    Guid("{B2AF8177-4AED-4980-B023-3511CD21BD6C}"), locale("MS\\0x409"),
    DisplayName("user_settable"): Amended]
class XeSqlPkg_user_settable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class user_settable: XeSqlPkg_user_settable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint64 user_counter;
};
		
[dynamic: ToInstance, Description("Latch acquired"): Amended,
    Guid("{d20bcde5-b094-43e4-81a9-fc1251915c47}"), locale("MS\\0x409"),
    DisplayName("latch_acquired"): Amended]
class XeSqlPkg_latch_acquired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_acquired: XeSqlPkg_latch_acquired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(82),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
};
		
[dynamic: ToInstance, Description("Latch acquired"): Amended,
    Guid("{d20bcde5-b094-43e4-81a9-fc1251915c47}"), locale("MS\\0x409"),
    DisplayName("latch_acquired"): Amended]
class XeSqlPkg_latch_acquired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_acquired: XeSqlPkg_latch_acquired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(82),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] uint32 database_id;
	[WmiDataId(17), read] uint16 file_id;
	[WmiDataId(18), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Latch released"): Amended,
    Guid("{5427ddc5-1906-4e24-9ceb-45ed7f214fd0}"), locale("MS\\0x409"),
    DisplayName("latch_released"): Amended]
class XeSqlPkg_latch_released: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_released: XeSqlPkg_latch_released
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(82),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
};
		
[dynamic: ToInstance, Description("Latch released"): Amended,
    Guid("{5427ddc5-1906-4e24-9ceb-45ed7f214fd0}"), locale("MS\\0x409"),
    DisplayName("latch_released"): Amended]
class XeSqlPkg_latch_released: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_released: XeSqlPkg_latch_released
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(82),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] uint32 database_id;
	[WmiDataId(17), read] uint16 file_id;
	[WmiDataId(18), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Ghost cleanup"): Amended,
    Guid("{D2CFC3EA-266A-49B3-96D3-1A1C84D93650}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup"): Amended]
class XeSqlPkg_ghost_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup: XeSqlPkg_ghost_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Ghost cleanup"): Amended,
    Guid("{D2CFC3EA-266A-49B3-96D3-1A1C84D93650}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup"): Amended]
class XeSqlPkg_ghost_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class ghost_cleanup: XeSqlPkg_ghost_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint64 allocation_unit_id;
};
		
[dynamic: ToInstance, Description("Ghost cleanup task start"): Amended,
    Guid("{30493d3c-179f-44ca-abed-23d2f0b05f8a}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_task_start"): Amended]
class XeSqlPkg_ghost_cleanup_task_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_task_start: XeSqlPkg_ghost_cleanup_task_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 page_packets_queued;
};
		
[dynamic: ToInstance, Description("Ghost cleanup task suspend"): Amended,
    Guid("{60be8a5a-9d92-4a7e-b0d6-6916e4a9b9be}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_task_suspend"): Amended]
class XeSqlPkg_ghost_cleanup_task_suspend: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_task_suspend: XeSqlPkg_ghost_cleanup_task_suspend
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 page_packets_queued;
	[WmiDataId(6), read] uint32 page_packets_processed;
};
		
[dynamic: ToInstance, Description("A task packet is enqueued"): Amended,
    Guid("{f38ce41e-c98a-4347-a570-1d13843c6ff0}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_task_packet_enqueue"): Amended]
class XeSqlPkg_ghost_cleanup_task_packet_enqueue: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_task_packet_enqueue: XeSqlPkg_ghost_cleanup_task_packet_enqueue
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, 
				XEMapId(179),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"DATABASE", 
					"DATABASE_INTERNAL", 
					"PAGE" }
			] uint32 ghost_type;
};
		
[dynamic: ToInstance, Description("A task packet is dequeued and processed"): Amended,
    Guid("{c9c40977-438c-4244-b015-f94b0a16161f}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_task_process_packet"): Amended]
class XeSqlPkg_ghost_cleanup_task_process_packet: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_task_process_packet: XeSqlPkg_ghost_cleanup_task_process_packet
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, 
				XEMapId(179),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"DATABASE", 
					"DATABASE_INTERNAL", 
					"PAGE" }
			] uint32 ghost_type;
};
		
[dynamic: ToInstance, Description("Purge the pages that contain ghost records found in a database"): Amended,
    Guid("{98462fed-2bb0-4241-ab68-2920a09815fd}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_task_process_pages_for_db_packet"): Amended]
class XeSqlPkg_ghost_cleanup_task_process_pages_for_db_packet: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_task_process_pages_for_db_packet: XeSqlPkg_ghost_cleanup_task_process_pages_for_db_packet
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 first_ghost_page_file_id;
	[WmiDataId(7), read] uint32 first_ghost_page_page_id;
	[WmiDataId(8), read] uint16 last_ghost_page_file_id;
	[WmiDataId(9), read] uint32 last_ghost_page_page_id;
	[WmiDataId(10), read] uint32 ghost_page_count;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{003D090F-6FF2-434C-9658-31678CA49EB6}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_stats_pages_fully_cleaned"): Amended]
class XeSqlPkg_ghost_cleanup_stats_pages_fully_cleaned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_stats_pages_fully_cleaned: XeSqlPkg_ghost_cleanup_stats_pages_fully_cleaned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 pagesProcessed;
	[WmiDataId(6), read] uint64 pagesEmptyAfterClean;
	[WmiDataId(7), read] uint64 pagesEmptyRemovedTotal;
	[WmiDataId(8), read] uint64 pagesEmptyNotRemovedChangedInBtree;
	[WmiDataId(9), read] uint64 pagesEmptyNotRemovedLastGhostNotRemovable;
	[WmiDataId(10), read] uint64 pagesEmptyNotRemovedTopOfBtree;
	[WmiDataId(11), read] uint64 pagesEmptyNotRemovedLocks;
	[WmiDataId(12), read] uint64 recordsTotal;
	[WmiDataId(13), read] uint64 recordsCleaned;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{BD9ABE57-D3F0-4F81-A9D0-B601C12A1245}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_stats_pages_partially_cleaned"): Amended]
class XeSqlPkg_ghost_cleanup_stats_pages_partially_cleaned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_stats_pages_partially_cleaned: XeSqlPkg_ghost_cleanup_stats_pages_partially_cleaned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 pagesProcessed;
	[WmiDataId(6), read] uint64 pagesEmptyAfterClean;
	[WmiDataId(7), read] uint64 pagesEmptyRemovedAfterClean;
	[WmiDataId(8), read] uint64 recordsTotal;
	[WmiDataId(9), read] uint64 recordsCleaned;
	[WmiDataId(10), read] uint64 recordsSkippedUnknown;
	[WmiDataId(11), read] uint64 recordsSkippedLocks;
	[WmiDataId(12), read] uint64 recordsSkippedLowWatermark;
	[WmiDataId(13), read] uint64 recordsSkippedMinUsefulXts;
	[WmiDataId(14), read] uint64 recordsSkippedAfterOldestSnapshot;
	[WmiDataId(15), read] uint64 recordsSkippedEntirePageSkipped;
	[WmiDataId(16), read] uint64 recordsSkippedPageNotAllocated;
	[WmiDataId(17), read] uint64 recordsSkippedDam;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{9541CE59-4C51-4AC5-909E-7B3A8CDF125F}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_stats_pages_skipped"): Amended]
class XeSqlPkg_ghost_cleanup_stats_pages_skipped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_stats_pages_skipped: XeSqlPkg_ghost_cleanup_stats_pages_skipped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 pagesSkippedUnknown;
	[WmiDataId(6), read] uint64 pagesSkippedLocks;
	[WmiDataId(7), read] uint64 pagesSkippedNoGhostRecords;
	[WmiDataId(8), read] uint64 pagesSkippedNotPartOfHobt;
	[WmiDataId(9), read] uint64 pagesSkippedTopOfBtree;
	[WmiDataId(10), read] uint64 pagesSkippedChangedInBtree;
	[WmiDataId(11), read] uint64 pagesSkippedLastGhostNotRemovable;
	[WmiDataId(12), read] uint64 pagesSkippedSlotInvalid;
	[WmiDataId(13), read] uint64 recordsTotal;
	[WmiDataId(14), read] uint64 recordsSkippedUnknown;
	[WmiDataId(15), read] uint64 recordsSkippedLocks;
	[WmiDataId(16), read] uint64 recordsSkippedLowWatermark;
	[WmiDataId(17), read] uint64 recordsSkippedMinUsefulXts;
	[WmiDataId(18), read] uint64 recordsSkippedAfterOldestSnapshot;
	[WmiDataId(19), read] uint64 recordsSkippedPageNotAllocated;
	[WmiDataId(20), read] uint64 recordsSkippedDam;
};
		
[dynamic: ToInstance, Description("Stats during init of lock manager"): Amended,
    Guid("{bc5e0ab2-f37a-4265-9016-bc4eb7659444}"), locale("MS\\0x409"),
    DisplayName("lock_manager_init"): Amended]
class XeSqlPkg_lock_manager_init: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_manager_init: XeSqlPkg_lock_manager_init
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 num_initial_locks_per_node;
	[WmiDataId(6), read] uint64 time_to_allocate_initial_locks_sec;
	[WmiDataId(7), read] uint64 total_memory_mb;
	[WmiDataId(8), read] uint32 num_numa_nodes;
};
		
[dynamic: ToInstance, Description("Lock acquired"): Amended,
    Guid("{6D74001D-F4F9-425E-9DAE-7706FD43F980}"), locale("MS\\0x409"),
    DisplayName("lock_acquired"): Amended]
class XeSqlPkg_lock_acquired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_acquired: XeSqlPkg_lock_acquired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint16 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
};
		
[dynamic: ToInstance, Description("Occurs when a lock is acquired on an object. Use this event to troubleshoot data contention issues that are caused by locks that are being held for long periods of time."): Amended,
    Guid("{6D74001D-F4F9-425E-9DAE-7706FD43F980}"), locale("MS\\0x409"),
    DisplayName("lock_acquired"): Amended]
class XeSqlPkg_lock_acquired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class lock_acquired: XeSqlPkg_lock_acquired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a lock on an object has been released. Use this troubleshoot data contention issues that are caused by locks being held for long periods of time"): Amended,
    Guid("{A322A468-9B93-4D39-A1ED-ACE193C51A8A}"), locale("MS\\0x409"),
    DisplayName("lock_released"): Amended]
class XeSqlPkg_lock_released: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_released: XeSqlPkg_lock_released
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint16 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
};
		
[dynamic: ToInstance, Description("Occurs when a lock is released on an object."): Amended,
    Guid("{A322A468-9B93-4D39-A1ED-ACE193C51A8A}"), locale("MS\\0x409"),
    DisplayName("lock_released"): Amended]
class XeSqlPkg_lock_released: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class lock_released: XeSqlPkg_lock_released
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Deadlock"): Amended,
    Guid("{AA54BE9B-8D6B-4254-A9E6-D60E5100224A}"), locale("MS\\0x409"),
    DisplayName("lock_deadlock"): Amended]
class XeSqlPkg_lock_deadlock: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_deadlock: XeSqlPkg_lock_deadlock
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint16 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] uint32 deadlock_id;
};
		
[dynamic: ToInstance, Description("Occurs when an attempt to acquire a lock is canceled for the victim of a deadlock."): Amended,
    Guid("{AA54BE9B-8D6B-4254-A9E6-D60E5100224A}"), locale("MS\\0x409"),
    DisplayName("lock_deadlock"): Amended]
class XeSqlPkg_lock_deadlock: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class lock_deadlock: XeSqlPkg_lock_deadlock
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] uint32 deadlock_id;
	[WmiDataId(17), read] sint32 object_id;
	[WmiDataId(18), read] uint64 associated_object_id;
	[WmiDataId(19), read] uint64 duration;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when the redo thread blocks when trying to acquire a lock."): Amended,
    Guid("{41CC48BB-CA81-4FFF-9A2B-5579C7D3FCDC}"), locale("MS\\0x409"),
    DisplayName("lock_redo_blocked"): Amended]
class XeSqlPkg_lock_redo_blocked: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_redo_blocked: XeSqlPkg_lock_redo_blocked
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when the redo thread blocks when trying to acquire a lock."): Amended,
    Guid("{1402F906-DDE4-4c1e-B39A-7E3BF8622F05}"), locale("MS\\0x409"),
    DisplayName("lock_redo_unblocked"): Amended]
class XeSqlPkg_lock_redo_unblocked: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_redo_unblocked: XeSqlPkg_lock_redo_unblocked
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Stats about lock skip optimization for completed transactions."): Amended,
    Guid("{E182A8C1-53D1-4757-A308-10B8AB14D501}"), locale("MS\\0x409"),
    DisplayName("redo_lock_completed_transaction_optimization_stats"): Amended]
class XeSqlPkg_redo_lock_completed_transaction_optimization_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_lock_completed_transaction_optimization_stats: XeSqlPkg_redo_lock_completed_transaction_optimization_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 total_locks;
	[WmiDataId(6), read] uint32 skipped_locks;
	[WmiDataId(7), read] uint32 max_potential_skipped_locks;
	[WmiDataId(8), read] real64 lock_skip_efficiency;
	[WmiDataId(9), read] real64 max_achievable_lock_skip_efficiency;
};
		
[dynamic: ToInstance, Description("Occurs when a DB lock is acquired from the XactWorkspace DB lock cache."): Amended,
    Guid("{f5fa1413-c345-4020-a197-e4cbaba50e6d}"), locale("MS\\0x409"),
    DisplayName("db_lock_acquired_from_cache"): Amended]
class XeSqlPkg_db_lock_acquired_from_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class db_lock_acquired_from_cache: XeSqlPkg_db_lock_acquired_from_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 ref_count_total;
	[WmiDataId(7), read, 
				XEMapId(175),
				ValueMap { 
					"59", 
					"16", 
					"17", 
					"30", 
					"25", 
					"20", 
					"4", 
					"28", 
					"79", 
					"21", 
					"45", 
					"46", 
					"7", 
					"34", 
					"35", 
					"40", 
					"43", 
					"38", 
					"37", 
					"47", 
					"42", 
					"48", 
					"41", 
					"44", 
					"36", 
					"39", 
					"18", 
					"66", 
					"78", 
					"24", 
					"52", 
					"15", 
					"12", 
					"77", 
					"61", 
					"6", 
					"56", 
					"69", 
					"68", 
					"8", 
					"13", 
					"14", 
					"55", 
					"50", 
					"76", 
					"62", 
					"49", 
					"58", 
					"33", 
					"63", 
					"67", 
					"27", 
					"70", 
					"26", 
					"73", 
					"0", 
					"1", 
					"22", 
					"11", 
					"54", 
					"71", 
					"60", 
					"51", 
					"75", 
					"5", 
					"72", 
					"19", 
					"9", 
					"64", 
					"23", 
					"10", 
					"3", 
					"74", 
					"65", 
					"2", 
					"29", 
					"31", 
					"32", 
					"57", 
					"53" },
				Values { 
					"edbrtAddBrick", 
					"edbrtAutoDb", 
					"edbrtAutoDbLock", 
					"edbrtAutoEnlistXactForRPC", 
					"edbrtAutoOpen", 
					"edbrtBackup", 
					"edbrtCheckPoint", 
					"edbrtCloseall", 
					"edbrtCount", 
					"edbrtCreateDB", 
					"edbrtDbccLock", 
					"edbrtDbccRecover", 
					"edbrtDBDeAlloc", 
					"edbrtDbMgr", 
					"edbrtDbMgrAttachDB", 
					"edbrtDbMgrChangeDBName", 
					"edbrtDbMgrChangeDBState", 
					"edbrtDbMgrCreateFile", 
					"edbrtDbMgrDetachDB", 
					"edbrtDbMgrDropDB", 
					"edbrtDbMgrProcessTskPkt", 
					"edbrtDbMgrRebuildLog", 
					"edbrtDbMgrRecollateDB", 
					"edbrtDbMgrShutdown", 
					"edbrtDbMgrSnapshot", 
					"edbrtDbMgrStartTmpDB", 
					"edbrtDbSetOpts", 
					"edbrtDeletePartitionDB", 
					"edbrtDeltaMigration", 
					"edbrtDownlevelFsGC", 
					"edbrtDownlevelFsLogTrunc", 
					"edbrtExecLevel", 
					"edbrtFederatedAGEPersist", 
					"edbrtFidoGLMSUseDb", 
					"edbrtFileTable", 
					"edbrtGhost", 
					"edbrtHadrDbMgr", 
					"edbrtHkRefreshFile", 
					"edbrtHkStorageCleanup", 
					"edbrtHobStats", 
					"edbrtLckMgr", 
					"edbrtLoginLogout", 
					"edbrtLogMgrTest", 
					"edbrtLogshipping", 
					"edbrtLookupPageSnapshots", 
					"edbrtLPM", 
					"edbrtMeddata", 
					"edbrtMetadataDiscovery", 
					"edbrtOpenUnstartedDB", 
					"edbrtPairing", 
					"edbrtPartitionDBRecovery", 
					"edbrtProducer", 
					"edbrtQdsDb", 
					"edbrtQNTest", 
					"edbrtRbpex", 
					"edbrtReadOnlyXdes", 
					"edbrtReadWriteXdes", 
					"edbrtRecovery", 
					"edbrtReencryptionScan", 
					"edbrtReplaceDb", 
					"edbrtReplacePartitionDb", 
					"edbrtReserveId", 
					"edbrtRestorFromReplica", 
					"edbrtRollBackPageServer", 
					"edbrtRPCRowset", 
					"edbrtSbsStorage", 
					"edbrtSecurity", 
					"edbrtSEDDL", 
					"edbrtSetPartition", 
					"edbrtSqlSrcDbMgr", 
					"edbrtStartup", 
					"edbrtSystem", 
					"edbrtTieredStorageMigrationScan", 
					"edbrtTrackingTableCleanup", 
					"edbrtTransfer", 
					"edbrtTransientReplica", 
					"edbrtVirtFileStats", 
					"edbrtWorkfile", 
					"edbrtXdesTsVerMgrUpdate", 
					"eSSBQueueMonitor" }
			] uint32 ref_type;
	[WmiDataId(8), read] uint32 ref_type_count;
};
		
[dynamic: ToInstance, Description("Occurs when a DB lock is released from the XactWorkspace DB lock cache."): Amended,
    Guid("{cf1638dd-ed1a-4c60-b18a-57740eb29d25}"), locale("MS\\0x409"),
    DisplayName("db_lock_released_from_cache"): Amended]
class XeSqlPkg_db_lock_released_from_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class db_lock_released_from_cache: XeSqlPkg_db_lock_released_from_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 ref_count_total;
	[WmiDataId(7), read, 
				XEMapId(175),
				ValueMap { 
					"59", 
					"16", 
					"17", 
					"30", 
					"25", 
					"20", 
					"4", 
					"28", 
					"79", 
					"21", 
					"45", 
					"46", 
					"7", 
					"34", 
					"35", 
					"40", 
					"43", 
					"38", 
					"37", 
					"47", 
					"42", 
					"48", 
					"41", 
					"44", 
					"36", 
					"39", 
					"18", 
					"66", 
					"78", 
					"24", 
					"52", 
					"15", 
					"12", 
					"77", 
					"61", 
					"6", 
					"56", 
					"69", 
					"68", 
					"8", 
					"13", 
					"14", 
					"55", 
					"50", 
					"76", 
					"62", 
					"49", 
					"58", 
					"33", 
					"63", 
					"67", 
					"27", 
					"70", 
					"26", 
					"73", 
					"0", 
					"1", 
					"22", 
					"11", 
					"54", 
					"71", 
					"60", 
					"51", 
					"75", 
					"5", 
					"72", 
					"19", 
					"9", 
					"64", 
					"23", 
					"10", 
					"3", 
					"74", 
					"65", 
					"2", 
					"29", 
					"31", 
					"32", 
					"57", 
					"53" },
				Values { 
					"edbrtAddBrick", 
					"edbrtAutoDb", 
					"edbrtAutoDbLock", 
					"edbrtAutoEnlistXactForRPC", 
					"edbrtAutoOpen", 
					"edbrtBackup", 
					"edbrtCheckPoint", 
					"edbrtCloseall", 
					"edbrtCount", 
					"edbrtCreateDB", 
					"edbrtDbccLock", 
					"edbrtDbccRecover", 
					"edbrtDBDeAlloc", 
					"edbrtDbMgr", 
					"edbrtDbMgrAttachDB", 
					"edbrtDbMgrChangeDBName", 
					"edbrtDbMgrChangeDBState", 
					"edbrtDbMgrCreateFile", 
					"edbrtDbMgrDetachDB", 
					"edbrtDbMgrDropDB", 
					"edbrtDbMgrProcessTskPkt", 
					"edbrtDbMgrRebuildLog", 
					"edbrtDbMgrRecollateDB", 
					"edbrtDbMgrShutdown", 
					"edbrtDbMgrSnapshot", 
					"edbrtDbMgrStartTmpDB", 
					"edbrtDbSetOpts", 
					"edbrtDeletePartitionDB", 
					"edbrtDeltaMigration", 
					"edbrtDownlevelFsGC", 
					"edbrtDownlevelFsLogTrunc", 
					"edbrtExecLevel", 
					"edbrtFederatedAGEPersist", 
					"edbrtFidoGLMSUseDb", 
					"edbrtFileTable", 
					"edbrtGhost", 
					"edbrtHadrDbMgr", 
					"edbrtHkRefreshFile", 
					"edbrtHkStorageCleanup", 
					"edbrtHobStats", 
					"edbrtLckMgr", 
					"edbrtLoginLogout", 
					"edbrtLogMgrTest", 
					"edbrtLogshipping", 
					"edbrtLookupPageSnapshots", 
					"edbrtLPM", 
					"edbrtMeddata", 
					"edbrtMetadataDiscovery", 
					"edbrtOpenUnstartedDB", 
					"edbrtPairing", 
					"edbrtPartitionDBRecovery", 
					"edbrtProducer", 
					"edbrtQdsDb", 
					"edbrtQNTest", 
					"edbrtRbpex", 
					"edbrtReadOnlyXdes", 
					"edbrtReadWriteXdes", 
					"edbrtRecovery", 
					"edbrtReencryptionScan", 
					"edbrtReplaceDb", 
					"edbrtReplacePartitionDb", 
					"edbrtReserveId", 
					"edbrtRestorFromReplica", 
					"edbrtRollBackPageServer", 
					"edbrtRPCRowset", 
					"edbrtSbsStorage", 
					"edbrtSecurity", 
					"edbrtSEDDL", 
					"edbrtSetPartition", 
					"edbrtSqlSrcDbMgr", 
					"edbrtStartup", 
					"edbrtSystem", 
					"edbrtTieredStorageMigrationScan", 
					"edbrtTrackingTableCleanup", 
					"edbrtTransfer", 
					"edbrtTransientReplica", 
					"edbrtVirtFileStats", 
					"edbrtWorkfile", 
					"edbrtXdesTsVerMgrUpdate", 
					"eSSBQueueMonitor" }
			] uint32 ref_type;
	[WmiDataId(8), read] uint32 ref_type_count;
};
		
[dynamic: ToInstance, Description("Page split"): Amended,
    Guid("{047E111F-37A7-4C67-8155-898AF079F483}"), locale("MS\\0x409"),
    DisplayName("page_split"): Amended]
class XeSqlPkg_page_split: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_split: XeSqlPkg_page_split
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Page split"): Amended,
    Guid("{047E111F-37A7-4C67-8155-898AF079F483}"), locale("MS\\0x409"),
    DisplayName("page_split"): Amended]
class XeSqlPkg_page_split: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class page_split: XeSqlPkg_page_split
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint64 rowset_id;
	[WmiDataId(9), read, 
				XEMapId(122),
				ValueMap { 
					"6", 
					"2", 
					"1", 
					"0", 
					"4", 
					"7", 
					"5", 
					"3" },
				Values { 
					"SPLIT_EMPTY_BTREE", 
					"SPLIT_FOR_DELETE", 
					"SPLIT_FOR_GHOST", 
					"SPLIT_FOR_INSERT", 
					"SPLIT_FOR_INTERNAL_NODE", 
					"SPLIT_FOR_REVERT", 
					"SPLIT_FOR_ROOT_NODE", 
					"SPLIT_FOR_UPDATE" }
			] uint8 splitOperation;
	[WmiDataId(10), read] uint16 new_page_file_id;
	[WmiDataId(11), read] uint32 new_page_page_id;
};
		
[dynamic: ToInstance, Description("Splitters that did not split because another concurrent transaction has already did the split"): Amended,
    Guid("{701859B4-33C3-4D49-AB22-5FDA6D110C81}"), locale("MS\\0x409"),
    DisplayName("page_split_skipped"): Amended]
class XeSqlPkg_page_split_skipped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_split_skipped: XeSqlPkg_page_split_skipped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint64 rowset_id;
};
		
[dynamic: ToInstance, Description("Physical page read"): Amended,
    Guid("{34EF6F7C-F15D-40A1-B399-14DE8806E143}"), locale("MS\\0x409"),
    DisplayName("physical_page_read"): Amended]
class XeSqlPkg_physical_page_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class physical_page_read: XeSqlPkg_physical_page_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Physical page write"): Amended,
    Guid("{36622C34-95B0-42EC-B9C2-145257EADC46}"), locale("MS\\0x409"),
    DisplayName("physical_page_write"): Amended]
class XeSqlPkg_physical_page_write: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class physical_page_write: XeSqlPkg_physical_page_write
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Latch suspend begin"): Amended,
    Guid("{f0bdd0b0-cccb-493f-bf94-9a9643e0c983}"), locale("MS\\0x409"),
    DisplayName("latch_suspend_begin"): Amended]
class XeSqlPkg_latch_suspend_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_suspend_begin: XeSqlPkg_latch_suspend_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(82),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] uint32 timeout;
};
		
[dynamic: ToInstance, Description("Occurs when a the executing task must suspend while waiting for a latch to become available in the requested mode."): Amended,
    Guid("{f0bdd0b0-cccb-493f-bf94-9a9643e0c983}"), locale("MS\\0x409"),
    DisplayName("latch_suspend_begin"): Amended]
class XeSqlPkg_latch_suspend_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_suspend_begin: XeSqlPkg_latch_suspend_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(82),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] uint32 timeout;
	[WmiDataId(17), read] uint32 database_id;
	[WmiDataId(18), read] uint16 file_id;
	[WmiDataId(19), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Latch suspend end"): Amended,
    Guid("{881a763a-0da3-4b79-a9ed-050f6efb0745}"), locale("MS\\0x409"),
    DisplayName("latch_suspend_end"): Amended]
class XeSqlPkg_latch_suspend_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_suspend_end: XeSqlPkg_latch_suspend_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(82),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] sint8  success;
};
		
[dynamic: ToInstance, Description("Occurs when the executing task is resumed after waiting for a latch."): Amended,
    Guid("{881a763a-0da3-4b79-a9ed-050f6efb0745}"), locale("MS\\0x409"),
    DisplayName("latch_suspend_end"): Amended]
class XeSqlPkg_latch_suspend_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_suspend_end: XeSqlPkg_latch_suspend_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(82),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] sint8  success;
	[WmiDataId(17), read] uint64 duration;
	[WmiDataId(18), read] uint32 database_id;
	[WmiDataId(19), read] uint16 file_id;
	[WmiDataId(20), read] uint32 page_id;
	[WmiDataId(21), read] uint64 page_alloc_unit_id;
	[WmiDataId(22), read, 
				XEMapId(78),
				ValueMap { 
					"13", 
					"20", 
					"1", 
					"18", 
					"16", 
					"100", 
					"101", 
					"21", 
					"15", 
					"8", 
					"10", 
					"2", 
					"17", 
					"11", 
					"9", 
					"7", 
					"14", 
					"3", 
					"4", 
					"102", 
					"255", 
					"19", 
					"5", 
					"6" },
				Values { 
					"BOOT_PAGE", 
					"BULK_OPERATION_PAGE", 
					"DATA_PAGE", 
					"DBCC_FORMATTED_PAGE", 
					"DIFF_MAP_PAGE", 
					"DUMP_HEADER_PAGE", 
					"DUMP_TRAILER_PAGE", 
					"ENCRYPT_UNALLOC_PAGE", 
					"FILEHEADER_PAGE", 
					"GAM_PAGE", 
					"IAM_PAGE", 
					"INDEX_PAGE", 
					"ML_MAP_PAGE", 
					"PFS_PAGE", 
					"SGAM_PAGE", 
					"SORT_PAGE", 
					"SYSCONFIG_PAGE", 
					"TEXT_MIX_PAGE", 
					"TEXT_TREE_PAGE", 
					"UNDOFILE_HEADER_PAGE", 
					"UNKNOWN_PAGE", 
					"UNLINKED_REORG_PAGE", 
					"UNUSED_1", 
					"WF_PAGE" }
			] uint8 page_type_id;
};
		
[dynamic: ToInstance, Description("Occurs when there is a timeout waiting for a latch possibly causing performance problems."): Amended,
    Guid("{d162c148-dedd-47bd-ad53-81e0b2a7d570}"), locale("MS\\0x409"),
    DisplayName("latch_suspend_warning"): Amended]
class XeSqlPkg_latch_suspend_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_suspend_warning: XeSqlPkg_latch_suspend_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(82),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] uint64 duration;
	[WmiDataId(17), read] uint32 database_id;
	[WmiDataId(18), read] uint16 file_id;
	[WmiDataId(19), read] uint32 page_id;
	[WmiDataId(20), read, Pointer] object  task_owner;
	[WmiDataId(21), read] sint8  continue_wait;
	[WmiDataId(22), read, StringTermination("NullTerminated")] string task_owner_callstack;
};
		
[dynamic: ToInstance, Description("Latch promotion"): Amended,
    Guid("{beeec925-7ba5-4feb-a242-d642c3b4bd1f}"), locale("MS\\0x409"),
    DisplayName("latch_promoted"): Amended]
class XeSqlPkg_latch_promoted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_promoted: XeSqlPkg_latch_promoted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(7), read] uint32 keep_count;
	[WmiDataId(8), read] uint32 shared_count;
	[WmiDataId(9), read] uint32 update_count;
	[WmiDataId(10), read] uint32 exclusive_count;
	[WmiDataId(11), read] uint32 destroy_count;
	[WmiDataId(12), read] sint8  has_waiters;
	[WmiDataId(13), read] sint8  is_superlatch;
	[WmiDataId(14), read] sint8  is_poisoned;
};
		
[dynamic: ToInstance, Description("Occurs when a latch is promoted to a super latch."): Amended,
    Guid("{beeec925-7ba5-4feb-a242-d642c3b4bd1f}"), locale("MS\\0x409"),
    DisplayName("latch_promoted"): Amended]
class XeSqlPkg_latch_promoted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_promoted: XeSqlPkg_latch_promoted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(7), read] uint32 keep_count;
	[WmiDataId(8), read] uint32 shared_count;
	[WmiDataId(9), read] uint32 update_count;
	[WmiDataId(10), read] uint32 exclusive_count;
	[WmiDataId(11), read] uint32 destroy_count;
	[WmiDataId(12), read] sint8  has_waiters;
	[WmiDataId(13), read] sint8  is_superlatch;
	[WmiDataId(14), read] sint8  is_poisoned;
	[WmiDataId(15), read] uint32 database_id;
	[WmiDataId(16), read] uint16 file_id;
	[WmiDataId(17), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Latch demotion"): Amended,
    Guid("{cd8ca5c3-a82e-4326-9a4e-e4db6d3e24d1}"), locale("MS\\0x409"),
    DisplayName("latch_demoted"): Amended]
class XeSqlPkg_latch_demoted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_demoted: XeSqlPkg_latch_demoted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(7), read] uint32 keep_count;
	[WmiDataId(8), read] uint32 shared_count;
	[WmiDataId(9), read] uint32 update_count;
	[WmiDataId(10), read] uint32 exclusive_count;
	[WmiDataId(11), read] uint32 destroy_count;
	[WmiDataId(12), read] sint8  has_waiters;
	[WmiDataId(13), read] sint8  is_superlatch;
	[WmiDataId(14), read] sint8  is_poisoned;
};
		
[dynamic: ToInstance, Description("Occurs when a super latch is demoted to an ordinary latch."): Amended,
    Guid("{cd8ca5c3-a82e-4326-9a4e-e4db6d3e24d1}"), locale("MS\\0x409"),
    DisplayName("latch_demoted"): Amended]
class XeSqlPkg_latch_demoted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_demoted: XeSqlPkg_latch_demoted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(84),
				ValueMap { 
					"129", 
					"153", 
					"143", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"128", 
					"17", 
					"16", 
					"19", 
					"18", 
					"158", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"163", 
					"28", 
					"7", 
					"177", 
					"176", 
					"178", 
					"136", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"151", 
					"152", 
					"165", 
					"160", 
					"147", 
					"170", 
					"159", 
					"182", 
					"148", 
					"149", 
					"150", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"122", 
					"123", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"179", 
					"46", 
					"47", 
					"48", 
					"174", 
					"173", 
					"118", 
					"50", 
					"49", 
					"113", 
					"144", 
					"145", 
					"54", 
					"138", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"127", 
					"146", 
					"154", 
					"181", 
					"155", 
					"157", 
					"3", 
					"6", 
					"4", 
					"2", 
					"156", 
					"5", 
					"73", 
					"124", 
					"183", 
					"55", 
					"139", 
					"141", 
					"142", 
					"172", 
					"116", 
					"168", 
					"171", 
					"166", 
					"167", 
					"76", 
					"175", 
					"114", 
					"180", 
					"134", 
					"126", 
					"125", 
					"132", 
					"131", 
					"77", 
					"130", 
					"78", 
					"135", 
					"133", 
					"137", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"164", 
					"119", 
					"140", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"169", 
					"112", 
					"162", 
					"161", 
					"120", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BLOB_ACCESS_LEASE_RENEWAL", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"BULK_INSERT_BUCKETIZATION_CELL", 
					"BULK_INSERT_BUCKETIZATION_INFO", 
					"BULK_INSERT_WORKTABLE_POOL", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_DELETE_BUFFERS", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_REMOTE_BLOB", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CORRUPTED_PAGE_LIST", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FAST_STRING_EQUALS_MAP", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FIDO_LOCK_INFO", 
					"FIDO_SESSION", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_PRIMARY_SYNC_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DATABASE", 
					"NOTIFY_DROP_DATABASE", 
					"PVS_ADD_RECORD", 
					"PVS_GET_RECORD", 
					"QUERY_STORE_ACCESS_CACHE", 
					"RBIO_REQUEST", 
					"RECOVERY_MANAGER", 
					"REPL_ARTICLE_CACHE", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_AAD_INIT", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYNC_DBTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"WPR_BUCKET_ACCESS", 
					"XACTWORKSPACEMGR", 
					"XSTORE_CREDENTIAL", 
					"XSTORE_CREDENTIAL_MANAGER", 
					"XVB", 
					"XVB_CHAIN" }
			] uint32 class0;
	[WmiDataId(7), read] uint32 keep_count;
	[WmiDataId(8), read] uint32 shared_count;
	[WmiDataId(9), read] uint32 update_count;
	[WmiDataId(10), read] uint32 exclusive_count;
	[WmiDataId(11), read] uint32 destroy_count;
	[WmiDataId(12), read] sint8  has_waiters;
	[WmiDataId(13), read] sint8  is_superlatch;
	[WmiDataId(14), read] sint8  is_poisoned;
	[WmiDataId(15), read] uint32 database_id;
	[WmiDataId(16), read] uint16 file_id;
	[WmiDataId(17), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("FlushFileBuffers called"): Amended,
    Guid("{bff5b15e-7314-4029-b27f-a10c21ac6b2e}"), locale("MS\\0x409"),
    DisplayName("flush_file_buffers"): Amended]
class XeSqlPkg_flush_file_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class flush_file_buffers: XeSqlPkg_flush_file_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  file_handle;
	[WmiDataId(6), read] sint8  succeeded;
};
		
[dynamic: ToInstance, Description("Allow FlushFileBuffers instead of FILE_FLAG_WRITE_THROUGH behavior for file"): Amended,
    Guid("{28f8df9f-99b6-44c2-8011-2806c7005e69}"), locale("MS\\0x409"),
    DisplayName("flush_file_buffers_enabled"): Amended]
class XeSqlPkg_flush_file_buffers_enabled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class flush_file_buffers_enabled: XeSqlPkg_flush_file_buffers_enabled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string file_name;
};
		
[dynamic: ToInstance, Description("Making previous write request ACI(D) durable"): Amended,
    Guid("{A2D2DF09-31B6-4B9D-A803-37715141F072}"), locale("MS\\0x409"),
    DisplayName("make_writes_durable"): Amended]
class XeSqlPkg_make_writes_durable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class make_writes_durable: XeSqlPkg_make_writes_durable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string file_name;
};
		
[dynamic: ToInstance, Description("File read"): Amended,
    Guid("{521d231a-85c1-4791-8c35-4c5c0f51d0c0}"), locale("MS\\0x409"),
    DisplayName("file_read"): Amended]
class XeSqlPkg_file_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_read: XeSqlPkg_file_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint16 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 file_group_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("File read"): Amended,
    Guid("{521d231a-85c1-4791-8c35-4c5c0f51d0c0}"), locale("MS\\0x409"),
    DisplayName("file_read"): Amended]
class XeSqlPkg_file_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_read: XeSqlPkg_file_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("File read enqueued"): Amended,
    Guid("{9785c953-b648-4d45-9ffa-47a99528d93d}"), locale("MS\\0x409"),
    DisplayName("file_read_enqueued"): Amended]
class XeSqlPkg_file_read_enqueued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_read_enqueued: XeSqlPkg_file_read_enqueued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("File read throttled"): Amended,
    Guid("{84d65c13-5a5e-4e6a-8717-7e07edf06796}"), locale("MS\\0x409"),
    DisplayName("file_read_throttled"): Amended]
class XeSqlPkg_file_read_throttled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_read_throttled: XeSqlPkg_file_read_throttled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read] sint8  is_volume_limit_hit;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("File read throttled"): Amended,
    Guid("{84d65c13-5a5e-4e6a-8717-7e07edf06796}"), locale("MS\\0x409"),
    DisplayName("file_read_throttled"): Amended]
class XeSqlPkg_file_read_throttled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_read_throttled: XeSqlPkg_file_read_throttled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read] sint8  is_volume_limit_hit;
	[WmiDataId(13), read] sint8  is_reserved_io;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("File written"): Amended,
    Guid("{9f72e2fb-2874-4fa2-b348-6862bc6fb41c}"), locale("MS\\0x409"),
    DisplayName("file_written"): Amended]
class XeSqlPkg_file_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_written: XeSqlPkg_file_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint16 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 file_group_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(12), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File written"): Amended,
    Guid("{9f72e2fb-2874-4fa2-b348-6862bc6fb41c}"), locale("MS\\0x409"),
    DisplayName("file_written"): Amended]
class XeSqlPkg_file_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_written: XeSqlPkg_file_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(13), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File write enqueued"): Amended,
    Guid("{82e88b5c-24af-4e2d-bdbc-edc773c1b66f}"), locale("MS\\0x409"),
    DisplayName("file_write_enqueued"): Amended]
class XeSqlPkg_file_write_enqueued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_write_enqueued: XeSqlPkg_file_write_enqueued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(13), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File write throttled"): Amended,
    Guid("{89cf4039-1e55-4ddf-99fd-2aba89ec2777}"), locale("MS\\0x409"),
    DisplayName("file_write_throttled"): Amended]
class XeSqlPkg_file_write_throttled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_write_throttled: XeSqlPkg_file_write_throttled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read] sint8  is_volume_limit_hit;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(14), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File write throttled"): Amended,
    Guid("{89cf4039-1e55-4ddf-99fd-2aba89ec2777}"), locale("MS\\0x409"),
    DisplayName("file_write_throttled"): Amended]
class XeSqlPkg_file_write_throttled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_write_throttled: XeSqlPkg_file_write_throttled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read] sint8  is_volume_limit_hit;
	[WmiDataId(13), read] sint8  is_reserved_io;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(15), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("Tracking metadata change which may affect query performance."): Amended,
    Guid("{B928E743-189D-4FCE-BE9C-360B604AD67C}"), locale("MS\\0x409"),
    DisplayName("metadata_change"): Amended]
class XeSqlPkg_metadata_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_change: XeSqlPkg_metadata_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(219),
				ValueMap { 
					"3", 
					"30", 
					"99", 
					"26", 
					"24", 
					"25", 
					"29", 
					"101", 
					"33", 
					"17", 
					"11", 
					"39", 
					"60", 
					"64", 
					"21", 
					"9", 
					"1", 
					"5", 
					"98", 
					"89", 
					"53", 
					"23", 
					"22", 
					"19", 
					"20", 
					"52", 
					"70", 
					"57", 
					"55", 
					"56", 
					"88", 
					"45", 
					"47", 
					"48", 
					"28", 
					"54", 
					"37", 
					"78", 
					"85", 
					"92", 
					"76", 
					"73", 
					"2", 
					"50", 
					"36", 
					"0", 
					"32", 
					"27", 
					"15", 
					"14", 
					"95", 
					"13", 
					"18", 
					"16", 
					"81", 
					"102", 
					"38", 
					"62", 
					"63", 
					"96", 
					"83", 
					"68", 
					"59", 
					"8", 
					"87", 
					"42", 
					"41", 
					"43", 
					"77", 
					"90", 
					"75", 
					"71", 
					"7", 
					"49", 
					"67", 
					"93", 
					"10", 
					"80", 
					"40", 
					"61", 
					"65", 
					"4", 
					"6", 
					"97", 
					"31", 
					"100", 
					"84", 
					"69", 
					"58", 
					"86", 
					"46", 
					"44", 
					"79", 
					"91", 
					"74", 
					"72", 
					"51", 
					"34", 
					"35", 
					"66", 
					"94", 
					"12", 
					"82" },
				Values { 
					"AddColumns", 
					"AddCSGlobalStrDict", 
					"AddDataRetentionInfo", 
					"AddExprBoundColumn", 
					"AddExprBoundObj", 
					"AddExprSoftObj", 
					"AddModuleParameter", 
					"AddRetentionFilterColumnId", 
					"AddTempHistRetention", 
					"AddXmlIndxDGLob", 
					"AddXmlIndxPath", 
					"AltAsm", 
					"AltAudit", 
					"AltAuditSpec", 
					"AltCheck", 
					"AltColGlobalStrDict", 
					"AltColumn", 
					"AltColumnName", 
					"AltCrypProvider", 
					"AltDB", 
					"AltEdgeConstraint", 
					"AltExpr", 
					"AltExprText", 
					"AltExtIndxAttr", 
					"AltExtIndxName", 
					"AltForeignKey", 
					"AltFTxtStopList", 
					"AltFullTxtCol", 
					"AltFullTxtIndx", 
					"AltFullTxtIndxAttr", 
					"AltGuide", 
					"AltIndex", 
					"AltIndexName", 
					"AltIndxComprDelay", 
					"AltModule", 
					"AltNewConstraint", 
					"AltParameter", 
					"AltPrtFunc", 
					"AltPrtScheme", 
					"AltResPool", 
					"AltSchema", 
					"AltSearchList", 
					"AltSequenceObj", 
					"AltStats", 
					"AltSynonym", 
					"AltTable", 
					"AltTempSysTimePeriod", 
					"AltTrigger", 
					"AltUseSelXmlIndxPathNameId", 
					"AltUseXmlIndx", 
					"AltWLGroup", 
					"AltXmlIndx", 
					"AltXmlIndxDGLob", 
					"AltXmlIndxName", 
					"AltXSDCollect", 
					"Count", 
					"CreateAsm", 
					"CreateAudit", 
					"CreateAuditSpec", 
					"CreateCrypProvider", 
					"CreateDataSpace", 
					"CreateFTxtStopList", 
					"CreateFullTxtIndx", 
					"CreateGraphIdentity", 
					"CreateGuide", 
					"CreateIndx", 
					"CreateObj", 
					"CreateOrderHint", 
					"CreatePrtFunc", 
					"CreateResPool", 
					"CreateSchema", 
					"CreateSearchList", 
					"CreateSequenceObj", 
					"CreateStats", 
					"CreateType", 
					"CreateWLGroup", 
					"CreateXmlIndx", 
					"CreateXSDCollect", 
					"DropAsm", 
					"DropAudit", 
					"DropAuditSpec", 
					"DropColumn", 
					"DropColumnIdentity", 
					"DropCrypProvider", 
					"DropCSGlobalStrDict", 
					"DropDataRetentionInfo", 
					"DropDataSpace", 
					"DropFTxtStopList", 
					"DropFullTxtCol", 
					"DropGuide", 
					"DropIndex", 
					"DropObj", 
					"DropPrtFunc", 
					"DropResPool", 
					"DropSchema", 
					"DropSearchList", 
					"DropStats", 
					"DropTempHistRetention", 
					"DropTempSysTime", 
					"DropType", 
					"DropWLGroup", 
					"DropXmlIndxPath", 
					"DropXSDCollect" }
			] uint8 operation_type;
	[WmiDataId(8), read] uint32 operation_code;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string parent_name;
};
		
[dynamic: ToInstance, Description("Tracking metadata change which may affect query performance."): Amended,
    Guid("{B928E743-189D-4FCE-BE9C-360B604AD67C}"), locale("MS\\0x409"),
    DisplayName("metadata_change"): Amended]
class XeSqlPkg_metadata_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class metadata_change: XeSqlPkg_metadata_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read, 
				XEMapId(219),
				ValueMap { 
					"3", 
					"30", 
					"99", 
					"26", 
					"24", 
					"25", 
					"29", 
					"101", 
					"33", 
					"17", 
					"11", 
					"39", 
					"60", 
					"64", 
					"21", 
					"9", 
					"1", 
					"5", 
					"98", 
					"89", 
					"53", 
					"23", 
					"22", 
					"19", 
					"20", 
					"52", 
					"70", 
					"57", 
					"55", 
					"56", 
					"88", 
					"45", 
					"47", 
					"48", 
					"28", 
					"54", 
					"37", 
					"78", 
					"85", 
					"92", 
					"76", 
					"73", 
					"2", 
					"50", 
					"36", 
					"0", 
					"32", 
					"27", 
					"15", 
					"14", 
					"95", 
					"13", 
					"18", 
					"16", 
					"81", 
					"102", 
					"38", 
					"62", 
					"63", 
					"96", 
					"83", 
					"68", 
					"59", 
					"8", 
					"87", 
					"42", 
					"41", 
					"43", 
					"77", 
					"90", 
					"75", 
					"71", 
					"7", 
					"49", 
					"67", 
					"93", 
					"10", 
					"80", 
					"40", 
					"61", 
					"65", 
					"4", 
					"6", 
					"97", 
					"31", 
					"100", 
					"84", 
					"69", 
					"58", 
					"86", 
					"46", 
					"44", 
					"79", 
					"91", 
					"74", 
					"72", 
					"51", 
					"34", 
					"35", 
					"66", 
					"94", 
					"12", 
					"82" },
				Values { 
					"AddColumns", 
					"AddCSGlobalStrDict", 
					"AddDataRetentionInfo", 
					"AddExprBoundColumn", 
					"AddExprBoundObj", 
					"AddExprSoftObj", 
					"AddModuleParameter", 
					"AddRetentionFilterColumnId", 
					"AddTempHistRetention", 
					"AddXmlIndxDGLob", 
					"AddXmlIndxPath", 
					"AltAsm", 
					"AltAudit", 
					"AltAuditSpec", 
					"AltCheck", 
					"AltColGlobalStrDict", 
					"AltColumn", 
					"AltColumnName", 
					"AltCrypProvider", 
					"AltDB", 
					"AltEdgeConstraint", 
					"AltExpr", 
					"AltExprText", 
					"AltExtIndxAttr", 
					"AltExtIndxName", 
					"AltForeignKey", 
					"AltFTxtStopList", 
					"AltFullTxtCol", 
					"AltFullTxtIndx", 
					"AltFullTxtIndxAttr", 
					"AltGuide", 
					"AltIndex", 
					"AltIndexName", 
					"AltIndxComprDelay", 
					"AltModule", 
					"AltNewConstraint", 
					"AltParameter", 
					"AltPrtFunc", 
					"AltPrtScheme", 
					"AltResPool", 
					"AltSchema", 
					"AltSearchList", 
					"AltSequenceObj", 
					"AltStats", 
					"AltSynonym", 
					"AltTable", 
					"AltTempSysTimePeriod", 
					"AltTrigger", 
					"AltUseSelXmlIndxPathNameId", 
					"AltUseXmlIndx", 
					"AltWLGroup", 
					"AltXmlIndx", 
					"AltXmlIndxDGLob", 
					"AltXmlIndxName", 
					"AltXSDCollect", 
					"Count", 
					"CreateAsm", 
					"CreateAudit", 
					"CreateAuditSpec", 
					"CreateCrypProvider", 
					"CreateDataSpace", 
					"CreateFTxtStopList", 
					"CreateFullTxtIndx", 
					"CreateGraphIdentity", 
					"CreateGuide", 
					"CreateIndx", 
					"CreateObj", 
					"CreateOrderHint", 
					"CreatePrtFunc", 
					"CreateResPool", 
					"CreateSchema", 
					"CreateSearchList", 
					"CreateSequenceObj", 
					"CreateStats", 
					"CreateType", 
					"CreateWLGroup", 
					"CreateXmlIndx", 
					"CreateXSDCollect", 
					"DropAsm", 
					"DropAudit", 
					"DropAuditSpec", 
					"DropColumn", 
					"DropColumnIdentity", 
					"DropCrypProvider", 
					"DropCSGlobalStrDict", 
					"DropDataRetentionInfo", 
					"DropDataSpace", 
					"DropFTxtStopList", 
					"DropFullTxtCol", 
					"DropGuide", 
					"DropIndex", 
					"DropObj", 
					"DropPrtFunc", 
					"DropResPool", 
					"DropSchema", 
					"DropSearchList", 
					"DropStats", 
					"DropTempHistRetention", 
					"DropTempSysTime", 
					"DropType", 
					"DropWLGroup", 
					"DropXmlIndxPath", 
					"DropXSDCollect" }
			] uint8 operation_type;
	[WmiDataId(8), read] uint32 operation_code;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string parent_name;
};
		
[dynamic: ToInstance, Description("Checkpoint has begun"): Amended,
    Guid("{99ca2b70-a594-4250-9ca6-b761a9486fd2}"), locale("MS\\0x409"),
    DisplayName("checkpoint_begin"): Amended]
class XeSqlPkg_checkpoint_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class checkpoint_begin: XeSqlPkg_checkpoint_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Checkpoint has begun"): Amended,
    Guid("{99ca2b70-a594-4250-9ca6-b761a9486fd2}"), locale("MS\\0x409"),
    DisplayName("checkpoint_begin"): Amended]
class XeSqlPkg_checkpoint_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class checkpoint_begin: XeSqlPkg_checkpoint_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 foreign_file_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(9), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Checkpoint has begun"): Amended,
    Guid("{99ca2b70-a594-4250-9ca6-b761a9486fd2}"), locale("MS\\0x409"),
    DisplayName("checkpoint_begin"): Amended]
class XeSqlPkg_checkpoint_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class checkpoint_begin: XeSqlPkg_checkpoint_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Checkpoint has ended"): Amended,
    Guid("{43694edc-2f3b-4e10-b13f-14393f3bd9d6}"), locale("MS\\0x409"),
    DisplayName("checkpoint_end"): Amended]
class XeSqlPkg_checkpoint_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class checkpoint_end: XeSqlPkg_checkpoint_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Checkpoint has ended"): Amended,
    Guid("{43694edc-2f3b-4e10-b13f-14393f3bd9d6}"), locale("MS\\0x409"),
    DisplayName("checkpoint_end"): Amended]
class XeSqlPkg_checkpoint_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class checkpoint_end: XeSqlPkg_checkpoint_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 foreign_file_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(9), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Checkpoint has ended"): Amended,
    Guid("{43694edc-2f3b-4e10-b13f-14393f3bd9d6}"), locale("MS\\0x409"),
    DisplayName("checkpoint_end"): Amended]
class XeSqlPkg_checkpoint_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class checkpoint_end: XeSqlPkg_checkpoint_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Checkpoint has ended"): Amended,
    Guid("{43694edc-2f3b-4e10-b13f-14393f3bd9d6}"), locale("MS\\0x409"),
    DisplayName("checkpoint_end"): Amended]
class XeSqlPkg_checkpoint_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class checkpoint_end: XeSqlPkg_checkpoint_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string checkpoint_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string dirty_page_lsn;
};
		
[dynamic: ToInstance, Description("Occurs during analysis pass of crash recovery."): Amended,
    Guid("{fcc4db16-dafc-492d-9bce-17750207ca92}"), locale("MS\\0x409"),
    DisplayName("analysis_pass_bootpage_info"): Amended]
class XeSqlPkg_analysis_pass_bootpage_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class analysis_pass_bootpage_info: XeSqlPkg_analysis_pass_bootpage_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string checkpoint_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string dirty_page_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string analysis_lsn;
};
		
[dynamic: ToInstance, Description("Allow customizable failures in the HardenAndLogCheckpoint function"): Amended,
    Guid("{438B9C34-BA15-4146-9B33-D7CDF447710C}"), locale("MS\\0x409"),
    DisplayName("checkpoint_failpoint"): Amended]
class XeSqlPkg_checkpoint_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class checkpoint_failpoint: XeSqlPkg_checkpoint_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 fail_location;
};
		
[dynamic: ToInstance, Description("File writes issued to sparse file for replica DB"): Amended,
    Guid("{016B66E5-AD18-4FF4-9445-046F0802DB8D}"), locale("MS\\0x409"),
    DisplayName("file_written_to_replica"): Amended]
class XeSqlPkg_file_written_to_replica: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_written_to_replica: XeSqlPkg_file_written_to_replica
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint16 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 file_group_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(12), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File writes issued to sparse file for replica DB"): Amended,
    Guid("{016B66E5-AD18-4FF4-9445-046F0802DB8D}"), locale("MS\\0x409"),
    DisplayName("file_written_to_replica"): Amended]
class XeSqlPkg_file_written_to_replica: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_written_to_replica: XeSqlPkg_file_written_to_replica
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint16 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(13), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("Evaluate if a database needs a checkpoint. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{523d1894-4148-4910-aef9-ae270c09d478}"), locale("MS\\0x409"),
    DisplayName("recovery_checkpoint_evaluation"): Amended]
class XeSqlPkg_recovery_checkpoint_evaluation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_checkpoint_evaluation: XeSqlPkg_recovery_checkpoint_evaluation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 pie_cpu_slices;
	[WmiDataId(7), read] uint32 pie_data_slices;
	[WmiDataId(8), read] uint32 pie_log_slices;
	[WmiDataId(9), read] sint8  catchup_mode;
	[WmiDataId(10), read] uint64 dirty_page_count;
	[WmiDataId(11), read] uint64 dirty_page_read_time_ms;
	[WmiDataId(12), read] uint64 dirty_page_target_time_ms;
	[WmiDataId(13), read] uint64 recovery_data_read_time_estimate_ms;
	[WmiDataId(14), read] uint64 recovery_log_bytes;
	[WmiDataId(15), read] uint64 recovery_log_read_time_estimate_ms;
	[WmiDataId(16), read] uint64 recovery_log_target_time_ms;
	[WmiDataId(17), read] uint64 recovery_time_estimate_sec;
	[WmiDataId(18), read] uint64 target_recovery_time_sec;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string current_oldest_page_lsn;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string last_checkpoint_lsn;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string last_oldest_page_lsn;
};
		
[dynamic: ToInstance, Description("Target for outstanding data pages has been changed"): Amended,
    Guid("{d3c47ecc-90dd-47e3-ac8b-9911f4e19646}"), locale("MS\\0x409"),
    DisplayName("recovery_target_reset"): Amended]
class XeSqlPkg_recovery_target_reset: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_target_reset: XeSqlPkg_recovery_target_reset
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 new_target_time;
	[WmiDataId(7), read] uint64 dirty_page_read_time;
	[WmiDataId(8), read] uint64 dirty_page_count;
};
		
[dynamic: ToInstance, Description("The target for outstanding dirty pages has been changed. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{d3c47ecc-90dd-47e3-ac8b-9911f4e19646}"), locale("MS\\0x409"),
    DisplayName("recovery_target_reset"): Amended]
class XeSqlPkg_recovery_target_reset: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class recovery_target_reset: XeSqlPkg_recovery_target_reset
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 dirty_page_count;
	[WmiDataId(7), read] uint64 dirty_page_read_time_ms;
	[WmiDataId(8), read] uint64 new_target_time_ms;
	[WmiDataId(9), read] uint32 pie_cpu_slices;
	[WmiDataId(10), read] uint32 pie_data_slices;
	[WmiDataId(11), read] uint32 pie_log_slices;
};
		
[dynamic: ToInstance, Description("Outstanding dirty pages are over target. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{c5f44ac5-c8df-4f68-ae64-e9c990398e33}"), locale("MS\\0x409"),
    DisplayName("recovery_target_miss"): Amended]
class XeSqlPkg_recovery_target_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_target_miss: XeSqlPkg_recovery_target_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 target_time;
	[WmiDataId(7), read] uint64 dirty_page_read_time;
	[WmiDataId(8), read] uint64 dirty_page_count;
};
		
[dynamic: ToInstance, Description("Dirty pages will be written to help log truncation of the simple-recovery database. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{d1d19d2a-5c07-41a9-8788-87e861369b45}"), locale("MS\\0x409"),
    DisplayName("recovery_simple_log_truncate"): Amended]
class XeSqlPkg_recovery_simple_log_truncate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_simple_log_truncate: XeSqlPkg_recovery_simple_log_truncate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string current_oldest_page_lsn;
};
		
[dynamic: ToInstance, Description("Dirty pages will be written to advance the oldest page LSN and catch up with the current LSN. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{921603c7-5ab6-406f-9f30-10e446e9bce9}"), locale("MS\\0x409"),
    DisplayName("recovery_catch_checkpoint"): Amended]
class XeSqlPkg_recovery_catch_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_catch_checkpoint: XeSqlPkg_recovery_catch_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string current_oldest_page_lsn;
};
		
[dynamic: ToInstance, Description("Dirty pages will be written to advance the oldest page LSN and catch up with the target log distance. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{fdbadc91-e845-4dd2-add2-bde8e13d520f}"), locale("MS\\0x409"),
    DisplayName("recovery_force_flush_checkpoint"): Amended]
class XeSqlPkg_recovery_force_flush_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_force_flush_checkpoint: XeSqlPkg_recovery_force_flush_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 dirty_page_count;
	[WmiDataId(7), read] uint64 dirty_page_read_time_ms;
	[WmiDataId(8), read] uint64 dirty_page_target_time_ms;
	[WmiDataId(9), read] uint64 recovery_log_bytes;
	[WmiDataId(10), read] uint64 target_log_bytes;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string current_oldest_page_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string last_checkpoint_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string last_oldest_page_lsn;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string force_flush_lsn;
};
		
[dynamic: ToInstance, Description("Checkpoint evaluation chose to skip a checkpoint as the recovery time is within the target. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{6d0913ac-c746-43ed-b346-c879d7a6a8e3}"), locale("MS\\0x409"),
    DisplayName("recovery_skip_checkpoint"): Amended]
class XeSqlPkg_recovery_skip_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_skip_checkpoint: XeSqlPkg_recovery_skip_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 recovery_log_bytes;
	[WmiDataId(7), read] uint64 recovery_log_read_time_estimate_ms;
	[WmiDataId(8), read] uint64 recovery_log_target_time_ms;
	[WmiDataId(9), read] uint64 dirty_page_read_time_ms;
	[WmiDataId(10), read] uint64 dirty_page_count;
	[WmiDataId(11), read] uint64 dirty_page_target_time_ms;
};
		
[dynamic: ToInstance, Description("Queued writes of old dirty pages. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{b794d083-c8f1-4f67-895e-64015aaa19c4}"), locale("MS\\0x409"),
    DisplayName("recovery_queue_old_pages"): Amended]
class XeSqlPkg_recovery_queue_old_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_queue_old_pages: XeSqlPkg_recovery_queue_old_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 pages_written;
	[WmiDataId(7), read] uint64 elapsed_time_ms;
	[WmiDataId(8), read] uint64 io_throttle_stall_ms;
	[WmiDataId(9), read] uint16 oldest_page_file_id;
	[WmiDataId(10), read] uint32 oldest_page_page_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string oldest_page_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string new_oldest_page_lsn;
};
		
[dynamic: ToInstance, Description("Forced the oldest dirty page to be written to advance the oldest page LSN to the last checkpoint. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{2be2bf32-ac92-4337-b324-2a703685f9e3}"), locale("MS\\0x409"),
    DisplayName("recovery_force_oldest_page"): Amended]
class XeSqlPkg_recovery_force_oldest_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_force_oldest_page: XeSqlPkg_recovery_force_oldest_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Forced all dirty pages through the target LSN to be written. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{b992b9c7-71cf-4f94-a479-42881a5da9fe}"), locale("MS\\0x409"),
    DisplayName("recovery_force_catchup_to_lsn"): Amended]
class XeSqlPkg_recovery_force_catchup_to_lsn: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_force_catchup_to_lsn: XeSqlPkg_recovery_force_catchup_to_lsn
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_foreign;
	[WmiDataId(7), read] uint64 pages_written;
	[WmiDataId(8), read] uint64 elapsed_time_ms;
	[WmiDataId(9), read] uint64 io_throttle_stall_ms;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string oldest_page_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string target_lsn;
};
		
[dynamic: ToInstance, Description("Forced the dirty pages that have ambiguous LSN to be written. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{ee8b35c4-d77d-411c-b8b4-11c0b5e3b5f2}"), locale("MS\\0x409"),
    DisplayName("recovery_force_must_pages"): Amended]
class XeSqlPkg_recovery_force_must_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_force_must_pages: XeSqlPkg_recovery_force_must_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 pages_written;
	[WmiDataId(7), read] uint64 io_throttle_stall_ms;
};
		
[dynamic: ToInstance, Description("Checkpoint evaluation chose to enqueue log truncation. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{4c170180-a569-4110-9242-1b38ded8ae5b}"), locale("MS\\0x409"),
    DisplayName("recovery_queue_log_truncation"): Amended]
class XeSqlPkg_recovery_queue_log_truncation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_queue_log_truncation: XeSqlPkg_recovery_queue_log_truncation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 recovery_log_bytes;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string last_checkpoint_lsn;
};
		
[dynamic: ToInstance, Description("Chose to enqueue an indirect checkpoint as we are near our recovery target"): Amended,
    Guid("{1eac732f-fb83-4fe6-9d12-9ac2c180f1ad}"), locale("MS\\0x409"),
    DisplayName("recovery_indirect_checkpoint"): Amended]
class XeSqlPkg_recovery_indirect_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_indirect_checkpoint: XeSqlPkg_recovery_indirect_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 recovery_log_bytes;
	[WmiDataId(7), read] uint64 recovery_log_read_time_estimate;
	[WmiDataId(8), read] uint64 recovery_log_target_time;
	[WmiDataId(9), read] uint64 dirty_page_read_time;
	[WmiDataId(10), read] uint64 dirty_page_count;
	[WmiDataId(11), read] uint64 dirty_page_target_time;
	[WmiDataId(12), read] uint64 page_writes_logged;
	[WmiDataId(13), read] uint64 page_writes_not_logged;
};
		
[dynamic: ToInstance, Description("Checkpoint evaluation chose to enqueue a checkpoint as the recovery time is near or above the target. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{1eac732f-fb83-4fe6-9d12-9ac2c180f1ad}"), locale("MS\\0x409"),
    DisplayName("recovery_indirect_checkpoint"): Amended]
class XeSqlPkg_recovery_indirect_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class recovery_indirect_checkpoint: XeSqlPkg_recovery_indirect_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_trivial;
	[WmiDataId(7), read] uint64 dirty_page_count;
	[WmiDataId(8), read] uint64 dirty_page_read_time_ms;
	[WmiDataId(9), read] uint64 dirty_page_target_time_ms;
	[WmiDataId(10), read] uint64 recovery_data_read_time_estimate_ms;
	[WmiDataId(11), read] uint64 recovery_log_bytes;
	[WmiDataId(12), read] uint64 recovery_log_read_time_estimate_ms;
	[WmiDataId(13), read] uint64 recovery_log_target_time_ms;
	[WmiDataId(14), read] uint64 recovery_time_estimate_sec;
	[WmiDataId(15), read] uint64 page_writes_logged;
	[WmiDataId(16), read] uint64 page_writes_not_logged;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string current_oldest_page_lsn;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string last_checkpoint_lsn;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string last_oldest_page_lsn;
};
		
[dynamic: ToInstance, Description("Checkpoint has ended. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{1941969b-c63b-40c5-9e4e-076144edf60a}"), locale("MS\\0x409"),
    DisplayName("recovery_indirect_checkpoint_end"): Amended]
class XeSqlPkg_recovery_indirect_checkpoint_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_indirect_checkpoint_end: XeSqlPkg_recovery_indirect_checkpoint_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 dirty_page_count;
	[WmiDataId(7), read] uint64 dirty_page_read_time_ms;
	[WmiDataId(8), read] uint64 freed_log_bytes;
	[WmiDataId(9), read, 
				XEMapId(185),
				ValueMap { 
					"3", 
					"4", 
					"9", 
					"1", 
					"7", 
					"5", 
					"8", 
					"16", 
					"19", 
					"2", 
					"14", 
					"15", 
					"0", 
					"13", 
					"18", 
					"6", 
					"11", 
					"10", 
					"12", 
					"17" },
				Values { 
					"ActiveBackup", 
					"ActiveTransaction", 
					"AvailabilityReplica", 
					"CheckpointLsn", 
					"CopyOnWriteCreation", 
					"DatabaseMirroring", 
					"DiagnosticScan", 
					"HkCheckpoint", 
					"HoldupArraySize", 
					"LogBackup", 
					"LogConsolidationHost", 
					"LogHostedBackups", 
					"NoHoldup", 
					"OldestPage", 
					"Other", 
					"ReplicationXact", 
					"SEReplActiveCatchup", 
					"SEReplCatchupQueue", 
					"SEReplTemporaryReservation", 
					"SLogScan" }
			] sint32 log_truncation_holdup;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string checkpoint_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string oldest_page_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string last_oldest_page_lsn;
};
		
[dynamic: ToInstance, Description("Telemetry event for recovery write statistics. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{a1312440-a2bd-474b-8034-a032cc60999c}"), locale("MS\\0x409"),
    DisplayName("recovery_write_stats"): Amended]
class XeSqlPkg_recovery_write_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_write_stats: XeSqlPkg_recovery_write_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 dirty_page_count;
	[WmiDataId(7), read] uint64 forced_pages;
	[WmiDataId(8), read] uint64 forced_writes;
	[WmiDataId(9), read] uint64 unforced_pages;
	[WmiDataId(10), read] uint64 unforced_writes;
	[WmiDataId(11), read] uint32 unforced_write_miss_percent;
	[WmiDataId(12), read] uint64 helper_forced_pages;
	[WmiDataId(13), read] uint64 helper_forced_writes;
	[WmiDataId(14), read] uint64 helper_unforced_pages;
	[WmiDataId(15), read] uint64 helper_unforced_writes;
	[WmiDataId(16), read] uint64 version_cleaner_unforced_pages;
	[WmiDataId(17), read] uint64 version_cleaner_unforced_writes;
	[WmiDataId(18), read] uint64 page_writes_logged;
	[WmiDataId(19), read] uint64 page_writes_not_logged;
	[WmiDataId(20), read] uint64 background_write_task_calls;
	[WmiDataId(21), read] uint64 helper_write_task_calls;
	[WmiDataId(22), read] uint64 version_cleaner_write_task_calls;
	[WmiDataId(23), read] uint64 helper_skipped;
	[WmiDataId(24), read] uint64 helper_sleep;
	[WmiDataId(25), read] uint64 io_throttle_stall_ms;
	[WmiDataId(26), read] uint64 helper_throttle_stall_ms;
	[WmiDataId(27), read] uint64 version_cleaner_throttle_stall_ms;
};
		
[dynamic: ToInstance, Description("Telemetry event for indirect checkpoint statistics. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{e94060dc-148e-47b7-b9a6-4b2c78e417f6}"), locale("MS\\0x409"),
    DisplayName("recovery_checkpoint_stats"): Amended]
class XeSqlPkg_recovery_checkpoint_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_checkpoint_stats: XeSqlPkg_recovery_checkpoint_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 dirty_page_mgr_config;
	[WmiDataId(7), read] uint32 target_recovery_time_sec;
	[WmiDataId(8), read] uint64 dirty_page_count;
	[WmiDataId(9), read] uint64 dirty_page_read_time_ms;
	[WmiDataId(10), read] uint64 dirty_page_target_time_ms;
	[WmiDataId(11), read] uint64 dplist_lock_backoffs_per_min;
	[WmiDataId(12), read] uint64 dplist_lock_collisions_per_min;
	[WmiDataId(13), read] uint64 dplist_lock_spins_per_collision;
	[WmiDataId(14), read] sint8  is_acceptlog_mode;
	[WmiDataId(15), read] uint64 recovery_data_read_time_estimate_ms;
	[WmiDataId(16), read] uint64 recovery_log_bytes;
	[WmiDataId(17), read] uint64 recovery_log_read_time_estimate_ms;
	[WmiDataId(18), read] uint64 recovery_log_target_time_ms;
	[WmiDataId(19), read] uint64 recovery_time_estimate_sec;
	[WmiDataId(20), read] uint64 recovery_writer_group_queued_ios;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string current_oldest_page_lsn;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Queued a background write task as outstanding dirty pages are over the threshold. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{1a032222-b69d-4d03-a0a7-c76fe713eb28}"), locale("MS\\0x409"),
    DisplayName("recovery_queue_background_write_task"): Amended]
class XeSqlPkg_recovery_queue_background_write_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_queue_background_write_task: XeSqlPkg_recovery_queue_background_write_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 dirty_page_count;
	[WmiDataId(7), read] uint64 dirty_page_read_time_ms;
	[WmiDataId(8), read] uint64 dirty_page_target_time_ms;
};
		
[dynamic: ToInstance, Description("Background writer queued writes of dirty pages. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{b749478d-437e-48a7-a2f3-c75dafcbca2c}"), locale("MS\\0x409"),
    DisplayName("recovery_background_write"): Amended]
class XeSqlPkg_recovery_background_write: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_background_write: XeSqlPkg_recovery_background_write
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 dirty_page_count;
	[WmiDataId(7), read] uint64 dirty_page_read_time_ms;
	[WmiDataId(8), read] uint64 dirty_page_target_time_ms;
	[WmiDataId(9), read] uint64 pages_written;
	[WmiDataId(10), read] uint64 io_throttle_stall_ms;
};
		
[dynamic: ToInstance, Description("Helper writer queued writes of dirty pages. This event is only applicable to databases where indirect checkpoint is enabled."): Amended,
    Guid("{03aa4fda-f936-48a1-a27f-dc832621a7cb}"), locale("MS\\0x409"),
    DisplayName("recovery_helper_write"): Amended]
class XeSqlPkg_recovery_helper_write: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_helper_write: XeSqlPkg_recovery_helper_write
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 dirty_page_count;
	[WmiDataId(7), read] uint64 dirty_page_read_time_ms;
	[WmiDataId(8), read] uint64 dirty_page_target_time_ms;
	[WmiDataId(9), read] uint32 list_index;
	[WmiDataId(10), read] uint64 pages_written;
	[WmiDataId(11), read] uint64 io_throttle_stall_ms;
};
		
[dynamic: ToInstance, Description("Allocation ring buffer recorded"): Amended,
    Guid("{9b1a3866-5e60-403d-b614-1dc6c8f9c53f}"), locale("MS\\0x409"),
    DisplayName("allocation_ring_buffer_recorded"): Amended]
class XeSqlPkg_allocation_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class allocation_ring_buffer_recorded: XeSqlPkg_allocation_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read] uint8 event;
	[WmiDataId(8), read] sint16 session_id;
	[WmiDataId(9), read] uint8 ec_id;
	[WmiDataId(10), read] sint16 file_id;
	[WmiDataId(11), read] sint32 page_id;
	[WmiDataId(12), read] sint32 au_id_long;
	[WmiDataId(13), read] sint16 au_id_short;
	[WmiDataId(14), read] uint64 ls_ws_id;
	[WmiDataId(15), read] uint32 ls_sub_id;
	[WmiDataId(16), read] uint32 ls_nest_id;
	[WmiDataId(17), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("A page that should have been constant has changed"): Amended,
    Guid("{b6dbcde1-f1a8-4564-ad61-1824c148b6be}"), locale("MS\\0x409"),
    DisplayName("constant_page_corruption_detected"): Amended]
class XeSqlPkg_constant_page_corruption_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class constant_page_corruption_detected: XeSqlPkg_constant_page_corruption_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("A page that should have been constant has changed"): Amended,
    Guid("{b6dbcde1-f1a8-4564-ad61-1824c148b6be}"), locale("MS\\0x409"),
    DisplayName("constant_page_corruption_detected"): Amended]
class XeSqlPkg_constant_page_corruption_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class constant_page_corruption_detected: XeSqlPkg_constant_page_corruption_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Database attached"): Amended,
    Guid("{248cd648-c674-4741-ba0d-1032fcd33a37}"), locale("MS\\0x409"),
    DisplayName("database_attached"): Amended]
class XeSqlPkg_database_attached: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_attached: XeSqlPkg_database_attached
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Database attached"): Amended,
    Guid("{248cd648-c674-4741-ba0d-1032fcd33a37}"), locale("MS\\0x409"),
    DisplayName("database_attached"): Amended]
class XeSqlPkg_database_attached: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class database_attached: XeSqlPkg_database_attached
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Database detached"): Amended,
    Guid("{c0e4203a-8d5c-4d00-8dce-0a020bab8755}"), locale("MS\\0x409"),
    DisplayName("database_detached"): Amended]
class XeSqlPkg_database_detached: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_detached: XeSqlPkg_database_detached
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Database detached"): Amended,
    Guid("{c0e4203a-8d5c-4d00-8dce-0a020bab8755}"), locale("MS\\0x409"),
    DisplayName("database_detached"): Amended]
class XeSqlPkg_database_detached: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class database_detached: XeSqlPkg_database_detached
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Occurs when database reports the progress of recovery."): Amended,
    Guid("{721984C6-0240-4CEC-9202-33E530E809CD}"), locale("MS\\0x409"),
    DisplayName("database_recovery_progress_report"): Amended]
class XeSqlPkg_database_recovery_progress_report: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_recovery_progress_report: XeSqlPkg_database_recovery_progress_report
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(18),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"PreRecovery", 
					"Analysis", 
					"Redo", 
					"Undo", 
					"Complete", 
					"PostRecovery" }
			] uint8 phase;
	[WmiDataId(7), read] uint32 percent_complete;
	[WmiDataId(8), read] uint64 total_elapsed_time_sec;
	[WmiDataId(9), read] uint64 estimated_remaining_time_sec;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string physical_db_name;
};
		
[dynamic: ToInstance, Description("Occurs when database recovery has completed."): Amended,
    Guid("{31ACC33D-F977-47EC-955A-99114A0C128F}"), locale("MS\\0x409"),
    DisplayName("database_recovery_complete"): Amended]
class XeSqlPkg_database_recovery_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class database_recovery_complete: XeSqlPkg_database_recovery_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(18),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"PreRecovery", 
					"Analysis", 
					"Redo", 
					"Undo", 
					"Complete", 
					"PostRecovery" }
			] uint8 phase;
	[WmiDataId(7), read] uint32 percent_complete;
	[WmiDataId(8), read] uint64 total_elapsed_time_sec;
	[WmiDataId(9), read] uint64 analysis_elapsed_time_ms;
	[WmiDataId(10), read] uint64 redo_elapsed_time_ms;
	[WmiDataId(11), read] uint64 undo_elapsed_time_ms;
	[WmiDataId(12), read] uint64 system_undo_elapsed_time_ms;
	[WmiDataId(13), read] uint64 regular_undo_elapsed_time_ms;
	[WmiDataId(14), read] uint64 initalize_for_scans_time_ms;
	[WmiDataId(15), read] uint64 init_pvs_time_ms;
	[WmiDataId(16), read] uint64 undo_logical_revert_xacts_time_ms;
	[WmiDataId(17), read] uint64 refresh_boot_page_fields_time_ms;
	[WmiDataId(18), read] uint64 complete_mgrs_recovery_time_ms;
	[WmiDataId(19), read] uint64 scan_dropped_alloc_unit_after_recovery_time_ms;
	[WmiDataId(20), read] uint64 current_dirty_page_count;
	[WmiDataId(21), read] uint64 dirty_page_count_after_analysis;
	[WmiDataId(22), read] uint32 elastic_pool_db_count;
	[WmiDataId(23), read] sint8  is_elastic_pool_db;
	[WmiDataId(24), read] sint8  is_primary_replica;
	[WmiDataId(25), read] sint8  is_adr_enabled;
	[WmiDataId(26), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(27), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(29), read, StringTermination("NullTerminated"), Format("w")] string physical_db_name;
	[WmiDataId(30), read, StringTermination("NullTerminated"), Format("w")] string internal_slo_name;
	[WmiDataId(31), read, StringTermination("NullTerminated"), Format("w")] string analysis_lsn;
	[WmiDataId(32), read, StringTermination("NullTerminated"), Format("w")] string redo_start_lsn;
	[WmiDataId(33), read, StringTermination("NullTerminated"), Format("w")] string redo_end_lsn;
	[WmiDataId(34), read, StringTermination("NullTerminated"), Format("w")] string checkpoint_lsn;
	[WmiDataId(35), read, StringTermination("NullTerminated"), Format("w")] string hekaton_recovery_lsn;
};
		
[dynamic: ToInstance, Description("Verbose trace of database recovery."): Amended,
    Guid("{7B447631-34FA-4BA0-9445-A0EAC8A0EADD}"), locale("MS\\0x409"),
    DisplayName("database_recovery_trace"): Amended]
class XeSqlPkg_database_recovery_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_recovery_trace: XeSqlPkg_database_recovery_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_acceptlog_mode;
	[WmiDataId(7), read] uint64 dirty_page_count;
	[WmiDataId(8), read] uint64 recovery_writer_group_queued_ios;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string trace_message;
};
		
[dynamic: ToInstance, Description("Database recovery times"): Amended,
    Guid("{1B646FBB-5C5E-41D2-B093-81AC9871668E}"), locale("MS\\0x409"),
    DisplayName("database_recovery_times"): Amended]
class XeSqlPkg_database_recovery_times: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_recovery_times: XeSqlPkg_database_recovery_times
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 foreign_file_id;
	[WmiDataId(7), read] uint64 recovery_time;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(12), read, Extension("Guid")] guid correlation_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string recovery_step;
};
		
[dynamic: ToInstance, Description("LSN and transaction information during database recovery"): Amended,
    Guid("{D4E21069-FD9E-4D4D-A77C-0216B87C00D5}"), locale("MS\\0x409"),
    DisplayName("database_recovery_lsn_report"): Amended]
class XeSqlPkg_database_recovery_lsn_report: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_recovery_lsn_report: XeSqlPkg_database_recovery_lsn_report
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(18),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"PreRecovery", 
					"Analysis", 
					"Redo", 
					"Undo", 
					"Complete", 
					"PostRecovery" }
			] uint8 phase;
	[WmiDataId(7), read] uint64 log_bytes_consumed;
	[WmiDataId(8), read] uint64 log_blocks_consumed;
	[WmiDataId(9), read] uint64 log_blocks_cache_misses;
	[WmiDataId(10), read] uint64 log_blocks_blocking_reads;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string context;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string transaction_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string begin_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string last_lsn;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(16), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(17), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("DB parallel redo stats."): Amended,
    Guid("{184655E9-A9AC-46E7-B1C5-B023A3CCA310}"), locale("MS\\0x409"),
    DisplayName("database_parallel_redo_stats"): Amended]
class XeSqlPkg_database_parallel_redo_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_parallel_redo_stats: XeSqlPkg_database_parallel_redo_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_produced;
	[WmiDataId(7), read] uint64 log_consumed;
	[WmiDataId(8), read] uint64 drains;
	[WmiDataId(9), read] uint64 flow_controls;
	[WmiDataId(10), read] uint64 dependency_waits;
	[WmiDataId(11), read] uint64 flushes_requested;
	[WmiDataId(12), read] uint64 flushes_issued;
	[WmiDataId(13), read] uint64 interval;
	[WmiDataId(14), read] uint64 drains_sum_us;
	[WmiDataId(15), read] uint64 drains_max_us;
	[WmiDataId(16), read] uint64 flow_controls_sum_us;
	[WmiDataId(17), read] uint64 flow_controls_max_us;
	[WmiDataId(18), read] uint64 catchup_redos;
	[WmiDataId(19), read] uint64 catchup_redos_wait_sum_us;
	[WmiDataId(20), read] uint64 catchup_redos_wait_max_us;
	[WmiDataId(21), read] uint64 dpt_entry_locks_acquired_sum;
	[WmiDataId(22), read] uint64 dpt_entry_locks_wasted_sum;
	[WmiDataId(23), read] uint64 dpt_entry_locks_wait_sum_us;
	[WmiDataId(24), read] uint64 page_ref_latch_acquire_sum;
	[WmiDataId(25), read] uint64 skip_redo_sum;
	[WmiDataId(26), read] uint64 batch_skip_redo_sum;
	[WmiDataId(27), read] uint64 local_page_check_sum;
	[WmiDataId(28), read] uint64 logs_redone_sum;
	[WmiDataId(29), read] sint8  is_batch_redo_enabled;
	[WmiDataId(30), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("RestoreRedoMachine::Rollforward function telemetry details."): Amended,
    Guid("{ed3216d0-0b5e-4195-86e3-9c9ad32be99a}"), locale("MS\\0x409"),
    DisplayName("restore_rollfoward_complete"): Amended]
class XeSqlPkg_restore_rollfoward_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class restore_rollfoward_complete: XeSqlPkg_restore_rollfoward_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 report_period_millisecs;
	[WmiDataId(6), read] uint64 bytes_processed;
	[WmiDataId(7), read] uint64 count_buffers_processed;
	[WmiDataId(8), read] uint64 count_buffers_processed_parallel;
};
		
[dynamic: ToInstance, Description("Database started"): Amended,
    Guid("{56b89946-e94b-4c22-a588-12598c7c572e}"), locale("MS\\0x409"),
    DisplayName("database_started"): Amended]
class XeSqlPkg_database_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_started: XeSqlPkg_database_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Database stopped"): Amended,
    Guid("{1398523a-dd87-45d5-8faa-24f0d0ae0c79}"), locale("MS\\0x409"),
    DisplayName("database_stopped"): Amended]
class XeSqlPkg_database_stopped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_stopped: XeSqlPkg_database_stopped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(7), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Occurs when checkpointing has been dynamically throttled with a new Checkpoint rate."): Amended,
    Guid("{efbeab6e-1c9d-4f25-9f85-23fec3674887}"), locale("MS\\0x409"),
    DisplayName("dyn_throttle_checkpoint"): Amended]
class XeSqlPkg_dyn_throttle_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dyn_throttle_checkpoint: XeSqlPkg_dyn_throttle_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] real64 average_throughput;
	[WmiDataId(6), read] real64 average_writes_per_second;
	[WmiDataId(7), read] real64 checkpoint_rate_mb;
	[WmiDataId(8), read] real64 checkpoint_rate_iops;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read] uint32 checkpoint_duration;
};
		
[dynamic: ToInstance, Description("Trace flag changed"): Amended,
    Guid("{142beaac-9a34-42ae-849a-3c2051bf13e7}"), locale("MS\\0x409"),
    DisplayName("trace_flag_changed"): Amended]
class XeSqlPkg_trace_flag_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class trace_flag_changed: XeSqlPkg_trace_flag_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 flag;
	[WmiDataId(6), read, 
				XEMapId(2),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Global", 
					"Session" }
			] uint32 type;
	[WmiDataId(7), read] uint32 new_value;
};
		
[dynamic: ToInstance, Description("Change Tracking Cleanup"): Amended,
    Guid("{D878EAE3-68D7-48FB-868E-8422E6D8A18F}"), locale("MS\\0x409"),
    DisplayName("change_tracking_cleanup"): Amended]
class XeSqlPkg_change_tracking_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class change_tracking_cleanup: XeSqlPkg_change_tracking_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 status;
	[WmiDataId(8), read, 
				XEMapId(5),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15" },
				Values { 
					"CleanupStatusChange", 
					"UpdateRetention", 
					"UpdateInvalidCleanup", 
					"UpdateHardenedCleanup", 
					"RowsCleanedUp", 
					"BeginTableCleanup", 
					"EndTableCleanup", 
					"AddChangeTrackDbToQueue", 
					"ProcessNewDatabase", 
					"StartChangeTrackingCleanup", 
					"StopChangeTrackingCleanup", 
					"ErrorInTableCleanup", 
					"RowsCleanedupInLoop", 
					"RetryCleanup", 
					"BeginManualTableCleanup" }
			] uint32 cleanup_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string value;
};
		
[dynamic: ToInstance, Description("Tracks SYS.SYSCOMMITTAB Table Cleanup"): Amended,
    Guid("{8040BB1C-D62A-4327-AC4D-DDC45EC3FBB7}"), locale("MS\\0x409"),
    DisplayName("syscommittab_cleanup"): Amended]
class XeSqlPkg_syscommittab_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class syscommittab_cleanup: XeSqlPkg_syscommittab_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 rows_deleted;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 cleaned_upto_date;
};
		
[dynamic: ToInstance, Description("Tracks SYS.SYSCOMMITTAB Table Cleanup"): Amended,
    Guid("{8040BB1C-D62A-4327-AC4D-DDC45EC3FBB7}"), locale("MS\\0x409"),
    DisplayName("syscommittab_cleanup"): Amended]
class XeSqlPkg_syscommittab_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class syscommittab_cleanup: XeSqlPkg_syscommittab_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  hard_flush;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 cleaned_upto_date;
	[WmiDataId(8), read] uint64 cleanup_ts;
	[WmiDataId(9), read] uint64 flush_commit_ts;
	[WmiDataId(10), read] uint64 current_ts;
	[WmiDataId(11), read] sint32 rows_deleted;
	[WmiDataId(12), read] uint64 row_count;
};
		
[dynamic: ToInstance, Description("Tracks SYS.SYSCOMMITTAB Table Cleanup"): Amended,
    Guid("{8040BB1C-D62A-4327-AC4D-DDC45EC3FBB7}"), locale("MS\\0x409"),
    DisplayName("syscommittab_cleanup"): Amended]
class XeSqlPkg_syscommittab_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class syscommittab_cleanup: XeSqlPkg_syscommittab_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, Extension("WmiTime")] uint64 cleaned_upto_date;
	[WmiDataId(7), read] uint64 rows_deleted;
	[WmiDataId(8), read] uint64 cleanup_ts;
};
		
[dynamic: ToInstance, Description("Tracks SYS.SYSCOMMITTAB flush"): Amended,
    Guid("{2D7F99A0-E8EF-4B72-866B-CB9AC082F0E0}"), locale("MS\\0x409"),
    DisplayName("syscommittab_flush"): Amended]
class XeSqlPkg_syscommittab_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class syscommittab_flush: XeSqlPkg_syscommittab_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  hard_flush;
	[WmiDataId(7), read] uint64 flush_commit_ts;
	[WmiDataId(8), read] uint64 current_ts;
	[WmiDataId(9), read] uint64 row_count;
};
		
[dynamic: ToInstance, Description("Tracks commit table when persisting the checkpoint timestamp to boot page"): Amended,
    Guid("{493F6C3C-08EA-4B05-899E-5B4370E55C49}"), locale("MS\\0x409"),
    DisplayName("committable_persist_info"): Amended]
class XeSqlPkg_committable_persist_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class committable_persist_info: XeSqlPkg_committable_persist_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  persist_new;
	[WmiDataId(7), read] uint64 bootpage_old_commit_ts;
	[WmiDataId(8), read] uint64 bootpage_new_commit_ts;
	[WmiDataId(9), read] uint64 commit_ts;
	[WmiDataId(10), read] uint64 current_ts;
	[WmiDataId(11), read] uint64 row_count;
};
		
[dynamic: ToInstance, Description("Tracks commit table when recovering the checkpoint timestamp from the boot page"): Amended,
    Guid("{D4899190-0F36-4474-B0DC-143B5BAA1020}"), locale("MS\\0x409"),
    DisplayName("committable_recovery_info"): Amended]
class XeSqlPkg_committable_recovery_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class committable_recovery_info: XeSqlPkg_committable_recovery_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(118),
				ValueMap { 
					"2", 
					"1", 
					"0" },
				Values { 
					"CT_AFTER_ADJUSTING_BOOTPAGE_TIMESTAMP", 
					"CT_BEFORE_ADJUSTING_BOOTPAGE_TIMESTAMP", 
					"CT_WHILE_COMPUTING_RECOVERY_TIMESTAMP" }
			] uint8 mode;
	[WmiDataId(7), read] sint8  commit_ts_adjustment_needed;
	[WmiDataId(8), read] sint8  commit_ts_to_be_persisted;
	[WmiDataId(9), read] sint8  commit_ts_persisted;
	[WmiDataId(10), read] uint64 recovery_ts;
	[WmiDataId(11), read] uint64 recovery_ts_persisted;
	[WmiDataId(12), read] uint64 checkpoint_ts;
	[WmiDataId(13), read] uint64 startup_ts;
	[WmiDataId(14), read] uint64 current_ts;
	[WmiDataId(15), read] uint64 row_count;
};
		
[dynamic: ToInstance, Description("Deadlock monitor performance statistics"): Amended,
    Guid("{bce30e88-3af6-11dc-bd05-4d0f56d89593}"), locale("MS\\0x409"),
    DisplayName("deadlock_monitor_perf_stats"): Amended]
class XeSqlPkg_deadlock_monitor_perf_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deadlock_monitor_perf_stats: XeSqlPkg_deadlock_monitor_perf_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count_cycles;
	[WmiDataId(6), read] uint64 prev_cycle_start_time;
	[WmiDataId(7), read] uint64 prev_cycle_duration_ms;
	[WmiDataId(8), read] uint16 curr_cycle_end_cause;
	[WmiDataId(9), read] uint32 prev_cycle_deadlock_participant_count;
	[WmiDataId(10), read] uint64 count_cycles_with_deadlock;
	[WmiDataId(11), read] uint64 count_cycles_with_deadlock_ended_normally;
	[WmiDataId(12), read] uint64 count_cycles_with_deadlock_failed_deadlock_resolution_prep;
	[WmiDataId(13), read] uint64 count_cycles_with_deadlock_out_of_memory;
	[WmiDataId(14), read] uint64 count_cycles_with_deadlock_timeout;
	[WmiDataId(15), read] uint64 avg_cycle_duration_ms;
	[WmiDataId(16), read] uint64 max_cycle_duration_ms;
	[WmiDataId(17), read] uint32 avg_deadlock_participant_count;
	[WmiDataId(18), read] uint32 max_deadlock_participant_count;
};
		
[dynamic: ToInstance, Description("Deadlock monitor memory utilization statistics"): Amended,
    Guid("{e3857ef4-3ee8-11df-bdb3-82ae55d89593}"), locale("MS\\0x409"),
    DisplayName("deadlock_monitor_mem_stats"): Amended]
class XeSqlPkg_deadlock_monitor_mem_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deadlock_monitor_mem_stats: XeSqlPkg_deadlock_monitor_mem_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count_cycles;
	[WmiDataId(6), read] uint32 peak_mem_util;
	[WmiDataId(7), read] uint32 vertex_primary_pool_cap;
	[WmiDataId(8), read] uint32 vertex_secondary_pool_cap;
	[WmiDataId(9), read] uint32 vertex_avg_alloc_count;
	[WmiDataId(10), read] uint32 vertex_max_alloc_count;
	[WmiDataId(11), read] uint32 edge_primary_pool_cap;
	[WmiDataId(12), read] uint32 edge_secondary_pool_cap;
	[WmiDataId(13), read] uint32 edge_avg_alloc_count;
	[WmiDataId(14), read] uint32 edge_max_alloc_count;
	[WmiDataId(15), read] uint32 scc_primary_pool_cap;
	[WmiDataId(16), read] uint32 scc_secondary_pool_cap;
	[WmiDataId(17), read] uint32 scc_avg_alloc_count;
	[WmiDataId(18), read] uint32 scc_max_alloc_count;
	[WmiDataId(19), read] uint32 vertex_hash_primary_pool_cap;
	[WmiDataId(20), read] uint32 vertex_hash_secondary_pool_cap;
	[WmiDataId(21), read] uint32 vertex_hash_avg_alloc_count;
	[WmiDataId(22), read] uint32 vertex_hash_max_alloc_count;
};
		
[dynamic: ToInstance, Description("Deadlock Monitor state transition"): Amended,
    Guid("{403c3f44-3eed-11dc-a813-901356d89593}"), locale("MS\\0x409"),
    DisplayName("deadlock_monitor_state_transition"): Amended]
class XeSqlPkg_deadlock_monitor_state_transition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deadlock_monitor_state_transition: XeSqlPkg_deadlock_monitor_state_transition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count_cycles;
	[WmiDataId(6), read] uint16 prev_state;
	[WmiDataId(7), read] uint16 new_state;
};
		
[dynamic: ToInstance, Description("Deadlock monitor PMO status at various checkpoints in the LDM cycle"): Amended,
    Guid("{44dd455e-3ef5-11dc-bc6c-226d56d89593}"), locale("MS\\0x409"),
    DisplayName("deadlock_monitor_pmo_status"): Amended]
class XeSqlPkg_deadlock_monitor_pmo_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deadlock_monitor_pmo_status: XeSqlPkg_deadlock_monitor_pmo_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count_cycles;
	[WmiDataId(6), read] uint16 checkpoint;
	[WmiDataId(7), read, Pointer] object  pmo_mark;
	[WmiDataId(8), read] uint32 pmo_pages_alloc;
	[WmiDataId(9), read] uint32 ringbuffer_pmo_pages_alloc;
	[WmiDataId(10), read] uint32 xml_deadlock_report_pmo_pages_alloc;
};
		
[dynamic: ToInstance, Description("Deadlock monitor local wait-for graph dump in binary form"): Amended,
    Guid("{cea6bf44-3ef6-11dc-bbac-627456d89593}"), locale("MS\\0x409"),
    DisplayName("deadlock_monitor_serialized_local_wait_for_graph"): Amended]
class XeSqlPkg_deadlock_monitor_serialized_local_wait_for_graph: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deadlock_monitor_serialized_local_wait_for_graph: XeSqlPkg_deadlock_monitor_serialized_local_wait_for_graph
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count_cycles;
	[WmiDataId(6), read] uint16 id;
	[WmiDataId(7), read, Extension("Variant")] object obj;
};
		
[dynamic: ToInstance, Description("Buffer pool ring buffer recorded"): Amended,
    Guid("{a711cf1e-287a-4f06-b6dc-f60fcb95a808}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_ring_buffer_recorded"): Amended]
class XeSqlPkg_buffer_pool_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_ring_buffer_recorded: XeSqlPkg_buffer_pool_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read] uint32 memory_utilization_pct;
	[WmiDataId(8), read] uint64 total_physical_memory_kb;
	[WmiDataId(9), read] uint64 available_physical_memory_kb;
	[WmiDataId(10), read] uint64 total_page_file_kb;
	[WmiDataId(11), read] uint64 available_page_file_kb;
	[WmiDataId(12), read] uint64 total_virtual_address_space_kb;
	[WmiDataId(13), read] uint64 available_virtual_address_space_kb;
	[WmiDataId(14), read] uint64 available_extended_virtual_address_space_kb;
	[WmiDataId(15), read, 
				XEMapId(14),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"OOM", 
					"Map", 
					"Reserve Adjust", 
					"Lazywriter No Buffers" }
			] uint32 failure_type;
	[WmiDataId(16), read, Pointer] object  task;
	[WmiDataId(17), read] uint32 committed_count;
	[WmiDataId(18), read] uint32 committed_target;
	[WmiDataId(19), read] uint32 free_count;
	[WmiDataId(20), read] uint32 hashed_count;
	[WmiDataId(21), read] uint32 stolen_count;
	[WmiDataId(22), read] uint32 reserved_count;
	[WmiDataId(23), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("Buffer pool ring buffer recorded"): Amended,
    Guid("{a711cf1e-287a-4f06-b6dc-f60fcb95a808}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_ring_buffer_recorded"): Amended]
class XeSqlPkg_buffer_pool_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class buffer_pool_ring_buffer_recorded: XeSqlPkg_buffer_pool_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read] uint32 memory_utilization_pct;
	[WmiDataId(8), read] uint64 total_physical_memory_kb;
	[WmiDataId(9), read] uint64 available_physical_memory_kb;
	[WmiDataId(10), read] uint64 total_page_file_kb;
	[WmiDataId(11), read] uint64 available_page_file_kb;
	[WmiDataId(12), read] uint64 total_virtual_address_space_kb;
	[WmiDataId(13), read] uint64 available_virtual_address_space_kb;
	[WmiDataId(14), read] uint64 available_extended_virtual_address_space_kb;
	[WmiDataId(15), read, 
				XEMapId(14),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"OOM", 
					"Map", 
					"Reserve Adjust", 
					"Lazywriter No Buffers" }
			] uint32 failure_type;
	[WmiDataId(16), read, Pointer] object  task;
	[WmiDataId(17), read] uint32 committed_count;
	[WmiDataId(18), read] uint32 committed_target;
	[WmiDataId(19), read] uint32 free_count;
	[WmiDataId(20), read] uint32 hashed_count;
	[WmiDataId(21), read] uint32 stolen_count;
	[WmiDataId(22), read] uint32 reserved_count;
	[WmiDataId(23), read] sint8  is_process_in_job;
	[WmiDataId(24), read] uint64 job_object_limit_job_mem_kb;
	[WmiDataId(25), read] uint64 job_object_limit_process_mem_kb;
	[WmiDataId(26), read] uint64 peak_job_memory_used_kb;
	[WmiDataId(27), read] uint64 peak_process_memory_used_kb;
	[WmiDataId(28), read] sint8  is_system_physical_memory_high;
	[WmiDataId(29), read] sint8  is_system_physical_memory_low;
	[WmiDataId(30), read] sint8  is_process_physical_memory_low;
	[WmiDataId(31), read] sint8  is_process_virtual_memory_low;
	[WmiDataId(32), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("An attempt to compress a database page failed"): Amended,
    Guid("{978a8ca7-2e69-4755-84a4-b33a9b1e3cba}"), locale("MS\\0x409"),
    DisplayName("page_compression_attempt_failed"): Amended]
class XeSqlPkg_page_compression_attempt_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_compression_attempt_failed: XeSqlPkg_page_compression_attempt_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint64 rowset_id;
	[WmiDataId(9), read, 
				XEMapId(4),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"PageModCountBelowThreshold", 
					"OnlyOneRecordFound", 
					"NewGeneratedInfoSameAsOld", 
					"NoSpaceSavings" }
			] uint8 failure_reason;
};
		
[dynamic: ToInstance, Description("An attempt to compress a database page failed"): Amended,
    Guid("{978a8ca7-2e69-4755-84a4-b33a9b1e3cba}"), locale("MS\\0x409"),
    DisplayName("page_compression_attempt_failed"): Amended]
class XeSqlPkg_page_compression_attempt_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class page_compression_attempt_failed: XeSqlPkg_page_compression_attempt_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint64 rowset_id;
	[WmiDataId(9), read, 
				XEMapId(4),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"PageModCountBelowThreshold", 
					"OnlyOneRecordFound", 
					"NewGeneratedInfoSameAsOld", 
					"NoSpaceSavings" }
			] uint8 failure_reason;
};
		
[dynamic: ToInstance, Description("Entry and exit tracking for page compression operations"): Amended,
    Guid("{DA5B447A-38BC-42B6-BCF0-2B30488A372D}"), locale("MS\\0x409"),
    DisplayName("page_compression_tracing"): Amended]
class XeSqlPkg_page_compression_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_compression_tracing: XeSqlPkg_page_compression_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read] uint64 rowset_id;
	[WmiDataId(10), read] uint64 call_duration;
};
		
[dynamic: ToInstance, Description("Entry and exit tracking for page compression operations"): Amended,
    Guid("{DA5B447A-38BC-42B6-BCF0-2B30488A372D}"), locale("MS\\0x409"),
    DisplayName("page_compression_tracing"): Amended]
class XeSqlPkg_page_compression_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class page_compression_tracing: XeSqlPkg_page_compression_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read] uint64 rowset_id;
	[WmiDataId(10), read] uint64 call_duration;
};
		
[dynamic: ToInstance, Description("AddFileRedo Operation Started"): Amended,
    Guid("{78d9ba14-6815-439a-8452-ce997eac1f34}"), locale("MS\\0x409"),
    DisplayName("remap_add_remote_file_redo_operation_started"): Amended]
class XeSqlPkg_remap_add_remote_file_redo_operation_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class remap_add_remote_file_redo_operation_started: XeSqlPkg_remap_add_remote_file_redo_operation_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] sint8  is_log_file;
	[WmiDataId(9), read] sint8  is_physical_name;
};
		
[dynamic: ToInstance, Description("AddFileRedo Operation Completed"): Amended,
    Guid("{3605fd2b-ba76-471e-95af-f78f4021a6a1}"), locale("MS\\0x409"),
    DisplayName("remap_add_remote_file_redo_operation_completed"): Amended]
class XeSqlPkg_remap_add_remote_file_redo_operation_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remap_add_remote_file_redo_operation_completed: XeSqlPkg_remap_add_remote_file_redo_operation_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] sint8  is_log_file;
	[WmiDataId(9), read] sint8  is_physical_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string new_name;
};
		
[dynamic: ToInstance, Description("Error during AddFileRedo"): Amended,
    Guid("{3998e619-7e85-44d5-a104-e451ed69d045}"), locale("MS\\0x409"),
    DisplayName("add_new_file_operation_error"): Amended]
class XeSqlPkg_add_new_file_operation_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class add_new_file_operation_error: XeSqlPkg_add_new_file_operation_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 error_code;
	[WmiDataId(9), read] sint32 http_code;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string request_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string logical_database_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("Send InternalServer action request to MS"): Amended,
    Guid("{22676eae-6ba2-4424-9ef3-4851a9497a36}"), locale("MS\\0x409"),
    DisplayName("send_new_file_operation_action_request"): Amended]
class XeSqlPkg_send_new_file_operation_action_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class send_new_file_operation_action_request: XeSqlPkg_send_new_file_operation_action_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string logical_database_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string action;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string request_payload;
};
		
[dynamic: ToInstance, Description("Emitted if redo sees an inconsistent page LSN."): Amended,
    Guid("{879a3f7f-4038-455b-9d83-978303a99994}"), locale("MS\\0x409"),
    DisplayName("redo_page_lsn_inconsistency"): Amended]
class XeSqlPkg_redo_page_lsn_inconsistency: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_page_lsn_inconsistency: XeSqlPkg_redo_page_lsn_inconsistency
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 transaction_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint8 page_type;
	[WmiDataId(8), read] uint64 page_allocation_unit_id;
	[WmiDataId(9), read] uint64 log_op_code;
	[WmiDataId(10), read] uint64 log_context;
	[WmiDataId(11), read] uint64 allocation_unit_id;
	[WmiDataId(12), read] uint16 database_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string physical_db_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string log_record_lsn;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string page_lsn;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string prev_page_lsn;
};
		
[dynamic: ToInstance, Description("Long IO detected"): Amended,
    Guid("{85e7b283-6475-4ec9-9604-dabee1f54411}"), locale("MS\\0x409"),
    DisplayName("long_io_detected"): Amended]
class XeSqlPkg_long_io_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class long_io_detected: XeSqlPkg_long_io_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 occurrences;
	[WmiDataId(6), read] uint64 longer_than_sec;
	[WmiDataId(7), read] uint16 database_id;
	[WmiDataId(8), read, Pointer] object  file_handle;
	[WmiDataId(9), read] uint64 last_long_io_offset;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Long IO detected"): Amended,
    Guid("{85e7b283-6475-4ec9-9604-dabee1f54411}"), locale("MS\\0x409"),
    DisplayName("long_io_detected"): Amended]
class XeSqlPkg_long_io_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class long_io_detected: XeSqlPkg_long_io_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 occurrences;
	[WmiDataId(6), read] uint64 longer_than_sec;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, Pointer] object  file_handle;
	[WmiDataId(9), read] uint64 last_long_io_offset;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Long IO detected"): Amended,
    Guid("{85e7b283-6475-4ec9-9604-dabee1f54411}"), locale("MS\\0x409"),
    DisplayName("long_io_detected"): Amended]
class XeSqlPkg_long_io_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class long_io_detected: XeSqlPkg_long_io_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 occurrences;
	[WmiDataId(6), read] uint64 longer_than_sec;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, Pointer] object  file_handle;
	[WmiDataId(9), read] uint64 last_long_io_offset;
	[WmiDataId(10), read] uint16 file_id;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(13), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Modification of the page cache."): Amended,
    Guid("{8CEEB85C-B7F4-4DB3-A5B4-2BF9AFA2C287}"), locale("MS\\0x409"),
    DisplayName("page_cache_trace"): Amended]
class XeSqlPkg_page_cache_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_cache_trace: XeSqlPkg_page_cache_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint16 index_id;
	[WmiDataId(8), read, 
				XEMapId(98),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"FS_ADD", 
					"FS_REMOVE" }
			] uint8 modify_type;
	[WmiDataId(9), read, 
				XEMapId(99),
				ValueMap { 
					"4", 
					"3", 
					"1", 
					"2" },
				Values { 
					"ADD_TO_FS", 
					"FS_CHANGE_STATE", 
					"MODIFY_PFS", 
					"SPACE_SCAN" }
			] uint8 caller;
	[WmiDataId(10), read, Extension("Variant")] object extra_info;
};
		
[dynamic: ToInstance, Description("Attempt to renew blob lease"): Amended,
    Guid("{3149756E-8C91-43D1-A92D-3651AFA1FF77}"), locale("MS\\0x409"),
    DisplayName("xstore_lease_renewal_request"): Amended]
class XeSqlPkg_xstore_lease_renewal_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_lease_renewal_request: XeSqlPkg_xstore_lease_renewal_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 elapsed_since_renewal;
	[WmiDataId(6), read, 
				XEMapId(103),
				ValueMap { 
					"13", 
					"18", 
					"6", 
					"7", 
					"15", 
					"10", 
					"3", 
					"8", 
					"16", 
					"20", 
					"14", 
					"0", 
					"11", 
					"9", 
					"4", 
					"12", 
					"17", 
					"19", 
					"1", 
					"2", 
					"5" },
				Values { 
					"FCBIoTypeCopySnapshot", 
					"FCBIoTypeCreateAndWrite", 
					"FCBIoTypeCreateFile", 
					"FCBIoTypeDeleteFile", 
					"FCBIoTypeGetBlockList", 
					"FCBIoTypeGetPageRange", 
					"FCBIoTypeGetProperties", 
					"FCBIoTypeLease", 
					"FCBIoTypeListBlobs", 
					"FCBIoTypeMax", 
					"FCBIoTypePutBlockList", 
					"FCBIoTypeRead", 
					"FCBIoTypeSetMetadata", 
					"FCBIoTypeSetSeqNum", 
					"FCBIoTypeSetSize", 
					"FCBIoTypeSnapshot", 
					"FCBIoTypeTouch", 
					"FCBIoTypeTrim", 
					"FCBIoTypeWrite", 
					"FCBIoTypeWriteMultiple", 
					"FCBIoTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Attempt to renew blob lease. Contains sensitive data."): Amended,
    Guid("{5A0212B2-2DF1-4ADF-9A12-FA9448E9B78A}"), locale("MS\\0x409"),
    DisplayName("xstore_lease_renewal_request_sensitive"): Amended]
class XeSqlPkg_xstore_lease_renewal_request_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_lease_renewal_request_sensitive: XeSqlPkg_xstore_lease_renewal_request_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 elapsed_since_renewal;
	[WmiDataId(6), read, 
				XEMapId(103),
				ValueMap { 
					"13", 
					"18", 
					"6", 
					"7", 
					"15", 
					"10", 
					"3", 
					"8", 
					"16", 
					"20", 
					"14", 
					"0", 
					"11", 
					"9", 
					"4", 
					"12", 
					"17", 
					"19", 
					"1", 
					"2", 
					"5" },
				Values { 
					"FCBIoTypeCopySnapshot", 
					"FCBIoTypeCreateAndWrite", 
					"FCBIoTypeCreateFile", 
					"FCBIoTypeDeleteFile", 
					"FCBIoTypeGetBlockList", 
					"FCBIoTypeGetPageRange", 
					"FCBIoTypeGetProperties", 
					"FCBIoTypeLease", 
					"FCBIoTypeListBlobs", 
					"FCBIoTypeMax", 
					"FCBIoTypePutBlockList", 
					"FCBIoTypeRead", 
					"FCBIoTypeSetMetadata", 
					"FCBIoTypeSetSeqNum", 
					"FCBIoTypeSetSize", 
					"FCBIoTypeSnapshot", 
					"FCBIoTypeTouch", 
					"FCBIoTypeTrim", 
					"FCBIoTypeWrite", 
					"FCBIoTypeWriteMultiple", 
					"FCBIoTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Failed to complete a request to Windows Azure Storage."): Amended,
    Guid("{6B6A5888-1DA4-4BDA-AD19-F759751A925F}"), locale("MS\\0x409"),
    DisplayName("xio_failed_request"): Amended]
class XeSqlPkg_xio_failed_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_failed_request: XeSqlPkg_xio_failed_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_handle;
	[WmiDataId(6), read, Pointer] object  request_context;
	[WmiDataId(7), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(8), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(9), read] sint32 http_errorcode;
	[WmiDataId(10), read] sint32 mapped_errorcode;
	[WmiDataId(11), read] sint32 ssl_errorcode;
	[WmiDataId(12), read] uint32 callback_status;
	[WmiDataId(13), read] sint32 retry_count;
	[WmiDataId(14), read] sint32 winhttp_timeout_count;
	[WmiDataId(15), read] uint64 winhttp_request_duration_usec;
	[WmiDataId(16), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(17), read] uint64 file_byte_offset;
	[WmiDataId(18), read] uint64 file_byte_count;
	[WmiDataId(19), read] uint64 request_seq_num;
	[WmiDataId(20), read] uint64 current_seq_num;
	[WmiDataId(21), read] sint8  lease_header_used;
	[WmiDataId(22), read, Extension("Guid")] guid request_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(26), read, StringTermination("NullTerminated")] string error_response;
};
		
[dynamic: ToInstance, Description("Failed to complete a request to Windows Azure Storage."): Amended,
    Guid("{6B6A5888-1DA4-4BDA-AD19-F759751A925F}"), locale("MS\\0x409"),
    DisplayName("xio_failed_request"): Amended]
class XeSqlPkg_xio_failed_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xio_failed_request: XeSqlPkg_xio_failed_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_handle;
	[WmiDataId(6), read, Pointer] object  request_context;
	[WmiDataId(7), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(8), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(9), read] sint32 http_errorcode;
	[WmiDataId(10), read] sint32 mapped_errorcode;
	[WmiDataId(11), read] sint32 ssl_errorcode;
	[WmiDataId(12), read] uint32 callback_status;
	[WmiDataId(13), read] sint32 retry_count;
	[WmiDataId(14), read] sint32 winhttp_timeout_count;
	[WmiDataId(15), read] uint64 winhttp_request_duration_usec;
	[WmiDataId(16), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(17), read] uint64 file_byte_offset;
	[WmiDataId(18), read] uint64 file_byte_count;
	[WmiDataId(19), read] uint64 request_seq_num;
	[WmiDataId(20), read] uint64 current_seq_num;
	[WmiDataId(21), read] uint64 xstore_path_identifier;
	[WmiDataId(22), read] sint8  lease_header_used;
	[WmiDataId(23), read, Extension("Guid")] guid request_id;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(27), read, StringTermination("NullTerminated")] string error_response;
};
		
[dynamic: ToInstance, Description("Failed to complete a request to Windows Azure Storage."): Amended,
    Guid("{6B6A5888-1DA4-4BDA-AD19-F759751A925F}"), locale("MS\\0x409"),
    DisplayName("xio_failed_request"): Amended]
class XeSqlPkg_xio_failed_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class xio_failed_request: XeSqlPkg_xio_failed_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_handle;
	[WmiDataId(6), read, Pointer] object  request_context;
	[WmiDataId(7), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(8), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(9), read] sint32 http_errorcode;
	[WmiDataId(10), read] sint32 mapped_errorcode;
	[WmiDataId(11), read] sint32 ssl_errorcode;
	[WmiDataId(12), read] uint32 callback_status;
	[WmiDataId(13), read] sint32 retry_count;
	[WmiDataId(14), read] sint32 winhttp_timeout_count;
	[WmiDataId(15), read] uint64 winhttp_request_duration_usec;
	[WmiDataId(16), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(17), read] uint64 file_byte_offset;
	[WmiDataId(18), read] uint64 file_byte_count;
	[WmiDataId(19), read] uint64 request_seq_num;
	[WmiDataId(20), read] uint64 current_seq_num;
	[WmiDataId(21), read] uint64 xstore_path_identifier;
	[WmiDataId(22), read] sint8  lease_header_used;
	[WmiDataId(23), read] sint8 credential_type;
	[WmiDataId(24), read] sint8  is_refresh_aad_token;
	[WmiDataId(25), read, Extension("Guid")] guid request_id;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(29), read, StringTermination("NullTerminated")] string error_response;
};
		
[dynamic: ToInstance, Description("Failed to complete a request to Windows Azure Storage. Contains sensitive data."): Amended,
    Guid("{A68FF269-BEE7-40E7-9CCD-02D392CF68EA}"), locale("MS\\0x409"),
    DisplayName("xio_failed_request_sensitive"): Amended]
class XeSqlPkg_xio_failed_request_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_failed_request_sensitive: XeSqlPkg_xio_failed_request_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_handle;
	[WmiDataId(6), read, Pointer] object  request_context;
	[WmiDataId(7), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(8), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(9), read] sint32 http_errorcode;
	[WmiDataId(10), read] sint32 mapped_errorcode;
	[WmiDataId(11), read] sint32 ssl_errorcode;
	[WmiDataId(12), read] uint32 callback_status;
	[WmiDataId(13), read] sint32 retry_count;
	[WmiDataId(14), read] sint32 winhttp_timeout_count;
	[WmiDataId(15), read] uint64 winhttp_request_duration_usec;
	[WmiDataId(16), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(17), read] uint64 file_byte_offset;
	[WmiDataId(18), read] uint64 file_byte_count;
	[WmiDataId(19), read] uint64 request_seq_num;
	[WmiDataId(20), read] uint64 current_seq_num;
	[WmiDataId(21), read] sint8  lease_header_used;
	[WmiDataId(22), read, Extension("Guid")] guid request_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(26), read, StringTermination("NullTerminated")] string error_response;
};
		
[dynamic: ToInstance, Description("Failed to complete a request to Windows Azure Storage. Contains sensitive data."): Amended,
    Guid("{A68FF269-BEE7-40E7-9CCD-02D392CF68EA}"), locale("MS\\0x409"),
    DisplayName("xio_failed_request_sensitive"): Amended]
class XeSqlPkg_xio_failed_request_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xio_failed_request_sensitive: XeSqlPkg_xio_failed_request_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_handle;
	[WmiDataId(6), read, Pointer] object  request_context;
	[WmiDataId(7), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(8), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(9), read] sint32 http_errorcode;
	[WmiDataId(10), read] sint32 mapped_errorcode;
	[WmiDataId(11), read] sint32 ssl_errorcode;
	[WmiDataId(12), read] uint32 callback_status;
	[WmiDataId(13), read] sint32 retry_count;
	[WmiDataId(14), read] sint32 winhttp_timeout_count;
	[WmiDataId(15), read] uint64 winhttp_request_duration_usec;
	[WmiDataId(16), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(17), read] uint64 file_byte_offset;
	[WmiDataId(18), read] uint64 file_byte_count;
	[WmiDataId(19), read] uint64 request_seq_num;
	[WmiDataId(20), read] uint64 current_seq_num;
	[WmiDataId(21), read] uint64 xstore_path_identifier;
	[WmiDataId(22), read] sint8  lease_header_used;
	[WmiDataId(23), read, Extension("Guid")] guid request_id;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(27), read, StringTermination("NullTerminated")] string error_response;
};
		
[dynamic: ToInstance, Description("Failed to complete a request to Windows Azure Storage. Contains sensitive data."): Amended,
    Guid("{A68FF269-BEE7-40E7-9CCD-02D392CF68EA}"), locale("MS\\0x409"),
    DisplayName("xio_failed_request_sensitive"): Amended]
class XeSqlPkg_xio_failed_request_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class xio_failed_request_sensitive: XeSqlPkg_xio_failed_request_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_handle;
	[WmiDataId(6), read, Pointer] object  request_context;
	[WmiDataId(7), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(8), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(9), read] sint32 http_errorcode;
	[WmiDataId(10), read] sint32 mapped_errorcode;
	[WmiDataId(11), read] sint32 ssl_errorcode;
	[WmiDataId(12), read] uint32 callback_status;
	[WmiDataId(13), read] sint32 retry_count;
	[WmiDataId(14), read] sint32 winhttp_timeout_count;
	[WmiDataId(15), read] uint64 winhttp_request_duration_usec;
	[WmiDataId(16), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(17), read] uint64 file_byte_offset;
	[WmiDataId(18), read] uint64 file_byte_count;
	[WmiDataId(19), read] uint64 request_seq_num;
	[WmiDataId(20), read] uint64 current_seq_num;
	[WmiDataId(21), read] uint64 xstore_path_identifier;
	[WmiDataId(22), read] sint8  lease_header_used;
	[WmiDataId(23), read] sint8 credential_type;
	[WmiDataId(24), read] sint8  is_refresh_aad_token;
	[WmiDataId(25), read, Extension("Guid")] guid request_id;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(29), read, StringTermination("NullTerminated")] string error_response;
};
		
[dynamic: ToInstance, Description("Finalized a request to Windows Azure Storage."): Amended,
    Guid("{133D6470-569E-46F5-8719-DCF19C4CC1CE}"), locale("MS\\0x409"),
    DisplayName("xio_request_finalized"): Amended]
class XeSqlPkg_xio_request_finalized: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_request_finalized: XeSqlPkg_xio_request_finalized
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_context;
	[WmiDataId(6), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(7), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(8), read] sint32 http_errorcode;
	[WmiDataId(9), read] sint32 mapped_errorcode;
	[WmiDataId(10), read] uint32 callback_status;
	[WmiDataId(11), read] sint32 retry_count;
	[WmiDataId(12), read] sint32 winhttp_timeout_count;
	[WmiDataId(13), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(14), read] uint64 file_byte_offset;
	[WmiDataId(15), read] uint64 requested_byte_count;
	[WmiDataId(16), read] uint64 transferred_byte_count;
	[WmiDataId(17), read] uint64 retry_wait_time_ms;
	[WmiDataId(18), read] uint64 request_seq_num;
	[WmiDataId(19), read] uint64 current_seq_num;
	[WmiDataId(20), read] uint64 duration_usec;
	[WmiDataId(21), read] sint8  lease_header_used;
	[WmiDataId(22), read] uint64 cancellation_duration_usec;
	[WmiDataId(23), read, 
				XEMapId(113),
				ValueMap { 
					"2", 
					"3", 
					"1", 
					"0" },
				Values { 
					"RequestStateActive", 
					"RequestStateInRetryQueue", 
					"RequestStateNotSentYet", 
					"RequestStateUnknown" }
			] uint8 request_state_when_cancelled;
	[WmiDataId(24), read, Extension("Guid")] guid request_id;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(28), read, Extension("Guid")] guid xstore_client_request_id;
};
		
[dynamic: ToInstance, Description("Finalized a request to Windows Azure Storage."): Amended,
    Guid("{133D6470-569E-46F5-8719-DCF19C4CC1CE}"), locale("MS\\0x409"),
    DisplayName("xio_request_finalized"): Amended]
class XeSqlPkg_xio_request_finalized: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xio_request_finalized: XeSqlPkg_xio_request_finalized
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_context;
	[WmiDataId(6), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(7), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(8), read] sint32 http_errorcode;
	[WmiDataId(9), read] sint32 mapped_errorcode;
	[WmiDataId(10), read] uint32 callback_status;
	[WmiDataId(11), read] sint32 retry_count;
	[WmiDataId(12), read] sint32 winhttp_timeout_count;
	[WmiDataId(13), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(14), read] uint64 file_byte_offset;
	[WmiDataId(15), read] uint64 requested_byte_count;
	[WmiDataId(16), read] uint64 transferred_byte_count;
	[WmiDataId(17), read] uint64 retry_wait_time_ms;
	[WmiDataId(18), read] uint64 request_seq_num;
	[WmiDataId(19), read] uint64 current_seq_num;
	[WmiDataId(20), read] uint64 duration_usec;
	[WmiDataId(21), read] uint64 xstore_path_identifier;
	[WmiDataId(22), read] sint8  lease_header_used;
	[WmiDataId(23), read] uint64 response_receive_duration_usec;
	[WmiDataId(24), read] uint64 cancellation_duration_usec;
	[WmiDataId(25), read, 
				XEMapId(113),
				ValueMap { 
					"2", 
					"3", 
					"1", 
					"0" },
				Values { 
					"RequestStateActive", 
					"RequestStateInRetryQueue", 
					"RequestStateNotSentYet", 
					"RequestStateUnknown" }
			] uint8 request_state_when_cancelled;
	[WmiDataId(26), read, Extension("Guid")] guid request_id;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(29), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(30), read, Extension("Guid")] guid xstore_client_request_id;
};
		
[dynamic: ToInstance, Description("Contains information about data read with reissuing of long requests."): Amended,
    Guid("{e7653646-7a1b-41dc-a1a8-2d50d5aa4579}"), locale("MS\\0x409"),
    DisplayName("xio_request_reissue_read_stats"): Amended]
class XeSqlPkg_xio_request_reissue_read_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_request_reissue_read_stats: XeSqlPkg_xio_request_reissue_read_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 successful_reads;
	[WmiDataId(6), read] uint64 failed_reads;
	[WmiDataId(7), read] uint64 reissued_requests;
	[WmiDataId(8), read] uint64 original_requests_finished_before_reissued;
	[WmiDataId(9), read] uint64 reissued_requests_finished_before_original;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Event fired when request which was reissued finishes before original request."): Amended,
    Guid("{b192c2b0-37f2-411b-b6f7-b0510e5f21ef}"), locale("MS\\0x409"),
    DisplayName("xio_request_reissue_finished_first"): Amended]
class XeSqlPkg_xio_request_reissue_finished_first: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_request_reissue_finished_first: XeSqlPkg_xio_request_reissue_finished_first
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 request_number;
	[WmiDataId(6), read] uint64 original_request_duration_usec;
	[WmiDataId(7), read] uint64 reissued_request_duration_usec;
	[WmiDataId(8), read] uint64 cancellation_init_duration_usec;
	[WmiDataId(9), read] uint64 cancellation_duration_usec;
	[WmiDataId(10), read] uint64 wait_duration_before_cancellation_usec;
	[WmiDataId(11), read] sint32 number_of_reissued_requests;
	[WmiDataId(12), read] uint64 file_byte_offset;
	[WmiDataId(13), read] uint64 requested_byte_count;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Request that was part of parallel retry due to long request duration time finished first."): Amended,
    Guid("{f7d24e8e-1d45-46ec-b7f8-254fa08b0d6e}"), locale("MS\\0x409"),
    DisplayName("xio_request_retry_finished_first"): Amended]
class XeSqlPkg_xio_request_retry_finished_first: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_request_retry_finished_first: XeSqlPkg_xio_request_retry_finished_first
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_context;
	[WmiDataId(6), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(7), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(8), read] sint32 http_errorcode;
	[WmiDataId(9), read] sint32 mapped_errorcode;
	[WmiDataId(10), read] sint32 retry_count;
	[WmiDataId(11), read] sint32 winhttp_timeout_count;
	[WmiDataId(12), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(13), read] uint64 file_byte_offset;
	[WmiDataId(14), read] uint64 requested_byte_count;
	[WmiDataId(15), read] uint64 transferred_byte_count;
	[WmiDataId(16), read] uint64 retry_wait_time_ms;
	[WmiDataId(17), read] uint64 request_seq_num;
	[WmiDataId(18), read] uint64 current_seq_num;
	[WmiDataId(19), read] uint64 duration_usec;
	[WmiDataId(20), read] uint64 request_parallel_retry_count;
	[WmiDataId(21), read, Extension("Guid")] guid request_id;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Request that was part of parallel retry due to long request duration time finished first. Contains PII data."): Amended,
    Guid("{984724bc-6a60-431a-bee5-d46533c40b68}"), locale("MS\\0x409"),
    DisplayName("xio_request_retry_finished_first_sensitive"): Amended]
class XeSqlPkg_xio_request_retry_finished_first_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_request_retry_finished_first_sensitive: XeSqlPkg_xio_request_retry_finished_first_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_context;
	[WmiDataId(6), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(7), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(8), read] sint32 http_errorcode;
	[WmiDataId(9), read] sint32 mapped_errorcode;
	[WmiDataId(10), read] sint32 retry_count;
	[WmiDataId(11), read] sint32 winhttp_timeout_count;
	[WmiDataId(12), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(13), read] uint64 file_byte_offset;
	[WmiDataId(14), read] uint64 requested_byte_count;
	[WmiDataId(15), read] uint64 transferred_byte_count;
	[WmiDataId(16), read] uint64 retry_wait_time_ms;
	[WmiDataId(17), read] uint64 request_seq_num;
	[WmiDataId(18), read] uint64 current_seq_num;
	[WmiDataId(19), read] uint64 duration_usec;
	[WmiDataId(20), read] uint64 request_parallel_retry_count;
	[WmiDataId(21), read, Extension("Guid")] guid request_id;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Occurs when we encounter a failure in XStoreAADTokenCache layer, when performing refresh to the AAD token"): Amended,
    Guid("{481d70ec-5271-48f9-985e-e57ae7d1eddd}"), locale("MS\\0x409"),
    DisplayName("xstore_aad_token_failure"): Amended]
class XeSqlPkg_xstore_aad_token_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_aad_token_failure: XeSqlPkg_xstore_aad_token_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_aad_user_cred;
	[WmiDataId(6), read] sint8  is_msi_cred;
	[WmiDataId(7), read] sint8  is_refresh_token;
	[WmiDataId(8), read] sint8  is_refresh_hdfs_token;
	[WmiDataId(9), read] sint8  is_refresh_aad_token;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read] uint32 jwt_error_state;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("A failure in S3TempCredentialCache, when performing refresh for S3 temporary credential."): Amended,
    Guid("{56831438-4c27-4441-b664-92b03aefb5be}"), locale("MS\\0x409"),
    DisplayName("s3_temp_credential_refresh_failure"): Amended]
class XeSqlPkg_s3_temp_credential_refresh_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class s3_temp_credential_refresh_failure: XeSqlPkg_s3_temp_credential_refresh_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_state;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("A failure when fetching S3 temporary credential from S3 STS."): Amended,
    Guid("{b88492bf-f8fb-4d79-831b-227f8976e622}"), locale("MS\\0x409"),
    DisplayName("s3_temp_credential_sts_failure"): Amended]
class XeSqlPkg_s3_temp_credential_sts_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class s3_temp_credential_sts_failure: XeSqlPkg_s3_temp_credential_sts_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
	[WmiDataId(6), read] sint32 http_error;
	[WmiDataId(7), read] sint32 http_statuscode;
	[WmiDataId(8), read] sint32 retry_count;
	[WmiDataId(9), read] sint32 error_state;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("A success when fetching S3 temporary credential from S3 STS."): Amended,
    Guid("{9af3bbfa-a994-499f-b7d2-c4fab87d137b}"), locale("MS\\0x409"),
    DisplayName("s3_temp_credential_sts_success"): Amended]
class XeSqlPkg_s3_temp_credential_sts_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class s3_temp_credential_sts_success: XeSqlPkg_s3_temp_credential_sts_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string success_message;
};
		
[dynamic: ToInstance, Description("A failure when fetching JWT from ADFS."): Amended,
    Guid("{bb0f3ee1-e5a3-425f-b612-6af87f9d8da0}"), locale("MS\\0x409"),
    DisplayName("jwt_adfs_failure"): Amended]
class XeSqlPkg_jwt_adfs_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class jwt_adfs_failure: XeSqlPkg_jwt_adfs_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
	[WmiDataId(6), read] sint32 http_error;
	[WmiDataId(7), read] sint32 http_statuscode;
	[WmiDataId(8), read] sint32 retry_count;
	[WmiDataId(9), read] sint32 decode_error_state;
	[WmiDataId(10), read] sint32 error_state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("A success when fetching JWT from ADFS."): Amended,
    Guid("{498eb676-8b5b-4e50-8146-110d5ee8b9e9}"), locale("MS\\0x409"),
    DisplayName("jwt_adfs_success"): Amended]
class XeSqlPkg_jwt_adfs_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class jwt_adfs_success: XeSqlPkg_jwt_adfs_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string success_message;
};
		
[dynamic: ToInstance, Description("Finalized a request to Windows Azure Storage. Contains PII data."): Amended,
    Guid("{3570ECD5-BA79-4F90-99D6-DD1664B950AB}"), locale("MS\\0x409"),
    DisplayName("xio_request_finalized_sensitive"): Amended]
class XeSqlPkg_xio_request_finalized_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_request_finalized_sensitive: XeSqlPkg_xio_request_finalized_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_context;
	[WmiDataId(6), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(7), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(8), read] sint32 http_errorcode;
	[WmiDataId(9), read] sint32 mapped_errorcode;
	[WmiDataId(10), read] uint32 callback_status;
	[WmiDataId(11), read] sint32 retry_count;
	[WmiDataId(12), read] sint32 winhttp_timeout_count;
	[WmiDataId(13), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(14), read] uint64 file_byte_offset;
	[WmiDataId(15), read] uint64 requested_byte_count;
	[WmiDataId(16), read] uint64 transferred_byte_count;
	[WmiDataId(17), read] uint64 retry_wait_time_ms;
	[WmiDataId(18), read] uint64 request_seq_num;
	[WmiDataId(19), read] uint64 current_seq_num;
	[WmiDataId(20), read] uint64 duration_usec;
	[WmiDataId(21), read] sint8  lease_header_used;
	[WmiDataId(22), read] uint64 cancellation_duration_usec;
	[WmiDataId(23), read, 
				XEMapId(113),
				ValueMap { 
					"2", 
					"3", 
					"1", 
					"0" },
				Values { 
					"RequestStateActive", 
					"RequestStateInRetryQueue", 
					"RequestStateNotSentYet", 
					"RequestStateUnknown" }
			] uint8 request_state_when_cancelled;
	[WmiDataId(24), read, Extension("Guid")] guid request_id;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(28), read, Extension("Guid")] guid xstore_client_request_id;
};
		
[dynamic: ToInstance, Description("Finalized a request to Windows Azure Storage. Contains PII data."): Amended,
    Guid("{3570ECD5-BA79-4F90-99D6-DD1664B950AB}"), locale("MS\\0x409"),
    DisplayName("xio_request_finalized_sensitive"): Amended]
class XeSqlPkg_xio_request_finalized_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xio_request_finalized_sensitive: XeSqlPkg_xio_request_finalized_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_context;
	[WmiDataId(6), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(7), read, 
				XEMapId(105),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73", 
					"74", 
					"75", 
					"76", 
					"77", 
					"78" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AccountQuotaExceeded", 
					"AccountStorageLimitExceeded", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"BlockCountExceedsLimit", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"Crc64Mismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidCrc64", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(8), read] sint32 http_errorcode;
	[WmiDataId(9), read] sint32 mapped_errorcode;
	[WmiDataId(10), read] uint32 callback_status;
	[WmiDataId(11), read] sint32 retry_count;
	[WmiDataId(12), read] sint32 winhttp_timeout_count;
	[WmiDataId(13), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(14), read] uint64 file_byte_offset;
	[WmiDataId(15), read] uint64 requested_byte_count;
	[WmiDataId(16), read] uint64 transferred_byte_count;
	[WmiDataId(17), read] uint64 retry_wait_time_ms;
	[WmiDataId(18), read] uint64 request_seq_num;
	[WmiDataId(19), read] uint64 current_seq_num;
	[WmiDataId(20), read] uint64 duration_usec;
	[WmiDataId(21), read] uint64 xstore_path_identifier;
	[WmiDataId(22), read] sint8  lease_header_used;
	[WmiDataId(23), read] uint64 response_receive_duration_usec;
	[WmiDataId(24), read] uint64 cancellation_duration_usec;
	[WmiDataId(25), read, 
				XEMapId(113),
				ValueMap { 
					"2", 
					"3", 
					"1", 
					"0" },
				Values { 
					"RequestStateActive", 
					"RequestStateInRetryQueue", 
					"RequestStateNotSentYet", 
					"RequestStateUnknown" }
			] uint8 request_state_when_cancelled;
	[WmiDataId(26), read, Extension("Guid")] guid request_id;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(29), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(30), read, Extension("Guid")] guid xstore_client_request_id;
};
		
[dynamic: ToInstance, Description("Lease request to Windows Azure Storage."): Amended,
    Guid("{3C8A99A0-596F-4738-8163-28850E717D50}"), locale("MS\\0x409"),
    DisplayName("xio_lease_action"): Amended]
class XeSqlPkg_xio_lease_action: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_lease_action: XeSqlPkg_xio_lease_action
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(111),
				ValueMap { 
					"1", 
					"0", 
					"4", 
					"2", 
					"3" },
				Values { 
					"XIOLeaseAcquire", 
					"XIOLeaseBreak", 
					"XIOLeaseMax", 
					"XIOLeaseRelease", 
					"XIOLeaseRenewal" }
			] uint8 lease_action;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Lease request to Windows Azure Storage. Contains PII data."): Amended,
    Guid("{3374A612-8C53-45DE-BF5E-F12A8B0203CA}"), locale("MS\\0x409"),
    DisplayName("xio_lease_action_sensitive"): Amended]
class XeSqlPkg_xio_lease_action_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_lease_action_sensitive: XeSqlPkg_xio_lease_action_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(111),
				ValueMap { 
					"1", 
					"0", 
					"4", 
					"2", 
					"3" },
				Values { 
					"XIOLeaseAcquire", 
					"XIOLeaseBreak", 
					"XIOLeaseMax", 
					"XIOLeaseRelease", 
					"XIOLeaseRenewal" }
			] uint8 lease_action;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Waiting for lease to be released."): Amended,
    Guid("{74C754C2-FE63-4696-BCEA-733DC6AA4497}"), locale("MS\\0x409"),
    DisplayName("xio_wait_lease_release"): Amended]
class XeSqlPkg_xio_wait_lease_release: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_wait_lease_release: XeSqlPkg_xio_wait_lease_release
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 wait_time_ms;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Waiting for lease to be released. Contains PII data."): Amended,
    Guid("{2EA663D2-2EF0-4DB3-BE07-775947278E6E}"), locale("MS\\0x409"),
    DisplayName("xio_wait_lease_release_sensitive"): Amended]
class XeSqlPkg_xio_wait_lease_release_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_wait_lease_release_sensitive: XeSqlPkg_xio_wait_lease_release_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 wait_time_ms;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Failed to create the Authorization header for shared key authentication to Microsoft Azure Storage."): Amended,
    Guid("{14871B7F-804A-4F8F-8C46-601AED703B77}"), locale("MS\\0x409"),
    DisplayName("xio_failed_auth_header_creation"): Amended]
class XeSqlPkg_xio_failed_auth_header_creation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_failed_auth_header_creation: XeSqlPkg_xio_failed_auth_header_creation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read, 
				XEMapId(106),
				ValueMap { 
					"9", 
					"8", 
					"6", 
					"10", 
					"5", 
					"7", 
					"11", 
					"3", 
					"1", 
					"2", 
					"4", 
					"0" },
				Values { 
					"SKAState_Fin_CreateHash", 
					"SKAState_Fin_CreateHashObject", 
					"SKAState_Fin_DecodeSecret", 
					"SKAState_Fin_EncodeHash", 
					"SKAState_Fin_EncodeStringToSign", 
					"SKAState_Fin_InitHashAlgorithm", 
					"SKAState_Finalized", 
					"SKAState_Init_ConstructStringToSign", 
					"SKAState_Init_ParseHeaders", 
					"SKAState_Init_ParseUri", 
					"SKAState_Initialized", 
					"SKAState_NotYetInitialized" }
			] uint8 shared_key_auth_state;
	[WmiDataId(7), read] sint32 hresult_errorcode;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Indicates that the shared key authentication header creation library has been initialized."): Amended,
    Guid("{7A8501D5-25D5-451D-8318-AAFA4DDE9E0D}"), locale("MS\\0x409"),
    DisplayName("xstore_shared_key_auth_init"): Amended]
class XeSqlPkg_xstore_shared_key_auth_init: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_shared_key_auth_init: XeSqlPkg_xstore_shared_key_auth_init
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(106),
				ValueMap { 
					"9", 
					"8", 
					"6", 
					"10", 
					"5", 
					"7", 
					"11", 
					"3", 
					"1", 
					"2", 
					"4", 
					"0" },
				Values { 
					"SKAState_Fin_CreateHash", 
					"SKAState_Fin_CreateHashObject", 
					"SKAState_Fin_DecodeSecret", 
					"SKAState_Fin_EncodeHash", 
					"SKAState_Fin_EncodeStringToSign", 
					"SKAState_Fin_InitHashAlgorithm", 
					"SKAState_Finalized", 
					"SKAState_Init_ConstructStringToSign", 
					"SKAState_Init_ParseHeaders", 
					"SKAState_Init_ParseUri", 
					"SKAState_Initialized", 
					"SKAState_NotYetInitialized" }
			] uint8 shared_key_auth_state;
	[WmiDataId(6), read] sint32 hresult_errorcode;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string http_verb;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string request_path;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string request_headers;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string storage_account;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string string_to_sign;
};
		
[dynamic: ToInstance, Description("Indicates that the shared key authentication header creation library has been finalized."): Amended,
    Guid("{F7D2383E-C0E3-4358-B03B-82C32428F9D2}"), locale("MS\\0x409"),
    DisplayName("xstore_shared_key_auth_fin"): Amended]
class XeSqlPkg_xstore_shared_key_auth_fin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_shared_key_auth_fin: XeSqlPkg_xstore_shared_key_auth_fin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(106),
				ValueMap { 
					"9", 
					"8", 
					"6", 
					"10", 
					"5", 
					"7", 
					"11", 
					"3", 
					"1", 
					"2", 
					"4", 
					"0" },
				Values { 
					"SKAState_Fin_CreateHash", 
					"SKAState_Fin_CreateHashObject", 
					"SKAState_Fin_DecodeSecret", 
					"SKAState_Fin_EncodeHash", 
					"SKAState_Fin_EncodeStringToSign", 
					"SKAState_Fin_InitHashAlgorithm", 
					"SKAState_Finalized", 
					"SKAState_Init_ConstructStringToSign", 
					"SKAState_Init_ParseHeaders", 
					"SKAState_Init_ParseUri", 
					"SKAState_Initialized", 
					"SKAState_NotYetInitialized" }
			] uint8 shared_key_auth_state;
	[WmiDataId(6), read] sint32 hresult_errorcode;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string string_to_sign;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string auth_header;
};
		
[dynamic: ToInstance, Description("A request is opened to Windows Azure Storage."): Amended,
    Guid("{0B8C36B3-8A4A-4B2C-AE82-DE8EC7AA8E42}"), locale("MS\\0x409"),
    DisplayName("xio_request_opened"): Amended]
class XeSqlPkg_xio_request_opened: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_request_opened: XeSqlPkg_xio_request_opened
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_handle;
	[WmiDataId(6), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(7), read] uint64 file_byte_offset;
	[WmiDataId(8), read] uint64 file_byte_count;
	[WmiDataId(9), read] sint32 retry_count;
	[WmiDataId(10), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(11), read, Extension("Guid")] guid request_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("A request is opened to Windows Azure Storage. Contains sensitive data."): Amended,
    Guid("{C691F1FF-E92A-4268-A016-939A369C8538}"), locale("MS\\0x409"),
    DisplayName("xio_request_opened_sensitive"): Amended]
class XeSqlPkg_xio_request_opened_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_request_opened_sensitive: XeSqlPkg_xio_request_opened_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_handle;
	[WmiDataId(6), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(7), read] uint64 file_byte_offset;
	[WmiDataId(8), read] uint64 file_byte_count;
	[WmiDataId(9), read] sint32 retry_count;
	[WmiDataId(10), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(11), read, Extension("Guid")] guid request_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Failed immidiately while executing a winhttp function."): Amended,
    Guid("{8BF42865-62A6-42B6-8995-7304DB4580D8}"), locale("MS\\0x409"),
    DisplayName("xio_winhttp_call_failed"): Amended]
class XeSqlPkg_xio_winhttp_call_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_winhttp_call_failed: XeSqlPkg_xio_winhttp_call_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(107),
				ValueMap { 
					"4", 
					"0", 
					"5", 
					"2", 
					"1", 
					"3" },
				Values { 
					"CloseHandle", 
					"OpenRequest", 
					"QueryHeaders", 
					"ReadData", 
					"SendRequest", 
					"WriteData" }
			] uint8 winhttp_call_type;
	[WmiDataId(6), read, Pointer] object  request_handle;
	[WmiDataId(7), read, Pointer] object  request_context;
	[WmiDataId(8), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(9), read] sint32 mapped_errorcode;
	[WmiDataId(10), read] uint32 callback_status;
	[WmiDataId(11), read] sint32 retry_count;
	[WmiDataId(12), read] uint64 file_byte_offset;
	[WmiDataId(13), read] uint64 file_byte_count;
	[WmiDataId(14), read] uint64 request_seq_num;
	[WmiDataId(15), read] uint64 current_seq_num;
	[WmiDataId(16), read, Extension("Guid")] guid request_id;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Failed immidiately while executing a winhttp function. Contains sensitive data."): Amended,
    Guid("{4839F385-0DA7-4746-A6CE-205C20121307}"), locale("MS\\0x409"),
    DisplayName("xio_winhttp_call_failed_sensitive"): Amended]
class XeSqlPkg_xio_winhttp_call_failed_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xio_winhttp_call_failed_sensitive: XeSqlPkg_xio_winhttp_call_failed_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(107),
				ValueMap { 
					"4", 
					"0", 
					"5", 
					"2", 
					"1", 
					"3" },
				Values { 
					"CloseHandle", 
					"OpenRequest", 
					"QueryHeaders", 
					"ReadData", 
					"SendRequest", 
					"WriteData" }
			] uint8 winhttp_call_type;
	[WmiDataId(6), read, Pointer] object  request_handle;
	[WmiDataId(7), read, Pointer] object  request_context;
	[WmiDataId(8), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(9), read] sint32 mapped_errorcode;
	[WmiDataId(10), read] uint32 callback_status;
	[WmiDataId(11), read] sint32 retry_count;
	[WmiDataId(12), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(13), read] uint64 file_byte_offset;
	[WmiDataId(14), read] uint64 file_byte_count;
	[WmiDataId(15), read] uint64 request_seq_num;
	[WmiDataId(16), read] uint64 current_seq_num;
	[WmiDataId(17), read, Extension("Guid")] guid request_id;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Failed immidiately while executing a winhttp function. Contains sensitive data."): Amended,
    Guid("{4839F385-0DA7-4746-A6CE-205C20121307}"), locale("MS\\0x409"),
    DisplayName("xio_winhttp_call_failed_sensitive"): Amended]
class XeSqlPkg_xio_winhttp_call_failed_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class xio_winhttp_call_failed_sensitive: XeSqlPkg_xio_winhttp_call_failed_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(107),
				ValueMap { 
					"4", 
					"0", 
					"5", 
					"2", 
					"1", 
					"3" },
				Values { 
					"CloseHandle", 
					"OpenRequest", 
					"QueryHeaders", 
					"ReadData", 
					"SendRequest", 
					"WriteData" }
			] uint8 winhttp_call_type;
	[WmiDataId(6), read, Pointer] object  request_handle;
	[WmiDataId(7), read, Pointer] object  request_context;
	[WmiDataId(8), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(9), read] sint32 mapped_errorcode;
	[WmiDataId(10), read] uint32 callback_status;
	[WmiDataId(11), read] sint32 retry_count;
	[WmiDataId(12), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(13), read] uint64 file_byte_offset;
	[WmiDataId(14), read] uint64 file_byte_count;
	[WmiDataId(15), read] uint64 request_seq_num;
	[WmiDataId(16), read] uint64 current_seq_num;
	[WmiDataId(17), read] sint8 credential_type;
	[WmiDataId(18), read] sint8  is_refresh_aad_token;
	[WmiDataId(19), read, Extension("Guid")] guid request_id;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Failed immidiately while executing a winhttp function."): Amended,
    Guid("{8BF42865-62A6-42B6-8995-7304DB4580D8}"), locale("MS\\0x409"),
    DisplayName("xio_winhttp_call_failed"): Amended]
class XeSqlPkg_xio_winhttp_call_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xio_winhttp_call_failed: XeSqlPkg_xio_winhttp_call_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(107),
				ValueMap { 
					"4", 
					"0", 
					"5", 
					"2", 
					"1", 
					"3" },
				Values { 
					"CloseHandle", 
					"OpenRequest", 
					"QueryHeaders", 
					"ReadData", 
					"SendRequest", 
					"WriteData" }
			] uint8 winhttp_call_type;
	[WmiDataId(6), read, Pointer] object  request_handle;
	[WmiDataId(7), read, Pointer] object  request_context;
	[WmiDataId(8), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(9), read] sint32 mapped_errorcode;
	[WmiDataId(10), read] uint32 callback_status;
	[WmiDataId(11), read] sint32 retry_count;
	[WmiDataId(12), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(13), read] uint64 file_byte_offset;
	[WmiDataId(14), read] uint64 file_byte_count;
	[WmiDataId(15), read] uint64 request_seq_num;
	[WmiDataId(16), read] uint64 current_seq_num;
	[WmiDataId(17), read, Extension("Guid")] guid request_id;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Failed immidiately while executing a winhttp function."): Amended,
    Guid("{8BF42865-62A6-42B6-8995-7304DB4580D8}"), locale("MS\\0x409"),
    DisplayName("xio_winhttp_call_failed"): Amended]
class XeSqlPkg_xio_winhttp_call_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class xio_winhttp_call_failed: XeSqlPkg_xio_winhttp_call_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(107),
				ValueMap { 
					"4", 
					"0", 
					"5", 
					"2", 
					"1", 
					"3" },
				Values { 
					"CloseHandle", 
					"OpenRequest", 
					"QueryHeaders", 
					"ReadData", 
					"SendRequest", 
					"WriteData" }
			] uint8 winhttp_call_type;
	[WmiDataId(6), read, Pointer] object  request_handle;
	[WmiDataId(7), read, Pointer] object  request_context;
	[WmiDataId(8), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(9), read] sint32 mapped_errorcode;
	[WmiDataId(10), read] uint32 callback_status;
	[WmiDataId(11), read] sint32 retry_count;
	[WmiDataId(12), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(13), read] uint64 file_byte_offset;
	[WmiDataId(14), read] uint64 file_byte_count;
	[WmiDataId(15), read] uint64 request_seq_num;
	[WmiDataId(16), read] uint64 current_seq_num;
	[WmiDataId(17), read] sint8 credential_type;
	[WmiDataId(18), read] sint8  is_refresh_aad_token;
	[WmiDataId(19), read, Extension("Guid")] guid request_id;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Ignored a winhttp callback."): Amended,
    Guid("{D1F72B98-6549-42FF-8E98-709311822165}"), locale("MS\\0x409"),
    DisplayName("xio_callback_ignored"): Amended]
class XeSqlPkg_xio_callback_ignored: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_callback_ignored: XeSqlPkg_xio_callback_ignored
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  request_handle;
	[WmiDataId(6), read, Pointer] object  request_context;
	[WmiDataId(7), read] uint32 internet_status;
	[WmiDataId(8), read] sint32 mapped_errorcode;
};
		
[dynamic: ToInstance, Description("Response header is obtained from request to Windows Azure Storage."): Amended,
    Guid("{1CD9F2A5-0F1C-4125-A0CC-11CD34EE8AC9}"), locale("MS\\0x409"),
    DisplayName("xio_header_obtained"): Amended]
class XeSqlPkg_xio_header_obtained: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_header_obtained: XeSqlPkg_xio_header_obtained
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read] uint64 file_byte_offset;
	[WmiDataId(7), read] uint64 file_byte_count;
	[WmiDataId(8), read] sint32 http_errorcode;
	[WmiDataId(9), read] uint32 content_length;
	[WmiDataId(10), read, Extension("Guid")] guid request_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Windows Azure Storage blob property is obtained from response header."): Amended,
    Guid("{94616C93-93AC-491E-BFF8-D2DE06ED197B}"), locale("MS\\0x409"),
    DisplayName("xio_blob_properties_obtained"): Amended]
class XeSqlPkg_xio_blob_properties_obtained: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_blob_properties_obtained: XeSqlPkg_xio_blob_properties_obtained
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read, 
				XEMapId(110),
				ValueMap { 
					"0", 
					"3", 
					"4", 
					"2", 
					"1", 
					"5", 
					"6" },
				Values { 
					"Available", 
					"Breaking", 
					"Broken", 
					"Expired", 
					"Leased", 
					"LeasedAndChecked", 
					"Max" }
			] uint8 lease_state;
	[WmiDataId(7), read] uint64 blob_size;
	[WmiDataId(8), read, Extension("Guid")] guid request_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string instance_id;
};
		
[dynamic: ToInstance, Description("Read complete from Windows Azure Storage response."): Amended,
    Guid("{B1CF8A1F-B7D3-41C1-9BE8-4FBCE802405D}"), locale("MS\\0x409"),
    DisplayName("xio_read_complete"): Amended]
class XeSqlPkg_xio_read_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_read_complete: XeSqlPkg_xio_read_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read] uint64 file_byte_offset;
	[WmiDataId(7), read] uint64 file_byte_count;
	[WmiDataId(8), read] sint32 bytes_read;
	[WmiDataId(9), read, Extension("Guid")] guid request_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Read complete from Windows Azure Storage response. Sensitive data."): Amended,
    Guid("{B7E431E2-7B7A-44AA-8DDD-DC151AFCED7B}"), locale("MS\\0x409"),
    DisplayName("xio_read_complete_sensitive"): Amended]
class XeSqlPkg_xio_read_complete_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_read_complete_sensitive: XeSqlPkg_xio_read_complete_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read] uint64 file_byte_offset;
	[WmiDataId(7), read] uint64 file_byte_count;
	[WmiDataId(8), read] sint32 bytes_read;
	[WmiDataId(9), read, Extension("Guid")] guid request_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Request send to Windows Azure Storage is complete."): Amended,
    Guid("{390689E5-8187-452A-AD53-41A48C8B2A58}"), locale("MS\\0x409"),
    DisplayName("xio_send_complete"): Amended]
class XeSqlPkg_xio_send_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_send_complete: XeSqlPkg_xio_send_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read] uint64 file_byte_offset;
	[WmiDataId(7), read] uint64 file_byte_count;
	[WmiDataId(8), read, Extension("Guid")] guid request_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Request send to Windows Azure Storage is complete."): Amended,
    Guid("{152ED71B-F596-41EF-8E40-0A7FD109AF87}"), locale("MS\\0x409"),
    DisplayName("xio_write_complete"): Amended]
class XeSqlPkg_xio_write_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_write_complete: XeSqlPkg_xio_write_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read] uint64 file_byte_offset;
	[WmiDataId(7), read] uint64 file_byte_count;
	[WmiDataId(8), read] sint32 bytes_written;
	[WmiDataId(9), read, Extension("Guid")] guid request_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Telemetry tracing event has occurred."): Amended,
    Guid("{DAD605B3-2E67-490D-8ADB-C95772F03576}"), locale("MS\\0x409"),
    DisplayName("xstore_debug_trace"): Amended]
class XeSqlPkg_xstore_debug_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_debug_trace: XeSqlPkg_xstore_debug_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string debug_trace;
};
		
[dynamic: ToInstance, Description("Creating physical XStore file has been attempted with the options below."): Amended,
    Guid("{b60eee70-533f-4291-b2cd-65774bcbf3bd}"), locale("MS\\0x409"),
    DisplayName("xstore_create_physical_file"): Amended]
class XeSqlPkg_xstore_create_physical_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_create_physical_file: XeSqlPkg_xstore_create_physical_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  file_creation_status;
	[WmiDataId(6), read] sint32 mapped_errorcode;
	[WmiDataId(7), read] uint64 blob_size;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string blob_tier;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Creating physical XStore file has been attempted with the options below. Contains sensitive data"): Amended,
    Guid("{7a43be17-8ca3-49af-9591-d0626f6a865c}"), locale("MS\\0x409"),
    DisplayName("xstore_create_physical_file_sensitive"): Amended]
class XeSqlPkg_xstore_create_physical_file_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_create_physical_file_sensitive: XeSqlPkg_xstore_create_physical_file_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  file_creation_status;
	[WmiDataId(6), read] sint32 mapped_errorcode;
	[WmiDataId(7), read] uint64 blob_size;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string blob_tier;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Creating an XStore file has been attempted with the options below."): Amended,
    Guid("{9DF07F68-E21A-4A33-A867-3DE13C450284}"), locale("MS\\0x409"),
    DisplayName("xstore_create_file"): Amended]
class XeSqlPkg_xstore_create_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_create_file: XeSqlPkg_xstore_create_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 desired_access;
	[WmiDataId(6), read] sint32 share_mode;
	[WmiDataId(7), read] sint32 creation_disposition;
	[WmiDataId(8), read] sint8  template_file_exists;
	[WmiDataId(9), read] sint32 blob_type;
	[WmiDataId(10), read] sint32 flags_attributes;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Creating an XStore file has been attempted with the options below. Contains sensitive data."): Amended,
    Guid("{A1962285-08F1-40B7-A32B-93730574DF5A}"), locale("MS\\0x409"),
    DisplayName("xstore_create_file_sensitive"): Amended]
class XeSqlPkg_xstore_create_file_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_create_file_sensitive: XeSqlPkg_xstore_create_file_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 desired_access;
	[WmiDataId(6), read] sint32 share_mode;
	[WmiDataId(7), read] sint32 creation_disposition;
	[WmiDataId(8), read] sint8  template_file_exists;
	[WmiDataId(9), read] sint32 blob_type;
	[WmiDataId(10), read] sint32 flags_attributes;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Creating and write to an XStore file has been attempted with the options below."): Amended,
    Guid("{48458be6-9e7c-4f2a-b358-08ef3cf42c1a}"), locale("MS\\0x409"),
    DisplayName("xstore_create_and_write_file"): Amended]
class XeSqlPkg_xstore_create_and_write_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_create_and_write_file: XeSqlPkg_xstore_create_and_write_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 blob_type;
	[WmiDataId(6), read] uint64 blob_size;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Creating and write to an XStore file has been attempted with the options below. Contains sensitive data."): Amended,
    Guid("{A4667CF1-0A40-41AD-A89A-344B00654544}"), locale("MS\\0x409"),
    DisplayName("xstore_create_and_write_file_sensitive"): Amended]
class XeSqlPkg_xstore_create_and_write_file_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_create_and_write_file_sensitive: XeSqlPkg_xstore_create_and_write_file_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 blob_type;
	[WmiDataId(6), read] uint64 blob_size;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Closing an xstore file."): Amended,
    Guid("{1FEB107B-D4AB-4481-A320-89A5EE5FC339}"), locale("MS\\0x409"),
    DisplayName("xstore_close_file"): Amended]
class XeSqlPkg_xstore_close_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_close_file: XeSqlPkg_xstore_close_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 mapped_errorcode;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Closing an xstore file. Contains sensitive data."): Amended,
    Guid("{03D16AEE-225F-4CDC-81D6-13BA311FDE1B}"), locale("MS\\0x409"),
    DisplayName("xstore_close_file_sensitive"): Amended]
class XeSqlPkg_xstore_close_file_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_close_file_sensitive: XeSqlPkg_xstore_close_file_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 mapped_errorcode;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Reporting an xstore volume detail for debugging purposes."): Amended,
    Guid("{0B93011B-0869-48EC-8485-1D596533C345}"), locale("MS\\0x409"),
    DisplayName("xstore_volume_detail"): Amended]
class XeSqlPkg_xstore_volume_detail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_volume_detail: XeSqlPkg_xstore_volume_detail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  has_agg_volume;
	[WmiDataId(6), read] uint32 volume_type;
	[WmiDataId(7), read] uint32 fcb_volume_type;
	[WmiDataId(8), read] sint8  inferred_tier;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string volume_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string volume_identity;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string alternative_endpoint;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string agg_volume_identity;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string page_blob_tier;
};
		
[dynamic: ToInstance, Description("Reporting an xstore volume detail for debugging purposes. Contains sensitive data."): Amended,
    Guid("{3DE8F39A-3D84-4AD5-9D8D-251103FFF5E8}"), locale("MS\\0x409"),
    DisplayName("xstore_volume_detail_sensitive"): Amended]
class XeSqlPkg_xstore_volume_detail_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_volume_detail_sensitive: XeSqlPkg_xstore_volume_detail_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  has_agg_volume;
	[WmiDataId(6), read] uint32 volume_type;
	[WmiDataId(7), read] uint32 fcb_volume_type;
	[WmiDataId(8), read] sint8  inferred_tier;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string volume_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string volume_identity;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string alternative_endpoint;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string agg_volume_identity;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string page_blob_tier;
};
		
[dynamic: ToInstance, Description("Reporting an xstore update of  volume  for debugging purposes."): Amended,
    Guid("{82eb0847-6fbb-4a88-94a4-704a0551a07e}"), locale("MS\\0x409"),
    DisplayName("xstore_update_volume_detail"): Amended]
class XeSqlPkg_xstore_update_volume_detail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_update_volume_detail: XeSqlPkg_xstore_update_volume_detail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 volume_type;
	[WmiDataId(6), read] uint32 fcb_volume_type;
	[WmiDataId(7), read] sint8  inferred_tier;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string volume_identity;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string page_blob_tier;
};
		
[dynamic: ToInstance, Description("Reporting an xstore update of  volume  for debugging purposes. Contains sensitive data."): Amended,
    Guid("{43820C1B-4298-4A8A-AFE9-4EAC27222DFB}"), locale("MS\\0x409"),
    DisplayName("xstore_update_volume_detail_sensitive"): Amended]
class XeSqlPkg_xstore_update_volume_detail_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_update_volume_detail_sensitive: XeSqlPkg_xstore_update_volume_detail_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 volume_type;
	[WmiDataId(6), read] uint32 fcb_volume_type;
	[WmiDataId(7), read] sint8  inferred_tier;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string volume_identity;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string page_blob_tier;
};
		
[dynamic: ToInstance, Description("The properties of the lease acquire request."): Amended,
    Guid("{A5248136-EEBE-4A95-B4E8-F2D5BFDF4C88}"), locale("MS\\0x409"),
    DisplayName("xstore_acquire_lease"): Amended]
class XeSqlPkg_xstore_acquire_lease: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_acquire_lease: XeSqlPkg_xstore_acquire_lease
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 blob_size;
	[WmiDataId(6), read] uint64 blob_sequence_number;
	[WmiDataId(7), read, 
				XEMapId(110),
				ValueMap { 
					"0", 
					"3", 
					"4", 
					"2", 
					"1", 
					"5", 
					"6" },
				Values { 
					"Available", 
					"Breaking", 
					"Broken", 
					"Expired", 
					"Leased", 
					"LeasedAndChecked", 
					"Max" }
			] uint8 lease_state;
	[WmiDataId(8), read, 
				XEMapId(109),
				ValueMap { 
					"3", 
					"4", 
					"2", 
					"1", 
					"0" },
				Values { 
					"Aborted", 
					"Failed", 
					"Pending", 
					"Success", 
					"Unknown" }
			] uint8 blob_status;
	[WmiDataId(9), read] sint8  is_block_blob;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string app_instance_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string lease_order_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string last_modified;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
};
		
[dynamic: ToInstance, Description("The properties of the lease acquire request."): Amended,
    Guid("{A5248136-EEBE-4A95-B4E8-F2D5BFDF4C88}"), locale("MS\\0x409"),
    DisplayName("xstore_acquire_lease"): Amended]
class XeSqlPkg_xstore_acquire_lease: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xstore_acquire_lease: XeSqlPkg_xstore_acquire_lease
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 blob_size;
	[WmiDataId(6), read] uint64 blob_sequence_number;
	[WmiDataId(7), read, 
				XEMapId(110),
				ValueMap { 
					"0", 
					"3", 
					"4", 
					"2", 
					"1", 
					"5", 
					"6" },
				Values { 
					"Available", 
					"Breaking", 
					"Broken", 
					"Expired", 
					"Leased", 
					"LeasedAndChecked", 
					"Max" }
			] uint8 lease_state;
	[WmiDataId(8), read, 
				XEMapId(109),
				ValueMap { 
					"3", 
					"4", 
					"2", 
					"1", 
					"0" },
				Values { 
					"Aborted", 
					"Failed", 
					"Pending", 
					"Success", 
					"Unknown" }
			] uint8 blob_status;
	[WmiDataId(9), read] sint8  is_block_blob;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string old_app_instance_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string old_lease_order_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string new_app_instance_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string new_lease_order_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string last_modified;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("The properties of the lease acquire request. Contains sensitive data."): Amended,
    Guid("{81449296-8DCA-401E-ACBF-9B77C9DCE65E}"), locale("MS\\0x409"),
    DisplayName("xstore_acquire_lease_sensitive"): Amended]
class XeSqlPkg_xstore_acquire_lease_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_acquire_lease_sensitive: XeSqlPkg_xstore_acquire_lease_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 blob_size;
	[WmiDataId(6), read] uint64 blob_sequence_number;
	[WmiDataId(7), read, 
				XEMapId(110),
				ValueMap { 
					"0", 
					"3", 
					"4", 
					"2", 
					"1", 
					"5", 
					"6" },
				Values { 
					"Available", 
					"Breaking", 
					"Broken", 
					"Expired", 
					"Leased", 
					"LeasedAndChecked", 
					"Max" }
			] uint8 lease_state;
	[WmiDataId(8), read, 
				XEMapId(109),
				ValueMap { 
					"3", 
					"4", 
					"2", 
					"1", 
					"0" },
				Values { 
					"Aborted", 
					"Failed", 
					"Pending", 
					"Success", 
					"Unknown" }
			] uint8 blob_status;
	[WmiDataId(9), read] sint8  is_block_blob;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string old_app_instance_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string old_lease_order_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string new_app_instance_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string new_lease_order_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string last_modified;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Failpoint in BlobAccess."): Amended,
    Guid("{c83bbad0-1d13-469d-bdab-0ff38954ba39}"), locale("MS\\0x409"),
    DisplayName("xstore_crc64_failpoint"): Amended]
class XeSqlPkg_xstore_crc64_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_crc64_failpoint: XeSqlPkg_xstore_crc64_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  ShouldFail;
};
		
[dynamic: ToInstance, Description("Debug xevent for CountRecoveryMgr."): Amended,
    Guid("{5394d4c4-bed3-4534-87ed-d0d4b4917eea}"), locale("MS\\0x409"),
    DisplayName("count_recovery_mgr_debug"): Amended]
class XeSqlPkg_count_recovery_mgr_debug: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class count_recovery_mgr_debug: XeSqlPkg_count_recovery_mgr_debug
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  ShouldFail;
};
		
[dynamic: ToInstance, Description("latency histogram for volume entity."): Amended,
    Guid("{62517a7e-279f-4ea7-a215-fb8a4168cce7}"), locale("MS\\0x409"),
    DisplayName("volume_entity_stats"): Amended]
class XeSqlPkg_volume_entity_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class volume_entity_stats: XeSqlPkg_volume_entity_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 target_latency_very_low_us;
	[WmiDataId(6), read] uint32 target_latency_low_us;
	[WmiDataId(7), read] uint32 target_latency_high_us;
	[WmiDataId(8), read] uint32 target_latency_very_high_us;
	[WmiDataId(9), read] uint64 latency_bucket_very_low;
	[WmiDataId(10), read] uint64 latency_bucket_low;
	[WmiDataId(11), read] uint64 latency_bucket_medium;
	[WmiDataId(12), read] uint64 latency_bucket_high;
	[WmiDataId(13), read] uint64 latency_bucket_moderate_high;
	[WmiDataId(14), read] uint64 latency_total_us;
	[WmiDataId(15), read] uint64 latency_total_us_very_low;
	[WmiDataId(16), read] uint64 latency_total_us_low;
	[WmiDataId(17), read] uint64 latency_total_us_medium;
	[WmiDataId(18), read] uint64 latency_total_us_high;
	[WmiDataId(19), read] uint64 latency_total_us_moderate_high;
	[WmiDataId(20), read] uint64 latency_max_us_very_high;
	[WmiDataId(21), read] uint64 latency_square_sum_ms;
	[WmiDataId(22), read] uint64 latency_square_sum_ms_very_low;
	[WmiDataId(23), read] uint64 latency_square_sum_ms_low;
	[WmiDataId(24), read] uint64 latency_square_sum_ms_medium;
	[WmiDataId(25), read] uint64 latency_square_sum_ms_high;
	[WmiDataId(26), read] uint64 latency_square_sum_ms_moderate_high;
	[WmiDataId(27), read] uint64 total_requested_bytes;
	[WmiDataId(28), read] uint64 total_requested_bytes_very_low;
	[WmiDataId(29), read] uint64 total_requested_bytes_low;
	[WmiDataId(30), read] uint64 total_requested_bytes_medium;
	[WmiDataId(31), read] uint64 total_requested_bytes_high;
	[WmiDataId(32), read] uint64 total_requested_bytes_moderate_high;
	[WmiDataId(33), read] uint64 total_io_count;
	[WmiDataId(34), read] sint8  is_categorized;
	[WmiDataId(35), read] sint8  is_for_log;
	[WmiDataId(36), read] sint8  is_for_write;
	[WmiDataId(37), read] uint8 io_size_category;
	[WmiDataId(38), read, Extension("WmiTime")] uint64 statistics_start_time;
	[WmiDataId(39), read] sint32 volume_no;
	[WmiDataId(40), read] uint32 volume_type;
	[WmiDataId(41), read] sint64 volume_file_count;
	[WmiDataId(42), read] sint8  is_agg_volume;
	[WmiDataId(43), read, StringTermination("NullTerminated"), Format("w")] string volume_name;
	[WmiDataId(44), read, StringTermination("NullTerminated"), Format("w")] string volume_identity;
};
		
[dynamic: ToInstance, Description("The properties of the pfs lease acquire request."): Amended,
    Guid("{7502744d-fbf0-49b1-b863-e9c4e58069e8}"), locale("MS\\0x409"),
    DisplayName("pfs_acquire_lease"): Amended]
class XeSqlPkg_pfs_acquire_lease: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pfs_acquire_lease: XeSqlPkg_pfs_acquire_lease
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sequence_number;
	[WmiDataId(6), read, 
				XEMapId(110),
				ValueMap { 
					"0", 
					"3", 
					"4", 
					"2", 
					"1", 
					"5", 
					"6" },
				Values { 
					"Available", 
					"Breaking", 
					"Broken", 
					"Expired", 
					"Leased", 
					"LeasedAndChecked", 
					"Max" }
			] uint8 lease_state;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string old_app_instance_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string old_lease_order_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string new_app_instance_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string new_lease_order_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string resource;
};
		
[dynamic: ToInstance, Description("Http Call info for PFS."): Amended,
    Guid("{ad61c39a-9868-4300-9948-c0f359093120}"), locale("MS\\0x409"),
    DisplayName("pfs_http_calls"): Amended]
class XeSqlPkg_pfs_http_calls: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pfs_http_calls: XeSqlPkg_pfs_http_calls
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 last_error;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string http_call;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string request_str;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string header;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string value;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string resource;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string point_of_interest;
};
		
[dynamic: ToInstance, Description("The error logging information of pfs marker files."): Amended,
    Guid("{9a43b7b8-70c2-4916-93ab-cc9adbf6d502}"), locale("MS\\0x409"),
    DisplayName("pfs_marker_file_error_logging"): Amended]
class XeSqlPkg_pfs_marker_file_error_logging: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pfs_marker_file_error_logging: XeSqlPkg_pfs_marker_file_error_logging
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string Function_Module;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string Error_Message;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string resource;
};
		
[dynamic: ToInstance, Description("Metadata consistency validation information for PFS"): Amended,
    Guid("{94d48e1c-b9b1-41e3-b112-6ae576b0e846}"), locale("MS\\0x409"),
    DisplayName("pfs_metadata_consistency_validation"): Amended]
class XeSqlPkg_pfs_metadata_consistency_validation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pfs_metadata_consistency_validation: XeSqlPkg_pfs_metadata_consistency_validation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 metadata_validation_result;
	[WmiDataId(6), read] uint32 metdata_mismatch_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string metadata_key;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string metadata_sql_stored_value;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string metadata_marker_file_value;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string resource;
};
		
[dynamic: ToInstance, Description("Output signal for PFS Dynamic Scaling"): Amended,
    Guid("{23f96cc4-847c-46d2-ba35-c5bf443527d4}"), locale("MS\\0x409"),
    DisplayName("pfs_scaling_signal"): Amended]
class XeSqlPkg_pfs_scaling_signal: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class pfs_scaling_signal: XeSqlPkg_pfs_scaling_signal
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 pfs_scaling_signal_type;
	[WmiDataId(6), read] sint8  size_scaleup;
	[WmiDataId(7), read] sint8  latency_scaling_enabled;
	[WmiDataId(8), read] sint8  latency_scaleup;
	[WmiDataId(9), read] sint8  latency_scaling_use_avg;
	[WmiDataId(10), read] sint8  size_scaledown;
	[WmiDataId(11), read] sint8  latency_scaledown;
	[WmiDataId(12), read] sint8  max_bound_scaleup;
	[WmiDataId(13), read] sint8  min_bound_scaleup;
	[WmiDataId(14), read] sint8  min_num_eval_scaledown;
	[WmiDataId(15), read] sint8  max_scaleups_after_scaledown_scaledown;
	[WmiDataId(16), read] sint8  check_previous_size_scaledown;
	[WmiDataId(17), read] sint8  throttling_scaleup;
	[WmiDataId(18), read] sint8  throttling_scaledown;
	[WmiDataId(19), read] sint8  low_io_utilization_period;
	[WmiDataId(20), read] sint8  size_eval_FS_Enabled;
	[WmiDataId(21), read] sint8  latency_eval_FS_Enabled;
	[WmiDataId(22), read] sint8  throttling_eval_FS_Enabled;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string resource;
};
		
[dynamic: ToInstance, Description("Emitted when observed DB replica role transition during evaluation period for PFS dynamic scaling"): Amended,
    Guid("{d5be13a9-57e4-4ac9-99c5-6e0fc8381d62}"), locale("MS\\0x409"),
    DisplayName("pfs_observed_transition_to_secondary"): Amended]
class XeSqlPkg_pfs_observed_transition_to_secondary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pfs_observed_transition_to_secondary: XeSqlPkg_pfs_observed_transition_to_secondary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 minutes_as_primary;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string resource;
};
		
[dynamic: ToInstance, Description("PFS file share stats collected periodically from GetShareStats api"): Amended,
    Guid("{dd672abe-10cf-4fd0-b595-937f6326d8c6}"), locale("MS\\0x409"),
    DisplayName("pfs_file_share_stats"): Amended]
class XeSqlPkg_pfs_file_share_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class pfs_file_share_stats: XeSqlPkg_pfs_file_share_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  share_throttling_stats_reset;
	[WmiDataId(6), read] uint64 throttling_record_start_time_utc;
	[WmiDataId(7), read] uint64 period_ms;
	[WmiDataId(8), read] uint64 egress_throttled_bytes;
	[WmiDataId(9), read] uint64 ingress_throttled_bytes;
	[WmiDataId(10), read] uint64 iops_throttled_request_count;
	[WmiDataId(11), read] uint64 share_snapshot_usage_bytes;
	[WmiDataId(12), read] uint64 share_usage_bytes;
	[WmiDataId(13), read] uint64 total_egress_bytes;
	[WmiDataId(14), read] uint64 total_ingress_bytes;
	[WmiDataId(15), read] uint64 total_request_count;
	[WmiDataId(16), read] uint64 egress_throttled_bytes_delta;
	[WmiDataId(17), read] uint64 ingress_throttled_bytes_delta;
	[WmiDataId(18), read] uint64 iops_throttled_request_count_delta;
	[WmiDataId(19), read] uint64 share_snapshot_usage_bytes_delta;
	[WmiDataId(20), read] uint64 share_usage_bytes_delta;
	[WmiDataId(21), read] uint64 total_egress_bytes_delta;
	[WmiDataId(22), read] uint64 total_ingress_bytes_delta;
	[WmiDataId(23), read] uint64 total_request_count_delta;
};
		
[dynamic: ToInstance, Description("PFS REST API call action."): Amended,
    Guid("{61215292-e0d5-4197-987f-b24578d1f899}"), locale("MS\\0x409"),
    DisplayName("pfs_rest_action"): Amended]
class XeSqlPkg_pfs_rest_action: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pfs_rest_action: XeSqlPkg_pfs_rest_action
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 pfs_access_type;
	[WmiDataId(6), read] uint32 http_response_code;
	[WmiDataId(7), read] uint32 last_error;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string smb_session_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string resource;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string extra_params;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string result_string;
};
		
[dynamic: ToInstance, Description("Indicates the number of I/O requests processed by the IO retry task."): Amended,
    Guid("{0244BDAB-2C85-47DF-852A-CCE670CFDC98}"), locale("MS\\0x409"),
    DisplayName("xio_retry_task_stats"): Amended]
class XeSqlPkg_xio_retry_task_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_retry_task_stats: XeSqlPkg_xio_retry_task_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 queue_size;
	[WmiDataId(6), read] uint32 IOs_retried_successfully;
	[WmiDataId(7), read] uint32 IOs_queued_for_wait;
	[WmiDataId(8), read] uint32 IOs_queued_after_retry;
	[WmiDataId(9), read] uint32 IOs_fast_failed;
	[WmiDataId(10), read] uint32 IOs_failed_after_retry;
	[WmiDataId(11), read] uint32 IOs_failed_after_successful_retry;
};
		
[dynamic: ToInstance, Description("XStore blobs lease renewal stats."): Amended,
    Guid("{5199374B-1FAA-41A6-B319-5BBEDAA4665B}"), locale("MS\\0x409"),
    DisplayName("xio_lease_renewal_task_stats"): Amended]
class XeSqlPkg_xio_lease_renewal_task_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_lease_renewal_task_stats: XeSqlPkg_xio_lease_renewal_task_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 total_lease_count;
	[WmiDataId(6), read] uint64 leases_checked;
	[WmiDataId(7), read] uint64 leases_renewed;
};
		
[dynamic: ToInstance, Description("XStore I/O request statistics."): Amended,
    Guid("{8BC549DC-0FE8-4C25-824B-BD3124080523}"), locale("MS\\0x409"),
    DisplayName("xstore_io_stats"): Amended]
class XeSqlPkg_xstore_io_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_stats: XeSqlPkg_xstore_io_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 total_requests;
	[WmiDataId(6), read] uint64 total_successful_requests;
	[WmiDataId(7), read] uint64 total_throttled_requests;
	[WmiDataId(8), read] uint64 total_other_failed_requests;
	[WmiDataId(9), read] uint64 total_xio_requests;
	[WmiDataId(10), read] uint64 total_bytes;
	[WmiDataId(11), read] uint64 total_requested_bytes;
	[WmiDataId(12), read] uint64 total_microsec;
	[WmiDataId(13), read] uint64 total_successful_microsec;
	[WmiDataId(14), read] uint64 total_outstanding_io;
	[WmiDataId(15), read] uint64 max_microsec_per_request;
	[WmiDataId(16), read] uint64 max_bytes_per_request;
	[WmiDataId(17), read] uint64 total_reads;
	[WmiDataId(18), read] uint64 total_successful_reads;
	[WmiDataId(19), read] uint64 total_throttled_reads;
	[WmiDataId(20), read] uint64 total_other_failed_reads;
	[WmiDataId(21), read] uint64 total_read_bytes;
	[WmiDataId(22), read] uint64 total_requested_read_bytes;
	[WmiDataId(23), read] uint64 total_read_microsec;
	[WmiDataId(24), read] uint64 total_successful_read_microsec;
	[WmiDataId(25), read] uint64 max_bytes_per_read;
	[WmiDataId(26), read] uint64 max_microsec_per_read;
	[WmiDataId(27), read] uint64 total_writes;
	[WmiDataId(28), read] uint64 total_successful_writes;
	[WmiDataId(29), read] uint64 total_throttled_writes;
	[WmiDataId(30), read] uint64 total_other_failed_writes;
	[WmiDataId(31), read] uint64 total_write_bytes;
	[WmiDataId(32), read] uint64 total_requested_write_bytes;
	[WmiDataId(33), read] uint64 total_write_microsec;
	[WmiDataId(34), read] uint64 total_successful_write_microsec;
	[WmiDataId(35), read] uint64 max_bytes_per_write;
	[WmiDataId(36), read] uint64 max_microsec_per_write;
	[WmiDataId(37), read] uint64 total_retries;
	[WmiDataId(38), read] uint64 total_retry_wait_time_ms;
	[WmiDataId(39), read] uint64 period_ms;
	[WmiDataId(40), read] uint64 crc_calc_ms;
	[WmiDataId(41), read] sint8  is_page_blob;
	[WmiDataId(42), read] sint8  inferred_tier;
	[WmiDataId(43), read, StringTermination("NullTerminated"), Format("w")] string page_blob_tier;
	[WmiDataId(44), read, StringTermination("NullTerminated"), Format("w")] string tier_change_timestamp;
	[WmiDataId(45), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(46), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("XStore I/O request statistics."): Amended,
    Guid("{BDD9D3DC-B8F2-4EF0-BBE1-946A2D38A49A}"), locale("MS\\0x409"),
    DisplayName("xstore_io_stats_sensitive"): Amended]
class XeSqlPkg_xstore_io_stats_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_stats_sensitive: XeSqlPkg_xstore_io_stats_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 total_requests;
	[WmiDataId(6), read] uint64 total_successful_requests;
	[WmiDataId(7), read] uint64 total_throttled_requests;
	[WmiDataId(8), read] uint64 total_other_failed_requests;
	[WmiDataId(9), read] uint64 total_xio_requests;
	[WmiDataId(10), read] uint64 total_bytes;
	[WmiDataId(11), read] uint64 total_requested_bytes;
	[WmiDataId(12), read] uint64 total_microsec;
	[WmiDataId(13), read] uint64 total_successful_microsec;
	[WmiDataId(14), read] uint64 total_outstanding_io;
	[WmiDataId(15), read] uint64 max_microsec_per_request;
	[WmiDataId(16), read] uint64 max_bytes_per_request;
	[WmiDataId(17), read] uint64 total_reads;
	[WmiDataId(18), read] uint64 total_successful_reads;
	[WmiDataId(19), read] uint64 total_throttled_reads;
	[WmiDataId(20), read] uint64 total_other_failed_reads;
	[WmiDataId(21), read] uint64 total_read_bytes;
	[WmiDataId(22), read] uint64 total_requested_read_bytes;
	[WmiDataId(23), read] uint64 total_read_microsec;
	[WmiDataId(24), read] uint64 total_successful_read_microsec;
	[WmiDataId(25), read] uint64 max_bytes_per_read;
	[WmiDataId(26), read] uint64 max_microsec_per_read;
	[WmiDataId(27), read] uint64 total_writes;
	[WmiDataId(28), read] uint64 total_successful_writes;
	[WmiDataId(29), read] uint64 total_throttled_writes;
	[WmiDataId(30), read] uint64 total_other_failed_writes;
	[WmiDataId(31), read] uint64 total_write_bytes;
	[WmiDataId(32), read] uint64 total_requested_write_bytes;
	[WmiDataId(33), read] uint64 total_write_microsec;
	[WmiDataId(34), read] uint64 total_successful_write_microsec;
	[WmiDataId(35), read] uint64 max_bytes_per_write;
	[WmiDataId(36), read] uint64 max_microsec_per_write;
	[WmiDataId(37), read] uint64 total_retries;
	[WmiDataId(38), read] uint64 total_retry_wait_time_ms;
	[WmiDataId(39), read] uint64 period_ms;
	[WmiDataId(40), read] uint64 crc_calc_ms;
	[WmiDataId(41), read] sint8  is_page_blob;
	[WmiDataId(42), read] sint8  inferred_tier;
	[WmiDataId(43), read, StringTermination("NullTerminated"), Format("w")] string page_blob_tier;
	[WmiDataId(44), read, StringTermination("NullTerminated"), Format("w")] string tier_change_timestamp;
	[WmiDataId(45), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(46), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{95cfe07a-f3be-46bf-838b-cb42bd63b978}"), locale("MS\\0x409"),
    DisplayName("xstore_io_latency_bucket"): Amended]
class XeSqlPkg_xstore_io_latency_bucket: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_latency_bucket: XeSqlPkg_xstore_io_latency_bucket
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 latency_bucket_us;
	[WmiDataId(6), read] uint64 latency_hits_total;
	[WmiDataId(7), read] uint64 latency_hits_00;
	[WmiDataId(8), read] uint64 latency_hits_01;
	[WmiDataId(9), read] uint64 latency_hits_02;
	[WmiDataId(10), read] uint64 latency_hits_03;
	[WmiDataId(11), read] uint64 latency_hits_04;
	[WmiDataId(12), read] uint64 latency_hits_05;
	[WmiDataId(13), read] uint64 latency_hits_06;
	[WmiDataId(14), read] uint64 latency_hits_07;
	[WmiDataId(15), read] uint64 latency_hits_08;
	[WmiDataId(16), read] uint64 latency_hits_09;
	[WmiDataId(17), read] uint64 latency_hits_10;
	[WmiDataId(18), read] uint64 latency_hits_11;
	[WmiDataId(19), read] uint64 latency_hits_12;
	[WmiDataId(20), read] uint64 latency_hits_13;
	[WmiDataId(21), read] uint64 latency_hits_14;
	[WmiDataId(22), read] uint64 latency_hits_15;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{a39a4852-2017-44bd-9934-c6a373622b36}"), locale("MS\\0x409"),
    DisplayName("xstore_io_latency_bucket_sensitive"): Amended]
class XeSqlPkg_xstore_io_latency_bucket_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_latency_bucket_sensitive: XeSqlPkg_xstore_io_latency_bucket_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 latency_bucket_us;
	[WmiDataId(6), read] uint64 latency_hits_total;
	[WmiDataId(7), read] uint64 latency_hits_00;
	[WmiDataId(8), read] uint64 latency_hits_01;
	[WmiDataId(9), read] uint64 latency_hits_02;
	[WmiDataId(10), read] uint64 latency_hits_03;
	[WmiDataId(11), read] uint64 latency_hits_04;
	[WmiDataId(12), read] uint64 latency_hits_05;
	[WmiDataId(13), read] uint64 latency_hits_06;
	[WmiDataId(14), read] uint64 latency_hits_07;
	[WmiDataId(15), read] uint64 latency_hits_08;
	[WmiDataId(16), read] uint64 latency_hits_09;
	[WmiDataId(17), read] uint64 latency_hits_10;
	[WmiDataId(18), read] uint64 latency_hits_11;
	[WmiDataId(19), read] uint64 latency_hits_12;
	[WmiDataId(20), read] uint64 latency_hits_13;
	[WmiDataId(21), read] uint64 latency_hits_14;
	[WmiDataId(22), read] uint64 latency_hits_15;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Indicates snapshot creation of a blob just before setting the file size to 0 in Sterling."): Amended,
    Guid("{D08CD9B0-53BF-489A-AF64-0E9B75C947AA}"), locale("MS\\0x409"),
    DisplayName("xio_no_delete_snapshot_created"): Amended]
class XeSqlPkg_xio_no_delete_snapshot_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_no_delete_snapshot_created: XeSqlPkg_xio_no_delete_snapshot_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string function_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string snapshot_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Indicates snapshot creation of a blob just before setting the file size to 0 in Sterling. Contains sensitive data."): Amended,
    Guid("{01C239FC-FD05-4D3D-8781-11D6A43007C2}"), locale("MS\\0x409"),
    DisplayName("xio_no_delete_snapshot_created_sensitive"): Amended]
class XeSqlPkg_xio_no_delete_snapshot_created_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_no_delete_snapshot_created_sensitive: XeSqlPkg_xio_no_delete_snapshot_created_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string function_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string snapshot_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("XStore I/O request statistics."): Amended,
    Guid("{23FFCC07-EA74-4E92-ACA4-F8332CCB86C6}"), locale("MS\\0x409"),
    DisplayName("xstore_io_stats_register_blob"): Amended]
class XeSqlPkg_xstore_io_stats_register_blob: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_stats_register_blob: XeSqlPkg_xstore_io_stats_register_blob
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_success;
	[WmiDataId(6), read] sint8  is_lock_error;
	[WmiDataId(7), read] uint64 blob_count;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("XStore I/O request statistics."): Amended,
    Guid("{81ABCE6D-E75F-4A24-859C-66BEDAE1FFEA}"), locale("MS\\0x409"),
    DisplayName("xstore_io_stats_register_blob_sensitive"): Amended]
class XeSqlPkg_xstore_io_stats_register_blob_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_stats_register_blob_sensitive: XeSqlPkg_xstore_io_stats_register_blob_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_success;
	[WmiDataId(6), read] sint8  is_lock_error;
	[WmiDataId(7), read] uint64 blob_count;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("XStore I/O request statistics."): Amended,
    Guid("{714F2265-917D-4A2C-9949-E09A430264B2}"), locale("MS\\0x409"),
    DisplayName("xstore_io_stats_unregister_blob"): Amended]
class XeSqlPkg_xstore_io_stats_unregister_blob: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_stats_unregister_blob: XeSqlPkg_xstore_io_stats_unregister_blob
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_success;
	[WmiDataId(6), read] sint8  is_lock_error;
	[WmiDataId(7), read] uint64 blob_count;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("XStore I/O request statistics."): Amended,
    Guid("{6F4D64F8-8ED5-4A7B-B06B-43DABB857E34}"), locale("MS\\0x409"),
    DisplayName("xstore_io_stats_unregister_blob_sensitive"): Amended]
class XeSqlPkg_xstore_io_stats_unregister_blob_sensitive: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_stats_unregister_blob_sensitive: XeSqlPkg_xstore_io_stats_unregister_blob_sensitive
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_success;
	[WmiDataId(6), read] sint8  is_lock_error;
	[WmiDataId(7), read] uint64 blob_count;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("XStore I/O request statistics."): Amended,
    Guid("{4E7CB2C8-4E2B-4476-94A2-ACE077ABECAE}"), locale("MS\\0x409"),
    DisplayName("xstore_io_stats_snapshot"): Amended]
class XeSqlPkg_xstore_io_stats_snapshot: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_stats_snapshot: XeSqlPkg_xstore_io_stats_snapshot
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_success;
	[WmiDataId(6), read] sint8  is_lock_error;
	[WmiDataId(7), read] uint64 blob_count;
};
		
[dynamic: ToInstance, Description("XStore I/O reset throttling metrics event."): Amended,
    Guid("{B507639D-601A-474D-8209-06352888EF66}"), locale("MS\\0x409"),
    DisplayName("xstore_io_throttling_reset_metric"): Amended]
class XeSqlPkg_xstore_io_throttling_reset_metric: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_throttling_reset_metric: XeSqlPkg_xstore_io_throttling_reset_metric
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string storage_account;
};
		
[dynamic: ToInstance, Description("XStore I/O throttling analyze metrics event."): Amended,
    Guid("{E2D90303-DA68-4947-BDC4-82FD85F98243}"), locale("MS\\0x409"),
    DisplayName("xstore_io_throttling_analyze_metric_finished"): Amended]
class XeSqlPkg_xstore_io_throttling_analyze_metric_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_throttling_analyze_metric_finished: XeSqlPkg_xstore_io_throttling_analyze_metric_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_success;
	[WmiDataId(6), read] sint32 error_number;
	[WmiDataId(7), read] uint64 total_read_bytes_successful;
	[WmiDataId(8), read] uint64 total_read_bytes_failed;
	[WmiDataId(9), read] uint64 total_read_requests_successful;
	[WmiDataId(10), read] uint64 total_read_requests_failed;
	[WmiDataId(11), read] uint64 total_write_bytes_successful;
	[WmiDataId(12), read] uint64 total_write_bytes_failed;
	[WmiDataId(13), read] uint64 total_write_requests_successful;
	[WmiDataId(14), read] uint64 total_write_requests_failed;
	[WmiDataId(15), read] uint64 interval_duration_milliseconds;
	[WmiDataId(16), read] uint64 sleep_duration_milliseconds;
	[WmiDataId(17), read] uint64 sleep_duration_microseconds;
	[WmiDataId(18), read] uint32 consecutive_no_error_intervals;
	[WmiDataId(19), read] uint32 consecutive_no_usage_intervals;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string storage_account;
};
		
[dynamic: ToInstance, Description("XStore I/O throttling handler has been successfully initialized."): Amended,
    Guid("{364C57CD-C84A-46DA-905F-47F9D6CB5016}"), locale("MS\\0x409"),
    DisplayName("xstore_io_throttling_handler_initialized"): Amended]
class XeSqlPkg_xstore_io_throttling_handler_initialized: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_throttling_handler_initialized: XeSqlPkg_xstore_io_throttling_handler_initialized
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 immediate_retry;
};
		
[dynamic: ToInstance, Description("XStore I/O throttling handler status."): Amended,
    Guid("{19BAC48C-F5D8-4ADC-B4AF-D8CEFE67A135}"), locale("MS\\0x409"),
    DisplayName("xstore_io_throttling_handler_status"): Amended]
class XeSqlPkg_xstore_io_throttling_handler_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_throttling_handler_status: XeSqlPkg_xstore_io_throttling_handler_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_success;
	[WmiDataId(6), read] sint32 error_number;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string storage_account;
};
		
[dynamic: ToInstance, Description("XStore I/O throttling handler has removed storage account."): Amended,
    Guid("{2749891E-A4D4-42AB-9F06-C16E3FA606E8}"), locale("MS\\0x409"),
    DisplayName("xstore_io_throttling_storage_account_removed"): Amended]
class XeSqlPkg_xstore_io_throttling_storage_account_removed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xstore_io_throttling_storage_account_removed: XeSqlPkg_xstore_io_throttling_storage_account_removed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_success;
	[WmiDataId(6), read] sint32 error_number;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string storage_account;
};
		
[dynamic: ToInstance, Description("Various statistics about the sort"): Amended,
    Guid("{a85c6145-0131-4c0b-a63d-3ed4de618112}"), locale("MS\\0x409"),
    DisplayName("sort_statistics_tracing"): Amended]
class XeSqlPkg_sort_statistics_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sort_statistics_tracing: XeSqlPkg_sort_statistics_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint16 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read] uint32 input_phase_max_buffers;
	[WmiDataId(10), read] uint32 input_phase_max_fanout;
	[WmiDataId(11), read] uint32 input_phase_max_io;
	[WmiDataId(12), read] uint32 input_phase_bobs;
	[WmiDataId(13), read] uint32 merge_phase_max_buffers;
	[WmiDataId(14), read] uint32 merge_phase_max_fanout;
	[WmiDataId(15), read] uint32 merge_phase_bobs;
	[WmiDataId(16), read] uint32 max_memory_grant;
	[WmiDataId(17), read] uint64 estimate_total_rows;
	[WmiDataId(18), read] sint8  is_fast_key_optimized;
	[WmiDataId(19), read] sint8  is_unique;
	[WmiDataId(20), read] sint8  is_partitioned;
	[WmiDataId(21), read] sint8  is_manual;
};
		
[dynamic: ToInstance, Description("Various statistics about the sort"): Amended,
    Guid("{a85c6145-0131-4c0b-a63d-3ed4de618112}"), locale("MS\\0x409"),
    DisplayName("sort_statistics_tracing"): Amended]
class XeSqlPkg_sort_statistics_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sort_statistics_tracing: XeSqlPkg_sort_statistics_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read] uint32 input_phase_max_buffers;
	[WmiDataId(10), read] uint32 input_phase_max_fanout;
	[WmiDataId(11), read] uint32 input_phase_max_io;
	[WmiDataId(12), read] uint32 input_phase_bobs;
	[WmiDataId(13), read] uint32 merge_phase_max_buffers;
	[WmiDataId(14), read] uint32 merge_phase_max_fanout;
	[WmiDataId(15), read] uint32 merge_phase_bobs;
	[WmiDataId(16), read] uint32 max_memory_grant;
	[WmiDataId(17), read] uint64 estimate_total_rows;
	[WmiDataId(18), read] sint8  is_fast_key_optimized;
	[WmiDataId(19), read] sint8  is_unique;
	[WmiDataId(20), read] sint8  is_partitioned;
	[WmiDataId(21), read] sint8  is_manual;
};
		
[dynamic: ToInstance, Description("Sort adding merge runs to the merge run directory"): Amended,
    Guid("{9b51ca5a-586e-4a3c-8824-b697397ea8a5}"), locale("MS\\0x409"),
    DisplayName("sort_add_run_tracing"): Amended]
class XeSqlPkg_sort_add_run_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sort_add_run_tracing: XeSqlPkg_sort_add_run_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read] uint32 run_id;
	[WmiDataId(10), read] uint32 run_length_in_pages;
	[WmiDataId(11), read] uint16 run_first_page_file_id;
	[WmiDataId(12), read] uint32 run_first_page_page_id;
};
		
[dynamic: ToInstance, Description("Sort internal events and state changes"): Amended,
    Guid("{714c92f6-24f7-4843-877d-c911212f5c48}"), locale("MS\\0x409"),
    DisplayName("sort_state_change_tracing"): Amended]
class XeSqlPkg_sort_state_change_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sort_state_change_tracing: XeSqlPkg_sort_state_change_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint16 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read, 
				XEMapId(15),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"SortInputStateChange", 
					"SortMergeStateChange", 
					"SortPostInputStateChange", 
					"SortOutputStateChange", 
					"SortFinishedStateChange", 
					"SortCleanupStateChange", 
					"SortBestMerge" }
			] uint32 event_id;
};
		
[dynamic: ToInstance, Description("Sort internal events and state changes"): Amended,
    Guid("{714c92f6-24f7-4843-877d-c911212f5c48}"), locale("MS\\0x409"),
    DisplayName("sort_state_change_tracing"): Amended]
class XeSqlPkg_sort_state_change_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sort_state_change_tracing: XeSqlPkg_sort_state_change_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read, 
				XEMapId(15),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"SortInputStateChange", 
					"SortMergeStateChange", 
					"SortPostInputStateChange", 
					"SortOutputStateChange", 
					"SortFinishedStateChange", 
					"SortCleanupStateChange", 
					"SortBestMerge" }
			] uint32 event_id;
};
		
[dynamic: ToInstance, Description("Sort adjusting the memory grant of an in-progress sort"): Amended,
    Guid("{0bf34831-9f30-4ecc-8026-aff22891b01b}"), locale("MS\\0x409"),
    DisplayName("sort_memory_grant_adjustment"): Amended]
class XeSqlPkg_sort_memory_grant_adjustment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sort_memory_grant_adjustment: XeSqlPkg_sort_memory_grant_adjustment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint16 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read] uint32 previous_grant_in_pages;
	[WmiDataId(10), read] uint32 requested_grant_in_pages;
	[WmiDataId(11), read] uint32 grant_delta_in_pages;
	[WmiDataId(12), read] uint32 new_grant_in_pages;
};
		
[dynamic: ToInstance, Description("Sort adjusting the memory grant of an in-progress sort"): Amended,
    Guid("{0bf34831-9f30-4ecc-8026-aff22891b01b}"), locale("MS\\0x409"),
    DisplayName("sort_memory_grant_adjustment"): Amended]
class XeSqlPkg_sort_memory_grant_adjustment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sort_memory_grant_adjustment: XeSqlPkg_sort_memory_grant_adjustment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read] uint32 previous_grant_in_pages;
	[WmiDataId(10), read] uint32 requested_grant_in_pages;
	[WmiDataId(11), read] uint32 grant_delta_in_pages;
	[WmiDataId(12), read] uint32 new_grant_in_pages;
};
		
[dynamic: ToInstance, Description("Emitted before a sort batch commits during the input and output phases"): Amended,
    Guid("{c919e0d0-a0a2-40af-b628-5b008796ef0b}"), locale("MS\\0x409"),
    DisplayName("resumable_sort_batch_precommit"): Amended]
class XeSqlPkg_resumable_sort_batch_precommit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_sort_batch_precommit: XeSqlPkg_resumable_sort_batch_precommit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 sort_id;
	[WmiDataId(7), read] sint8  is_input_phase;
};
		
[dynamic: ToInstance, Description("Emitted before a sort batch commits during the input and output phases"): Amended,
    Guid("{c919e0d0-a0a2-40af-b628-5b008796ef0b}"), locale("MS\\0x409"),
    DisplayName("resumable_sort_batch_precommit"): Amended]
class XeSqlPkg_resumable_sort_batch_precommit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class resumable_sort_batch_precommit: XeSqlPkg_resumable_sort_batch_precommit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 sort_id;
	[WmiDataId(7), read] sint8  is_input_phase;
	[WmiDataId(8), read] sint8  is_force_commit;
};
		
[dynamic: ToInstance, Description("Emitted after a sort batch commits during the input and output phases"): Amended,
    Guid("{81e7202d-1be6-4899-a9f9-eb2bac1d2cb7}"), locale("MS\\0x409"),
    DisplayName("resumable_sort_batch_postcommit"): Amended]
class XeSqlPkg_resumable_sort_batch_postcommit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_sort_batch_postcommit: XeSqlPkg_resumable_sort_batch_postcommit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 index_id;
	[WmiDataId(7), read] uint32 sort_id;
	[WmiDataId(8), read] uint64 phase_rowcount;
	[WmiDataId(9), read] sint8  is_input_phase;
};
		
[dynamic: ToInstance, Description("Emitted after a sort batch commits during the input and output phases"): Amended,
    Guid("{81e7202d-1be6-4899-a9f9-eb2bac1d2cb7}"), locale("MS\\0x409"),
    DisplayName("resumable_sort_batch_postcommit"): Amended]
class XeSqlPkg_resumable_sort_batch_postcommit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class resumable_sort_batch_postcommit: XeSqlPkg_resumable_sort_batch_postcommit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 index_id;
	[WmiDataId(7), read] uint32 sort_id;
	[WmiDataId(8), read] uint64 phase_rowcount;
	[WmiDataId(9), read] sint8  is_input_phase;
	[WmiDataId(10), read] sint8  is_force_commit;
};
		
[dynamic: ToInstance, Description("Emitted just after a merge has been prepared."): Amended,
    Guid("{ead5775a-9a65-4080-90d3-34409d0c2c1c}"), locale("MS\\0x409"),
    DisplayName("resumable_merge_prepare"): Amended]
class XeSqlPkg_resumable_merge_prepare: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_merge_prepare: XeSqlPkg_resumable_merge_prepare
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 sort_id;
	[WmiDataId(7), read] uint16 rd1_idx;
	[WmiDataId(8), read] uint32 first_merge_idx;
	[WmiDataId(9), read] uint32 last_merge_idx;
	[WmiDataId(10), read] sint8  is_final_merge;
};
		
[dynamic: ToInstance, Description("Emitted after an intermediate merge has been completed on-disk but has not yet been comitted."): Amended,
    Guid("{2cee06d8-3ab0-4172-aa66-968d87f19409}"), locale("MS\\0x409"),
    DisplayName("resumable_merge_complete"): Amended]
class XeSqlPkg_resumable_merge_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_merge_complete: XeSqlPkg_resumable_merge_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 sort_id;
	[WmiDataId(7), read] uint16 rd1_idx;
	[WmiDataId(8), read] uint32 first_merge_idx;
	[WmiDataId(9), read] uint32 last_merge_idx;
	[WmiDataId(10), read] sint8  is_final_merge;
};
		
[dynamic: ToInstance, Description("Produces a deadlock report in XML format."): Amended,
    Guid("{8A7E5DF0-BFE2-11DC-878F-68B855D89593}"), locale("MS\\0x409"),
    DisplayName("xml_deadlock_report"): Amended]
class XeSqlPkg_xml_deadlock_report: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xml_deadlock_report: XeSqlPkg_xml_deadlock_report
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string xml_report;
};
		
[dynamic: ToInstance, Description("Produces a deadlock report for a victim, with information scoped to the victim's database."): Amended,
    Guid("{C3BBEB62-36C5-41A0-A617-AC7DAD87AF48}"), locale("MS\\0x409"),
    DisplayName("database_xml_deadlock_report"): Amended]
class XeSqlPkg_database_xml_deadlock_report: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class database_xml_deadlock_report: XeSqlPkg_database_xml_deadlock_report
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 deadlock_cycle_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string server_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string xml_report;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string is_primary_replica;
};
		
[dynamic: ToInstance, Description("Emit a metric when a deadlock report for a victim is produced."): Amended,
    Guid("{40803447-3035-47FF-B24F-FF31363E97E1}"), locale("MS\\0x409"),
    DisplayName("database_xml_deadlock_report_mdm"): Amended]
class XeSqlPkg_database_xml_deadlock_report_mdm: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_xml_deadlock_report_mdm: XeSqlPkg_database_xml_deadlock_report_mdm
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 deadlock;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string ServerResourceId;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string ElasticPoolResourceId;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string ClusterName;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string NodeName;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string AppName;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string AppTypeName;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string DatabaseName;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string ServerName;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Produces a deadlock report in XML format. Filter sensitive info."): Amended,
    Guid("{6f2bdd50-0f04-448e-a118-94117f054ce1}"), locale("MS\\0x409"),
    DisplayName("xml_deadlock_report_filtered"): Amended]
class XeSqlPkg_xml_deadlock_report_filtered: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xml_deadlock_report_filtered: XeSqlPkg_xml_deadlock_report_filtered
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string xml_report_filtered;
};
		
[dynamic: ToInstance, Description("Index leaf page disfavored during scan"): Amended,
    Guid("{04cbd3a5-1876-4edb-931b-1147387bb098}"), locale("MS\\0x409"),
    DisplayName("leaf_page_disfavored"): Amended]
class XeSqlPkg_leaf_page_disfavored: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class leaf_page_disfavored: XeSqlPkg_leaf_page_disfavored
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Index leaf page disfavored during scan"): Amended,
    Guid("{04cbd3a5-1876-4edb-931b-1147387bb098}"), locale("MS\\0x409"),
    DisplayName("leaf_page_disfavored"): Amended]
class XeSqlPkg_leaf_page_disfavored: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class leaf_page_disfavored: XeSqlPkg_leaf_page_disfavored
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Prefetch issued for a whole extent instead of a single page"): Amended,
    Guid("{8e440d52-1374-4bea-975d-856c00753bdb}"), locale("MS\\0x409"),
    DisplayName("prefetch_extent"): Amended]
class XeSqlPkg_prefetch_extent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class prefetch_extent: XeSqlPkg_prefetch_extent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 extent_id;
};
		
[dynamic: ToInstance, Description("Prefetch issued for a whole extent instead of a single page"): Amended,
    Guid("{8e440d52-1374-4bea-975d-856c00753bdb}"), locale("MS\\0x409"),
    DisplayName("prefetch_extent"): Amended]
class XeSqlPkg_prefetch_extent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class prefetch_extent: XeSqlPkg_prefetch_extent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 extent_id;
};
		
[dynamic: ToInstance, Description("Occurs when fastloadcontext is activated / deactivated"): Amended,
    Guid("{32BE64E4-1E0C-439E-85F6-2B42B4D92A69}"), locale("MS\\0x409"),
    DisplayName("fastloadcontext_enabled"): Amended]
class XeSqlPkg_fastloadcontext_enabled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fastloadcontext_enabled: XeSqlPkg_fastloadcontext_enabled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read, 
				XEMapId(87),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"FastLoadContext_Activated", 
					"FastLoadContext_Deactivated" }
			] uint8 state;
};
		
[dynamic: ToInstance, Description("Occurs after page compression cache is initialized during decompression"): Amended,
    Guid("{3807DD78-6CC2-4115-B447-8001AE14E9A6}"), locale("MS\\0x409"),
    DisplayName("page_compression_cache_init_complete"): Amended]
class XeSqlPkg_page_compression_cache_init_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_compression_cache_init_complete: XeSqlPkg_page_compression_cache_init_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs after page has been compressed in-memory before being flushed"): Amended,
    Guid("{D94C2D07-B42A-4CB8-8DA4-88FDF3C2C1AB}"), locale("MS\\0x409"),
    DisplayName("page_encryption_prewrite_complete"): Amended]
class XeSqlPkg_page_encryption_prewrite_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_encryption_prewrite_complete: XeSqlPkg_page_encryption_prewrite_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Occurs when a text info record is read by the replication logreader."): Amended,
    Guid("{E7902D45-5A7D-447C-A189-55B339C3BCA6}"), locale("MS\\0x409"),
    DisplayName("logreader_process_text_info"): Amended]
class XeSqlPkg_logreader_process_text_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_process_text_info: XeSqlPkg_logreader_process_text_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 log_operation;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 text_pointer_timestamp;
	[WmiDataId(8), read] uint16 text_pointer_file_id;
	[WmiDataId(9), read] uint32 text_pointer_page_id;
	[WmiDataId(10), read] uint16 text_pointer_slot_id;
	[WmiDataId(11), read] sint32 coloffset;
	[WmiDataId(12), read] uint32 text_info_flags;
	[WmiDataId(13), read] uint64 text_size;
	[WmiDataId(14), read] uint64 offset;
	[WmiDataId(15), read] uint64 old_size;
	[WmiDataId(16), read] uint64 new_size;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when a text pointer is being read by the replication logreader."): Amended,
    Guid("{E4A3CAFA-588A-4CE2-BCFC-CC1CB6482400}"), locale("MS\\0x409"),
    DisplayName("logreader_process_text_ptr"): Amended]
class XeSqlPkg_logreader_process_text_ptr: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_process_text_ptr: XeSqlPkg_logreader_process_text_ptr
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 log_operation;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 text_pointer_timestamp;
	[WmiDataId(8), read] uint16 text_pointer_file_id;
	[WmiDataId(9), read] uint32 text_pointer_page_id;
	[WmiDataId(10), read] uint16 text_pointer_slot_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when a filestream info record is read by the replication logreader."): Amended,
    Guid("{6ECD9A46-32C8-4F30-BA81-36A4B9D4BC62}"), locale("MS\\0x409"),
    DisplayName("logreader_process_filestream_info"): Amended]
class XeSqlPkg_logreader_process_filestream_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_process_filestream_info: XeSqlPkg_logreader_process_filestream_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 log_operation;
	[WmiDataId(6), read] uint64 fsi_rowset_id;
	[WmiDataId(7), read] uint64 fsi_txt_file_id_low;
	[WmiDataId(8), read] uint64 fsi_txt_file_id_high;
	[WmiDataId(9), read] sint32 fsi_col_offset;
	[WmiDataId(10), read] uint64 fsi_current_lsn;
	[WmiDataId(11), read] uint64 fsi_base_lsn;
	[WmiDataId(12), read] uint16 fsi_filegroup_id;
	[WmiDataId(13), read] uint32 fsi_db_id;
	[WmiDataId(14), read] uint32 fsi_info_flags;
	[WmiDataId(15), read] uint64 fsi_size;
	[WmiDataId(16), read] uint64 fsi_offset;
	[WmiDataId(17), read] uint64 fsi_old_size;
	[WmiDataId(18), read] uint64 fsi_new_size;
	[WmiDataId(19), read] uint64 log_rowset_id;
	[WmiDataId(20), read] uint64 log_txt_file_id_low;
	[WmiDataId(21), read] uint64 log_txt_file_id_high;
	[WmiDataId(22), read] uint64 log_current_lsn;
	[WmiDataId(23), read] uint64 log_base_lsn;
	[WmiDataId(24), read] uint16 log_filegroup_id;
	[WmiDataId(25), read] uint32 log_db_id;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string begin_lsn;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string end_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when the replication logreader encounters a partial rollback for a particular transaction."): Amended,
    Guid("{1CD7767B-6331-437C-9D82-DED4549407FE}"), locale("MS\\0x409"),
    DisplayName("logreader_add_compensation_range"): Amended]
class XeSqlPkg_logreader_add_compensation_range: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_add_compensation_range: XeSqlPkg_logreader_add_compensation_range
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdesid_low;
	[WmiDataId(6), read] uint16 xdesid_high;
	[WmiDataId(7), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 last_op_code;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string first_lsn;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string last_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when the replication logreader agent reads an EOR record."): Amended,
    Guid("{0F0D6117-E946-4021-AE52-503E1110E7AE}"), locale("MS\\0x409"),
    DisplayName("logreader_add_eor"): Amended]
class XeSqlPkg_logreader_add_eor: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_add_eor: XeSqlPkg_logreader_add_eor
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdesid_low;
	[WmiDataId(6), read] uint16 xdesid_high;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint32 originator_db_version;
	[WmiDataId(9), read] uint32 originator_pubid;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string originator;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string originator_db;
	[WmiDataId(12), read, Extension("Variant")] object originator_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
};
		
[dynamic: ToInstance, Description("Outputs transactions which are added to the repl hash table as well as some hash table statistics."): Amended,
    Guid("{0F0D6117-E946-4021-AE52-503E1110E7AF}"), locale("MS\\0x409"),
    DisplayName("logreader_add_tran_info"): Amended]
class XeSqlPkg_logreader_add_tran_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_add_tran_info: XeSqlPkg_logreader_add_tran_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdesid_low;
	[WmiDataId(6), read] uint16 xdesid_high;
	[WmiDataId(7), read] uint32 num_hashed_trans;
	[WmiDataId(8), read] uint32 num_compensated_trans;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string begin_xact_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string last_xact_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string hardened_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string first_begin_xact_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string last_end_xact_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when the replication logreader agent executes a horizontal filtering proc."): Amended,
    Guid("{3E7E7095-732C-4787-B2F5-63861C9D50FB}"), locale("MS\\0x409"),
    DisplayName("logreader_apply_filter_proc"): Amended]
class XeSqlPkg_logreader_apply_filter_proc: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_apply_filter_proc: XeSqlPkg_logreader_apply_filter_proc
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 filter_proc_id;
	[WmiDataId(7), read] sint8  use_row;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
};
		
[dynamic: ToInstance, Description("Outputs the replnextlsn value from the database table that the first replcmds scan uses as a starting point."): Amended,
    Guid("{53b98f69-44b3-4a9d-800c-6e1ff1d81930}"), locale("MS\\0x409"),
    DisplayName("logreader_start_scan"): Amended]
class XeSqlPkg_logreader_start_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_start_scan: XeSqlPkg_logreader_start_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string start_scan_lsn;
};
		
[dynamic: ToInstance, Description("This is event will be fired from the distribution agent on a sync event."): Amended,
    Guid("{45D16F20-3710-4FF0-B6DE-6E67BFF4BA89}"), locale("MS\\0x409"),
    DisplayName("repl_subscriber_sync"): Amended]
class XeSqlPkg_repl_subscriber_sync: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repl_subscriber_sync: XeSqlPkg_repl_subscriber_sync
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 distributor_major_version;
	[WmiDataId(6), read] uint16 distributor_minor_version;
	[WmiDataId(7), read] uint16 distributor_build_number;
	[WmiDataId(8), read] uint32 total_run_time;
	[WmiDataId(9), read] uint32 total_work_time;
	[WmiDataId(10), read] uint32 total_num_trans;
	[WmiDataId(11), read] real32 num_trans_per_sec;
	[WmiDataId(12), read] uint32 total_num_cmds;
	[WmiDataId(13), read] real32 num_cmds_per_sec;
	[WmiDataId(14), read] uint32 total_skipped_cmds;
	[WmiDataId(15), read] uint32 total_idle_time;
	[WmiDataId(16), read] uint32 agent_id;
	[WmiDataId(17), read] uint32 num_trans_since_last_event;
	[WmiDataId(18), read] uint32 num_cmds_since_last_event;
	[WmiDataId(19), read] uint64 total_num_bytes;
	[WmiDataId(20), read] uint64 num_bytes_since_last_event;
};
		
[dynamic: ToInstance, Description("This event will be fired from the subscriber on a sync error."): Amended,
    Guid("{24c93cc0-5522-421c-a02e-bd2988c6b9e4}"), locale("MS\\0x409"),
    DisplayName("repl_subscriber_sync_status"): Amended]
class XeSqlPkg_repl_subscriber_sync_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repl_subscriber_sync_status: XeSqlPkg_repl_subscriber_sync_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 sync_status;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string sync_summary;
};
		
[dynamic: ToInstance, Description("This is event will be fired from the distribution agent on an init event."): Amended,
    Guid("{F2F97C6A-C8E7-432B-8AFF-678727485B09}"), locale("MS\\0x409"),
    DisplayName("repl_subscriber_init"): Amended]
class XeSqlPkg_repl_subscriber_init: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repl_subscriber_init: XeSqlPkg_repl_subscriber_init
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 distributor_major_version;
	[WmiDataId(6), read] uint16 distributor_minor_version;
	[WmiDataId(7), read] uint16 distributor_build_number;
};
		
[dynamic: ToInstance, Description("This event will be fired from the Snapshot Agent on a status change."): Amended,
    Guid("{0B48145D-665E-48D3-9678-8395B5DC630C}"), locale("MS\\0x409"),
    DisplayName("repl_snapshot_status"): Amended]
class XeSqlPkg_repl_snapshot_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repl_snapshot_status: XeSqlPkg_repl_snapshot_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 agent_id;
	[WmiDataId(6), read] uint32 publication_id;
	[WmiDataId(7), read] uint32 db_id;
	[WmiDataId(8), read] uint32 runstatus;
	[WmiDataId(9), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 time;
	[WmiDataId(11), read] uint32 duration;
	[WmiDataId(12), read] uint32 delivered_transactions;
	[WmiDataId(13), read] uint32 delivered_commands;
	[WmiDataId(14), read] real64 delivery_rate;
	[WmiDataId(15), read] uint32 error_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string comments;
};
		
[dynamic: ToInstance, Description("This event will be fired from the LogReader Agent on a status change."): Amended,
    Guid("{A825534E-2A6B-4EE1-B548-D538E8A74C73}"), locale("MS\\0x409"),
    DisplayName("repl_logreader_status"): Amended]
class XeSqlPkg_repl_logreader_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repl_logreader_status: XeSqlPkg_repl_logreader_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 agent_id;
	[WmiDataId(6), read] uint32 publication_id;
	[WmiDataId(7), read] uint32 db_id;
	[WmiDataId(8), read] uint32 runstatus;
	[WmiDataId(9), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 time;
	[WmiDataId(11), read] uint32 duration;
	[WmiDataId(12), read] uint32 delivered_transactions;
	[WmiDataId(13), read] uint32 delivered_commands;
	[WmiDataId(14), read] uint32 average_commands;
	[WmiDataId(15), read] real64 delivery_rate;
	[WmiDataId(16), read] uint32 delivery_time;
	[WmiDataId(17), read] uint32 delivery_latency;
	[WmiDataId(18), read] uint32 error_id;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string comments;
};
		
[dynamic: ToInstance, Description("This event will be fired from the Distribution Agent on a status change."): Amended,
    Guid("{549A6CC1-FFAA-491A-AE3D-696525A3FF53}"), locale("MS\\0x409"),
    DisplayName("repl_distribution_status"): Amended]
class XeSqlPkg_repl_distribution_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repl_distribution_status: XeSqlPkg_repl_distribution_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 agent_id;
	[WmiDataId(6), read] uint32 publication_id;
	[WmiDataId(7), read] uint32 db_id;
	[WmiDataId(8), read] uint32 runstatus;
	[WmiDataId(9), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 time;
	[WmiDataId(11), read] uint32 duration;
	[WmiDataId(12), read] uint32 delivered_transactions;
	[WmiDataId(13), read] uint32 delivered_commands;
	[WmiDataId(14), read] uint32 average_commands;
	[WmiDataId(15), read] real64 delivery_rate;
	[WmiDataId(16), read] uint32 delivery_latency;
	[WmiDataId(17), read] real64 average_delivery_rate;
	[WmiDataId(18), read] uint32 average_delivery_latency;
	[WmiDataId(19), read] uint64 total_delivered_commands;
	[WmiDataId(20), read] uint32 error_id;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string comments;
};
		
[dynamic: ToInstance, Description("Peer to Peer Replication Conflict Detection Policy Information."): Amended,
    Guid("{2719D9B2-5BF7-4FC2-B0BA-C8E8B9028936}"), locale("MS\\0x409"),
    DisplayName("repl_p2p_conflict_detection_policy_status"): Amended]
class XeSqlPkg_repl_p2p_conflict_detection_policy_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repl_p2p_conflict_detection_policy_status: XeSqlPkg_repl_p2p_conflict_detection_policy_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 publisher_id;
	[WmiDataId(6), read] uint32 publication_count_with_regular_conflict_detection_policy;
	[WmiDataId(7), read] uint32 publication_count_with_lww_conflict_detection_policy;
};
		
[dynamic: ToInstance, Description("This event will be fired from replication code when an error occurs."): Amended,
    Guid("{fa0f6503-b84f-4e0a-8224-b981332b6267}"), locale("MS\\0x409"),
    DisplayName("repl_error"): Amended]
class XeSqlPkg_repl_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repl_error: XeSqlPkg_repl_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_id;
	[WmiDataId(6), read, Extension("WmiTime")] uint64 time;
	[WmiDataId(7), read] sint32 command_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string source_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string error_code;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string error_text;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string xact_seqno;
};
		
[dynamic: ToInstance, Description("This event will be fired from replication code on changes related to replication metadata."): Amended,
    Guid("{226023C5-48CD-4853-BAC0-37188E1BFC52}"), locale("MS\\0x409"),
    DisplayName("repl_metadata_change"): Amended]
class XeSqlPkg_repl_metadata_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repl_metadata_change: XeSqlPkg_repl_metadata_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string metadata;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string action;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string context;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string description;
};
		
[dynamic: ToInstance, Description("CDC Logscan session Information"): Amended,
    Guid("{B9396CBC-72C0-4c79-9F8D-A14E19AF7264}"), locale("MS\\0x409"),
    DisplayName("cdc_session"): Amended]
class XeSqlPkg_cdc_session: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cdc_session: XeSqlPkg_cdc_session
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 session_id;
	[WmiDataId(6), read] sint32 phase_number;
	[WmiDataId(7), read] sint64 duration;
	[WmiDataId(8), read] sint32 error_count;
	[WmiDataId(9), read] sint64 tran_count;
	[WmiDataId(10), read] sint64 log_record_count;
	[WmiDataId(11), read] sint64 schema_change_count;
	[WmiDataId(12), read] sint64 command_count;
	[WmiDataId(13), read] sint64 latency;
	[WmiDataId(14), read] sint64 empty_scan_count;
	[WmiDataId(15), read] sint32 failed_sessions_count;
	[WmiDataId(16), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(17), read, Extension("WmiTime")] uint64 end_time;
	[WmiDataId(18), read, Extension("WmiTime")] uint64 last_commit_time;
	[WmiDataId(19), read, Extension("WmiTime")] uint64 last_commit_cdc_time;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string start_lsn;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string end_lsn;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string last_commit_lsn;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string first_begin_cdc_lsn;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string last_commit_cdc_lsn;
};
		
[dynamic: ToInstance, Description("CDC Error Information"): Amended,
    Guid("{4626C7A0-15C5-44d8-8CC2-AE0F453B7D54}"), locale("MS\\0x409"),
    DisplayName("cdc_error"): Amended]
class XeSqlPkg_cdc_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cdc_error: XeSqlPkg_cdc_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 session_id;
	[WmiDataId(6), read] sint32 phase_number;
	[WmiDataId(7), read] sint32 error_number;
	[WmiDataId(8), read] sint32 error_severity;
	[WmiDataId(9), read] sint32 error_state;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 entry_time;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string error_message;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string start_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string begin_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string sequence_value;
};
		
[dynamic: ToInstance, Description("CDC Scheduler Information"): Amended,
    Guid("{1B170761-44E0-41B2-8D8C-012F81C7EB03}"), locale("MS\\0x409"),
    DisplayName("cdc_scheduler"): Amended]
class XeSqlPkg_cdc_scheduler: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cdc_scheduler: XeSqlPkg_cdc_scheduler
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(6),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17" },
				Values { 
					"CaptureJobEnqueued", 
					"CaptureJobStarted", 
					"CaptureJobFinished", 
					"CleanupJobEnqueued", 
					"CleanupJobStarted", 
					"CleanupJobFinished", 
					"TimerTaskSkipped", 
					"TimerTaskStarted", 
					"TimerTaskFinished", 
					"TimerTaskFailed", 
					"CaptureJobFailed", 
					"CleanupJobFailed", 
					"TimerTaskProgress", 
					"CaptureJobProgress", 
					"CleanupJobProgress", 
					"SchedulerGeneric", 
					"SchedulerCacheUpdate" }
			] uint32 event_type;
	[WmiDataId(6), read] sint64 duration;
	[WmiDataId(7), read] sint32 database_id;
	[WmiDataId(8), read, Extension("Guid")] guid job_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string event_details;
	[WmiDataId(10), read, Extension("Guid")] guid logical_database_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary log gets full because of CDC/Repl and needs to be throttled."): Amended,
    Guid("{3D980FB8-5A75-486F-8910-178FF8535537}"), locale("MS\\0x409"),
    DisplayName("cdc_log_throttle"): Amended]
class XeSqlPkg_cdc_log_throttle: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cdc_log_throttle: XeSqlPkg_cdc_log_throttle
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint32 error_severity;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read] sint8  throttle_on;
	[WmiDataId(9), read] uint64 throttled_log_generation_rate;
	[WmiDataId(10), read] uint64 sku_max_log_generation_rate;
	[WmiDataId(11), read] uint64 percent_throttle_open;
	[WmiDataId(12), read] uint64 log_size_throttling_threshold;
	[WmiDataId(13), read] uint64 current_log_size;
	[WmiDataId(14), read] uint64 max_log_size;
	[WmiDataId(15), read, 
				XEMapId(185),
				ValueMap { 
					"3", 
					"4", 
					"9", 
					"1", 
					"7", 
					"5", 
					"8", 
					"16", 
					"19", 
					"2", 
					"14", 
					"15", 
					"0", 
					"13", 
					"18", 
					"6", 
					"11", 
					"10", 
					"12", 
					"17" },
				Values { 
					"ActiveBackup", 
					"ActiveTransaction", 
					"AvailabilityReplica", 
					"CheckpointLsn", 
					"CopyOnWriteCreation", 
					"DatabaseMirroring", 
					"DiagnosticScan", 
					"HkCheckpoint", 
					"HoldupArraySize", 
					"LogBackup", 
					"LogConsolidationHost", 
					"LogHostedBackups", 
					"NoHoldup", 
					"OldestPage", 
					"Other", 
					"ReplicationXact", 
					"SEReplActiveCatchup", 
					"SEReplCatchupQueue", 
					"SEReplTemporaryReservation", 
					"SLogScan" }
			] sint32 log_truncation_holdup;
	[WmiDataId(16), read] uint64 hs_lsn_dist;
	[WmiDataId(17), read] uint64 hs_lsn_dist_prev;
	[WmiDataId(18), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(19), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(20), read, Extension("Guid")] guid database_replica_id;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("CDC Log I/O throttling manager events (create, delete, error)"): Amended,
    Guid("{05ABBDC9-C16F-461C-989D-E53A844B92EC}"), locale("MS\\0x409"),
    DisplayName("cdc_log_throttle_manager"): Amended]
class XeSqlPkg_cdc_log_throttle_manager: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cdc_log_throttle_manager: XeSqlPkg_cdc_log_throttle_manager
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint32 error_severity;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read] sint32 database_id;
	[WmiDataId(9), read] sint8  enabled;
};
		
[dynamic: ToInstance, Description("CDC DDL Handling Session Information"): Amended,
    Guid("{FC349D4F-FFC1-40F2-A301-947423CB20F6}"), locale("MS\\0x409"),
    DisplayName("cdc_ddl_session"): Amended]
class XeSqlPkg_cdc_ddl_session: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cdc_ddl_session: XeSqlPkg_cdc_ddl_session
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 old_ct_object_id;
	[WmiDataId(6), read] uint32 new_ct_object_id;
	[WmiDataId(7), read] uint64 num_ct_per_capture_instance;
	[WmiDataId(8), read] uint32 source_object_id;
	[WmiDataId(9), read, 
				XEMapId(13),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"AddDdlLogsInTrigger", 
					"CreateNewChangeTable", 
					"AlterActiveChangeTable" }
			] uint32 ddl_phase;
	[WmiDataId(10), read, 
				XEMapId(12),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"AddColumn", 
					"DropColumn", 
					"AlterColumn" }
			] uint32 ddl_type;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 ddl_time;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string ddl_lsn;
};
		
[dynamic: ToInstance, Description("Change data capture cleanup job status. Returns information every 5 minutes."): Amended,
    Guid("{2DAC1BF0-E113-4889-954A-D4FB08A3FE05}"), locale("MS\\0x409"),
    DisplayName("cdc_cleanup_job_status"): Amended]
class XeSqlPkg_cdc_cleanup_job_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cdc_cleanup_job_status: XeSqlPkg_cdc_cleanup_job_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 change_table_id;
	[WmiDataId(6), read] sint64 retention;
	[WmiDataId(7), read] sint64 threshold;
	[WmiDataId(8), read] sint64 change_table_delete_count;
	[WmiDataId(9), read] sint64 lsn_time_mapping_delete_count;
	[WmiDataId(10), read] sint64 cleanup_error;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string low_water_mark;
};
		
[dynamic: ToInstance, Description("This event captures log scan operations telemetry through Replication and Change Data Capture (CDC) phases 1 through 7.Returns session transactions as they are processed."): Amended,
    Guid("{57BE31E0-D4B9-4F2A-876D-C54A522EFDCB}"), locale("MS\\0x409"),
    DisplayName("repl_logscan_session"): Amended]
class XeSqlPkg_repl_logscan_session: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repl_logscan_session: XeSqlPkg_repl_logscan_session
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 session_id;
	[WmiDataId(6), read] sint32 phase_number;
	[WmiDataId(7), read, 
				XEMapId(10),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"phase_start", 
					"phase_end", 
					"phase_progress", 
					"phase_CompleteBatchPopulating", 
					"phase_PopulateLsnTimeMappingTable" }
			] uint32 phase_state_name;
	[WmiDataId(8), read] sint64 max_trans;
	[WmiDataId(9), read] sint64 command_count;
	[WmiDataId(10), read] sint64 tran_count;
	[WmiDataId(11), read] sint64 log_record_count;
	[WmiDataId(12), read] sint64 schema_change_count;
	[WmiDataId(13), read] sint64 tran_completed;
	[WmiDataId(14), read] sint64 articles_completed;
	[WmiDataId(15), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string start_lsn;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string end_lsn;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string last_commit_lsn;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string first_begin_cdc_lsn;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string last_commit_cdc_lsn;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string wait_stats;
};
		
[dynamic: ToInstance, Description("ReplDone Information"): Amended,
    Guid("{1c757eb7-370c-4e34-b1ef-136c3dd0f217}"), locale("MS\\0x409"),
    DisplayName("repldone_session"): Amended]
class XeSqlPkg_repldone_session: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class repldone_session: XeSqlPkg_repldone_session
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 session_id;
	[WmiDataId(6), read] sint64 time;
	[WmiDataId(7), read] sint32 reset;
	[WmiDataId(8), read] sint64 numtrans;
	[WmiDataId(9), read, 
				XEMapId(11),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"repldone_start", 
					"repldone_end", 
					"repldone_progress", 
					"repldone_failure" }
			] uint32 repldone_phase_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string tracking_boundary_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string xact_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string xact_seqno;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string dist_backup_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string dist_last_lsn;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string repl_begin_lsn;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string repl_next_lsn;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string tracked_begin_lsn;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string tracked_next_lsn;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string wait_stats;
};
		
[dynamic: ToInstance, Description("Synapse Link Scheduler Information"): Amended,
    Guid("{bf6d83ac-ec98-46db-9a6f-1e847f3135e8}"), locale("MS\\0x409"),
    DisplayName("synapse_link_scheduler"): Amended]
class XeSqlPkg_synapse_link_scheduler: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_scheduler: XeSqlPkg_synapse_link_scheduler
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(7),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"SynapseTimerTaskFailed", 
					"SynapseTimerTaskSkipped", 
					"SynapseLinkMiscTrace", 
					"SynapseLinkMiscError", 
					"SynapseLinkPublishWorkerFailed", 
					"SynapseLinkPublishWorkerPoolWorkCompleted" }
			] uint32 event_type;
	[WmiDataId(6), read] sint64 duration;
	[WmiDataId(7), read] sint32 database_id;
	[WmiDataId(8), read, Extension("Guid")] guid job_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string event_details;
	[WmiDataId(10), read, Extension("Guid")] guid logical_database_id;
};
		
[dynamic: ToInstance, Description("Error events from Synapse Link components"): Amended,
    Guid("{b97509b2-7fb6-4169-88b5-66961d69baf0}"), locale("MS\\0x409"),
    DisplayName("synapse_link_error"): Amended]
class XeSqlPkg_synapse_link_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_error: XeSqlPkg_synapse_link_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 error;
	[WmiDataId(7), read] sint32 severity;
	[WmiDataId(8), read] sint32 state;
	[WmiDataId(9), read, Extension("Guid")] guid table_group_id;
	[WmiDataId(10), read, Extension("Guid")] guid job_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string component;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string event_details;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string state_str;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string table_version;
};
		
[dynamic: ToInstance, Description("Called after a data export file is added to snapshot_end manifest entry"): Amended,
    Guid("{b090f82f-31ab-469d-8ee9-1c0c1207f7ef}"), locale("MS\\0x409"),
    DisplayName("synapse_link_addfilesnapshotendentry"): Amended]
class XeSqlPkg_synapse_link_addfilesnapshotendentry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_addfilesnapshotendentry: XeSqlPkg_synapse_link_addfilesnapshotendentry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 blob_size_in_bytes;
	[WmiDataId(7), read, Extension("Guid")] guid table_group_id;
	[WmiDataId(8), read, Extension("Guid")] guid job_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string lzn_blob_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string table_version;
};
		
[dynamic: ToInstance, Description("Called when all files have been added a snapshot end entry"): Amended,
    Guid("{410e91ed-b6d1-45e4-95ce-7dca77627c92}"), locale("MS\\0x409"),
    DisplayName("synapse_link_totalsnapshotcount"): Amended]
class XeSqlPkg_synapse_link_totalsnapshotcount: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_totalsnapshotcount: XeSqlPkg_synapse_link_totalsnapshotcount
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 total_bytes_blobs;
	[WmiDataId(7), read] sint32 total_blob_count;
	[WmiDataId(8), read, Extension("Guid")] guid table_group_id;
	[WmiDataId(9), read, Extension("Guid")] guid job_id;
	[WmiDataId(10), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string table_version;
};
		
[dynamic: ToInstance, Description("Called in LandingZoneParquetExporter at the beginning of data snapshot functionality"): Amended,
    Guid("{c01180ae-ce47-4098-9d33-73b417b1567c}"), locale("MS\\0x409"),
    DisplayName("synapse_link_start_data_snapshot"): Amended]
class XeSqlPkg_synapse_link_start_data_snapshot: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_start_data_snapshot: XeSqlPkg_synapse_link_start_data_snapshot
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read, Extension("Guid")] guid table_group_id;
	[WmiDataId(7), read, Extension("Guid")] guid job_id;
	[WmiDataId(8), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string table_version;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string begin_lsn;
};
		
[dynamic: ToInstance, Description("Called in LandingZoneParquetExporter at the end of successful data snapshot functionality"): Amended,
    Guid("{627641b4-b5b4-471f-a824-d6f1984f9fa5}"), locale("MS\\0x409"),
    DisplayName("synapse_link_end_data_snapshot"): Amended]
class XeSqlPkg_synapse_link_end_data_snapshot: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_end_data_snapshot: XeSqlPkg_synapse_link_end_data_snapshot
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 time64_duration;
	[WmiDataId(7), read, Extension("Guid")] guid table_group_id;
	[WmiDataId(8), read, Extension("Guid")] guid job_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string table_version;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string end_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string wait_stats;
};
		
[dynamic: ToInstance, Description("Synapse Link Buffering Row Data"): Amended,
    Guid("{4756650E-3B20-4C5C-8C68-147E462D191B}"), locale("MS\\0x409"),
    DisplayName("synapse_link_buffering_row_data"): Amended]
class XeSqlPkg_synapse_link_buffering_row_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_buffering_row_data: XeSqlPkg_synapse_link_buffering_row_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 table_id;
	[WmiDataId(7), read] sint32 row_total_columns;
	[WmiDataId(8), read] uint32 row_buffer_allocation_bytes;
	[WmiDataId(9), read] uint64 total_buffer_allocation_bytes;
	[WmiDataId(10), read] uint32 pmo_cpages_in_use;
	[WmiDataId(11), read, Extension("Guid")] guid table_lzn_id;
};
		
[dynamic: ToInstance, Description("Synapse Link info"): Amended,
    Guid("{919FC752-17CF-4B6C-8998-A3797EC68A8D}"), locale("MS\\0x409"),
    DisplayName("synapse_link_info"): Amended]
class XeSqlPkg_synapse_link_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_info: XeSqlPkg_synapse_link_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint8  table_group_enabled;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read, 
				XEMapId(9),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"SYNAPSE_CHANGE_TABLE_ENABLED", 
					"SYNAPSE_CHANGE_TABLE_EXPORTING", 
					"SYNAPSE_CHANGE_TABLE_EXPORTED", 
					"SYNAPSE_CHANGE_TABLE_ACTIVE", 
					"SYNAPSE_CHANGE_TABLE_DISABLED" }
			] uint32 table_state;
	[WmiDataId(9), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(10), read, Extension("Guid")] guid table_group_id;
	[WmiDataId(11), read, Extension("Guid")] guid job_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string component;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string table_group_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string table_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string synapse_work_group_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string version;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string disable_lsn;
};
		
[dynamic: ToInstance, Description("Synapse Link trace"): Amended,
    Guid("{13e7b666-8e7d-4381-8dc4-fcdd93766415}"), locale("MS\\0x409"),
    DisplayName("synapse_link_trace"): Amended]
class XeSqlPkg_synapse_link_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_trace: XeSqlPkg_synapse_link_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(7), read, Extension("Guid")] guid table_group_id;
	[WmiDataId(8), read, Extension("Guid")] guid job_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string component;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string event_details;
};
		
[dynamic: ToInstance, Description("Synapse Link Call Back Events"): Amended,
    Guid("{B67160F0-3124-4884-B789-54D1BDDFB354}"), locale("MS\\0x409"),
    DisplayName("synapse_link_library"): Amended]
class XeSqlPkg_synapse_link_library: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_library: XeSqlPkg_synapse_link_library
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(8),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9" },
				Values { 
					"LznFileCreate", 
					"LznFileClose", 
					"LznFileAppend", 
					"LznFileRead", 
					"LznFileFindFirst", 
					"LznFileFindNext", 
					"LznFileFindClose", 
					"LznMemAlloc", 
					"LznMemFree", 
					"LznLogWrite" }
			] uint32 event_type;
	[WmiDataId(7), read] uint64 file_handle;
	[WmiDataId(8), read] uint64 io_size;
	[WmiDataId(9), read, Extension("Guid")] guid table_group_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Synapse Link performance"): Amended,
    Guid("{4cd8d4d7-0126-4f99-b74d-0766f2641570}"), locale("MS\\0x409"),
    DisplayName("synapse_link_perf"): Amended]
class XeSqlPkg_synapse_link_perf: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_perf: XeSqlPkg_synapse_link_perf
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint32 init_time;
	[WmiDataId(7), read] uint32 tran_time;
	[WmiDataId(8), read] uint32 setup_time;
	[WmiDataId(9), read] uint32 command_time;
	[WmiDataId(10), read] uint32 publish_time;
	[WmiDataId(11), read] uint32 commit_time;
	[WmiDataId(12), read] sint32 tran_count;
	[WmiDataId(13), read, Extension("Guid")] guid logical_database_id;
};
		
[dynamic: ToInstance, Description("Synapse Link Capture Cycles Throttling"): Amended,
    Guid("{36cab3fa-070e-42fa-a848-0d7827b8fdda}"), locale("MS\\0x409"),
    DisplayName("synapse_link_capture_throttling"): Amended]
class XeSqlPkg_synapse_link_capture_throttling: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_capture_throttling: XeSqlPkg_synapse_link_capture_throttling
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint32 throttled_cycles;
	[WmiDataId(7), read] uint32 tables_count;
	[WmiDataId(8), read] uint32 buffers_count;
	[WmiDataId(9), read, Extension("Guid")] guid logical_database_id;
};
		
[dynamic: ToInstance, Description("Failpoint while the snapshot is ongoing"): Amended,
    Guid("{fa0ff4f9-ca22-4d88-ab3d-5da74c4bb0c8}"), locale("MS\\0x409"),
    DisplayName("synapse_link_ongoing_snapshot_failpoint"): Amended]
class XeSqlPkg_synapse_link_ongoing_snapshot_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_ongoing_snapshot_failpoint: XeSqlPkg_synapse_link_ongoing_snapshot_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint while the snapshot is ongoing and after data export"): Amended,
    Guid("{bf1daa55-b9fc-4401-a808-f76623584bf6}"), locale("MS\\0x409"),
    DisplayName("synapse_link_ongoing_snapshot_failpoint_after_dataexport"): Amended]
class XeSqlPkg_synapse_link_ongoing_snapshot_failpoint_after_dataexport: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_ongoing_snapshot_failpoint_after_dataexport: XeSqlPkg_synapse_link_ongoing_snapshot_failpoint_after_dataexport
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint right after commit snapshot"): Amended,
    Guid("{164b6dbe-1a59-4b48-9d30-90bb60299493}"), locale("MS\\0x409"),
    DisplayName("synapse_link_commit_snapshot_failpoint"): Amended]
class XeSqlPkg_synapse_link_commit_snapshot_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_commit_snapshot_failpoint: XeSqlPkg_synapse_link_commit_snapshot_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint right after data export for snapshot completed"): Amended,
    Guid("{5661D83A-992C-4288-B806-B94A57CF7BEE}"), locale("MS\\0x409"),
    DisplayName("synapse_link_after_data_export_failpoint"): Amended]
class XeSqlPkg_synapse_link_after_data_export_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_after_data_export_failpoint: XeSqlPkg_synapse_link_after_data_export_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint while the capture job is ongoing."): Amended,
    Guid("{fdbff80f-0360-41d1-bf06-7ac5f676ed9f}"), locale("MS\\0x409"),
    DisplayName("synapse_link_ongoing_capture_failpoint"): Amended]
class XeSqlPkg_synapse_link_ongoing_capture_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_ongoing_capture_failpoint: XeSqlPkg_synapse_link_ongoing_capture_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint while the capture job is ongoing but before the log scan. This is used to test the concurrent add topic and table case."): Amended,
    Guid("{8f35327b-1ad5-482b-8f63-f7166fe57c53}"), locale("MS\\0x409"),
    DisplayName("synapse_link_ongoing_capture_failpoint_before_log_scan"): Amended]
class XeSqlPkg_synapse_link_ongoing_capture_failpoint_before_log_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_ongoing_capture_failpoint_before_log_scan: XeSqlPkg_synapse_link_ongoing_capture_failpoint_before_log_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint right after capture finish the scan"): Amended,
    Guid("{76c189da-ca23-467e-b6b2-51beb1406e2c}"), locale("MS\\0x409"),
    DisplayName("synapse_link_finish_capture_failpoint"): Amended]
class XeSqlPkg_synapse_link_finish_capture_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_finish_capture_failpoint: XeSqlPkg_synapse_link_finish_capture_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint right after publish finish writing CSV"): Amended,
    Guid("{375f1aa6-0dd1-4433-9f70-0d5e136a06b7}"), locale("MS\\0x409"),
    DisplayName("synapse_link_finish_publish_failpoint"): Amended]
class XeSqlPkg_synapse_link_finish_publish_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_finish_publish_failpoint: XeSqlPkg_synapse_link_finish_publish_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint while publish is ongoing."): Amended,
    Guid("{cc515b97-cfba-43c6-8d28-8083dec1e8c0}"), locale("MS\\0x409"),
    DisplayName("synapse_link_ongoing_publish_failpoint"): Amended]
class XeSqlPkg_synapse_link_ongoing_publish_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_ongoing_publish_failpoint: XeSqlPkg_synapse_link_ongoing_publish_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint before commit writes manifest"): Amended,
    Guid("{65d84a0b-7742-40dc-aca7-4b686e301b34}"), locale("MS\\0x409"),
    DisplayName("synapse_link_before_commit_failpoint"): Amended]
class XeSqlPkg_synapse_link_before_commit_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_before_commit_failpoint: XeSqlPkg_synapse_link_before_commit_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint right before commit writes manifest"): Amended,
    Guid("{8089e0f6-ba6f-401c-b881-fd504b74641e}"), locale("MS\\0x409"),
    DisplayName("synapse_link_before_commit_failpoint2"): Amended]
class XeSqlPkg_synapse_link_before_commit_failpoint2: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_before_commit_failpoint2: XeSqlPkg_synapse_link_before_commit_failpoint2
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint right after commit finish writing manifest"): Amended,
    Guid("{1dda5a3c-af1b-4501-90fc-415b3045af76}"), locale("MS\\0x409"),
    DisplayName("synapse_link_finish_commit_failpoint"): Amended]
class XeSqlPkg_synapse_link_finish_commit_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_finish_commit_failpoint: XeSqlPkg_synapse_link_finish_commit_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Failpoint right after retrieving the table version LSN"): Amended,
    Guid("{b6c43088-aec0-45f6-bc23-9e2ec3d198a1}"), locale("MS\\0x409"),
    DisplayName("synapse_link_retrieved_table_version_lsn_failpoint"): Amended]
class XeSqlPkg_synapse_link_retrieved_table_version_lsn_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_retrieved_table_version_lsn_failpoint: XeSqlPkg_synapse_link_retrieved_table_version_lsn_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("When enabled, all even successful CheckPredicate calls create an error string to test the string concat code."): Amended,
    Guid("{415f3e49-bb41-444c-bc4e-9ad9f2e516d4}"), locale("MS\\0x409"),
    DisplayName("synapse_link_checkpredicate_failpoint"): Amended]
class XeSqlPkg_synapse_link_checkpredicate_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_checkpredicate_failpoint: XeSqlPkg_synapse_link_checkpredicate_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Generic Synapse Link failpoint event. Can be reused for different purposes."): Amended,
    Guid("{72ABB1FA-917E-4285-B151-0A443C5BC72D}"), locale("MS\\0x409"),
    DisplayName("synapse_link_generic_failpoint"): Amended]
class XeSqlPkg_synapse_link_generic_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_link_generic_failpoint: XeSqlPkg_synapse_link_generic_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 table_id;
	[WmiDataId(7), read] sint32 scope_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string scope;
};
		
[dynamic: ToInstance, Description("Database recovery at the beginning of user transaction rollback stage."): Amended,
    Guid("{528080ed-634e-409d-a704-3b7f30382dae}"), locale("MS\\0x409"),
    DisplayName("recovery_in_rollback"): Amended]
class XeSqlPkg_recovery_in_rollback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_in_rollback: XeSqlPkg_recovery_in_rollback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("Database recovery at the beginning of user transaction rollback stage."): Amended,
    Guid("{528080ed-634e-409d-a704-3b7f30382dae}"), locale("MS\\0x409"),
    DisplayName("recovery_in_rollback"): Amended]
class XeSqlPkg_recovery_in_rollback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class recovery_in_rollback: XeSqlPkg_recovery_in_rollback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] sint8  database_recovered_signalled;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Database recovery at the end of physical recovery stage."): Amended,
    Guid("{5282f5c3-1f52-40f2-abba-69b3c85503db}"), locale("MS\\0x409"),
    DisplayName("recovery_in_physical"): Amended]
class XeSqlPkg_recovery_in_physical: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_in_physical: XeSqlPkg_recovery_in_physical
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("File manager delete or mark file entries from master database and this database."): Amended,
    Guid("{589c346b-6e88-404c-9465-b9105e46eecb}"), locale("MS\\0x409"),
    DisplayName("delete_or_mark_file"): Amended]
class XeSqlPkg_delete_or_mark_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class delete_or_mark_file: XeSqlPkg_delete_or_mark_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("A new and unused database Id is found and reserved."): Amended,
    Guid("{db072c9a-85ea-4da4-a017-92eb0cfc42f6}"), locale("MS\\0x409"),
    DisplayName("database_creation_dbid_reserve"): Amended]
class XeSqlPkg_database_creation_dbid_reserve: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_creation_dbid_reserve: XeSqlPkg_database_creation_dbid_reserve
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Indicates stages and processing times for hardening a log block."): Amended,
    Guid("{1A6F68AE-7653-4A0E-AB77-81CB5E83CA78}"), locale("MS\\0x409"),
    DisplayName("recovery_unit_harden_log_timestamps"): Amended]
class XeSqlPkg_recovery_unit_harden_log_timestamps: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_unit_harden_log_timestamps: XeSqlPkg_recovery_unit_harden_log_timestamps
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 processing_time;
	[WmiDataId(6), read] uint64 start_timestamp;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint64 log_block_id;
	[WmiDataId(9), read] uint64 hadren_log_start_timestamp;
	[WmiDataId(10), read] uint64 log_flush_start_timestamp;
	[WmiDataId(11), read] uint64 participant_harden_start_timestamp;
	[WmiDataId(12), read] uint64 wait_log_flush_start_timestamp;
};
		
[dynamic: ToInstance, Description("A database recovery unit metadata is inserted in masterDB on local brick."): Amended,
    Guid("{b077cffd-f8b7-4d6c-9ece-9e9eddd68d35}"), locale("MS\\0x409"),
    DisplayName("recovery_unit_metadata_create"): Amended]
class XeSqlPkg_recovery_unit_metadata_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_unit_metadata_create: XeSqlPkg_recovery_unit_metadata_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 recovery_unit_id;
	[WmiDataId(7), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("Begin the request to create a database segment at some remote or local brick from the local brick."): Amended,
    Guid("{00910bb9-e9b9-44cf-8232-82ed3c1795ac}"), locale("MS\\0x409"),
    DisplayName("database_segment_creation_begin"): Amended]
class XeSqlPkg_database_segment_creation_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_segment_creation_begin: XeSqlPkg_database_segment_creation_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 brick_id;
	[WmiDataId(8), read] uint32 local_brick_id;
};
		
[dynamic: ToInstance, Description("The request to create a database segment at some remote or local brick is finished."): Amended,
    Guid("{78a61b9c-7443-4e7b-ad0c-a68f092b6ec3}"), locale("MS\\0x409"),
    DisplayName("database_segment_creation_end"): Amended]
class XeSqlPkg_database_segment_creation_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_segment_creation_end: XeSqlPkg_database_segment_creation_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 brick_id;
	[WmiDataId(8), read] uint32 local_brick_id;
};
		
[dynamic: ToInstance, Description("user data is dropped, and logical metadata are truncated in one matrix database segment."): Amended,
    Guid("{c3d5adf8-b2d6-47e6-af6f-262e4cb592ef}"), locale("MS\\0x409"),
    DisplayName("recovery_unit_metadata_truncate_data_drop"): Amended]
class XeSqlPkg_recovery_unit_metadata_truncate_data_drop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_unit_metadata_truncate_data_drop: XeSqlPkg_recovery_unit_metadata_truncate_data_drop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 recovery_unit_id;
};
		
[dynamic: ToInstance, Description("Occurs when the file manager started to modify a database file name."): Amended,
    Guid("{09b02254-272b-4ff7-ab59-0b184cd9f23a}"), locale("MS\\0x409"),
    DisplayName("modify_file_name"): Amended]
class XeSqlPkg_modify_file_name: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class modify_file_name: XeSqlPkg_modify_file_name
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] sint8  is_log_file;
	[WmiDataId(9), read] sint8  is_physical_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string new_name;
};
		
[dynamic: ToInstance, Description("Occurs when the file manager starts validating a file declaration."): Amended,
    Guid("{dba2227b-ff94-434d-aed7-df7cfb9ad5c8}"), locale("MS\\0x409"),
    DisplayName("validate_file"): Amended]
class XeSqlPkg_validate_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class validate_file: XeSqlPkg_validate_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] uint32 filegroup_id;
	[WmiDataId(9), read] sint8  is_log_file;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_logical_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_physical_name;
};
		
[dynamic: ToInstance, Description("Failure encountered in recreating a file."): Amended,
    Guid("{4E5595D8-014B-4C15-8002-B8418EDA66DE}"), locale("MS\\0x409"),
    DisplayName("file_recreate_failure"): Amended]
class XeSqlPkg_file_recreate_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_recreate_failure: XeSqlPkg_file_recreate_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string file_name;
};
		
[dynamic: ToInstance, Description("The files of a database segment are remapped with sys.master_files system table."): Amended,
    Guid("{0a1a426a-36cc-44d5-8c67-3b49911b29ca}"), locale("MS\\0x409"),
    DisplayName("brick_files_metadata_remap"): Amended]
class XeSqlPkg_brick_files_metadata_remap: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class brick_files_metadata_remap: XeSqlPkg_brick_files_metadata_remap
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("The recovery unit files metadata, sys.database_files, of a database segment is copied from the sys.master_files system table."): Amended,
    Guid("{19a557e6-5bb0-4d4d-a6c3-2e2279f0366e}"), locale("MS\\0x409"),
    DisplayName("recovery_unit_file_metadata_copy"): Amended]
class XeSqlPkg_recovery_unit_file_metadata_copy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_unit_file_metadata_copy: XeSqlPkg_recovery_unit_file_metadata_copy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("File manager created information for a physical file group information in metadata."): Amended,
    Guid("{39a93030-5667-4c14-950d-5fa538ae47d3}"), locale("MS\\0x409"),
    DisplayName("physical_filegroup_create"): Amended]
class XeSqlPkg_physical_filegroup_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class physical_filegroup_create: XeSqlPkg_physical_filegroup_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 filegroup_id;
	[WmiDataId(7), read] uint32 filegroup_log_id;
	[WmiDataId(8), read] uint32 logical_filegroup_id;
	[WmiDataId(9), read] uint32 recovery_unit_id;
	[WmiDataId(10), read] uint32 database_segment_id;
	[WmiDataId(11), read, Extension("Guid")] guid filegroup_guid;
};
		
[dynamic: ToInstance, Description("Occurs when all the files for a database segment have been attached."): Amended,
    Guid("{651ab5e8-82ba-4a6f-a705-6e68edb2bd96}"), locale("MS\\0x409"),
    DisplayName("all_database_segment_files_attach"): Amended]
class XeSqlPkg_all_database_segment_files_attach: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class all_database_segment_files_attach: XeSqlPkg_all_database_segment_files_attach
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 recovery_unit_id;
	[WmiDataId(8), read] uint32 files_count;
};
		
[dynamic: ToInstance, Description("One database segment begins starting."): Amended,
    Guid("{502b0c19-c7a7-4986-a270-0e5cb0822bae}"), locale("MS\\0x409"),
    DisplayName("database_startup_begin"): Amended]
class XeSqlPkg_database_startup_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_startup_begin: XeSqlPkg_database_startup_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("The data structure DBTable is initialized according to registered information in Master database catalogs."): Amended,
    Guid("{2307e2f9-2035-4abb-a1b0-a87d95d51c72}"), locale("MS\\0x409"),
    DisplayName("dbtable_initialize"): Amended]
class XeSqlPkg_dbtable_initialize: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbtable_initialize: XeSqlPkg_dbtable_initialize
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("The startup process of DBTable data structure is done successfully."): Amended,
    Guid("{4f9954ba-579b-4721-b47b-169e38d3f60c}"), locale("MS\\0x409"),
    DisplayName("dbtable_startup"): Amended]
class XeSqlPkg_dbtable_startup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbtable_startup: XeSqlPkg_dbtable_startup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("The Database is migrated to MatrixDB segment."): Amended,
    Guid("{c6c7361e-f3dc-4890-b6e9-4ca02b91d432}"), locale("MS\\0x409"),
    DisplayName("database_migrate_to_matrix"): Amended]
class XeSqlPkg_database_migrate_to_matrix: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_migrate_to_matrix: XeSqlPkg_database_migrate_to_matrix
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 recovery_unit_id;
	[WmiDataId(7), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("The database is opened at one brick successfully and a shared lock is held by the user."): Amended,
    Guid("{3e1d4cda-0b7b-48dc-af30-01fbc23bd5e9}"), locale("MS\\0x409"),
    DisplayName("database_open"): Amended]
class XeSqlPkg_database_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_open: XeSqlPkg_database_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("the new database segment id is updated at the boot block and clone tables for matrix."): Amended,
    Guid("{3f728c0d-a24d-4f18-9162-323f72efc6b2}"), locale("MS\\0x409"),
    DisplayName("recovery_unit_new_dbsegment_id_set"): Amended]
class XeSqlPkg_recovery_unit_new_dbsegment_id_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_unit_new_dbsegment_id_set: XeSqlPkg_recovery_unit_new_dbsegment_id_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 recovery_unit_id;
	[WmiDataId(7), read] uint32 old_database_segment_id;
	[WmiDataId(8), read] uint32 new_database_segment_id;
};
		
[dynamic: ToInstance, Description("The state of a database segment is changed in the local database segment"): Amended,
    Guid("{595cea72-c2c1-4a89-91ad-87a22223cfec}"), locale("MS\\0x409"),
    DisplayName("database_segment_state_change"): Amended]
class XeSqlPkg_database_segment_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_segment_state_change: XeSqlPkg_database_segment_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 local_database_segment_id;
	[WmiDataId(8), read, 
				XEMapId(172),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 previous_state;
	[WmiDataId(9), read, 
				XEMapId(172),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 new_state;
};
		
[dynamic: ToInstance, Description("Matrix Database aggregate state is changed"): Amended,
    Guid("{d6ecf6eb-ed37-4c79-83c6-145a00fee12d}"), locale("MS\\0x409"),
    DisplayName("matrix_database_state_change"): Amended]
class XeSqlPkg_matrix_database_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class matrix_database_state_change: XeSqlPkg_matrix_database_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(172),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 previous_state;
	[WmiDataId(7), read, 
				XEMapId(172),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 new_state;
};
		
[dynamic: ToInstance, Description("One database segment sent a state change message to the primary database segment"): Amended,
    Guid("{398add46-e1b3-4111-8996-682b146c8e21}"), locale("MS\\0x409"),
    DisplayName("database_segment_state_change_notification"): Amended]
class XeSqlPkg_database_segment_state_change_notification: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_segment_state_change_notification: XeSqlPkg_database_segment_state_change_notification
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 sender_brick_id;
	[WmiDataId(8), read] uint32 receiver_brick_id;
	[WmiDataId(9), read, 
				XEMapId(172),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 new_segment_state;
	[WmiDataId(10), read, 
				XEMapId(172),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 new_matrix_state;
};
		
[dynamic: ToInstance, Description("The primary database segment received the state of the secondary database segment"): Amended,
    Guid("{9ef9b62d-19af-4267-a15a-59d648968c2d}"), locale("MS\\0x409"),
    DisplayName("database_poll_segment_state"): Amended]
class XeSqlPkg_database_poll_segment_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_poll_segment_state: XeSqlPkg_database_poll_segment_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 sender_brick_id;
	[WmiDataId(7), read] uint32 receiver_brick_id;
	[WmiDataId(8), read] uint32 remote_database_segment_id;
	[WmiDataId(9), read, 
				XEMapId(172),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 remote_database_segment_state;
};
		
[dynamic: ToInstance, Description("Database DDL or operation agent starts to execute the local operation upon receiving a valid request from a remote brick"): Amended,
    Guid("{34e0d11c-71b6-4efd-873e-c24a371c58dd}"), locale("MS\\0x409"),
    DisplayName("database_agent_local_operation_begin"): Amended]
class XeSqlPkg_database_agent_local_operation_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_local_operation_begin: XeSqlPkg_database_agent_local_operation_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 local_brick_id;
	[WmiDataId(7), read, 
				XEMapId(173),
				ValueMap { 
					"4", 
					"12", 
					"1", 
					"8", 
					"2", 
					"9", 
					"10", 
					"11", 
					"6", 
					"5", 
					"7", 
					"3" },
				Values { 
					"ATTACH_DATABASE_FRAGMENT", 
					"CACHE_DATABASE_FRAGMENT", 
					"CREATE_DATABASE_FRAGMENT", 
					"CREATE_FILEGROUP", 
					"DROP_DATABASE_FRAGMENT", 
					"DROP_FILEGROUP", 
					"MODIFY_FILEGROUP", 
					"PREPARE_DATABASE_FRAGMENT", 
					"SHUTDOWN_DATABASE", 
					"START_DATABASE_FRAGMENT", 
					"STATE_OPTION", 
					"VALIDATE_FILE" }
			] uint32 local_operation_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Database DDL or operation agent finishes the local operation requested from a remote brick"): Amended,
    Guid("{9c92650d-edb8-47fd-ac1f-3bfae8aee043}"), locale("MS\\0x409"),
    DisplayName("database_agent_local_operation_end"): Amended]
class XeSqlPkg_database_agent_local_operation_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_local_operation_end: XeSqlPkg_database_agent_local_operation_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 local_brick_id;
	[WmiDataId(7), read, 
				XEMapId(173),
				ValueMap { 
					"4", 
					"12", 
					"1", 
					"8", 
					"2", 
					"9", 
					"10", 
					"11", 
					"6", 
					"5", 
					"7", 
					"3" },
				Values { 
					"ATTACH_DATABASE_FRAGMENT", 
					"CACHE_DATABASE_FRAGMENT", 
					"CREATE_DATABASE_FRAGMENT", 
					"CREATE_FILEGROUP", 
					"DROP_DATABASE_FRAGMENT", 
					"DROP_FILEGROUP", 
					"MODIFY_FILEGROUP", 
					"PREPARE_DATABASE_FRAGMENT", 
					"SHUTDOWN_DATABASE", 
					"START_DATABASE_FRAGMENT", 
					"STATE_OPTION", 
					"VALIDATE_FILE" }
			] uint32 local_operation_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Database DDL or operation agent sends a request to a remote brick to execute an operation"): Amended,
    Guid("{355ba9c9-6c4b-4909-874e-12854ca8fa8e}"), locale("MS\\0x409"),
    DisplayName("database_agent_request_begin"): Amended]
class XeSqlPkg_database_agent_request_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_request_begin: XeSqlPkg_database_agent_request_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 local_brick_id;
	[WmiDataId(7), read] uint32 remote_brick_id;
	[WmiDataId(8), read, 
				XEMapId(173),
				ValueMap { 
					"4", 
					"12", 
					"1", 
					"8", 
					"2", 
					"9", 
					"10", 
					"11", 
					"6", 
					"5", 
					"7", 
					"3" },
				Values { 
					"ATTACH_DATABASE_FRAGMENT", 
					"CACHE_DATABASE_FRAGMENT", 
					"CREATE_DATABASE_FRAGMENT", 
					"CREATE_FILEGROUP", 
					"DROP_DATABASE_FRAGMENT", 
					"DROP_FILEGROUP", 
					"MODIFY_FILEGROUP", 
					"PREPARE_DATABASE_FRAGMENT", 
					"SHUTDOWN_DATABASE", 
					"START_DATABASE_FRAGMENT", 
					"STATE_OPTION", 
					"VALIDATE_FILE" }
			] uint32 request_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("A database DDL or operation agent request is finished"): Amended,
    Guid("{ed683e3b-4176-475b-affc-85f8bb6d881c}"), locale("MS\\0x409"),
    DisplayName("database_agent_request_end"): Amended]
class XeSqlPkg_database_agent_request_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_request_end: XeSqlPkg_database_agent_request_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 local_brick_id;
	[WmiDataId(7), read] uint32 remote_brick_id;
	[WmiDataId(8), read, 
				XEMapId(173),
				ValueMap { 
					"4", 
					"12", 
					"1", 
					"8", 
					"2", 
					"9", 
					"10", 
					"11", 
					"6", 
					"5", 
					"7", 
					"3" },
				Values { 
					"ATTACH_DATABASE_FRAGMENT", 
					"CACHE_DATABASE_FRAGMENT", 
					"CREATE_DATABASE_FRAGMENT", 
					"CREATE_FILEGROUP", 
					"DROP_DATABASE_FRAGMENT", 
					"DROP_FILEGROUP", 
					"MODIFY_FILEGROUP", 
					"PREPARE_DATABASE_FRAGMENT", 
					"SHUTDOWN_DATABASE", 
					"START_DATABASE_FRAGMENT", 
					"STATE_OPTION", 
					"VALIDATE_FILE" }
			] uint32 request_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("All database segments are dropped, and the physical files may or may not be deleted"): Amended,
    Guid("{2bcad792-d550-4da5-ab34-ba577c3bde49}"), locale("MS\\0x409"),
    DisplayName("all_database_segments_drop"): Amended]
class XeSqlPkg_all_database_segments_drop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class all_database_segments_drop: XeSqlPkg_all_database_segments_drop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  files_deleted;
};
		
[dynamic: ToInstance, Description("Database is renamed, but the transaction has not been submitted yet."): Amended,
    Guid("{6e75b191-2bfb-43bf-9c8a-853cc1e4a703}"), locale("MS\\0x409"),
    DisplayName("database_rename"): Amended]
class XeSqlPkg_database_rename: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_rename: XeSqlPkg_database_rename
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string previous_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string new_name;
};
		
[dynamic: ToInstance, Description("One or more database option changes are changed in metadata or bootpage"): Amended,
    Guid("{27ac378f-7ec2-41d9-ae1b-6b4906eaf774}"), locale("MS\\0x409"),
    DisplayName("database_option_change"): Amended]
class XeSqlPkg_database_option_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_option_change: XeSqlPkg_database_option_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(53),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"5" },
				Values { 
					"Database SE Options", 
					"Database RE Options", 
					"Database State or Access Option", 
					"Database Collation" }
			] uint8 option_type;
	[WmiDataId(7), read] uint32 previous_value;
	[WmiDataId(8), read] uint32 new_value;
};
		
[dynamic: ToInstance, Description("Database bootpage is sync'ed with the DB Registration information in metadata"): Amended,
    Guid("{0d0bc431-11c9-43d4-a8c9-5fde55815fae}"), locale("MS\\0x409"),
    DisplayName("database_bootpage_sync"): Amended]
class XeSqlPkg_database_bootpage_sync: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_bootpage_sync: XeSqlPkg_database_bootpage_sync
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("DBTABLE structure is refreshed after database options are changed"): Amended,
    Guid("{7c0ebbbd-f8da-4116-a291-68c28e124568}"), locale("MS\\0x409"),
    DisplayName("dbtable_options_refresh"): Amended]
class XeSqlPkg_dbtable_options_refresh: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbtable_options_refresh: XeSqlPkg_dbtable_options_refresh
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("Occurs when all database files has already been formatted on disk for an ADD FILE DDL statement."): Amended,
    Guid("{df631ed7-6b45-4f32-b82d-5ecd4faf57aa}"), locale("MS\\0x409"),
    DisplayName("all_files_created"): Amended]
class XeSqlPkg_all_files_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class all_files_created: XeSqlPkg_all_files_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("Tracing during the different steps of FileCreation."): Amended,
    Guid("{33a1e1ab-0f6a-42e3-a326-7b097040934c}"), locale("MS\\0x409"),
    DisplayName("create_file_tracing"): Amended]
class XeSqlPkg_create_file_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class create_file_tracing: XeSqlPkg_create_file_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string phase;
};
		
[dynamic: ToInstance, Description("Occurs when the file manager added file metadata in the master database segment."): Amended,
    Guid("{0799fd19-1129-4d82-a5d9-ca0343222249}"), locale("MS\\0x409"),
    DisplayName("add_file_in_master"): Amended]
class XeSqlPkg_add_file_in_master: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class add_file_in_master: XeSqlPkg_add_file_in_master
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] uint32 filegroup_id;
	[WmiDataId(9), read] sint8  is_log_file;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_logical_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_physical_name;
};
		
[dynamic: ToInstance, Description("Occurs when a database file is added into the database segment."): Amended,
    Guid("{985b3d7e-9a4c-414c-80ae-6c2c3169c1f5}"), locale("MS\\0x409"),
    DisplayName("file_added_in_database"): Amended]
class XeSqlPkg_file_added_in_database: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_added_in_database: XeSqlPkg_file_added_in_database
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] uint32 filegroup_id;
	[WmiDataId(9), read] sint8  is_log_file;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_logical_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_physical_name;
};
		
[dynamic: ToInstance, Description("Occurs when add file action is rolled back."): Amended,
    Guid("{7bebe39b-ab60-4492-a5a9-433f0d41b1d6}"), locale("MS\\0x409"),
    DisplayName("add_file_rollback"): Amended]
class XeSqlPkg_add_file_rollback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class add_file_rollback: XeSqlPkg_add_file_rollback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("Occurs when the file is prepared to be dropped."): Amended,
    Guid("{ecc882e2-a072-48b3-9af7-36765f355b14}"), locale("MS\\0x409"),
    DisplayName("drop_file_prepared"): Amended]
class XeSqlPkg_drop_file_prepared: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class drop_file_prepared: XeSqlPkg_drop_file_prepared
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("Occurs when drop file action is committed."): Amended,
    Guid("{bd8216b5-f8e0-4b37-bb08-2b8e2e9f8a5e}"), locale("MS\\0x409"),
    DisplayName("drop_file_committed"): Amended]
class XeSqlPkg_drop_file_committed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class drop_file_committed: XeSqlPkg_drop_file_committed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("Occurs when drop file action is rolled back."): Amended,
    Guid("{37f35540-18a5-45bf-adfc-540e61e2bcd9}"), locale("MS\\0x409"),
    DisplayName("drop_file_rollback"): Amended]
class XeSqlPkg_drop_file_rollback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class drop_file_rollback: XeSqlPkg_drop_file_rollback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("Occurs when the file manager modified the property of a database file."): Amended,
    Guid("{f988dda2-9ad0-46d5-b4be-cf8fe5f8dfdd}"), locale("MS\\0x409"),
    DisplayName("modify_file_operation"): Amended]
class XeSqlPkg_modify_file_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class modify_file_operation: XeSqlPkg_modify_file_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] sint8  is_log_file;
	[WmiDataId(9), read, 
				XEMapId(176),
				ValueMap { 
					"16", 
					"64", 
					"8", 
					"1", 
					"32", 
					"536870912", 
					"1073741824", 
					"2", 
					"4" },
				Values { 
					"Filegrowth", 
					"FixedVlfSize", 
					"Maxsize", 
					"Name", 
					"NewName", 
					"Offline", 
					"Overflow", 
					"Physname", 
					"Size" }
			] uint32 modification_type;
	[WmiDataId(10), read] uint32 new_value;
	[WmiDataId(11), read] sint8  is_growth_by_percentage;
};
		
[dynamic: ToInstance, Description("Occurs when the database agent on the connect brick starts to create a filegroup."): Amended,
    Guid("{af1d8134-6f46-47b9-9ac4-886c9d1735dd}"), locale("MS\\0x409"),
    DisplayName("database_agent_create_filegroup"): Amended]
class XeSqlPkg_database_agent_create_filegroup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_create_filegroup: XeSqlPkg_database_agent_create_filegroup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 filegroup_id;
	[WmiDataId(7), read] uint32 log_filegroup_id;
	[WmiDataId(8), read, 
				XEMapId(177),
				ValueMap { 
					"5", 
					"1", 
					"2", 
					"3", 
					"0", 
					"4" },
				Values { 
					"COLDFG", 
					"FILESTREAM", 
					"FILESTREAMLOG", 
					"MEMORY_OPTIMIZED", 
					"ROWS", 
					"WARMFG" }
			] uint32 type;
};
		
[dynamic: ToInstance, Description("Occurs when the database agent on the connect brick starts to drop a filegroup."): Amended,
    Guid("{d734e3ed-cda0-4cf8-a409-c2aed48a230e}"), locale("MS\\0x409"),
    DisplayName("database_agent_drop_filegroup"): Amended]
class XeSqlPkg_database_agent_drop_filegroup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_drop_filegroup: XeSqlPkg_database_agent_drop_filegroup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 filegroup_id;
};
		
[dynamic: ToInstance, Description("Occurs when the database MetaData version has been updated."): Amended,
    Guid("{7f53f59d-927b-4f0d-b40e-064e4a79d12f}"), locale("MS\\0x409"),
    DisplayName("metadata_database_mdversion_updated"): Amended]
class XeSqlPkg_metadata_database_mdversion_updated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_database_mdversion_updated: XeSqlPkg_metadata_database_mdversion_updated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 new_version;
};
		
[dynamic: ToInstance, Description("Occurs when the file group manager changed the name for a physical filegroup."): Amended,
    Guid("{e84a1fde-2edf-4518-a47f-ae63f3a73116}"), locale("MS\\0x409"),
    DisplayName("filegroup_name_change"): Amended]
class XeSqlPkg_filegroup_name_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class filegroup_name_change: XeSqlPkg_filegroup_name_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 filegroup_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string new_name;
};
		
[dynamic: ToInstance, Description("Occurs when the file group manager changed the property for a physical filegroup."): Amended,
    Guid("{b6d0fe4c-06f2-478e-9478-399ac3836f0a}"), locale("MS\\0x409"),
    DisplayName("filegroup_property_change"): Amended]
class XeSqlPkg_filegroup_property_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class filegroup_property_change: XeSqlPkg_filegroup_property_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 filegroup_id;
	[WmiDataId(8), read, 
				XEMapId(178),
				ValueMap { 
					"4", 
					"5", 
					"2", 
					"3", 
					"0", 
					"1" },
				Values { 
					"AutogrowAllFiles", 
					"AutogrowSingleFile", 
					"Offline", 
					"Online", 
					"ReadOnly", 
					"ReadWrite" }
			] uint32 new_property;
};
		
[dynamic: ToInstance, Description("Number of group commit waiters has changed"): Amended,
    Guid("{268c5088-ea00-465f-9224-2a4b9fe34bd5}"), locale("MS\\0x409"),
    DisplayName("group_commit_value_changed"): Amended]
class XeSqlPkg_group_commit_value_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class group_commit_value_changed: XeSqlPkg_group_commit_value_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 waiters_per_flush;
	[WmiDataId(6), read] uint64 duration_ms;
	[WmiDataId(7), read] uint32 waiters;
	[WmiDataId(8), read] uint32 flushes_per_sec;
	[WmiDataId(9), read] uint32 next_sample_duration_ms;
	[WmiDataId(10), read] uint32 next_sample_index;
};
		
[dynamic: ToInstance, Description("Log flush was requested"): Amended,
    Guid("{d9b42c24-fb8a-4744-80f6-9b15149173a1}"), locale("MS\\0x409"),
    DisplayName("log_flush_requested"): Amended]
class XeSqlPkg_log_flush_requested: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_flush_requested: XeSqlPkg_log_flush_requested
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(19),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Waiters limit reached", 
					"Time limit reached", 
					"Immediate request" }
			] sint32 reason;
	[WmiDataId(6), read] uint32 waiters;
	[WmiDataId(7), read] uint64 log_block_id;
};
		
[dynamic: ToInstance, Description("Log flush was requested"): Amended,
    Guid("{d9b42c24-fb8a-4744-80f6-9b15149173a1}"), locale("MS\\0x409"),
    DisplayName("log_flush_requested"): Amended]
class XeSqlPkg_log_flush_requested: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class log_flush_requested: XeSqlPkg_log_flush_requested
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(19),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Waiters limit reached", 
					"Time limit reached", 
					"Immediate request" }
			] sint32 reason;
	[WmiDataId(7), read] uint32 waiters;
	[WmiDataId(8), read] uint64 log_block_id;
};
		
[dynamic: ToInstance, Description("Log flush was requested"): Amended,
    Guid("{d9b42c24-fb8a-4744-80f6-9b15149173a1}"), locale("MS\\0x409"),
    DisplayName("log_flush_requested"): Amended]
class XeSqlPkg_log_flush_requested: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class log_flush_requested: XeSqlPkg_log_flush_requested
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(19),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Waiters limit reached", 
					"Time limit reached", 
					"Immediate request" }
			] sint32 reason;
	[WmiDataId(7), read] uint32 waiters;
	[WmiDataId(8), read] uint64 log_block_id;
	[WmiDataId(9), read] sint8  is_delayed_durable;
	[WmiDataId(10), read] sint8  only_signal;
};
		
[dynamic: ToInstance, Description("Log write buffer was allocated"): Amended,
    Guid("{455e9012-2a18-4131-b6bf-1391e93d7acd}"), locale("MS\\0x409"),
    DisplayName("log_buffer_allocated"): Amended]
class XeSqlPkg_log_buffer_allocated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_buffer_allocated: XeSqlPkg_log_buffer_allocated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read] uint32 size;
	[WmiDataId(7), read, 
				XEMapId(20),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Regular", 
					"Locked" }
			] sint32 type;
	[WmiDataId(8), read] uint32 current_count;
};
		
[dynamic: ToInstance, Description("Log block was freed"): Amended,
    Guid("{44802c4c-63dd-4d54-8e23-e6b04d66ab64}"), locale("MS\\0x409"),
    DisplayName("log_buffer_freed"): Amended]
class XeSqlPkg_log_buffer_freed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_buffer_freed: XeSqlPkg_log_buffer_freed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read] uint32 current_count;
};
		
[dynamic: ToInstance, Description("After some amount of log is snipped but not all."): Amended,
    Guid("{4E7BCABC-6877-4327-8DF9-CE839E2AC945}"), locale("MS\\0x409"),
    DisplayName("after_snipping_some_log"): Amended]
class XeSqlPkg_after_snipping_some_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class after_snipping_some_log: XeSqlPkg_after_snipping_some_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Indicates log block start push to log pool."): Amended,
    Guid("{3B9370B3-7F11-46F7-BB8D-0FBAC1E04AF1}"), locale("MS\\0x409"),
    DisplayName("log_block_pushed_to_logpool"): Amended]
class XeSqlPkg_log_block_pushed_to_logpool: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_block_pushed_to_logpool: XeSqlPkg_log_block_pushed_to_logpool
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 processing_time;
	[WmiDataId(6), read] uint64 start_timestamp;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint64 log_block_id;
};
		
[dynamic: ToInstance, Description("IAM Page range cache stats"): Amended,
    Guid("{a3e863a5-48df-42d5-9b31-5ed5766952a9}"), locale("MS\\0x409"),
    DisplayName("iam_page_range_cache_stats"): Amended]
class XeSqlPkg_iam_page_range_cache_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class iam_page_range_cache_stats: XeSqlPkg_iam_page_range_cache_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 iam_page_range_cache_populate_success_count;
	[WmiDataId(7), read] uint64 iam_page_range_cache_populate_fail_count;
	[WmiDataId(8), read] uint64 iam_page_range_cache_populate_success_duration_sum_us;
	[WmiDataId(9), read] uint64 iam_page_range_cache_populate_fail_duration_sum_us;
	[WmiDataId(10), read] uint64 iam_page_range_cache_populate_success_chainlength_sum;
	[WmiDataId(11), read] uint64 iam_page_range_cache_populate_fail_chainlength_sum;
	[WmiDataId(12), read] uint64 iam_page_range_cache_invalidations_count;
	[WmiDataId(13), read] uint64 iam_page_range_cache_populate_duration_us_max;
	[WmiDataId(14), read] uint64 alloc_unit_id_populate_duration_max;
	[WmiDataId(15), read] uint64 iam_page_range_cache_populate_chainlength_max;
	[WmiDataId(16), read] uint64 alloc_unit_id_populate_chainlength_max;
	[WmiDataId(17), read] uint64 iam_cache_lookup_allocation_order_scan_count;
	[WmiDataId(18), read] uint64 iam_cache_lookup_index_page_manager_count;
	[WmiDataId(19), read] uint64 iam_cache_lookup_append_only_store_count;
	[WmiDataId(20), read] uint64 iam_cache_lookup_cache_only_page_scanner_count;
	[WmiDataId(21), read] uint64 iam_cache_lookup_update_or_insert_checks_count;
	[WmiDataId(22), read] uint64 iam_cache_lookup_alloc_or_dealloc_count;
	[WmiDataId(23), read] uint64 iam_cache_lookup_shrink_count;
	[WmiDataId(24), read] uint64 iam_cache_lookup_blob_scan_count;
	[WmiDataId(25), read] uint64 iam_cache_lookup_ghost_cleaner_count;
	[WmiDataId(26), read] uint64 iam_cache_lookup_dbcc_check_count;
	[WmiDataId(27), read] uint64 iam_cache_lookup_fix_page_not_thru_linkage_count;
	[WmiDataId(28), read] sint8  is_log_accept_mode;
};
		
[dynamic: ToInstance, Description("IAM page range cache invalidation"): Amended,
    Guid("{edee7ae5-597c-4b25-bee4-5af323739e37}"), locale("MS\\0x409"),
    DisplayName("iam_page_range_cache_invalidation"): Amended]
class XeSqlPkg_iam_page_range_cache_invalidation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class iam_page_range_cache_invalidation: XeSqlPkg_iam_page_range_cache_invalidation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read, 
				XEMapId(100),
				ValueMap { 
					"0", 
					"7", 
					"6", 
					"4", 
					"5", 
					"2", 
					"1", 
					"3", 
					"11", 
					"12", 
					"13", 
					"8", 
					"9", 
					"10" },
				Values { 
					"ALLOC_IAM_PAGE", 
					"CACHE_ONLY_HOBT_INIT", 
					"DBCC_CLEAR_SPACE_CACHES", 
					"DBCC_FIX_DATABASE", 
					"DBCC_FLUSH_CACHES_FOR_REPAIR", 
					"DROPPING_ALLOC_UNIT", 
					"FIRST_IAM_PAGE_MISMATCH", 
					"INVALIDATE_CACHE", 
					"MOVE_IAM_PAGE", 
					"REMOVE_IAM_PAGE", 
					"RESET_HOBT_PAGE_INFO", 
					"VISIBLE_HOBT_NOTE_LOB_TRANSFER", 
					"VISIBLE_HOBT_REFRESH", 
					"VISIBLE_HOBT_SET_LOB_PAGE_INFO" }
			] uint8 invalidation_reason;
};
		
[dynamic: ToInstance, Description("IAM page range cache population"): Amended,
    Guid("{f1825e81-29f9-4103-a9f1-76e6fa8e7cab}"), locale("MS\\0x409"),
    DisplayName("iam_page_range_cache_population"): Amended]
class XeSqlPkg_iam_page_range_cache_population: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class iam_page_range_cache_population: XeSqlPkg_iam_page_range_cache_population
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint64 chain_length;
	[WmiDataId(8), read] uint64 duration_ms;
};
		
[dynamic: ToInstance, Description("Transaction version stats"): Amended,
    Guid("{22d52110-2105-459c-a1d0-968b54c4fe2b}"), locale("MS\\0x409"),
    DisplayName("tx_version_stats"): Amended]
class XeSqlPkg_tx_version_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(11)]
class tx_version_stats: XeSqlPkg_tx_version_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 pvs_off_row_inserts;
	[WmiDataId(7), read] uint64 long_term_pvs_off_row_inserts;
	[WmiDataId(8), read] uint64 chained_row_insert_count;
	[WmiDataId(9), read] uint64 inrow_diff_skipped_same_xdes_count;
	[WmiDataId(10), read] uint64 inrow_diff_version_count;
	[WmiDataId(11), read] uint64 inrow_full_version_count;
	[WmiDataId(12), read] uint64 inrow_ghost_version_count;
	[WmiDataId(13), read] uint64 inrow_full_version_too_large_count;
	[WmiDataId(14), read] uint64 inrow_diff_version_too_large_count;
	[WmiDataId(15), read] uint64 inrow_pushed_off_row_count;
	[WmiDataId(16), read] uint64 inrow_ghost_pushed_off_row_count;
	[WmiDataId(17), read] uint64 off_row_version_for_delete_count;
	[WmiDataId(18), read] uint64 off_row_version_for_lob_count;
	[WmiDataId(19), read] uint64 off_row_version_ptr_reused_count;
	[WmiDataId(20), read] uint64 inrow_skip_ts_interesting_count;
	[WmiDataId(21), read] uint64 inrow_skip_sequence_count;
	[WmiDataId(22), read] uint64 inrow_skip_compressed_pages_count;
	[WmiDataId(23), read] uint64 inrow_skip_forwarded_record_count;
	[WmiDataId(24), read] uint64 inrow_skip_no_space_ghosting_count;
	[WmiDataId(25), read] uint64 inrow_skip_no_space_vrp_count;
	[WmiDataId(26), read] uint64 inrow_skip_not_hobt_data_page_count;
	[WmiDataId(27), read] uint64 inrow_skip_in_place_update_ctxt_count;
	[WmiDataId(28), read] uint64 xdes_exception_list_count;
	[WmiDataId(29), read] uint64 xdes_exception_list_count_max;
	[WmiDataId(30), read] sint8  is_pvs_enabled;
	[WmiDataId(31), read] uint64 regular_pvs_size_kb;
	[WmiDataId(32), read] uint64 long_term_pvs_size_kb;
	[WmiDataId(33), read] uint64 regular_pvs_free_pages_kb;
	[WmiDataId(34), read] uint64 long_term_pvs_free_pages_kb;
	[WmiDataId(35), read] uint64 off_row_version_for_blob_inserts_count;
	[WmiDataId(36), read] sint32 max_version_chain_lr;
	[WmiDataId(37), read] sint32 max_version_chain_query;
	[WmiDataId(38), read, Extension("Guid")] guid physical_db_id;
};
		
[dynamic: ToInstance, Description("Stats for optimized insert into PVS"): Amended,
    Guid("{DCC53D82-6064-4A6A-A948-A343175F0B2E}"), locale("MS\\0x409"),
    DisplayName("tx_version_optimized_insert_stats"): Amended]
class XeSqlPkg_tx_version_optimized_insert_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tx_version_optimized_insert_stats: XeSqlPkg_tx_version_optimized_insert_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_long_term_pvs;
	[WmiDataId(7), read] uint64 foreground_allocation_percent;
	[WmiDataId(8), read] uint64 average_background_allocation_factor;
};
		
[dynamic: ToInstance, Description("Stats for optimized insert into PVS"): Amended,
    Guid("{DCC53D82-6064-4A6A-A948-A343175F0B2E}"), locale("MS\\0x409"),
    DisplayName("tx_version_optimized_insert_stats"): Amended]
class XeSqlPkg_tx_version_optimized_insert_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class tx_version_optimized_insert_stats: XeSqlPkg_tx_version_optimized_insert_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_long_term_pvs;
	[WmiDataId(7), read] uint64 foreground_allocation_percent;
	[WmiDataId(8), read] uint64 average_background_allocation_factor;
	[WmiDataId(9), read] uint64 total_pvs_page_requests;
	[WmiDataId(10), read] uint64 num_preallocation_iterations;
	[WmiDataId(11), read] uint64 num_free_pvs_pages_available;
	[WmiDataId(12), read] uint64 minimum_num_extents_per_iteration;
	[WmiDataId(13), read] uint64 addl_allocation_sessions_created;
};
		
[dynamic: ToInstance, Description("MTVC2 stats"): Amended,
    Guid("{24324ECB-579D-4398-8367-144B74853A68}"), locale("MS\\0x409"),
    DisplayName("tx_mtvc2_sweep_stats"): Amended]
class XeSqlPkg_tx_mtvc2_sweep_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tx_mtvc2_sweep_stats: XeSqlPkg_tx_mtvc2_sweep_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 adr_mtvc2_worker_sweep_pages_skipped_page_locks;
	[WmiDataId(7), read] uint64 adr_mtvc2_worker_sweep_pages_skipped_hobt_locks_not_taken;
	[WmiDataId(8), read] uint64 adr_mtvc2_worker_sweep_pages_skipped_hobt_lock_not_found;
	[WmiDataId(9), read] uint64 adr_mtvc2_worker_sweep_pages_skipped_alloc_unit_dropped;
	[WmiDataId(10), read] uint64 adr_mtvc2_worker_sweep_pages_skipped_pvs_rowset;
	[WmiDataId(11), read] uint64 adr_mtvc2_worker_sweep_pages_skipped_oom;
	[WmiDataId(12), read] uint64 adr_mtvc2_worker_sweep_pages_skipped_out_of_disk;
	[WmiDataId(13), read] uint64 adr_mtvc2_worker_sweep_pages_skipped_resumable_locks;
	[WmiDataId(14), read] uint64 adr_mtvc2_worker_sweep_pages_skipped_buf_latch_timeout;
	[WmiDataId(15), read] uint64 adr_mtvc2_worker_record_skip_none;
	[WmiDataId(16), read] uint64 adr_mtvc2_worker_record_skip_unknown;
	[WmiDataId(17), read] uint64 adr_mtvc2_worker_record_skip_row_lock;
	[WmiDataId(18), read] uint64 adr_mtvc2_worker_record_skip_stub_page_lock;
	[WmiDataId(19), read] uint64 adr_mtvc2_worker_record_skip_page_not_allocated;
	[WmiDataId(20), read] uint64 adr_mtvc2_worker_record_skip_slot_modification;
	[WmiDataId(21), read] uint64 adr_mtvc2_worker_record_skip_btree_disconnected;
	[WmiDataId(22), read, Extension("Guid")] guid physical_db_id;
};
		
[dynamic: ToInstance, Description("Version cleanup stats"): Amended,
    Guid("{27B6C052-3919-40E2-99C1-F2701865A273}"), locale("MS\\0x409"),
    DisplayName("tx_version_cleanup_sweep_stats"): Amended]
class XeSqlPkg_tx_version_cleanup_sweep_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tx_version_cleanup_sweep_stats: XeSqlPkg_tx_version_cleanup_sweep_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 in_row_pages_swept;
	[WmiDataId(7), read] uint64 in_row_non_data_pages_swept;
	[WmiDataId(8), read] uint64 in_row_pages_swept_marked_no_versions;
	[WmiDataId(9), read] uint64 in_row_non_data_pages_swept_percent;
	[WmiDataId(10), read] uint64 adr_pages_swept;
	[WmiDataId(11), read] uint64 adr_non_data_pages_swept;
	[WmiDataId(12), read] uint64 adr_pages_swept_marked_no_versions;
	[WmiDataId(13), read] uint64 pvs_off_row_pages_not_eligible_for_cleanup;
	[WmiDataId(14), read] uint64 pvs_off_row_page_skipped_low_water_mark;
	[WmiDataId(15), read] uint64 pvs_off_row_page_skipped_transaction_not_cleaned;
	[WmiDataId(16), read] uint64 pvs_off_row_page_skipped_oldest_active_xdesid;
	[WmiDataId(17), read] uint64 pvs_off_row_page_skipped_oldest_aborted_xdesid;
	[WmiDataId(18), read] uint64 pvs_off_row_page_skipped_min_useful_xts;
	[WmiDataId(19), read] uint64 pvs_off_row_page_skipped_oldest_snapshot;
	[WmiDataId(20), read] uint64 adr_sweep_pages_skipped_page_locks;
	[WmiDataId(21), read] uint64 adr_sweep_pages_skipped_hobt_locks_not_taken;
	[WmiDataId(22), read] uint64 adr_sweep_pages_skipped_hobt_lock_not_found;
	[WmiDataId(23), read] uint64 adr_sweep_pages_skipped_alloc_unit_dropped;
	[WmiDataId(24), read] uint64 adr_sweep_pages_skipped_pvs_rowset;
	[WmiDataId(25), read] uint64 adr_sweep_pages_skipped_oom;
	[WmiDataId(26), read] uint64 adr_sweep_pages_skipped_out_of_disk;
	[WmiDataId(27), read] uint64 adr_sweep_pages_skipped_resumable_locks;
	[WmiDataId(28), read] uint64 inrow_pages_cold_read;
	[WmiDataId(29), read] uint64 inrow_pages_reads_in_progress;
	[WmiDataId(30), read] uint64 inrow_pages_io_wait_time;
	[WmiDataId(31), read] uint64 adr_pages_cold_read;
	[WmiDataId(32), read] uint64 adr_pages_reads_in_progress;
	[WmiDataId(33), read] uint64 adr_pages_io_wait_time;
	[WmiDataId(34), read] sint64 prev_adr_sweep_time;
	[WmiDataId(35), read, Extension("Guid")] guid physical_db_id;
};
		
[dynamic: ToInstance, Description("Version cleanup stats"): Amended,
    Guid("{27B6C052-3919-40E2-99C1-F2701865A273}"), locale("MS\\0x409"),
    DisplayName("tx_version_cleanup_sweep_stats"): Amended]
class XeSqlPkg_tx_version_cleanup_sweep_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class tx_version_cleanup_sweep_stats: XeSqlPkg_tx_version_cleanup_sweep_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 in_row_pages_swept;
	[WmiDataId(7), read] uint64 in_row_non_data_pages_swept;
	[WmiDataId(8), read] uint64 in_row_pages_swept_marked_no_versions;
	[WmiDataId(9), read] uint64 in_row_non_data_pages_swept_percent;
	[WmiDataId(10), read] uint64 adr_pages_swept;
	[WmiDataId(11), read] uint64 adr_non_data_pages_swept;
	[WmiDataId(12), read] uint64 adr_pages_swept_marked_no_versions;
	[WmiDataId(13), read] uint64 pvs_off_row_pages_not_eligible_for_cleanup;
	[WmiDataId(14), read] uint64 pvs_off_row_page_skipped_low_water_mark;
	[WmiDataId(15), read] uint64 pvs_off_row_page_skipped_transaction_not_cleaned;
	[WmiDataId(16), read] uint64 pvs_off_row_page_skipped_oldest_active_xdesid;
	[WmiDataId(17), read] uint64 pvs_off_row_page_skipped_oldest_aborted_xdesid;
	[WmiDataId(18), read] uint64 pvs_off_row_page_skipped_min_useful_xts;
	[WmiDataId(19), read] uint64 pvs_off_row_page_skipped_oldest_snapshot;
	[WmiDataId(20), read] uint64 adr_sweep_pages_skipped_page_locks;
	[WmiDataId(21), read] uint64 adr_sweep_pages_skipped_hobt_locks_not_taken;
	[WmiDataId(22), read] uint64 adr_sweep_pages_skipped_hobt_lock_not_found;
	[WmiDataId(23), read] uint64 adr_sweep_pages_skipped_alloc_unit_dropped;
	[WmiDataId(24), read] uint64 adr_sweep_pages_skipped_pvs_rowset;
	[WmiDataId(25), read] uint64 adr_sweep_pages_skipped_oom;
	[WmiDataId(26), read] uint64 adr_sweep_pages_skipped_out_of_disk;
	[WmiDataId(27), read] uint64 adr_sweep_pages_skipped_resumable_locks;
	[WmiDataId(28), read] uint64 adr_sweep_pages_skipped_buf_latch_timeout;
	[WmiDataId(29), read] uint64 inrow_pages_cold_read;
	[WmiDataId(30), read] uint64 inrow_pages_reads_in_progress;
	[WmiDataId(31), read] uint64 inrow_pages_io_wait_time;
	[WmiDataId(32), read] uint64 adr_pages_cold_read;
	[WmiDataId(33), read] uint64 adr_pages_reads_in_progress;
	[WmiDataId(34), read] uint64 adr_pages_io_wait_time;
	[WmiDataId(35), read] sint64 prev_adr_sweep_time;
	[WmiDataId(36), read, Extension("Guid")] guid physical_db_id;
};
		
[dynamic: ToInstance, Description("Version and transaction cleanup stats"): Amended,
    Guid("{10da1762-deee-4c30-8e9c-7c905136e9d5}"), locale("MS\\0x409"),
    DisplayName("tx_version_cleanup_stats"): Amended]
class XeSqlPkg_tx_version_cleanup_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tx_version_cleanup_stats: XeSqlPkg_tx_version_cleanup_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 stale_version_cleanup_attempt;
	[WmiDataId(7), read] uint64 stale_version_pages_cleaned;
	[WmiDataId(8), read] uint64 stale_version_bytes_attempt;
	[WmiDataId(9), read] uint64 stale_version_stripped_rows;
	[WmiDataId(10), read] uint64 stale_version_unghosted_rows;
	[WmiDataId(11), read] uint64 stale_version_purged_rows;
	[WmiDataId(12), read] uint32 oldest_active_xdes_id_low;
	[WmiDataId(13), read] uint16 oldest_active_xdes_id_high;
	[WmiDataId(14), read] uint32 oldest_abort_xdes_id_low;
	[WmiDataId(15), read] uint16 oldest_abort_xdes_id_high;
	[WmiDataId(16), read] uint32 low_watermark_xdes_id_low;
	[WmiDataId(17), read] uint16 low_watermark_xdes_id_high;
	[WmiDataId(18), read] uint64 min_useful_xts;
	[WmiDataId(19), read] uint64 min_useful_xts_regular;
	[WmiDataId(20), read] uint64 min_active_xts;
	[WmiDataId(21), read] uint64 ghost_records_cleaned;
	[WmiDataId(22), read] uint64 ghost_records_cleaned_by_stmt_cleanup;
	[WmiDataId(23), read, Extension("WmiTime")] uint64 aborted_version_cleaner_start_time;
	[WmiDataId(24), read, Extension("WmiTime")] uint64 aborted_version_cleaner_end_time;
	[WmiDataId(25), read, Extension("WmiTime")] uint64 pvs_off_row_version_cleaner_start_time;
	[WmiDataId(26), read, Extension("WmiTime")] uint64 pvs_off_row_version_cleaner_end_time;
	[WmiDataId(27), read, Extension("Guid")] guid physical_db_id;
};
		
[dynamic: ToInstance, Description("Version cleaner worker thread stats for a given PFS range cleanup stats"): Amended,
    Guid("{9D129809-63B4-4E7F-91D7-2B65465F7481}"), locale("MS\\0x409"),
    DisplayName("tx_version_cleanup_worker_stats"): Amended]
class XeSqlPkg_tx_version_cleanup_worker_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tx_version_cleanup_worker_stats: XeSqlPkg_tx_version_cleanup_worker_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint64 pfs_start_page_id;
	[WmiDataId(8), read] uint64 pfs_end_page_id;
	[WmiDataId(9), read] sint32 session_id;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 version_cleaner_worker_start_time;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 version_cleaner_worker_end_time;
	[WmiDataId(12), read] uint64 pages_cleaned;
	[WmiDataId(13), read] uint64 pages_skipped;
};
		
[dynamic: ToInstance, Description("Deferred Drop cleanup stats"): Amended,
    Guid("{02385e19-f8b9-46c4-8936-fa5235b007e5}"), locale("MS\\0x409"),
    DisplayName("deferred_drop_au_cleanup_stats"): Amended]
class XeSqlPkg_deferred_drop_au_cleanup_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deferred_drop_au_cleanup_stats: XeSqlPkg_deferred_drop_au_cleanup_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 deferred_drop_au_cleaned;
	[WmiDataId(7), read] uint64 deferred_drop_au_clean_failed_reason_db_single_user_mode;
	[WmiDataId(8), read] uint64 deferred_drop_au_clean_failed_reason_unable_to_lock_au;
	[WmiDataId(9), read] uint64 deferred_drop_au_clean_failed_reason_IAM_is_in_DEFUNCT_file;
	[WmiDataId(10), read] uint64 deferred_drop_au_clean_failed_reason_exceptions;
	[WmiDataId(11), read] uint64 deferred_drop_au_clean_continued_reason_unable_to_lock_au;
	[WmiDataId(12), read] uint64 deferred_drop_au_clean_continued_reason_unable_to_lock_IAM_page;
	[WmiDataId(13), read] uint64 deferred_drop_au_clean_continued_reason_unable_to_lock_data_page;
	[WmiDataId(14), read] uint64 deferred_drop_au_clean_continued_reason_unable_to_lock_extent;
	[WmiDataId(15), read] uint64 deferred_drop_au_clean_continued_reason_IAM_is_not_empty;
	[WmiDataId(16), read] uint64 deferred_drop_au_clean_continued_reason_AU_is_not_empty;
	[WmiDataId(17), read] uint64 deferred_drop_au_clean_deferred_to_next_run;
};
		
[dynamic: ToInstance, Description("Transaction level PVS stats"): Amended,
    Guid("{838555D3-2AC6-400C-A9AD-03C11D27EE9D}"), locale("MS\\0x409"),
    DisplayName("tran_level_pvs_cleanup_stats"): Amended]
class XeSqlPkg_tran_level_pvs_cleanup_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tran_level_pvs_cleanup_stats: XeSqlPkg_tran_level_pvs_cleanup_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 pages_cleaned;
};
		
[dynamic: ToInstance, Description("Signal when tryCleanupVersionsOnPvs is called"): Amended,
    Guid("{67E0A371-7D4D-4CE8-B631-2C8E6FE454CE}"), locale("MS\\0x409"),
    DisplayName("pvs_try_version_cleanup_called"): Amended]
class XeSqlPkg_pvs_try_version_cleanup_called: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pvs_try_version_cleanup_called: XeSqlPkg_pvs_try_version_cleanup_called
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Signal when tryCleanupVersionsOnPvs is completed"): Amended,
    Guid("{84195776-6819-45D0-9844-E2CB226120C9}"), locale("MS\\0x409"),
    DisplayName("pvs_try_version_cleanup_completed"): Amended]
class XeSqlPkg_pvs_try_version_cleanup_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pvs_try_version_cleanup_completed: XeSqlPkg_pvs_try_version_cleanup_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Version cleaner worker stealing."): Amended,
    Guid("{A763E052-4407-4204-835E-D9BADC35DBED}"), locale("MS\\0x409"),
    DisplayName("version_cleaner_worker_stealing"): Amended]
class XeSqlPkg_version_cleaner_worker_stealing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class version_cleaner_worker_stealing: XeSqlPkg_version_cleaner_worker_stealing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 scheduler_id_at_start;
	[WmiDataId(6), read] sint32 worker_migration_count_at_start;
	[WmiDataId(7), read] sint32 scheduler_id_at_end;
	[WmiDataId(8), read] sint32 worker_migration_count_at_end;
};
		
[dynamic: ToInstance, Description("Shows the number of worker migrations for a particular task."): Amended,
    Guid("{B3912353-CF1F-4B0C-9B2F-8F6B5B9D3140}"), locale("MS\\0x409"),
    DisplayName("worker_migration_stats"): Amended]
class XeSqlPkg_worker_migration_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class worker_migration_stats: XeSqlPkg_worker_migration_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 number_of_worker_migrations;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string task_name;
};
		
[dynamic: ToInstance, Description("Reason for skipping inrow diff."): Amended,
    Guid("{3adb0a1e-94cc-43d3-811d-6db4dc5f20d6}"), locale("MS\\0x409"),
    DisplayName("in_row_diff_skipped_reason"): Amended]
class XeSqlPkg_in_row_diff_skipped_reason: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class in_row_diff_skipped_reason: XeSqlPkg_in_row_diff_skipped_reason
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 old_row_size;
	[WmiDataId(9), read] uint32 new_row_size;
	[WmiDataId(10), read] uint32 max_row_size_using_in_row;
};
		
[dynamic: ToInstance, Description("Additional versioning related stats."): Amended,
    Guid("{3773c191-237d-4ba5-9717-4ff272e27259}"), locale("MS\\0x409"),
    DisplayName("tx_version_additional_stats"): Amended]
class XeSqlPkg_tx_version_additional_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tx_version_additional_stats: XeSqlPkg_tx_version_additional_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 inserts_in_ddl_transaction;
	[WmiDataId(7), read] uint64 deletes_in_ddl_transaction;
	[WmiDataId(8), read] uint64 heap_deforwarding_count;
	[WmiDataId(9), read] uint64 tempdb_version_store_inserts;
	[WmiDataId(10), read] uint64 tempdb_version_store_small_inserts;
};
		
[dynamic: ToInstance, Description("Transaction commit/abort stats"): Amended,
    Guid("{fed5e0a8-f401-436e-a92d-8307a20fda80}"), locale("MS\\0x409"),
    DisplayName("tx_commit_abort_stats"): Amended]
class XeSqlPkg_tx_commit_abort_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tx_commit_abort_stats: XeSqlPkg_tx_commit_abort_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_adr_enabled;
	[WmiDataId(7), read] uint64 tx_non_adr_count;
	[WmiDataId(8), read] uint64 tx_commit_count;
	[WmiDataId(9), read] uint64 short_tx_rollback_count;
	[WmiDataId(10), read] uint64 long_tx_rollback_count;
	[WmiDataId(11), read] uint64 adr_tx_rollback_count;
	[WmiDataId(12), read] uint64 nest_aborted_count;
	[WmiDataId(13), read] uint64 savepoint_aborted_count;
	[WmiDataId(14), read] uint64 nest_id_from_off_row_count;
	[WmiDataId(15), read] uint64 lr_btree_count;
	[WmiDataId(16), read] uint64 lr_heap_count;
	[WmiDataId(17), read] uint64 lr_blob_count;
	[WmiDataId(18), read] uint64 updates_on_top_aborted_rows_count;
	[WmiDataId(19), read] uint64 tx_rollback_count;
	[WmiDataId(20), read] uint32 current_abort_count;
	[WmiDataId(21), read] uint64 persisted_version_store_kb;
	[WmiDataId(22), read] uint64 tx_started_long_time_ago;
	[WmiDataId(23), read] uint64 multiple_version_from_nest_tran;
};
		
[dynamic: ToInstance, Description("Transaction commit/abort stats"): Amended,
    Guid("{AF113826-05FB-4FA3-BEB5-BBF9427C5919}"), locale("MS\\0x409"),
    DisplayName("tx_commit_abort_stats"): Amended]
class XeSqlPkg_tx_commit_abort_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class tx_commit_abort_stats: XeSqlPkg_tx_commit_abort_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_adr_enabled;
	[WmiDataId(7), read] sint8  is_adr_disabled_by_design;
	[WmiDataId(8), read] uint64 tx_non_adr_count;
	[WmiDataId(9), read] uint64 tx_commit_count;
	[WmiDataId(10), read] uint64 short_tx_rollback_count;
	[WmiDataId(11), read] uint64 long_tx_rollback_count;
	[WmiDataId(12), read] uint64 adr_tx_rollback_count;
	[WmiDataId(13), read] uint64 nest_aborted_count;
	[WmiDataId(14), read] uint64 savepoint_aborted_count;
	[WmiDataId(15), read] uint64 nest_id_from_off_row_count;
	[WmiDataId(16), read] uint64 lr_btree_count;
	[WmiDataId(17), read] uint64 lr_heap_count;
	[WmiDataId(18), read] uint64 lr_blob_count;
	[WmiDataId(19), read] uint64 updates_on_top_aborted_rows_count;
	[WmiDataId(20), read] uint64 tx_rollback_count;
	[WmiDataId(21), read] uint32 current_abort_count;
	[WmiDataId(22), read] uint64 persisted_version_store_kb;
	[WmiDataId(23), read] uint64 tx_started_long_time_ago;
	[WmiDataId(24), read] uint64 multiple_version_from_nest_tran;
	[WmiDataId(25), read] uint64 is_elastic_pool_db;
	[WmiDataId(26), read] uint64 is_mtvc_enabled;
	[WmiDataId(27), read] uint64 do_only_lr_count;
};
		
[dynamic: ToInstance, Description("Transaction commit/abort stats"): Amended,
    Guid("{AF113826-05FB-4FA3-BEB5-BBF9427C5919}"), locale("MS\\0x409"),
    DisplayName("tx_commit_abort_stats"): Amended]
class XeSqlPkg_tx_commit_abort_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class tx_commit_abort_stats: XeSqlPkg_tx_commit_abort_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_adr_enabled;
	[WmiDataId(7), read] sint8  is_adr_disabled_by_design;
	[WmiDataId(8), read] sint8  is_adr_disabled_by_traceflag;
	[WmiDataId(9), read] uint64 tx_non_adr_count;
	[WmiDataId(10), read] uint64 tx_commit_count;
	[WmiDataId(11), read] uint64 short_tx_rollback_count;
	[WmiDataId(12), read] uint64 long_tx_rollback_count;
	[WmiDataId(13), read] uint64 adr_tx_rollback_count;
	[WmiDataId(14), read] uint64 nest_aborted_count;
	[WmiDataId(15), read] uint64 savepoint_aborted_count;
	[WmiDataId(16), read] uint64 nest_id_from_off_row_count;
	[WmiDataId(17), read] uint64 lr_btree_count;
	[WmiDataId(18), read] uint64 lr_heap_count;
	[WmiDataId(19), read] uint64 lr_blob_count;
	[WmiDataId(20), read] uint64 updates_on_top_aborted_rows_count;
	[WmiDataId(21), read] uint64 tx_rollback_count;
	[WmiDataId(22), read] uint32 current_abort_count;
	[WmiDataId(23), read] uint64 persisted_version_store_kb;
	[WmiDataId(24), read] uint64 tx_started_long_time_ago;
	[WmiDataId(25), read] uint64 multiple_version_from_nest_tran;
	[WmiDataId(26), read] uint64 is_elastic_pool_db;
	[WmiDataId(27), read] uint64 is_mtvc_enabled;
	[WmiDataId(28), read] uint64 do_only_lr_count;
	[WmiDataId(29), read] uint64 is_mtvc_within_db_enabled;
};
		
[dynamic: ToInstance, Description("This event is fired at the end of the transaction commit"): Amended,
    Guid("{26E4C929-A936-433F-AEE3-FBAB279E5D00}"), locale("MS\\0x409"),
    DisplayName("notify_end_of_xact"): Amended]
class XeSqlPkg_notify_end_of_xact: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class notify_end_of_xact: XeSqlPkg_notify_end_of_xact
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 sp_id;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Transaction isolation level statistics"): Amended,
    Guid("{524334BC-5F28-47F4-9199-3C5371198729}"), locale("MS\\0x409"),
    DisplayName("tx_isolation_stats"): Amended]
class XeSqlPkg_tx_isolation_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tx_isolation_stats: XeSqlPkg_tx_isolation_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_accept_log_mode;
	[WmiDataId(7), read] uint64 tx_readuncommitted_count;
	[WmiDataId(8), read] uint64 tx_readcommitted_count;
	[WmiDataId(9), read] uint64 tx_repeatableread_count;
	[WmiDataId(10), read] uint64 tx_serializable_count;
	[WmiDataId(11), read] uint64 tx_snapshot_count;
	[WmiDataId(12), read] uint64 tx_total_count;
	[WmiDataId(13), read] uint64 tx_explicit_count;
};
		
[dynamic: ToInstance, Description("Transaction isolation level statistics"): Amended,
    Guid("{1CEAAB88-6D0A-4C44-B00C-E5E8257F1CC7}"), locale("MS\\0x409"),
    DisplayName("tx_isolation_stats"): Amended]
class XeSqlPkg_tx_isolation_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class tx_isolation_stats: XeSqlPkg_tx_isolation_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_accept_log_mode;
	[WmiDataId(7), read] uint64 tx_readuncommitted_count;
	[WmiDataId(8), read] uint64 tx_readcommitted_count;
	[WmiDataId(9), read] uint64 tx_readcommittedsnapshot_count;
	[WmiDataId(10), read] uint64 tx_repeatableread_count;
	[WmiDataId(11), read] uint64 tx_serializable_count;
	[WmiDataId(12), read] uint64 tx_snapshot_count;
	[WmiDataId(13), read] uint64 tx_total_count;
	[WmiDataId(14), read] uint64 tx_explicit_count;
};
		
[dynamic: ToInstance, Description("Allocation page (PFS/GAM/SGAM) statistics."): Amended,
    Guid("{73d47d40-faa4-4ef5-9bd6-67e154a31cd2}"), locale("MS\\0x409"),
    DisplayName("allocation_page_update_stats"): Amended]
class XeSqlPkg_allocation_page_update_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class allocation_page_update_stats: XeSqlPkg_allocation_page_update_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_concurrent_pfs_enabled;
	[WmiDataId(7), read] sint8  is_concurrent_gam_enabled;
	[WmiDataId(8), read] sint8  is_concurrent_sgam_enabled;
	[WmiDataId(9), read] uint64 pfs_concurrent_update_count;
	[WmiDataId(10), read] uint64 pfs_exclusive_update_count;
	[WmiDataId(11), read] uint64 pfs_exclusive_update_free_space_change_count;
	[WmiDataId(12), read] uint64 pfs_exclusive_update_tx_rollback_count;
	[WmiDataId(13), read] uint64 gam_concurrent_update_count;
	[WmiDataId(14), read] uint64 gam_exclusive_update_count;
	[WmiDataId(15), read] uint64 gam_exclusive_update_non_locked_count;
	[WmiDataId(16), read] uint64 gam_exclusive_update_non_logged_count;
	[WmiDataId(17), read] uint64 sgam_concurrent_update_count;
	[WmiDataId(18), read] uint64 sgam_exclusive_update_count;
};
		
[dynamic: ToInstance, Description("Fired when tempdb runs out of space with either 1101 or 1105 errors"): Amended,
    Guid("{169e592d-dbcc-435b-aa7a-c678410ec467}"), locale("MS\\0x409"),
    DisplayName("tempdb_out_of_space"): Amended]
class XeSqlPkg_tempdb_out_of_space: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tempdb_out_of_space: XeSqlPkg_tempdb_out_of_space
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 error_code;
};
		
[dynamic: ToInstance, Description("Concurrent PFS Update stats."): Amended,
    Guid("{ed6c577e-0677-462f-b747-b0d5fb1d3955}"), locale("MS\\0x409"),
    DisplayName("concurrent_pfs_update_stats"): Amended]
class XeSqlPkg_concurrent_pfs_update_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class concurrent_pfs_update_stats: XeSqlPkg_concurrent_pfs_update_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 is_concurrent_pfs_enabled;
	[WmiDataId(7), read] uint64 update_latch_pfs_tx_rollback_count;
	[WmiDataId(8), read] uint64 update_latch_pfs_free_space_change_count;
};
		
[dynamic: ToInstance, Description("Concurrent GAM Update stats."): Amended,
    Guid("{2811c148-c5ea-48b4-bc5e-837d5ba8c1cf}"), locale("MS\\0x409"),
    DisplayName("concurrent_gam_update_stats"): Amended]
class XeSqlPkg_concurrent_gam_update_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class concurrent_gam_update_stats: XeSqlPkg_concurrent_gam_update_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 is_concurrent_gam_enabled;
	[WmiDataId(7), read] uint64 gam_sh_write_latch_count;
	[WmiDataId(8), read] uint64 gam_up_latch_count;
};
		
[dynamic: ToInstance, Description("Logical revert completed for btree row."): Amended,
    Guid("{9dc06de9-3c64-413e-aa98-742b8167962a}"), locale("MS\\0x409"),
    DisplayName("revert_from_version_btree"): Amended]
class XeSqlPkg_revert_from_version_btree: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class revert_from_version_btree: XeSqlPkg_revert_from_version_btree
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("Logical revert completed for heap row."): Amended,
    Guid("{dee1b83f-0a9d-42f0-aad5-1dab207b1009}"), locale("MS\\0x409"),
    DisplayName("revert_from_version_heap"): Amended]
class XeSqlPkg_revert_from_version_heap: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class revert_from_version_heap: XeSqlPkg_revert_from_version_heap
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("An aborted row has been moved during ADR cleaner."): Amended,
    Guid("{f8aa2e06-4fbf-4513-894e-83a76f92d63a}"), locale("MS\\0x409"),
    DisplayName("row_move_during_adr_cleaner"): Amended]
class XeSqlPkg_row_move_during_adr_cleaner: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class row_move_during_adr_cleaner: XeSqlPkg_row_move_during_adr_cleaner
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 xdesid_high;
	[WmiDataId(7), read] uint32 xdesid_low;
};
		
[dynamic: ToInstance, Description("System transaction abort invalidated the snapshot of aborted transactions."): Amended,
    Guid("{431b61bf-dd3f-4617-8e99-190980df4ae6}"), locale("MS\\0x409"),
    DisplayName("system_xdes_abort_invalidated_cleanup"): Amended]
class XeSqlPkg_system_xdes_abort_invalidated_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class system_xdes_abort_invalidated_cleanup: XeSqlPkg_system_xdes_abort_invalidated_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 xdesid_high;
	[WmiDataId(7), read] uint32 xdesid_low;
};
		
[dynamic: ToInstance, Description("Version store page was deallocated."): Amended,
    Guid("{cc15c07e-6d82-4fa3-bdde-0c1435138d48}"), locale("MS\\0x409"),
    DisplayName("pvs_page_deallocated"): Amended]
class XeSqlPkg_pvs_page_deallocated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pvs_page_deallocated: XeSqlPkg_pvs_page_deallocated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("Removed aborted xdes from aborted map after cleanup iteration succeeded."): Amended,
    Guid("{ff0aa553-a5f1-4a8b-a659-d065d96c9c0c}"), locale("MS\\0x409"),
    DisplayName("remove_aborted_xdes"): Amended]
class XeSqlPkg_remove_aborted_xdes: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remove_aborted_xdes: XeSqlPkg_remove_aborted_xdes
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 xdesid_high;
	[WmiDataId(7), read] uint32 xdesid_low;
};
		
[dynamic: ToInstance, Description("Page is marked as having persisted versions."): Amended,
    Guid("{3f2d0cfe-a591-4c4b-bc07-7065d3904374}"), locale("MS\\0x409"),
    DisplayName("in_row_version_flag_set"): Amended]
class XeSqlPkg_in_row_version_flag_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class in_row_version_flag_set: XeSqlPkg_in_row_version_flag_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("The page is marked as having persisted versions."): Amended,
    Guid("{ba8c6dd9-adee-45cb-9a77-ce18dc401e70}"), locale("MS\\0x409"),
    DisplayName("in_row_version_flag_set"): Amended]
class XeSqlPkg_in_row_version_flag_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class in_row_version_flag_set: XeSqlPkg_in_row_version_flag_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("Page is marked as having no persisted versions."): Amended,
    Guid("{341adb2d-e603-4e91-85bc-fbcf6eb161b4}"), locale("MS\\0x409"),
    DisplayName("in_row_version_flag_cleared"): Amended]
class XeSqlPkg_in_row_version_flag_cleared: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class in_row_version_flag_cleared: XeSqlPkg_in_row_version_flag_cleared
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("The page is marked as having no persisted versions."): Amended,
    Guid("{ef35d24a-3b6d-4623-ab9e-429950f66ee1}"), locale("MS\\0x409"),
    DisplayName("in_row_version_flag_cleared"): Amended]
class XeSqlPkg_in_row_version_flag_cleared: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class in_row_version_flag_cleared: XeSqlPkg_in_row_version_flag_cleared
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("The ADR sweep for skipped pages in ADR started."): Amended,
    Guid("{b6e6f5c0-8034-4fd4-9a00-1e4491292388}"), locale("MS\\0x409"),
    DisplayName("adr_sweep_for_skip_pages_started"): Amended]
class XeSqlPkg_adr_sweep_for_skip_pages_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class adr_sweep_for_skip_pages_started: XeSqlPkg_adr_sweep_for_skip_pages_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("The ADR sweep for skipped pages timed out."): Amended,
    Guid("{D571F9AB-D2B3-4555-845C-BE6F75BB0319}"), locale("MS\\0x409"),
    DisplayName("adr_sweep_timed_out"): Amended]
class XeSqlPkg_adr_sweep_timed_out: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class adr_sweep_timed_out: XeSqlPkg_adr_sweep_timed_out
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("The ADR sweep for skipped pages in ADR finished."): Amended,
    Guid("{DB355CD5-6E60-4E69-9565-032C858EF59D}"), locale("MS\\0x409"),
    DisplayName("adr_sweep_for_skip_pages_finished"): Amended]
class XeSqlPkg_adr_sweep_for_skip_pages_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class adr_sweep_for_skip_pages_finished: XeSqlPkg_adr_sweep_for_skip_pages_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  sweep_succeeded;
};
		
[dynamic: ToInstance, Description("The ADR sweep has snapshotted the list of aborted transactions."): Amended,
    Guid("{d4197314-f45f-40d5-bc4d-55b8448bc2ca}"), locale("MS\\0x409"),
    DisplayName("adr_sweep_aborted_transactions_snapshot_done"): Amended]
class XeSqlPkg_adr_sweep_aborted_transactions_snapshot_done: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class adr_sweep_aborted_transactions_snapshot_done: XeSqlPkg_adr_sweep_aborted_transactions_snapshot_done
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Transaction abort trace"): Amended,
    Guid("{3f49f1de-638b-4548-810c-d0d60c69a245}"), locale("MS\\0x409"),
    DisplayName("tx_abort_trace"): Amended]
class XeSqlPkg_tx_abort_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tx_abort_trace: XeSqlPkg_tx_abort_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 xdesid_high;
	[WmiDataId(7), read] uint32 xdesid_low;
	[WmiDataId(8), read] uint16 abort_type;
	[WmiDataId(9), read] uint32 start_nestid;
	[WmiDataId(10), read] uint32 end_nestid;
};
		
[dynamic: ToInstance, Description("For ADR cleanup test to record the deallocated page cases."): Amended,
    Guid("{C2A6B3D2-2F11-4F48-82D9-54F78A2A12DB}"), locale("MS\\0x409"),
    DisplayName("adr_cleanup_test_deallocated_pages"): Amended]
class XeSqlPkg_adr_cleanup_test_deallocated_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class adr_cleanup_test_deallocated_pages: XeSqlPkg_adr_cleanup_test_deallocated_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string function_name;
};
		
[dynamic: ToInstance, Description("Failpoint to co-orindate cleaner and db exclusive waiter for test"): Amended,
    Guid("{52CC6612-9C73-45ED-AB6F-FB440F8BEF1D}"), locale("MS\\0x409"),
    DisplayName("pvsadrcleaner_exclusive_test"): Amended]
class XeSqlPkg_pvsadrcleaner_exclusive_test: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pvsadrcleaner_exclusive_test: XeSqlPkg_pvsadrcleaner_exclusive_test
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Failpoint to co-orindate cleaner and user workload when cleaner has released latch on btree page"): Amended,
    Guid("{539DA363-A5A3-44BB-B9BC-9ADAC0452DE5}"), locale("MS\\0x409"),
    DisplayName("btree_revert_latch_release"): Amended]
class XeSqlPkg_btree_revert_latch_release: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class btree_revert_latch_release: XeSqlPkg_btree_revert_latch_release
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
};
		
[dynamic: ToInstance, Description("Failpoint to coordinate logical revert triggered by user transaction with logical revert triggered by cleaner"): Amended,
    Guid("{d2e17dc4-9caa-477d-8534-03193d7444b8}"), locale("MS\\0x409"),
    DisplayName("logicalrevertblobsynchronization_test"): Amended]
class XeSqlPkg_logicalrevertblobsynchronization_test: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logicalrevertblobsynchronization_test: XeSqlPkg_logicalrevertblobsynchronization_test
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Failpoint to while logical revert transaction is being rolled back"): Amended,
    Guid("{a451bad9-e53f-4223-a0a6-627928beb146}"), locale("MS\\0x409"),
    DisplayName("logicalrevertrollbacksynchronization_test"): Amended]
class XeSqlPkg_logicalrevertrollbacksynchronization_test: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logicalrevertrollbacksynchronization_test: XeSqlPkg_logicalrevertrollbacksynchronization_test
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 state;
};
		
[dynamic: ToInstance, Description("This event describes the transaction state."): Amended,
    Guid("{A6EAC8F2-F92A-407D-8537-B07B9E80F555}"), locale("MS\\0x409"),
    DisplayName("xdes_activity"): Amended]
class XeSqlPkg_xdes_activity: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xdes_activity: XeSqlPkg_xdes_activity
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, 
				XEMapId(39),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"BeforeRollbackLogRecord", 
					"AfterHardenRollbackLogRecord" }
			] uint8 state;
};
		
[dynamic: ToInstance, Description("TrackPagesPriorToCrashRecovery started for the database."): Amended,
    Guid("{404228DA-A45C-4470-A717-87531572C26C}"), locale("MS\\0x409"),
    DisplayName("track_pages_prior_to_crash_recovery_started"): Amended]
class XeSqlPkg_track_pages_prior_to_crash_recovery_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class track_pages_prior_to_crash_recovery_started: XeSqlPkg_track_pages_prior_to_crash_recovery_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("TrackPagesPriorToCrashRecovery completed for the database."): Amended,
    Guid("{411D034D-2CF7-492D-8FC4-38A1680E766F}"), locale("MS\\0x409"),
    DisplayName("track_pages_prior_to_crash_recovery_completed"): Amended]
class XeSqlPkg_track_pages_prior_to_crash_recovery_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class track_pages_prior_to_crash_recovery_completed: XeSqlPkg_track_pages_prior_to_crash_recovery_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Ref counted PVS page allocation as TrackPagesPriorToCrashRecovery is not completed yet."): Amended,
    Guid("{85AC34D1-7E3B-43E2-AF6B-4FACDFD29048}"), locale("MS\\0x409"),
    DisplayName("ref_counted_pvs_page_allocation"): Amended]
class XeSqlPkg_ref_counted_pvs_page_allocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ref_counted_pvs_page_allocation: XeSqlPkg_ref_counted_pvs_page_allocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 in_flight_pvs_allocation_count;
};
		
[dynamic: ToInstance, Description("The number of records and/or bytes of log for a non-ADR transaction exceeds the current threshold."): Amended,
    Guid("{F1DBF2A0-3ACB-42E8-920F-A32AF83DF752}"), locale("MS\\0x409"),
    DisplayName("large_non_adr_transactions"): Amended]
class XeSqlPkg_large_non_adr_transactions: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class large_non_adr_transactions: XeSqlPkg_large_non_adr_transactions
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint32 xdes_id_low;
	[WmiDataId(7), read] sint16 xdes_id_high;
	[WmiDataId(8), read] uint64 xdes_logRecCount;
	[WmiDataId(9), read] uint64 xdes_KBOfLogUsedByTransaction;
	[WmiDataId(10), read] uint64 xdes_KBOfLogUsedSinceBeginLsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string xdes_beginLsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string xdes_lastLsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string xdes_beginTimestamp;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string xdes_transactionName;
};
		
[dynamic: ToInstance, Description("The number of bytes of log for a replicated transaction exceeds the current threshold."): Amended,
    Guid("{127D8DF4-8C36-4599-AF42-44210F725E2C}"), locale("MS\\0x409"),
    DisplayName("large_repl_transactions"): Amended]
class XeSqlPkg_large_repl_transactions: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class large_repl_transactions: XeSqlPkg_large_repl_transactions
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint32 xdes_id_low;
	[WmiDataId(7), read] sint16 xdes_id_high;
	[WmiDataId(8), read] uint64 xdes_logRecCount;
	[WmiDataId(9), read] uint64 xdes_KBOfLogUsedByTransaction;
	[WmiDataId(10), read] uint64 xdes_KBOfCurrentLogSpaceUsed;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string xdes_beginLsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string xdes_firstReplLsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string xdes_lastLsn;
};
		
[dynamic: ToInstance, Description("Log record- and transaction-related info about the non-CTR ONLINE_INDEX_DDL transaction."): Amended,
    Guid("{6836571D-A9B1-4197-B199-5A0D4B14E641}"), locale("MS\\0x409"),
    DisplayName("online_index_ddl_tx_info"): Amended]
class XeSqlPkg_online_index_ddl_tx_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class online_index_ddl_tx_info: XeSqlPkg_online_index_ddl_tx_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  online_index_ddl_fix_FS_status;
	[WmiDataId(7), read] sint32 xdes_id_low;
	[WmiDataId(8), read] sint16 xdes_id_high;
	[WmiDataId(9), read] uint64 xdes_logRecCount;
	[WmiDataId(10), read] uint64 xdes_KBOfLogUsedByTransaction;
	[WmiDataId(11), read] uint64 xdes_KBOfLogUsedSinceBeginLsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string xdes_beginLsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string xdes_lastLsn;
};
		
[dynamic: ToInstance, Description("Blobs access pattern"): Amended,
    Guid("{6c1c5613-827b-46f5-88d7-8c152c92051e}"), locale("MS\\0x409"),
    DisplayName("blob_access_pattern"): Amended]
class XeSqlPkg_blob_access_pattern: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class blob_access_pattern: XeSqlPkg_blob_access_pattern
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 blob_force_update_text_ptr;
	[WmiDataId(7), read] uint64 blob_force_update_inrow_first_frag;
	[WmiDataId(8), read] uint64 blob_locate_blob;
	[WmiDataId(9), read] uint64 blob_setup_inrow_root;
	[WmiDataId(10), read] uint64 blob_open_stream_selobhandle;
	[WmiDataId(11), read] uint64 blob_open_stream_hrowcolid;
	[WmiDataId(12), read] uint64 blob_open_stream_textptr;
};
		
[dynamic: ToInstance, Description("Emit statistics related to locking."): Amended,
    Guid("{9EE344D8-0177-45FF-8CD9-3E867F677A29}"), locale("MS\\0x409"),
    DisplayName("locking_stats"): Amended]
class XeSqlPkg_locking_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class locking_stats: XeSqlPkg_locking_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 lock_escalations_memory_pressure;
	[WmiDataId(7), read] uint64 lock_escalations_lock_threshold;
};
		
[dynamic: ToInstance, Description("Emit statistics related to locking."): Amended,
    Guid("{9EE344D8-0177-45FF-8CD9-3E867F677A29}"), locale("MS\\0x409"),
    DisplayName("locking_stats"): Amended]
class XeSqlPkg_locking_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class locking_stats: XeSqlPkg_locking_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 lock_escalations_memory_pressure;
	[WmiDataId(7), read] uint64 lock_escalations_lock_threshold;
	[WmiDataId(8), read] uint64 total_read_cursors_for_update;
	[WmiDataId(9), read] uint64 lock_escalation_with_update_query;
	[WmiDataId(10), read] uint64 lock_escalation_with_lock_class;
	[WmiDataId(11), read] uint64 bookmark_lookup_read_cursors;
	[WmiDataId(12), read] uint64 read_cursors_with_lock_class;
	[WmiDataId(13), read] uint64 read_cursors_with_dol_optimization;
	[WmiDataId(14), read] uint64 dol_locks_skipped_base_table;
	[WmiDataId(15), read] uint64 dol_locks_skipped_nci;
	[WmiDataId(16), read] sint8  are_lock_ordinals_populated;
	[WmiDataId(17), read] sint8  are_lock_ordinals_verified;
	[WmiDataId(18), read] sint8  is_tid_locking_enabled;
	[WmiDataId(19), read] sint8  is_lock_after_qualification_enabled;
};
		
[dynamic: ToInstance, Description("Emit statistics related to locking."): Amended,
    Guid("{9EE344D8-0177-45FF-8CD9-3E867F677A29}"), locale("MS\\0x409"),
    DisplayName("locking_stats"): Amended]
class XeSqlPkg_locking_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class locking_stats: XeSqlPkg_locking_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 lock_escalations_memory_pressure;
	[WmiDataId(7), read] uint64 lock_escalations_lock_threshold;
	[WmiDataId(8), read] uint64 total_read_cursors_for_update;
	[WmiDataId(9), read] uint64 lock_escalation_with_update_query;
	[WmiDataId(10), read] uint64 lock_escalation_with_lock_class;
	[WmiDataId(11), read] uint64 bookmark_lookup_read_cursors;
	[WmiDataId(12), read] uint64 read_cursors_with_lock_class;
	[WmiDataId(13), read] uint64 read_cursors_with_dol_optimization;
	[WmiDataId(14), read] uint64 dol_locks_skipped_base_table;
	[WmiDataId(15), read] uint64 dol_locks_skipped_nci;
	[WmiDataId(16), read] sint8  are_lock_ordinals_populated;
	[WmiDataId(17), read] sint8  are_lock_ordinals_verified;
	[WmiDataId(18), read] sint8  is_tid_locking_enabled;
	[WmiDataId(19), read] sint8  is_lock_after_qualification_enabled;
	[WmiDataId(20), read] uint64 num_lock_after_qualification_attempts;
	[WmiDataId(21), read] uint64 num_lock_after_qualification_requalify_candidates;
	[WmiDataId(22), read] uint64 num_lock_after_qualification_requalifies;
	[WmiDataId(23), read] uint64 num_lock_after_qualification_requalifies_not_supported;
	[WmiDataId(24), read] uint64 num_lock_after_qualification_without_requalify;
	[WmiDataId(25), read] uint64 num_lock_after_qualification_unsupported_op;
	[WmiDataId(26), read] uint64 laq_skip_reason_conflict_count;
	[WmiDataId(27), read] uint64 laq_skip_reason_wasted_work;
	[WmiDataId(28), read] uint64 laq_total_queries_for_heuristics;
	[WmiDataId(29), read] uint64 laq_queries_with_conflicts;
	[WmiDataId(30), read] uint64 laq_total_work_done;
	[WmiDataId(31), read] uint64 laq_wasted_work;
	[WmiDataId(32), read] uint64 row_lock_granularity;
	[WmiDataId(33), read] uint64 page_lock_granularity;
	[WmiDataId(34), read] uint64 rowset_lock_granularity;
};
		
[dynamic: ToInstance, Description("Emit QP statistics related to locking."): Amended,
    Guid("{890CCE36-3BD0-45BD-A3FF-1E43F19D8291}"), locale("MS\\0x409"),
    DisplayName("locking_qp_stats"): Amended]
class XeSqlPkg_locking_qp_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class locking_qp_stats: XeSqlPkg_locking_qp_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 qtet_type;
	[WmiDataId(6), read] uint32 laq_skip_count;
	[WmiDataId(7), read] uint32 dol_skip_count;
};
		
[dynamic: ToInstance, Description("This xevent is fired in the lock after qualification code paths. Used only for testing purposes."): Amended,
    Guid("{D83092A2-0577-4D3A-B064-F543816AF625}"), locale("MS\\0x409"),
    DisplayName("lock_after_qual_event"): Amended]
class XeSqlPkg_lock_after_qual_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_after_qual_event: XeSqlPkg_lock_after_qual_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, 
				XEMapId(73),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"LaqSkippedConflictCount", 
					"LaqSkippedWastedWork", 
					"LaqStarted", 
					"LaqStatementNestAbortedForRetry", 
					"LaqConflictDetected" }
			] uint8 laq_activity;
};
		
[dynamic: ToInstance, Description("Lock request per sec perf counter."): Amended,
    Guid("{5686ED63-09DE-4AAC-9F4A-4195A3356BA5}"), locale("MS\\0x409"),
    DisplayName("lock_requests_sec"): Amended]
class XeSqlPkg_lock_requests_sec: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_requests_sec: XeSqlPkg_lock_requests_sec
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 lock_requests_sec_value;
	[WmiDataId(6), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
};
		
[dynamic: ToInstance, Description("Aggregate lock request per sec perf counter over 10 mins."): Amended,
    Guid("{F1BC7CFF-B5C2-42C7-A979-8362416F53A7}"), locale("MS\\0x409"),
    DisplayName("aggregate_lock_requests"): Amended]
class XeSqlPkg_aggregate_lock_requests: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class aggregate_lock_requests: XeSqlPkg_aggregate_lock_requests
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 lock_requests_agg_value;
	[WmiDataId(6), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
};
		
[dynamic: ToInstance, Description("Emit statistics related to heap access patterns."): Amended,
    Guid("{fe2e0dca-b7e8-4ed6-8e96-574211149cdc}"), locale("MS\\0x409"),
    DisplayName("heap_access_pattern"): Amended]
class XeSqlPkg_heap_access_pattern: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class heap_access_pattern: XeSqlPkg_heap_access_pattern
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 heap_deallocate_ix_hobt_lock;
};
		
[dynamic: ToInstance, Description("Emit various data about user transaction page cleanup progress."): Amended,
    Guid("{30F01820-1919-4EDD-BBC0-0880921DCEBA}"), locale("MS\\0x409"),
    DisplayName("user_tx_page_cleanup_progress"): Amended]
class XeSqlPkg_user_tx_page_cleanup_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class user_tx_page_cleanup_progress: XeSqlPkg_user_tx_page_cleanup_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 hash_table_page_count;
	[WmiDataId(7), read] uint64 hash_table_lock_resource_id_count;
	[WmiDataId(8), read] uint64 pages_cleaned;
	[WmiDataId(9), read] sint32 xdes_id_low;
	[WmiDataId(10), read] sint16 xdes_id_high;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string event_location;
};
		
[dynamic: ToInstance, Description("Emit various data about user transaction page cleanup progress."): Amended,
    Guid("{30F01820-1919-4EDD-BBC0-0880921DCEBA}"), locale("MS\\0x409"),
    DisplayName("user_tx_page_cleanup_progress"): Amended]
class XeSqlPkg_user_tx_page_cleanup_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class user_tx_page_cleanup_progress: XeSqlPkg_user_tx_page_cleanup_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 hash_table_page_count;
	[WmiDataId(7), read] uint64 hash_table_lock_resource_id_count;
	[WmiDataId(8), read] uint64 pages_cleaned;
	[WmiDataId(9), read] uint64 pages_removed;
	[WmiDataId(10), read] sint32 xdes_id_low;
	[WmiDataId(11), read] sint16 xdes_id_high;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string event_location;
};
		
[dynamic: ToInstance, Description("Telemetry regarding how many stale elements were removed from the user transaction page cleanup hash table by version cleaner."): Amended,
    Guid("{DABB9733-D90E-4159-A1BA-61B787C762C3}"), locale("MS\\0x409"),
    DisplayName("stale_user_tx_page_cleanup_element_removal"): Amended]
class XeSqlPkg_stale_user_tx_page_cleanup_element_removal: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stale_user_tx_page_cleanup_element_removal: XeSqlPkg_stale_user_tx_page_cleanup_element_removal
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 hash_table_page_count;
	[WmiDataId(7), read] uint64 hash_table_lock_resource_id_count;
	[WmiDataId(8), read] uint64 pages_removed;
	[WmiDataId(9), read] uint64 lock_resource_ids_removed;
	[WmiDataId(10), read] uint64 lock_resource_ids_skipped;
};
		
[dynamic: ToInstance, Description("Emit statistics related to user transaction page cleanup hash table."): Amended,
    Guid("{C0530120-F9FE-49D4-BBD3-57EEC3729B09}"), locale("MS\\0x409"),
    DisplayName("user_tx_page_cleanup_stats"): Amended]
class XeSqlPkg_user_tx_page_cleanup_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class user_tx_page_cleanup_stats: XeSqlPkg_user_tx_page_cleanup_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_cleanup_under_user_transaction_enabled;
	[WmiDataId(7), read] uint64 pages_cleaned_up_by_user_transactions;
	[WmiDataId(8), read] uint64 pages_skipped_by_user_transactions;
	[WmiDataId(9), read] uint64 pages_added_to_hash_table;
	[WmiDataId(10), read] uint64 pages_removed_from_hash_table_by_user_transactions;
	[WmiDataId(11), read] uint64 pages_removed_from_hash_table_by_version_cleaner;
	[WmiDataId(12), read] uint64 lock_resource_ids_added_to_hash_table;
	[WmiDataId(13), read] uint64 lock_resource_ids_removed_from_hash_table;
	[WmiDataId(14), read] uint64 unique_transactions_attempting_page_cleanup;
	[WmiDataId(15), read] uint64 snapshot_pages_in_hash_table;
	[WmiDataId(16), read] uint64 snapshot_lock_resource_ids_in_hash_table;
};
		
[dynamic: ToInstance, Description("XEvent that indicates a Serializable Transaction info"): Amended,
    Guid("{a010b463-4d99-4759-9825-8c3254b5d9df}"), locale("MS\\0x409"),
    DisplayName("sr_tx_count"): Amended]
class XeSqlPkg_sr_tx_count: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sr_tx_count: XeSqlPkg_sr_tx_count
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_sr_tx_count_zero;
	[WmiDataId(6), read] sint8  incremented_sr_tx_count;
};
		
[dynamic: ToInstance, Description("Occurs when DBCC CHECK enters a new phase of the checking. Use this event to trace the phases of DBCC CHECK process."): Amended,
    Guid("{AFE41265-C11F-4c9b-86F5-1C72868CBD50}"), locale("MS\\0x409"),
    DisplayName("check_phase_tracing"): Amended]
class XeSqlPkg_check_phase_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_phase_tracing: XeSqlPkg_check_phase_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] uint64 call_duration;
	[WmiDataId(8), read] sint8  is_remote;
	[WmiDataId(9), read, 
				XEMapId(120),
				ValueMap { 
					"1", 
					"6", 
					"25", 
					"23", 
					"21", 
					"22", 
					"20", 
					"15", 
					"0", 
					"19", 
					"12", 
					"24", 
					"4", 
					"5", 
					"9", 
					"16", 
					"8", 
					"17", 
					"7", 
					"11", 
					"18", 
					"2", 
					"13", 
					"3", 
					"14", 
					"10" },
				Values { 
					"CHECK_ALLOCATIONS", 
					"CHECK_CATALOG", 
					"CHECK_PHASE_LAST", 
					"COLUMN_STORE_CROSS_ROWSET_CHECKSUMS", 
					"COLUMN_STORE_DELETE_BITMAP_CHECK", 
					"COLUMN_STORE_MAPPING_INDEX_CHECK", 
					"COLUMN_STORE_SEGMENT_CHECK", 
					"DATABASE_REPAIR", 
					"DATABASE_SNAPSHOT_CREATION", 
					"DATABASE_SNAPSHOT_DROP", 
					"EMERGENCY_MODE_REPAIR", 
					"HEKATON_DATABASE_CHECKS", 
					"INDEX_DEEP_DIVE", 
					"INDEX_DEEP_DIVE_CHECK_ONE_INDEX", 
					"INDEXED_VIEW_CHECKS", 
					"PARALLEL_THREAD", 
					"QDS_CHECKS", 
					"REPLICATED_TABLES_CHECK", 
					"SERVICE_BROKER_CHECKS", 
					"SPATIAL_INDEX_CHECKS", 
					"SXI_INDEX_CHECKS", 
					"SYSTEM_TABLE_CHECKS", 
					"SYSTEM_TABLE_PRIMITIVES", 
					"USER_TABLE_CHECKS", 
					"VERIFY_FILESTREAM_TOMBSTONES", 
					"XML_INDEX_CHECKS" }
			] uint32 command_phase;
};
		
[dynamic: ToInstance, Description("Occurs when DBCC CHECK enters a new phase of the checking. Use this event to trace the phases of DBCC CHECK process."): Amended,
    Guid("{AFE41265-C11F-4c9b-86F5-1C72868CBD50}"), locale("MS\\0x409"),
    DisplayName("check_phase_tracing"): Amended]
class XeSqlPkg_check_phase_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class check_phase_tracing: XeSqlPkg_check_phase_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] uint64 call_duration;
	[WmiDataId(8), read, 
				XEMapId(120),
				ValueMap { 
					"1", 
					"6", 
					"25", 
					"23", 
					"21", 
					"22", 
					"20", 
					"15", 
					"0", 
					"19", 
					"12", 
					"24", 
					"4", 
					"5", 
					"9", 
					"16", 
					"8", 
					"17", 
					"7", 
					"11", 
					"18", 
					"2", 
					"13", 
					"3", 
					"14", 
					"10" },
				Values { 
					"CHECK_ALLOCATIONS", 
					"CHECK_CATALOG", 
					"CHECK_PHASE_LAST", 
					"COLUMN_STORE_CROSS_ROWSET_CHECKSUMS", 
					"COLUMN_STORE_DELETE_BITMAP_CHECK", 
					"COLUMN_STORE_MAPPING_INDEX_CHECK", 
					"COLUMN_STORE_SEGMENT_CHECK", 
					"DATABASE_REPAIR", 
					"DATABASE_SNAPSHOT_CREATION", 
					"DATABASE_SNAPSHOT_DROP", 
					"EMERGENCY_MODE_REPAIR", 
					"HEKATON_DATABASE_CHECKS", 
					"INDEX_DEEP_DIVE", 
					"INDEX_DEEP_DIVE_CHECK_ONE_INDEX", 
					"INDEXED_VIEW_CHECKS", 
					"PARALLEL_THREAD", 
					"QDS_CHECKS", 
					"REPLICATED_TABLES_CHECK", 
					"SERVICE_BROKER_CHECKS", 
					"SPATIAL_INDEX_CHECKS", 
					"SXI_INDEX_CHECKS", 
					"SYSTEM_TABLE_CHECKS", 
					"SYSTEM_TABLE_PRIMITIVES", 
					"USER_TABLE_CHECKS", 
					"VERIFY_FILESTREAM_TOMBSTONES", 
					"XML_INDEX_CHECKS" }
			] uint32 command_phase;
};
		
[dynamic: ToInstance, Description("Occurs when a phase of DBCC CHECK is finished. Use this event to collect the number of messages a DBCC CHECK thread has sent or received."): Amended,
    Guid("{85909298-C1B1-4386-BD70-62C89285150A}"), locale("MS\\0x409"),
    DisplayName("check_thread_message_statistics"): Amended]
class XeSqlPkg_check_thread_message_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_thread_message_statistics: XeSqlPkg_check_thread_message_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_remote;
	[WmiDataId(7), read] uint32 messages_sent;
	[WmiDataId(8), read] uint32 messages_received;
};
		
[dynamic: ToInstance, Description("Occurs when a phase of DBCC CHECK is finished. Use this event to collect the number of logical, physical, and read-ahead IOs a DBCC CHECK thread has performed."): Amended,
    Guid("{8F25DB3D-9289-48c6-B864-05A674F209A8}"), locale("MS\\0x409"),
    DisplayName("check_thread_page_io_statistics"): Amended]
class XeSqlPkg_check_thread_page_io_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_thread_page_io_statistics: XeSqlPkg_check_thread_page_io_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_remote;
	[WmiDataId(7), read] uint64 logical_reads;
	[WmiDataId(8), read] uint64 physical_reads;
	[WmiDataId(9), read] uint64 read_ahead_reads;
};
		
[dynamic: ToInstance, Description("Occurs when a phase of DBCC CHECK is finished. Use this event to collect the number of logical, physical, and read-ahead IOs a DBCC CHECK thread has performed."): Amended,
    Guid("{8F25DB3D-9289-48c6-B864-05A674F209A8}"), locale("MS\\0x409"),
    DisplayName("check_thread_page_io_statistics"): Amended]
class XeSqlPkg_check_thread_page_io_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class check_thread_page_io_statistics: XeSqlPkg_check_thread_page_io_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 logical_reads;
	[WmiDataId(7), read] uint64 physical_reads;
	[WmiDataId(8), read] uint64 read_ahead_reads;
};
		
[dynamic: ToInstance, Description("Occurs when a phase of DBCC CHECK is finished. Use This event to collect the number and time of page latch and IO latch waits."): Amended,
    Guid("{0C226861-B916-4f09-B22A-2C902278D678}"), locale("MS\\0x409"),
    DisplayName("check_thread_page_latch_statistics"): Amended]
class XeSqlPkg_check_thread_page_latch_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_thread_page_latch_statistics: XeSqlPkg_check_thread_page_latch_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 total_page_io_latch_waits;
	[WmiDataId(7), read] uint64 page_io_latch_wait_time_in_ms;
	[WmiDataId(8), read] uint64 total_page_latch_waits;
	[WmiDataId(9), read] uint64 page_latch_wait_time_in_ms;
};
		
[dynamic: ToInstance, Description("Occurs when an allocation unit is added to the physical scanner."): Amended,
    Guid("{B4E6EC3B-DD4A-4CC7-A6CD-E0DCC134CD83}"), locale("MS\\0x409"),
    DisplayName("check_scanner_add_alloc_unit"): Amended]
class XeSqlPkg_check_scanner_add_alloc_unit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_scanner_add_alloc_unit: XeSqlPkg_check_scanner_add_alloc_unit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint32 object_id;
	[WmiDataId(9), read] uint32 index_id;
	[WmiDataId(10), read] uint64 rowset_id;
	[WmiDataId(11), read] uint64 allocation_unit_id;
	[WmiDataId(12), read, 
				XEMapId(197),
				ValueMap { 
					"2", 
					"6", 
					"1", 
					"8", 
					"0", 
					"4", 
					"3", 
					"5", 
					"7" },
				Values { 
					"AUT_CLUST_INDEX", 
					"AUT_DROPPED", 
					"AUT_HEAP", 
					"AUT_HOBT", 
					"AUT_INVALID", 
					"AUT_LOB", 
					"AUT_NC_INDEX", 
					"AUT_SLOB", 
					"AUT_SYSTEMPAGE" }
			] uint32 allocation_unit_type;
};
		
[dynamic: ToInstance, Description("Occurs when a single IAM page is added to the physical scanner."): Amended,
    Guid("{86519472-B798-46DE-BCD1-522B41C389D4}"), locale("MS\\0x409"),
    DisplayName("check_scanner_add_iam_page"): Amended]
class XeSqlPkg_check_scanner_add_iam_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_scanner_add_iam_page: XeSqlPkg_check_scanner_add_iam_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint32 pages;
};
		
[dynamic: ToInstance, Description("Occurs when a single IAM page is removed from the physical scanner."): Amended,
    Guid("{C2A427CE-82CC-4A6F-B77B-47362901FB75}"), locale("MS\\0x409"),
    DisplayName("check_scanner_remove_iam_page"): Amended]
class XeSqlPkg_check_scanner_remove_iam_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_scanner_remove_iam_page: XeSqlPkg_check_scanner_remove_iam_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint32 pages;
};
		
[dynamic: ToInstance, Description("Occurs when a subscan is started within the check scanner."): Amended,
    Guid("{CF9A1C13-228F-4AF1-8370-816FA3EC8267}"), locale("MS\\0x409"),
    DisplayName("check_scanner_subscan_started"): Amended]
class XeSqlPkg_check_scanner_subscan_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_scanner_subscan_started: XeSqlPkg_check_scanner_subscan_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("Occurs when a subscan is ended within the check scanner."): Amended,
    Guid("{9CC267B0-5CA9-4018-9EA9-C4A70D1A9796}"), locale("MS\\0x409"),
    DisplayName("check_scanner_subscan_ended"): Amended]
class XeSqlPkg_check_scanner_subscan_ended: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_scanner_subscan_ended: XeSqlPkg_check_scanner_subscan_ended
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] sint8  scan_aborted;
};
		
[dynamic: ToInstance, Description("Occurs when a subscan issues readahead."): Amended,
    Guid("{4BECEE76-50CA-423A-B465-902E54049E3B}"), locale("MS\\0x409"),
    DisplayName("check_scanner_subscan_readahead"): Amended]
class XeSqlPkg_check_scanner_subscan_readahead: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_scanner_subscan_readahead: XeSqlPkg_check_scanner_subscan_readahead
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 start_page_id;
	[WmiDataId(8), read] uint32 page_count;
	[WmiDataId(9), read] uint32 readahead_outstanding;
};
		
[dynamic: ToInstance, Description("Occurs when a subscan issues readahead."): Amended,
    Guid("{9CA0930B-380C-485F-843A-6F0CFDE474FB}"), locale("MS\\0x409"),
    DisplayName("check_scanner_subscan_readahead_behind"): Amended]
class XeSqlPkg_check_scanner_subscan_readahead_behind: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_scanner_subscan_readahead_behind: XeSqlPkg_check_scanner_subscan_readahead_behind
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 readahead_goal;
	[WmiDataId(8), read] sint32 readahead_outstanding;
};
		
[dynamic: ToInstance, Description("Event fired to indicate that an object is being checked in a batch."): Amended,
    Guid("{7f9190e0-d5f3-4aa9-afff-aa0c40cf41a5}"), locale("MS\\0x409"),
    DisplayName("check_batch_contents"): Amended]
class XeSqlPkg_check_batch_contents: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_batch_contents: XeSqlPkg_check_batch_contents
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 batch_id;
	[WmiDataId(7), read] uint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 rowset_id;
	[WmiDataId(10), read] sint8  is_parallel;
};
		
[dynamic: ToInstance, Description("Event fired to indicate that a batch of objects has been checked."): Amended,
    Guid("{ef68d13b-06b3-42d3-847f-b63866e2f9bf}"), locale("MS\\0x409"),
    DisplayName("check_batch_execution_complete"): Amended]
class XeSqlPkg_check_batch_execution_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_batch_execution_complete: XeSqlPkg_check_batch_execution_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 batch_id;
	[WmiDataId(7), read] uint64 duration_in_seconds;
	[WmiDataId(8), read] uint64 total_page_io_latch_waits;
	[WmiDataId(9), read] uint64 page_io_latch_wait_time_in_ms;
	[WmiDataId(10), read] uint64 total_page_latch_waits;
	[WmiDataId(11), read] uint64 page_latch_wait_time_in_ms;
	[WmiDataId(12), read] uint64 logical_reads;
	[WmiDataId(13), read] uint64 physical_reads;
	[WmiDataId(14), read] uint64 read_ahead_reads;
	[WmiDataId(15), read] uint64 maximum_tempdb_space_used;
	[WmiDataId(16), read] uint64 batch_row_count_estimate;
	[WmiDataId(17), read] uint64 batch_bytes_estimate;
	[WmiDataId(18), read] uint64 batch_btree_facts_estimate;
	[WmiDataId(19), read] uint64 batch_heap_forward_facts_estimate;
	[WmiDataId(20), read] uint64 batch_lob_facts_estimate;
	[WmiDataId(21), read] uint64 batch_page_facts_estimate;
};
		
[dynamic: ToInstance, Description("An error has been reported by a DBCC CHECK* command."): Amended,
    Guid("{D4FCD36A-97FB-496E-A0BE-1FEC25CECD43}"), locale("MS\\0x409"),
    DisplayName("dbcc_checkdb_error_reported"): Amended]
class XeSqlPkg_dbcc_checkdb_error_reported: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbcc_checkdb_error_reported: XeSqlPkg_dbcc_checkdb_error_reported
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint32 replica_db_id;
	[WmiDataId(7), read] uint32 error_number;
	[WmiDataId(8), read] uint32 error_level;
	[WmiDataId(9), read] uint32 error_state;
	[WmiDataId(10), read] uint16 file_id;
	[WmiDataId(11), read] uint32 page_id;
	[WmiDataId(12), read] uint32 slot_id;
	[WmiDataId(13), read] uint32 object_id;
	[WmiDataId(14), read] uint32 index_id;
	[WmiDataId(15), read] uint64 rowset_id;
	[WmiDataId(16), read] uint64 alloc_unit_id;
	[WmiDataId(17), read, 
				XEMapId(197),
				ValueMap { 
					"2", 
					"6", 
					"1", 
					"8", 
					"0", 
					"4", 
					"3", 
					"5", 
					"7" },
				Values { 
					"AUT_CLUST_INDEX", 
					"AUT_DROPPED", 
					"AUT_HEAP", 
					"AUT_HOBT", 
					"AUT_INVALID", 
					"AUT_LOB", 
					"AUT_NC_INDEX", 
					"AUT_SLOB", 
					"AUT_SYSTEMPAGE" }
			] uint32 alloc_unit_type;
	[WmiDataId(18), read] uint16 ref_file_id;
	[WmiDataId(19), read] uint32 ref_page_id;
	[WmiDataId(20), read] uint32 ref_slot_id;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Summarizes the execution of a DBCC CHECK* command.."): Amended,
    Guid("{E4B0E843-9435-4127-B209-2A37FCB11525}"), locale("MS\\0x409"),
    DisplayName("dbcc_check_command_summary"): Amended]
class XeSqlPkg_dbcc_check_command_summary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbcc_check_command_summary: XeSqlPkg_dbcc_check_command_summary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint8 repair_level;
	[WmiDataId(7), read] uint32 command_options;
	[WmiDataId(8), read] uint64 duration_in_seconds;
	[WmiDataId(9), read] uint8 minimum_repair_level;
	[WmiDataId(10), read] uint32 errors_reported;
	[WmiDataId(11), read] uint32 errors_repaired;
	[WmiDataId(12), read] sint8  is_sds_visible;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string command_name;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{65bdab16-3b04-45f6-b7ef-aa939c618725}"), locale("MS\\0x409"),
    DisplayName("checkpoint_db_request"): Amended]
class XeSqlPkg_checkpoint_db_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class checkpoint_db_request: XeSqlPkg_checkpoint_db_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(46),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint32 message_opcode;
	[WmiDataId(6), read] uint64 time_frame;
	[WmiDataId(7), read] sint8  truncate_log;
};
		
[dynamic: ToInstance, Description("Reports the DBID used for Transient Replica."): Amended,
    Guid("{86800D62-10AC-4c0b-8EBC-929CA3C85551}"), locale("MS\\0x409"),
    DisplayName("replica_create_start"): Amended]
class XeSqlPkg_replica_create_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_start: XeSqlPkg_replica_create_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Traces Create Replica message sent to a remote brick."): Amended,
    Guid("{E623D6BD-EB4B-4290-822C-4D0519591695}"), locale("MS\\0x409"),
    DisplayName("replica_create_request"): Amended]
class XeSqlPkg_replica_create_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_request: XeSqlPkg_replica_create_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read, 
				XEMapId(174),
				ValueMap { 
					"2", 
					"1", 
					"3" },
				Values { 
					"RECOVERREPLICA", 
					"SETUPREPLICA", 
					"WAITFORPEERS" }
			] uint32 phase_id;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read, 
				XEMapId(46),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint32 message_opcode;
	[WmiDataId(10), read] uint64 split_age;
};
		
[dynamic: ToInstance, Description("Traces recover-to age response from a remote brick."): Amended,
    Guid("{F7B3FF7F-C947-44ec-B150-C4D12DA240E5}"), locale("MS\\0x409"),
    DisplayName("replica_create_reply"): Amended]
class XeSqlPkg_replica_create_reply: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_reply: XeSqlPkg_replica_create_reply
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint64 brick_age;
	[WmiDataId(8), read, 
				XEMapId(174),
				ValueMap { 
					"2", 
					"1", 
					"3" },
				Values { 
					"RECOVERREPLICA", 
					"SETUPREPLICA", 
					"WAITFORPEERS" }
			] uint32 phase_id;
	[WmiDataId(9), read, 
				XEMapId(46),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint32 message_opcode;
};
		
[dynamic: ToInstance, Description("Occurs when all messages are sent and the replica is about to be created on the connect brick."): Amended,
    Guid("{2624EA35-70AA-4eea-93B5-BE9EE333D4EC}"), locale("MS\\0x409"),
    DisplayName("replica_create_local_sent"): Amended]
class XeSqlPkg_replica_create_local_sent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_local_sent: XeSqlPkg_replica_create_local_sent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(174),
				ValueMap { 
					"2", 
					"1", 
					"3" },
				Values { 
					"RECOVERREPLICA", 
					"SETUPREPLICA", 
					"WAITFORPEERS" }
			] uint32 phase_id;
};
		
[dynamic: ToInstance, Description("Signals completion of local call."): Amended,
    Guid("{46335EED-8EF7-40be-98D2-26EF5899500E}"), locale("MS\\0x409"),
    DisplayName("replica_create_local_complete"): Amended]
class XeSqlPkg_replica_create_local_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_local_complete: XeSqlPkg_replica_create_local_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(174),
				ValueMap { 
					"2", 
					"1", 
					"3" },
				Values { 
					"RECOVERREPLICA", 
					"SETUPREPLICA", 
					"WAITFORPEERS" }
			] uint32 phase_id;
	[WmiDataId(6), read] uint64 split_age;
};
		
[dynamic: ToInstance, Description("Signals the end of the conversation"): Amended,
    Guid("{83B6F816-C469-4244-B21A-C7335123D53C}"), locale("MS\\0x409"),
    DisplayName("replica_create_wait_for_peers"): Amended]
class XeSqlPkg_replica_create_wait_for_peers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_wait_for_peers: XeSqlPkg_replica_create_wait_for_peers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Signals the begining of drop replica db operation."): Amended,
    Guid("{45939252-E67E-40b4-8AEA-7821EA6A2E95}"), locale("MS\\0x409"),
    DisplayName("replica_destroy_start"): Amended]
class XeSqlPkg_replica_destroy_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_destroy_start: XeSqlPkg_replica_destroy_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Track mixed extent activation and deactivation operations."): Amended,
    Guid("{89d90e20-2739-4233-81e3-ab70729462f8}"), locale("MS\\0x409"),
    DisplayName("mixed_extent_activation"): Amended]
class XeSqlPkg_mixed_extent_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_extent_activation: XeSqlPkg_mixed_extent_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 extent_id;
	[WmiDataId(7), read] sint8  is_logged;
	[WmiDataId(8), read] sint8  rollback;
	[WmiDataId(9), read] sint8  activate;
	[WmiDataId(10), read] uint32 database_id;
	[WmiDataId(11), read, 
				XEMapId(82),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 latch_mode;
	[WmiDataId(12), read] sint8  is_concurrent_update_enabled;
	[WmiDataId(13), read] sint8  is_transactional;
};
		
[dynamic: ToInstance, Description("Track mixed extent allocation operations"): Amended,
    Guid("{c3ca2852-3b85-4dfb-a22f-359e374feff8}"), locale("MS\\0x409"),
    DisplayName("mixed_extent_allocation"): Amended]
class XeSqlPkg_mixed_extent_allocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_extent_allocation: XeSqlPkg_mixed_extent_allocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 last_mixed_extent_file_id;
	[WmiDataId(6), read] uint32 last_mixed_extent_extent_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 extent_id;
	[WmiDataId(9), read] sint8  is_logged;
	[WmiDataId(10), read] sint8  rollback;
	[WmiDataId(11), read] sint8  success;
	[WmiDataId(12), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track mixed extent deallocation operations."): Amended,
    Guid("{84839d7c-0395-405f-8d38-7a80baa26b07}"), locale("MS\\0x409"),
    DisplayName("mixed_extent_deallocation"): Amended]
class XeSqlPkg_mixed_extent_deallocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_extent_deallocation: XeSqlPkg_mixed_extent_deallocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 extent_id;
	[WmiDataId(7), read] sint8  is_logged;
	[WmiDataId(8), read] sint8  rollback;
	[WmiDataId(9), read] sint8  success;
	[WmiDataId(10), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track mixed page allocation operations"): Amended,
    Guid("{4aaa0742-f8cf-4ad7-a198-937ec2af31ee}"), locale("MS\\0x409"),
    DisplayName("mixed_page_allocation"): Amended]
class XeSqlPkg_mixed_page_allocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_page_allocation: XeSqlPkg_mixed_page_allocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] sint8  is_logged;
	[WmiDataId(8), read] sint8  rollback;
	[WmiDataId(9), read] sint8  success;
	[WmiDataId(10), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track mixed page allocation operations"): Amended,
    Guid("{93fcc7a2-6946-4e91-8591-f0608f489d38}"), locale("MS\\0x409"),
    DisplayName("mixed_page_deallocation"): Amended]
class XeSqlPkg_mixed_page_deallocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_page_deallocation: XeSqlPkg_mixed_page_deallocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] sint8  is_logged;
	[WmiDataId(8), read] sint8  rollback;
	[WmiDataId(9), read] sint8  success;
	[WmiDataId(10), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track the activity of SGAM scans for mixed page allocation"): Amended,
    Guid("{6a7575ed-6da5-4c49-bed1-81654ecc6fb1}"), locale("MS\\0x409"),
    DisplayName("mixed_page_scan_file"): Amended]
class XeSqlPkg_mixed_page_scan_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_page_scan_file: XeSqlPkg_mixed_page_scan_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 sgam_file;
	[WmiDataId(6), read] uint32 sgam_page;
	[WmiDataId(7), read] uint16 start_file_id;
	[WmiDataId(8), read] uint32 start_page_id;
	[WmiDataId(9), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track the activity of SGAM scans for mixed page allocation"): Amended,
    Guid("{4c5fde39-913f-4219-b659-6ac63713e681}"), locale("MS\\0x409"),
    DisplayName("mixed_page_scan_page"): Amended]
class XeSqlPkg_mixed_page_scan_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_page_scan_page: XeSqlPkg_mixed_page_scan_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 sgam_file;
	[WmiDataId(6), read] uint32 sgam_page;
	[WmiDataId(7), read] uint16 start_file_id;
	[WmiDataId(8), read] uint32 start_page_id;
	[WmiDataId(9), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track the activity of SGAM scans for mixed page allocation"): Amended,
    Guid("{9e2cb6b0-28d4-4ee3-800b-4a7ee0119810}"), locale("MS\\0x409"),
    DisplayName("mixed_page_skipextent"): Amended]
class XeSqlPkg_mixed_page_skipextent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_page_skipextent: XeSqlPkg_mixed_page_skipextent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read, 
				XEMapId(80),
				ValueMap { 
					"3", 
					"2", 
					"0", 
					"1", 
					"-2", 
					"-1" },
				Values { 
					"LK_DEADLOCK", 
					"LK_FAILED", 
					"LK_GRANTED", 
					"LK_GRANTEDWAIT", 
					"LK_HELDBYPARENT", 
					"LK_NOTNEEDED" }
			] uint32 lock_result;
	[WmiDataId(8), read] uint32 skipcount;
	[WmiDataId(9), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Database shrink operation stats."): Amended,
    Guid("{17b450f8-dff7-46e0-b336-0344c178646b}"), locale("MS\\0x409"),
    DisplayName("db_shrink_stats"): Amended]
class XeSqlPkg_db_shrink_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class db_shrink_stats: XeSqlPkg_db_shrink_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 shrink_data_file_count;
};
		
[dynamic: ToInstance, Description("Shrink related telemetry"): Amended,
    Guid("{BBD79419-BD7E-4512-9750-5FE60C5B9E1B}"), locale("MS\\0x409"),
    DisplayName("shrink_file_telemetry"): Amended]
class XeSqlPkg_shrink_file_telemetry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class shrink_file_telemetry: XeSqlPkg_shrink_file_telemetry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read, Extension("Guid")] guid shrink_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string tag;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string target_size;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_size;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string percent_complete;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string failure_reason;
};
		
[dynamic: ToInstance, Description("About to truncate the file as a part of shrink."): Amended,
    Guid("{A2F6EE5C-6B21-45A3-BD85-40352ED51E60}"), locale("MS\\0x409"),
    DisplayName("shrink_before_physical_truncate"): Amended]
class XeSqlPkg_shrink_before_physical_truncate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class shrink_before_physical_truncate: XeSqlPkg_shrink_before_physical_truncate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 target_size;
};
		
[dynamic: ToInstance, Description("Dropping of allocation unti marked for deferred drop is delayed to the next run."): Amended,
    Guid("{1d14c697-a5f0-4e88-b738-4dfb93916380}"), locale("MS\\0x409"),
    DisplayName("deferred_au_deallocation_to_next_run"): Amended]
class XeSqlPkg_deferred_au_deallocation_to_next_run: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deferred_au_deallocation_to_next_run: XeSqlPkg_deferred_au_deallocation_to_next_run
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint64 low_watermark_xdes_id;
};
		
[dynamic: ToInstance, Description("Number of dropped allocation units in the queue. Also, database_id may show as 0, indicating that the event is in instance scope "): Amended,
    Guid("{a0d139f5-7b0b-4d20-b445-6c22c93796e4}"), locale("MS\\0x409"),
    DisplayName("deferred_drop_au_queue_size"): Amended]
class XeSqlPkg_deferred_drop_au_queue_size: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deferred_drop_au_queue_size: XeSqlPkg_deferred_drop_au_queue_size
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 queue_size;
};
		
[dynamic: ToInstance, Description("Exception details for deferred drop AU cleaner."): Amended,
    Guid("{95886392-1ba1-46fa-92a3-dc0884c9ce4d}"), locale("MS\\0x409"),
    DisplayName("exception_in_deferred_drop_au_cleaner"): Amended]
class XeSqlPkg_exception_in_deferred_drop_au_cleaner: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class exception_in_deferred_drop_au_cleaner: XeSqlPkg_exception_in_deferred_drop_au_cleaner
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 exception_number;
	[WmiDataId(6), read] sint32 exception_state;
	[WmiDataId(7), read] sint32 exception_severity;
};
		
[dynamic: ToInstance, Description("Fired before matrix restore redo begins when target restore AGE is being determined"): Amended,
    Guid("{20506A8E-06DC-4505-B737-39F91DFC2CFC}"), locale("MS\\0x409"),
    DisplayName("mbr_redo_target_age"): Amended]
class XeSqlPkg_mbr_redo_target_age: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_redo_target_age: XeSqlPkg_mbr_redo_target_age
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 backup_worker_id;
	[WmiDataId(6), read] uint64 target_age;
};
		
[dynamic: ToInstance, Description("Matrix Backup/Restore Leading Meta Data read of Primary File Group Flags"): Amended,
    Guid("{010B5CD7-0A18-4043-BF88-3FEDF03837D8}"), locale("MS\\0x409"),
    DisplayName("mbr_lmd_read_primary_file_group_flags"): Amended]
class XeSqlPkg_mbr_lmd_read_primary_file_group_flags: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_lmd_read_primary_file_group_flags: XeSqlPkg_mbr_lmd_read_primary_file_group_flags
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 field_offset;
	[WmiDataId(6), read] uint32 field_size;
	[WmiDataId(7), read] uint32 field_value;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string field_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string archive_file_name;
};
		
[dynamic: ToInstance, Description("Occurs when an in-doubt transaction is resolved during matrix restore recovery."): Amended,
    Guid("{C601EE9A-D417-490f-9EBE-507D37528D0D}"), locale("MS\\0x409"),
    DisplayName("mbr_outcome_resolution"): Amended]
class XeSqlPkg_mbr_outcome_resolution: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_outcome_resolution: XeSqlPkg_mbr_outcome_resolution
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 federated_xact_id;
	[WmiDataId(6), read] uint32 federated_xact_node_id;
	[WmiDataId(7), read] sint32 federated_xact_node_local_id;
	[WmiDataId(8), read] sint8  is_committed;
	[WmiDataId(9), read] sint64 age_value;
};
		
[dynamic: ToInstance, Description("Occurs when matrix restore recovery has completed. It may not occur if there are no in-doubt transactions with commit outcomes to be processed during matrix restore recovery."): Amended,
    Guid("{339D0774-F237-4331-847C-772366B785B2}"), locale("MS\\0x409"),
    DisplayName("mbr_resolution_counts"): Amended]
class XeSqlPkg_mbr_resolution_counts: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_resolution_counts: XeSqlPkg_mbr_resolution_counts
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 resolved_commit_count;
	[WmiDataId(6), read] uint32 resolved_rollback_count;
};
		
[dynamic: ToInstance, Description("Occurs when a backup restore operation recorded the startLSN"): Amended,
    Guid("{C47F5A38-E94D-496C-9029-A696740DE2E6}"), locale("MS\\0x409"),
    DisplayName("backup_restore_startlsn_recorded"): Amended]
class XeSqlPkg_backup_restore_startlsn_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_restore_startlsn_recorded: XeSqlPkg_backup_restore_startlsn_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string startlsn;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string serepllsn;
};
		
[dynamic: ToInstance, Description("Occurs after the HkTrimlsn is frozen during a database backup"): Amended,
    Guid("{77FA5579-9A60-42AB-90C2-85D628D87B95}"), locale("MS\\0x409"),
    DisplayName("database_backup_after_HkTrimFreeze"): Amended]
class XeSqlPkg_database_backup_after_HkTrimFreeze: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_backup_after_HkTrimFreeze: XeSqlPkg_database_backup_after_HkTrimFreeze
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Occurs just before the file stream backup starts."): Amended,
    Guid("{E8B4A4BF-CAF1-4BCC-9493-9A0208B886CD}"), locale("MS\\0x409"),
    DisplayName("backup_restore_before_filestream"): Amended]
class XeSqlPkg_backup_restore_before_filestream: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_restore_before_filestream: XeSqlPkg_backup_restore_before_filestream
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata create local temporary object"): Amended,
    Guid("{D671B7C7-EB71-4546-8E87-A5C524AF8DC7}"), locale("MS\\0x409"),
    DisplayName("metadata_create_local_temp_object"): Amended]
class XeSqlPkg_metadata_create_local_temp_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_create_local_temp_object: XeSqlPkg_metadata_create_local_temp_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] uint32 session_id;
	[WmiDataId(7), read] uint32 object_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Metadata delete local temporary object"): Amended,
    Guid("{74BD8C4B-CFE4-47B3-8784-2F150FEC41BA}"), locale("MS\\0x409"),
    DisplayName("metadata_delete_local_temp_object"): Amended]
class XeSqlPkg_metadata_delete_local_temp_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_delete_local_temp_object: XeSqlPkg_metadata_delete_local_temp_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] uint32 session_id;
	[WmiDataId(7), read] uint32 object_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Metadata create global temporary object"): Amended,
    Guid("{72B1A544-51A1-49D1-B96C-9C31427658BD}"), locale("MS\\0x409"),
    DisplayName("metadata_create_global_temp_object"): Amended]
class XeSqlPkg_metadata_create_global_temp_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_create_global_temp_object: XeSqlPkg_metadata_create_global_temp_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] uint32 session_id;
	[WmiDataId(7), read] uint32 object_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Metadata delete global temporary object"): Amended,
    Guid("{C71F9950-8D72-40E9-8AA0-EF1313019A07}"), locale("MS\\0x409"),
    DisplayName("metadata_delete_global_temp_object"): Amended]
class XeSqlPkg_metadata_delete_global_temp_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_delete_global_temp_object: XeSqlPkg_metadata_delete_global_temp_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] uint32 session_id;
	[WmiDataId(7), read] uint32 object_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Query Driver received the activation message"): Amended,
    Guid("{5a623c10-41c8-40d0-a23c-29e3f2046e07}"), locale("MS\\0x409"),
    DisplayName("query_driver_received_activation"): Amended]
class XeSqlPkg_query_driver_received_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_received_activation: XeSqlPkg_query_driver_received_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query Driver received the activation message but not fully populated yet"): Amended,
    Guid("{052aa1af-139c-4560-ab8c-bf1858d7c5d0}"), locale("MS\\0x409"),
    DisplayName("query_driver_received_activation_not_fully_populated"): Amended]
class XeSqlPkg_query_driver_received_activation_not_fully_populated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_received_activation_not_fully_populated: XeSqlPkg_query_driver_received_activation_not_fully_populated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Query Driver sending the activation message"): Amended,
    Guid("{8e393031-784b-43cd-b6ce-568e82674333}"), locale("MS\\0x409"),
    DisplayName("query_driver_sending_activation"): Amended]
class XeSqlPkg_query_driver_sending_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_sending_activation: XeSqlPkg_query_driver_sending_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query Driver sent the activation message"): Amended,
    Guid("{40a4607b-0df1-46c7-a28f-d7917d8fd2b2}"), locale("MS\\0x409"),
    DisplayName("query_driver_sent_activation"): Amended]
class XeSqlPkg_query_driver_sent_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_sent_activation: XeSqlPkg_query_driver_sent_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query Driver sent the statistics profile message"): Amended,
    Guid("{446fd1ce-a8fb-4a68-bd9e-080ec7b6c65a}"), locale("MS\\0x409"),
    DisplayName("query_driver_sent_statistics_profile"): Amended]
class XeSqlPkg_query_driver_sent_statistics_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_sent_statistics_profile: XeSqlPkg_query_driver_sent_statistics_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query Driver received the statistics profile message"): Amended,
    Guid("{d55b46e5-bd7b-4da2-9ad2-de413a9cf48c}"), locale("MS\\0x409"),
    DisplayName("query_driver_received_statistics_profile"): Amended]
class XeSqlPkg_query_driver_received_statistics_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_received_statistics_profile: XeSqlPkg_query_driver_received_statistics_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 brick_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query Driver sent the rows affected message"): Amended,
    Guid("{e886d9be-faec-4f58-a042-2e585c586ec9}"), locale("MS\\0x409"),
    DisplayName("query_driver_sent_rows_affected"): Amended]
class XeSqlPkg_query_driver_sent_rows_affected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_sent_rows_affected: XeSqlPkg_query_driver_sent_rows_affected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
	[WmiDataId(9), read] uint64 rows_affected;
};
		
[dynamic: ToInstance, Description("Query Driver received the rows affected message"): Amended,
    Guid("{1aeaa700-87fd-45df-bb46-94adab76d8c0}"), locale("MS\\0x409"),
    DisplayName("query_driver_received_rows_affected"): Amended]
class XeSqlPkg_query_driver_received_rows_affected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_received_rows_affected: XeSqlPkg_query_driver_received_rows_affected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 brick_id;
	[WmiDataId(8), read] uint64 query_id;
	[WmiDataId(9), read] uint64 rows_affected;
};
		
[dynamic: ToInstance, Description("Query compilation is initialized"): Amended,
    Guid("{bd42246d-8eb2-49cc-b9ae-c81df829dd26}"), locale("MS\\0x409"),
    DisplayName("query_compile_initialized"): Amended]
class XeSqlPkg_query_compile_initialized: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_compile_initialized: XeSqlPkg_query_compile_initialized
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Query tree is compiled"): Amended,
    Guid("{6989067e-3574-4353-8f8d-ee45984e1b5b}"), locale("MS\\0x409"),
    DisplayName("query_compiled"): Amended]
class XeSqlPkg_query_compiled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_compiled: XeSqlPkg_query_compiled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operation_node_id;
	[WmiDataId(6), read] sint32 parent_id;
	[WmiDataId(7), read, 
				XEMapId(93),
				ValueMap { 
					"61", 
					"2", 
					"0", 
					"73", 
					"1", 
					"65", 
					"66", 
					"64", 
					"72", 
					"71", 
					"60", 
					"70", 
					"69", 
					"68", 
					"67", 
					"63", 
					"62", 
					"54", 
					"10", 
					"47", 
					"40", 
					"48", 
					"19", 
					"5", 
					"17", 
					"58", 
					"34", 
					"23", 
					"18", 
					"57", 
					"9", 
					"4", 
					"44", 
					"46", 
					"31", 
					"49", 
					"6", 
					"51", 
					"11", 
					"55", 
					"45", 
					"29", 
					"8", 
					"37", 
					"59", 
					"38", 
					"27", 
					"26", 
					"25", 
					"28", 
					"24", 
					"30", 
					"33", 
					"41", 
					"21", 
					"20", 
					"32", 
					"3", 
					"16", 
					"15", 
					"50", 
					"13", 
					"7", 
					"12", 
					"39", 
					"56", 
					"43", 
					"42", 
					"14", 
					"22", 
					"52", 
					"53", 
					"35", 
					"36" },
				Values { 
					"ColList", 
					"Executable", 
					"Invalid", 
					"Max", 
					"Min", 
					"PrjEl", 
					"PrjElVector", 
					"PrjList", 
					"RowEl", 
					"RowList", 
					"Scalar", 
					"ScalarEl", 
					"ScalarList", 
					"SetEl", 
					"SetList", 
					"SortEl", 
					"SortList", 
					"XAdaptiveBufReader", 
					"XAssert", 
					"XBatchSort", 
					"XBitmap", 
					"XBlockScrollLock", 
					"XCollapse", 
					"XConcat", 
					"XConstScan", 
					"XDataExportPut", 
					"XDebug", 
					"XDelay", 
					"XExchange", 
					"XExtExtractScan", 
					"XFilter", 
					"XHashMatch", 
					"XIndex", 
					"XIndexSort", 
					"XLogRowScan", 
					"XMergeInterval", 
					"XMergeJoin", 
					"XMergeStat", 
					"XNLJoin", 
					"XNsPut", 
					"XOnlineIndex", 
					"XParameterTableScan", 
					"XProject", 
					"XRangePrefetch", 
					"XRedistribute", 
					"XRefIntegrity", 
					"XRmtFetch", 
					"XRmtModify", 
					"XRmtQuery", 
					"XRmtRange", 
					"XRmtScan", 
					"XRowCountSpool", 
					"XScalarInsert", 
					"XSegment", 
					"XSeqProject", 
					"XSequence", 
					"XSimpleUpdate", 
					"XSort", 
					"XSplit", 
					"XSpool", 
					"XStatAgg", 
					"XStreamAggregate", 
					"XTableScan", 
					"XTop", 
					"XTopNSort", 
					"XTrustedFirstParty", 
					"XTVF", 
					"XUDX", 
					"XUpdate", 
					"XVersionScan", 
					"XWindow", 
					"XWindowAggregate", 
					"XXchngFilter", 
					"XXchngSort" }
			] sint32 qte_type;
	[WmiDataId(8), read, 
				XEMapId(91),
				ValueMap { 
					"87", 
					"24", 
					"15", 
					"3", 
					"82", 
					"75", 
					"65", 
					"26", 
					"28", 
					"1", 
					"2", 
					"4", 
					"64", 
					"49", 
					"29", 
					"52", 
					"42", 
					"45", 
					"12", 
					"6", 
					"9", 
					"11", 
					"5", 
					"8", 
					"13", 
					"7", 
					"10", 
					"88", 
					"0", 
					"80", 
					"14", 
					"53", 
					"58", 
					"55", 
					"48", 
					"30", 
					"91", 
					"46", 
					"60", 
					"56", 
					"59", 
					"78", 
					"16", 
					"50", 
					"19", 
					"74", 
					"43", 
					"79", 
					"31", 
					"54", 
					"17", 
					"66", 
					"67", 
					"68", 
					"18", 
					"86", 
					"32", 
					"33", 
					"77", 
					"90", 
					"85", 
					"81", 
					"27", 
					"62", 
					"57", 
					"61", 
					"38", 
					"36", 
					"35", 
					"39", 
					"40", 
					"34", 
					"37", 
					"69", 
					"20", 
					"22", 
					"21", 
					"41", 
					"23", 
					"73", 
					"71", 
					"83", 
					"25", 
					"51", 
					"44", 
					"72", 
					"70", 
					"63", 
					"47", 
					"76", 
					"84", 
					"89" },
				Values { 
					"AdaptiveBufReader", 
					"Aggregation", 
					"Assert", 
					"AsyncConcat", 
					"AsyncPop", 
					"BatchHashTableBuild", 
					"Bitmap", 
					"ClusteredIndexScan", 
					"ClusteredIndexSeek", 
					"Collapse", 
					"Concat", 
					"ConstScan", 
					"CrossJoin", 
					"Delete", 
					"DeletedScan", 
					"Distinct", 
					"DistinctSort", 
					"EagerSpool", 
					"ExchangePartitionBranch", 
					"ExchangePartitionRoot", 
					"ExchangePartitionSegment", 
					"ExchangeStartBranch", 
					"ExchangeStartRoot", 
					"ExchangeStartSegment", 
					"ExchangeStopBranch", 
					"ExchangeStopRoot", 
					"ExchangeStopSegment", 
					"ExtExtractScan", 
					"Fetch", 
					"FetchQuery", 
					"Filter", 
					"FlowDistinct", 
					"FullOuterJoin", 
					"InnerJoin", 
					"Insert", 
					"InsertedScan", 
					"Invalid", 
					"LazySpool", 
					"LeftAntiSemiJoin", 
					"LeftOuterJoin", 
					"LeftSemiJoin", 
					"LockCC", 
					"LogRowScan", 
					"Merge", 
					"MergeInterval", 
					"MergeStat", 
					"NonDistinctSort", 
					"OptCC", 
					"ParameterTableScan", 
					"PartAgg", 
					"Print", 
					"PrjEl", 
					"PrjElVector", 
					"PrjList", 
					"Project", 
					"Put", 
					"RangeScan", 
					"RangeSeek", 
					"ReadOnly", 
					"Redistribute", 
					"RefIntegrity", 
					"RefreshQuery", 
					"RidLookup", 
					"RightAntiSemiJoin", 
					"RightOuterJoin", 
					"RightSemiJoin", 
					"RmtDelete", 
					"RmtInsert", 
					"RmtQuery", 
					"RmtRangeScan", 
					"RmtRangeSeek", 
					"RmtScan", 
					"RmtUpdate", 
					"Scalar", 
					"Segment", 
					"SeqProject", 
					"Sequence", 
					"SimpleUpdate", 
					"Split", 
					"StatAgg", 
					"Switch", 
					"SyncPop", 
					"TableScan", 
					"Top", 
					"TopNSort", 
					"TVF", 
					"Udx", 
					"Union", 
					"Update", 
					"Window", 
					"WindowAggregate", 
					"XcsScan" }
			] sint32 logical_operator;
	[WmiDataId(9), read, 
				XEMapId(92),
				ValueMap { 
					"78", 
					"79", 
					"6", 
					"66", 
					"57", 
					"53", 
					"23", 
					"25", 
					"52", 
					"54", 
					"51", 
					"1", 
					"2", 
					"3", 
					"73", 
					"72", 
					"74", 
					"26", 
					"69", 
					"4", 
					"80", 
					"0", 
					"5", 
					"71", 
					"7", 
					"9", 
					"8", 
					"50", 
					"49", 
					"43", 
					"48", 
					"27", 
					"85", 
					"68", 
					"28", 
					"10", 
					"15", 
					"11", 
					"12", 
					"65", 
					"29", 
					"13", 
					"58", 
					"59", 
					"60", 
					"14", 
					"77", 
					"30", 
					"31", 
					"83", 
					"82", 
					"84", 
					"76", 
					"24", 
					"39", 
					"32", 
					"37", 
					"36", 
					"33", 
					"34", 
					"35", 
					"38", 
					"16", 
					"61", 
					"17", 
					"19", 
					"18", 
					"40", 
					"70", 
					"41", 
					"20", 
					"42", 
					"21", 
					"63", 
					"46", 
					"45", 
					"47", 
					"22", 
					"44", 
					"56", 
					"64", 
					"62", 
					"67", 
					"75", 
					"55", 
					"81" },
				Values { 
					"AdaptiveBufReader", 
					"AdaptiveJoin", 
					"Assert", 
					"BatchHashTableBuild", 
					"Bitmap", 
					"ClusteredDelete", 
					"ClusteredIndexScan", 
					"ClusteredIndexSeek", 
					"ClusteredInsert", 
					"ClusteredMerge", 
					"ClusteredUpdate", 
					"Collapse", 
					"Concat", 
					"ConstScan", 
					"CrsFetch", 
					"CrsPopulate", 
					"CrsRefresh", 
					"DeletedScan", 
					"Dynamic", 
					"Exchange", 
					"ExtExtractScan", 
					"Fetch", 
					"Filter", 
					"ForwardOnlyNoRefresh", 
					"HashMatch", 
					"HashMatchRoot", 
					"HashMatchTeam", 
					"IndexDelete", 
					"IndexInsert", 
					"IndexSpool", 
					"IndexUpdate", 
					"InsertedScan", 
					"Invalid", 
					"Keyset", 
					"Locate", 
					"LogRowScan", 
					"MergeInterval", 
					"MergeJoin", 
					"NLJoin", 
					"OnlineIndexInsert", 
					"ParameterTableScan", 
					"Print", 
					"PrjEl", 
					"PrjElVector", 
					"PrjList", 
					"Project", 
					"Put", 
					"RangeScan", 
					"RangeSeek", 
					"RedistributeBroadcast", 
					"RedistributeShuffle", 
					"RedistributeToSingle", 
					"RefIntegrity", 
					"RidLookup", 
					"RmtDelete", 
					"RmtFetch", 
					"RmtInsert", 
					"RmtQuery", 
					"RmtRangeScan", 
					"RmtRangeSeek", 
					"RmtScan", 
					"RmtUpdate", 
					"RowCountSpool", 
					"Scalar", 
					"Segment", 
					"SeqProject", 
					"Sequence", 
					"SimpleUpdate", 
					"Snapshot", 
					"Sort", 
					"Split", 
					"Spool", 
					"StreamAggregate", 
					"Switch", 
					"TableDelete", 
					"TableInsert", 
					"TableMerge", 
					"TableScan", 
					"TableUpdate", 
					"Top", 
					"TVF", 
					"Udx", 
					"Window", 
					"WindowAggregate", 
					"WorkfileScan", 
					"XcsScan" }
			] sint32 physical_operator;
	[WmiDataId(10), read, StringTermination("NullTerminated")] string dynamic_attributes;
};
		
[dynamic: ToInstance, Description("Query compilation is prepared"): Amended,
    Guid("{06c94f7b-689f-4c5d-9724-e890b8a2931f}"), locale("MS\\0x409"),
    DisplayName("query_compile_prepared"): Amended]
class XeSqlPkg_query_compile_prepared: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_compile_prepared: XeSqlPkg_query_compile_prepared
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Degree of Parallelism (DOP) calculation begins"): Amended,
    Guid("{81d5eb0b-acbd-4b23-9abe-bc93d6e3d0f4}"), locale("MS\\0x409"),
    DisplayName("calculate_dop_begin"): Amended]
class XeSqlPkg_calculate_dop_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class calculate_dop_begin: XeSqlPkg_calculate_dop_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 configured_maxdop;
	[WmiDataId(6), read] uint32 max_concurrent_branches;
	[WmiDataId(7), read] uint32 parallel_segments;
	[WmiDataId(8), read] uint32 schedulers;
};
		
[dynamic: ToInstance, Description("Degree of Parallelism (DOP) calculation"): Amended,
    Guid("{27a60fec-418b-4cc9-8904-a8321b8533b8}"), locale("MS\\0x409"),
    DisplayName("calculate_dop"): Amended]
class XeSqlPkg_calculate_dop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class calculate_dop: XeSqlPkg_calculate_dop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(21),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"SetMaxDOP", 
					"SetTraceflag", 
					"CalculateBasedOnAvailableThreads", 
					"PostCalculate" }
			] uint32 stage;
	[WmiDataId(6), read] uint32 dop;
	[WmiDataId(7), read, StringTermination("NullTerminated")] string stage_info;
};
		
[dynamic: ToInstance, Description("Runtime query iterator is cached"): Amended,
    Guid("{daed8c56-bc4d-48c5-9558-65c310e17b1a}"), locale("MS\\0x409"),
    DisplayName("query_scan_cache"): Amended]
class XeSqlPkg_query_scan_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_scan_cache: XeSqlPkg_query_scan_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Runtime query iterator is uncached. This indicates that a previously cached version of the query runtime is being used. This can be correlated with the query_scan_cache event"): Amended,
    Guid("{e1e95733-0422-4e25-a97f-f573ac6344de}"), locale("MS\\0x409"),
    DisplayName("query_scan_uncache"): Amended]
class XeSqlPkg_query_scan_uncache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_scan_uncache: XeSqlPkg_query_scan_uncache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Runtime remote query instance is cached"): Amended,
    Guid("{D08A78CF-DFD7-4724-A53E-5512FC2F9BC5}"), locale("MS\\0x409"),
    DisplayName("query_instance_cache_remote_insert"): Amended]
class XeSqlPkg_query_instance_cache_remote_insert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_instance_cache_remote_insert: XeSqlPkg_query_instance_cache_remote_insert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Runtime remote query instance is uncached. This indicates that a previously cached version of the query instance runtime is being used. This can be correlated with the query_instance_cache_remote_insert event"): Amended,
    Guid("{3D0D3AC9-DDC1-4719-8C1D-1BC05EB5D97F}"), locale("MS\\0x409"),
    DisplayName("query_instance_cache_remote_remove"): Amended]
class XeSqlPkg_query_instance_cache_remote_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_instance_cache_remote_remove: XeSqlPkg_query_instance_cache_remote_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Query memory pre-grant"): Amended,
    Guid("{73ebeff7-1300-42d1-aa39-ce871b412785}"), locale("MS\\0x409"),
    DisplayName("query_memory_pre_grant"): Amended]
class XeSqlPkg_query_memory_pre_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_pre_grant: XeSqlPkg_query_memory_pre_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  first_acquire;
	[WmiDataId(6), read] uint32 max_dop;
	[WmiDataId(7), read] sint64 required_memory_serial;
	[WmiDataId(8), read] sint64 exchange_memory;
	[WmiDataId(9), read] sint64 memory_max_useful_serial;
	[WmiDataId(10), read] sint64 desired_memory;
	[WmiDataId(11), read] sint64 max_memory;
	[WmiDataId(12), read] sint64 available_memory;
	[WmiDataId(13), read] sint64 timeout;
};
		
[dynamic: ToInstance, Description("Query memory post-grant"): Amended,
    Guid("{1cc0229e-c4ab-4d9a-8843-1d3a20fb784e}"), locale("MS\\0x409"),
    DisplayName("query_memory_post_grant"): Amended]
class XeSqlPkg_query_memory_post_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_post_grant: XeSqlPkg_query_memory_post_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_first_acquire;
	[WmiDataId(6), read] uint32 final_dop;
	[WmiDataId(7), read] sint64 actual_memory_grant;
	[WmiDataId(8), read] sint64 extra_memory_grant;
	[WmiDataId(9), read] sint64 total_required_memory;
	[WmiDataId(10), read] sint64 exchange_required_memory;
	[WmiDataId(11), read] sint8  is_small_query;
};
		
[dynamic: ToInstance, Description("Query memory return grant"): Amended,
    Guid("{8a71f4d8-8ade-42ed-97c6-cf3690a33829}"), locale("MS\\0x409"),
    DisplayName("query_memory_return_grant"): Amended]
class XeSqlPkg_query_memory_return_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_return_grant: XeSqlPkg_query_memory_return_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 actual_memory_grant;
	[WmiDataId(6), read] sint64 exchange_required_memory;
	[WmiDataId(7), read] sint64 max_query_memory_used;
	[WmiDataId(8), read] sint64 max_exchange_memory_used;
	[WmiDataId(9), read] sint64 max_misc_memory_used;
	[WmiDataId(10), read] sint32 max_misc_grants;
};
		
[dynamic: ToInstance, Description("Keep the related data when the requested memory is greater than the available memory (right before throwing an exception)"): Amended,
    Guid("{a82b6e87-76af-4d12-80b1-86b34f34ce29}"), locale("MS\\0x409"),
    DisplayName("required_memory_grant_too_big"): Amended]
class XeSqlPkg_required_memory_grant_too_big: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class required_memory_grant_too_big: XeSqlPkg_required_memory_grant_too_big
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 dop;
	[WmiDataId(6), read] sint64 maxdop;
	[WmiDataId(7), read] sint64 max_allowed_query_memory_kb;
	[WmiDataId(8), read] sint64 min_query_memory_kb;
	[WmiDataId(9), read] sint64 max_required_memory_kb_from_plan;
	[WmiDataId(10), read] sint64 max_additional_memory_kb_from_plan;
	[WmiDataId(11), read] sint64 required_exchange_memory_kb;
	[WmiDataId(12), read] sint64 required_serial_bulkinsert_memory_kb;
	[WmiDataId(13), read] sint64 ideal_memory_grant_kb;
	[WmiDataId(14), read] sint64 final_required_memory_kb;
	[WmiDataId(15), read] sint64 final_memory_grant_kb;
	[WmiDataId(16), read] sint64 resource_group_id;
	[WmiDataId(17), read] sint64 resource_pool_id;
	[WmiDataId(18), read] sint8  is_columnstore_bulk_insert;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_group_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string resource_pool_name;
};
		
[dynamic: ToInstance, Description("Query memory request calculation for memory consuming iterators"): Amended,
    Guid("{dd1840e4-8adc-4443-aa8f-2ce6aa7757c0}"), locale("MS\\0x409"),
    DisplayName("iterator_memory_request_calculation"): Amended]
class XeSqlPkg_iterator_memory_request_calculation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class iterator_memory_request_calculation: XeSqlPkg_iterator_memory_request_calculation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(93),
				ValueMap { 
					"61", 
					"2", 
					"0", 
					"73", 
					"1", 
					"65", 
					"66", 
					"64", 
					"72", 
					"71", 
					"60", 
					"70", 
					"69", 
					"68", 
					"67", 
					"63", 
					"62", 
					"54", 
					"10", 
					"47", 
					"40", 
					"48", 
					"19", 
					"5", 
					"17", 
					"58", 
					"34", 
					"23", 
					"18", 
					"57", 
					"9", 
					"4", 
					"44", 
					"46", 
					"31", 
					"49", 
					"6", 
					"51", 
					"11", 
					"55", 
					"45", 
					"29", 
					"8", 
					"37", 
					"59", 
					"38", 
					"27", 
					"26", 
					"25", 
					"28", 
					"24", 
					"30", 
					"33", 
					"41", 
					"21", 
					"20", 
					"32", 
					"3", 
					"16", 
					"15", 
					"50", 
					"13", 
					"7", 
					"12", 
					"39", 
					"56", 
					"43", 
					"42", 
					"14", 
					"22", 
					"52", 
					"53", 
					"35", 
					"36" },
				Values { 
					"ColList", 
					"Executable", 
					"Invalid", 
					"Max", 
					"Min", 
					"PrjEl", 
					"PrjElVector", 
					"PrjList", 
					"RowEl", 
					"RowList", 
					"Scalar", 
					"ScalarEl", 
					"ScalarList", 
					"SetEl", 
					"SetList", 
					"SortEl", 
					"SortList", 
					"XAdaptiveBufReader", 
					"XAssert", 
					"XBatchSort", 
					"XBitmap", 
					"XBlockScrollLock", 
					"XCollapse", 
					"XConcat", 
					"XConstScan", 
					"XDataExportPut", 
					"XDebug", 
					"XDelay", 
					"XExchange", 
					"XExtExtractScan", 
					"XFilter", 
					"XHashMatch", 
					"XIndex", 
					"XIndexSort", 
					"XLogRowScan", 
					"XMergeInterval", 
					"XMergeJoin", 
					"XMergeStat", 
					"XNLJoin", 
					"XNsPut", 
					"XOnlineIndex", 
					"XParameterTableScan", 
					"XProject", 
					"XRangePrefetch", 
					"XRedistribute", 
					"XRefIntegrity", 
					"XRmtFetch", 
					"XRmtModify", 
					"XRmtQuery", 
					"XRmtRange", 
					"XRmtScan", 
					"XRowCountSpool", 
					"XScalarInsert", 
					"XSegment", 
					"XSeqProject", 
					"XSequence", 
					"XSimpleUpdate", 
					"XSort", 
					"XSplit", 
					"XSpool", 
					"XStatAgg", 
					"XStreamAggregate", 
					"XTableScan", 
					"XTop", 
					"XTopNSort", 
					"XTrustedFirstParty", 
					"XTVF", 
					"XUDX", 
					"XUpdate", 
					"XVersionScan", 
					"XWindow", 
					"XWindowAggregate", 
					"XXchngFilter", 
					"XXchngSort" }
			] sint32 iterator_type;
	[WmiDataId(6), read] sint64 input_required;
	[WmiDataId(7), read] sint64 input_additional;
	[WmiDataId(8), read] sint64 output_required;
	[WmiDataId(9), read] sint64 output_additional;
	[WmiDataId(10), read] sint64 bitmap_preferred;
};
		
[dynamic: ToInstance, Description("Query attempt to request memory grant"): Amended,
    Guid("{4d213497-0b04-4897-8976-16c5f20603f5}"), locale("MS\\0x409"),
    DisplayName("query_memory_grant_requested"): Amended]
class XeSqlPkg_query_memory_grant_requested: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_grant_requested: XeSqlPkg_query_memory_grant_requested
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 requested_memory;
	[WmiDataId(6), read] sint64 available_memory;
	[WmiDataId(7), read] sint64 needed_memory;
};
		
[dynamic: ToInstance, Description("Query reserve buffer pool memory"): Amended,
    Guid("{71af0bc6-d57e-4e72-9cb7-5accad62a972}"), locale("MS\\0x409"),
    DisplayName("query_memory_buffer_pool_reserve"): Amended]
class XeSqlPkg_query_memory_buffer_pool_reserve: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_buffer_pool_reserve: XeSqlPkg_query_memory_buffer_pool_reserve
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 reserve;
	[WmiDataId(6), read] sint8  release;
	[WmiDataId(7), read] sint8  result;
};
		
[dynamic: ToInstance, Description("Runtime query is shutdown"): Amended,
    Guid("{e68520b3-f0fb-4733-9152-b46c437ba335}"), locale("MS\\0x409"),
    DisplayName("query_scan_shutdown"): Amended]
class XeSqlPkg_query_scan_shutdown: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_scan_shutdown: XeSqlPkg_query_scan_shutdown
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(25),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Normal", 
					"OnException", 
					"Parallel" }
			] sint32 state;
};
		
[dynamic: ToInstance, Description("Runtime query is setup"): Amended,
    Guid("{298b5bda-5f96-4361-b551-348d0826aab5}"), locale("MS\\0x409"),
    DisplayName("query_scan_setup"): Amended]
class XeSqlPkg_query_scan_setup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_scan_setup: XeSqlPkg_query_scan_setup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Query topology"): Amended,
    Guid("{7bc67ae8-263f-42ab-ad1e-42a4f5bcae60}"), locale("MS\\0x409"),
    DisplayName("query_driver_topology"): Amended]
class XeSqlPkg_query_driver_topology: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_topology: XeSqlPkg_query_driver_topology
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string topology;
};
		
[dynamic: ToInstance, Description("Occurs when a query driver is removed from the cache."): Amended,
    Guid("{b8842b87-55bb-4476-9880-04d12d87f9ae}"), locale("MS\\0x409"),
    DisplayName("query_driver_cache_remove"): Amended]
class XeSqlPkg_query_driver_cache_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_cache_remove: XeSqlPkg_query_driver_cache_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 connect_brick_id;
	[WmiDataId(6), read] uint64 query_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string topology;
};
		
[dynamic: ToInstance, Description("Bitmap data is finalized"): Amended,
    Guid("{9fca0bfa-2c75-4348-a964-9003e3914482}"), locale("MS\\0x409"),
    DisplayName("bitmap_data_finalize"): Amended]
class XeSqlPkg_bitmap_data_finalize: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bitmap_data_finalize: XeSqlPkg_bitmap_data_finalize
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 pages;
	[WmiDataId(6), read] uint64 rows;
	[WmiDataId(7), read] uint64 bits;
	[WmiDataId(8), read] uint32 numa_node_id;
	[WmiDataId(9), read] uint64 actual_density;
};
		
[dynamic: ToInstance, Description("Hash iterator's runtime actual memory"): Amended,
    Guid("{6204d13d-99d1-41c7-b82b-969be9e76960}"), locale("MS\\0x409"),
    DisplayName("iterator_hash_actual_memory"): Amended]
class XeSqlPkg_iterator_hash_actual_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class iterator_hash_actual_memory: XeSqlPkg_iterator_hash_actual_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 input;
	[WmiDataId(6), read] uint64 output;
	[WmiDataId(7), read] uint64 read_ahead;
};
		
[dynamic: ToInstance, Description("Parallel producer thread is started"): Amended,
    Guid("{3397e145-4376-4b79-83d3-d83dde797199}"), locale("MS\\0x409"),
    DisplayName("parallel_producer_open"): Amended]
class XeSqlPkg_parallel_producer_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_producer_open: XeSqlPkg_parallel_producer_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Used for nested loop join, occurs after producer receive correlated parameters"): Amended,
    Guid("{DE929B8B-A204-46b1-A05B-964A7ABE2508}"), locale("MS\\0x409"),
    DisplayName("producer_receive_correlated_params"): Amended]
class XeSqlPkg_producer_receive_correlated_params: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class producer_receive_correlated_params: XeSqlPkg_producer_receive_correlated_params
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Used for nested loop join, occurs after consumer send correlated parameters"): Amended,
    Guid("{FE892B3F-8722-4e45-92DA-FF51787E7F3C}"), locale("MS\\0x409"),
    DisplayName("consumer_send_correlated_params"): Amended]
class XeSqlPkg_consumer_send_correlated_params: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class consumer_send_correlated_params: XeSqlPkg_consumer_send_correlated_params
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Package telemetry data for query processing"): Amended,
    Guid("{f667c701-89bd-48cb-9a21-bd867d0dbc5b}"), locale("MS\\0x409"),
    DisplayName("collect_telemetry_packages"): Amended]
class XeSqlPkg_collect_telemetry_packages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class collect_telemetry_packages: XeSqlPkg_collect_telemetry_packages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 telemetry_package_version;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string telemetry_package_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string telemetry_package_json;
};
		
[dynamic: ToInstance, Description("Xml Compression telemetry collected per query"): Amended,
    Guid("{7cb640d3-fafe-47ec-a8b9-7adcec7a7a66}"), locale("MS\\0x409"),
    DisplayName("xml_compression_telemetry"): Amended]
class XeSqlPkg_xml_compression_telemetry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xml_compression_telemetry: XeSqlPkg_xml_compression_telemetry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 xml_data_uncompressed_bytes;
	[WmiDataId(6), read] uint64 xml_data_compressed_bytes;
};
		
[dynamic: ToInstance, Description("Reports query feedback information"): Amended,
    Guid("{46345145-49DE-41AF-A068-1A532EAF3E7F}"), locale("MS\\0x409"),
    DisplayName("query_ce_feedback_telemetry"): Amended]
class XeSqlPkg_query_ce_feedback_telemetry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_ce_feedback_telemetry: XeSqlPkg_query_ce_feedback_telemetry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_id;
	[WmiDataId(6), read] uint32 overestimation_nodes;
	[WmiDataId(7), read] uint32 underestimation_nodes;
	[WmiDataId(8), read] uint32 rowgoalmisestimation_nodes;
	[WmiDataId(9), read] real64 max_underestimation;
	[WmiDataId(10), read] real64 max_overestimation;
	[WmiDataId(11), read] real64 max_rowgoalmisestimate;
	[WmiDataId(12), read] uint32 total_nodes;
	[WmiDataId(13), read] uint32 filter_strategy;
	[WmiDataId(14), read] uint32 join_strategy;
	[WmiDataId(15), read] uint32 guess_type;
};
		
[dynamic: ToInstance, Description("Reports query feedback information"): Amended,
    Guid("{46345145-49DE-41AF-A068-1A532EAF3E7F}"), locale("MS\\0x409"),
    DisplayName("query_ce_feedback_telemetry"): Amended]
class XeSqlPkg_query_ce_feedback_telemetry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_ce_feedback_telemetry: XeSqlPkg_query_ce_feedback_telemetry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_id;
	[WmiDataId(6), read] uint32 overestimation_nodes;
	[WmiDataId(7), read] uint32 underestimation_nodes;
	[WmiDataId(8), read] uint32 rowgoalmisestimation_nodes;
	[WmiDataId(9), read] real64 max_underestimation;
	[WmiDataId(10), read] real64 max_overestimation;
	[WmiDataId(11), read] real64 max_rowgoalmisestimate;
	[WmiDataId(12), read] uint32 total_nodes;
	[WmiDataId(13), read] uint32 filter_strategy;
	[WmiDataId(14), read] uint32 join_strategy;
	[WmiDataId(15), read] uint32 guess_type;
	[WmiDataId(16), read] uint32 corrective_action;
	[WmiDataId(17), read] uint32 new_filter_strategy;
	[WmiDataId(18), read] uint32 new_join_strategy;
	[WmiDataId(19), read] uint32 new_rowgoal_strategy;
};
		
[dynamic: ToInstance, Description("Reports query feedback information"): Amended,
    Guid("{46345145-49DE-41AF-A068-1A532EAF3E7F}"), locale("MS\\0x409"),
    DisplayName("query_ce_feedback_telemetry"): Amended]
class XeSqlPkg_query_ce_feedback_telemetry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class query_ce_feedback_telemetry: XeSqlPkg_query_ce_feedback_telemetry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_id;
	[WmiDataId(6), read] uint32 analysis_count;
	[WmiDataId(7), read] uint32 prev_feedback;
	[WmiDataId(8), read] uint32 overestimation_nodes;
	[WmiDataId(9), read] uint32 underestimation_nodes;
	[WmiDataId(10), read] uint32 rowgoalmisestimation_nodes;
	[WmiDataId(11), read] real64 max_underestimation;
	[WmiDataId(12), read] real64 max_overestimation;
	[WmiDataId(13), read] real64 max_rowgoalmisestimate;
	[WmiDataId(14), read] uint32 total_nodes;
	[WmiDataId(15), read] uint32 filter_strategy;
	[WmiDataId(16), read] uint32 join_strategy;
	[WmiDataId(17), read] uint32 guess_type;
	[WmiDataId(18), read] uint32 corrective_action;
	[WmiDataId(19), read] uint32 new_filter_strategy;
	[WmiDataId(20), read] uint32 new_join_strategy;
	[WmiDataId(21), read] uint32 new_rowgoal_strategy;
};
		
[dynamic: ToInstance, Description("Reports when a query plan becomes eligible for dop feedback"): Amended,
    Guid("{BD6E4348-EA07-4EF0-9CB2-4CFC3012207E}"), locale("MS\\0x409"),
    DisplayName("dop_feedback_eligible_query"): Amended]
class XeSqlPkg_dop_feedback_eligible_query: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dop_feedback_eligible_query: XeSqlPkg_dop_feedback_eligible_query
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 query_dop;
	[WmiDataId(6), read] uint64 statement_key_hash;
	[WmiDataId(7), read] uint64 query_hash;
	[WmiDataId(8), read] uint64 query_plan_hash;
	[WmiDataId(9), read] uint64 cpu_time_ms;
	[WmiDataId(10), read] uint64 adjusted_elapsed_time_ms;
};
		
[dynamic: ToInstance, Description("Reports when the dop feedback analysis is stopped for a query"): Amended,
    Guid("{E2EC1082-FD7E-4E62-BA49-A5C165AD0704}"), locale("MS\\0x409"),
    DisplayName("dop_feedback_analysis_stopped"): Amended]
class XeSqlPkg_dop_feedback_analysis_stopped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dop_feedback_analysis_stopped: XeSqlPkg_dop_feedback_analysis_stopped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 query_dop;
	[WmiDataId(6), read] uint16 default_dop;
	[WmiDataId(7), read] uint64 statement_key_hash;
	[WmiDataId(8), read] uint64 query_hash;
	[WmiDataId(9), read] uint64 query_plan_hash;
	[WmiDataId(10), read] uint64 avg_cpu_time_ms;
	[WmiDataId(11), read] uint64 avg_adjusted_elapsed_time_ms;
	[WmiDataId(12), read] uint64 std_dev_cpu_time_ms;
	[WmiDataId(13), read] uint64 std_dev_adjusted_elapsed_time_ms;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string reason;
};
		
[dynamic: ToInstance, Description("Reports when the validation occurs for the query runtime stats against baseline or previous feedback stats"): Amended,
    Guid("{4688E55E-564F-4EC0-A53A-66B5708E65BD}"), locale("MS\\0x409"),
    DisplayName("dop_feedback_validation"): Amended]
class XeSqlPkg_dop_feedback_validation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dop_feedback_validation: XeSqlPkg_dop_feedback_validation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 feedback_dop;
	[WmiDataId(6), read, 
				XEMapId(228),
				ValueMap { 
					"5", 
					"3", 
					"4", 
					"8", 
					"2", 
					"0", 
					"1", 
					"7", 
					"6", 
					"10", 
					"11", 
					"9" },
				Values { 
					"AnalysisStoppedDueToHighParallelismEfficiency", 
					"AnalysisStoppedDueToThrottling", 
					"AnalysisStoppedDueToUnstableExecutions", 
					"FeedbackInvalidated", 
					"InAnalysis", 
					"NotAnalyzed", 
					"NotEligible", 
					"PendingFeedbackReassessment", 
					"PendingValidationTest", 
					"RegressionDueToAbort", 
					"Stable", 
					"VerificationRegressed" }
			] uint8 feedback_state;
	[WmiDataId(7), read] uint64 statement_key_hash;
	[WmiDataId(8), read] uint64 query_hash;
	[WmiDataId(9), read] uint64 query_plan_hash;
	[WmiDataId(10), read] uint64 avg_adjusted_elapsed_time_ms;
	[WmiDataId(11), read] uint64 avg_cpu_time_ms;
	[WmiDataId(12), read] uint64 std_dev_cpu_time_ms;
	[WmiDataId(13), read] uint64 std_dev_adjusted_elapsed_time_ms;
};
		
[dynamic: ToInstance, Description("Reports dop feedback provided data for a query. This contains baseline stats when feedback provided for first time and previous feedback stats when subsequent feedbacks provided"): Amended,
    Guid("{441BE93D-7EBC-43DE-B23E-2657B07F496A}"), locale("MS\\0x409"),
    DisplayName("dop_feedback_provided"): Amended]
class XeSqlPkg_dop_feedback_provided: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dop_feedback_provided: XeSqlPkg_dop_feedback_provided
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 query_dop;
	[WmiDataId(6), read] uint16 feedback_dop;
	[WmiDataId(7), read] uint64 statement_key_hash;
	[WmiDataId(8), read] uint64 query_hash;
	[WmiDataId(9), read] uint64 query_plan_hash;
	[WmiDataId(10), read] uint64 avg_cpu_time_ms;
	[WmiDataId(11), read] uint64 avg_adjusted_elapsed_time_ms;
	[WmiDataId(12), read] uint64 std_dev_cpu_time_ms;
	[WmiDataId(13), read] uint64 std_dev_adjusted_elapsed_time_ms;
};
		
[dynamic: ToInstance, Description("Reports when the dop feedback is stabilized for a query"): Amended,
    Guid("{EE0970C8-A61D-4E8A-89FB-FCAC07DCEA68}"), locale("MS\\0x409"),
    DisplayName("dop_feedback_stabilized"): Amended]
class XeSqlPkg_dop_feedback_stabilized: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dop_feedback_stabilized: XeSqlPkg_dop_feedback_stabilized
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 statement_key_hash;
	[WmiDataId(6), read] uint64 query_hash;
	[WmiDataId(7), read] uint64 query_plan_hash;
	[WmiDataId(8), read] uint16 feedback_dop;
	[WmiDataId(9), read] uint64 baseline_avg_cpu_time_ms;
	[WmiDataId(10), read] uint64 baseline_avg_adjusted_elapsed_time_ms;
	[WmiDataId(11), read] uint64 avg_cpu_time_ms;
	[WmiDataId(12), read] uint64 avg_adjusted_elapsed_time_ms;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string reason;
};
		
[dynamic: ToInstance, Description("Reports when the dop feedback reassessment is failed for a query"): Amended,
    Guid("{81EE82A6-75B1-4ED8-84D2-4ECB789E3465}"), locale("MS\\0x409"),
    DisplayName("dop_feedback_reassessment_failed"): Amended]
class XeSqlPkg_dop_feedback_reassessment_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dop_feedback_reassessment_failed: XeSqlPkg_dop_feedback_reassessment_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 statement_key_hash;
	[WmiDataId(6), read] uint64 query_hash;
	[WmiDataId(7), read] uint64 query_plan_hash;
	[WmiDataId(8), read] uint16 feedback_dop;
	[WmiDataId(9), read] uint64 prev_avg_cpu_time_ms;
	[WmiDataId(10), read] uint64 prev_avg_adjusted_elapsed_time_ms;
	[WmiDataId(11), read] uint64 avg_cpu_time_ms;
	[WmiDataId(12), read] uint64 avg_adjusted_elapsed_time_ms;
};
		
[dynamic: ToInstance, Description("Reports when dop feedback is reverted for a query"): Amended,
    Guid("{bfb55bd4-6c7d-4255-abe4-7bff77716c71}"), locale("MS\\0x409"),
    DisplayName("dop_feedback_reverted"): Amended]
class XeSqlPkg_dop_feedback_reverted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dop_feedback_reverted: XeSqlPkg_dop_feedback_reverted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 statement_key_hash;
	[WmiDataId(6), read] uint64 query_hash;
	[WmiDataId(7), read] uint64 query_plan_hash;
	[WmiDataId(8), read] uint16 feedback_dop;
	[WmiDataId(9), read] uint64 baseline_avg_cpu_time_ms;
	[WmiDataId(10), read] uint64 baseline_avg_adjusted_elapsed_time_ms;
	[WmiDataId(11), read] uint64 avg_cpu_time_ms;
	[WmiDataId(12), read] uint64 avg_adjusted_elapsed_time_ms;
	[WmiDataId(13), read] uint64 std_dev_cpu_time_ms;
	[WmiDataId(14), read] uint64 std_dev_adjusted_elapsed_time_ms;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string reason;
};
		
[dynamic: ToInstance, Description("Reports query feedback pre validation data"): Amended,
    Guid("{5906E616-406E-4D92-994F-A4989A15F0EE}"), locale("MS\\0x409"),
    DisplayName("query_feedback_validation"): Amended]
class XeSqlPkg_query_feedback_validation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_feedback_validation: XeSqlPkg_query_feedback_validation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_id;
	[WmiDataId(6), read] uint32 analyzed_plan_id;
	[WmiDataId(7), read] uint32 prevalidation_cpu_ms;
	[WmiDataId(8), read] uint32 analyzed_plan_cpu_ms;
	[WmiDataId(9), read] uint32 std_deviation;
};
		
[dynamic: ToInstance, Description("Reports query feedback pre validation data"): Amended,
    Guid("{5906E616-406E-4D92-994F-A4989A15F0EE}"), locale("MS\\0x409"),
    DisplayName("query_feedback_validation"): Amended]
class XeSqlPkg_query_feedback_validation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_feedback_validation: XeSqlPkg_query_feedback_validation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_id;
	[WmiDataId(6), read] uint32 plan_id;
	[WmiDataId(7), read] uint32 original_cpu_time;
	[WmiDataId(8), read] uint32 stdev_cpu_time;
	[WmiDataId(9), read] uint32 feedback_validation_cpu_time;
	[WmiDataId(10), read] uint32 feedback_validation_plan_hash;
	[WmiDataId(11), read] uint32 original_plan_hash;
};
		
[dynamic: ToInstance, Description("Reports query feedback analysis details"): Amended,
    Guid("{3FC01299-4D35-47A0-A72D-B70DC40D31F3}"), locale("MS\\0x409"),
    DisplayName("query_feedback_analysis"): Amended]
class XeSqlPkg_query_feedback_analysis: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_feedback_analysis: XeSqlPkg_query_feedback_analysis
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_id;
	[WmiDataId(6), read] uint32 plan_id;
	[WmiDataId(7), read] uint32 check_queue_size;
	[WmiDataId(8), read] uint32 validation_queue_size;
	[WmiDataId(9), read] uint32 max_queue_size;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string feedback_hint;
};
		
[dynamic: ToInstance, Description("Reports query feedback analysis details"): Amended,
    Guid("{3FC01299-4D35-47A0-A72D-B70DC40D31F3}"), locale("MS\\0x409"),
    DisplayName("query_feedback_analysis"): Amended]
class XeSqlPkg_query_feedback_analysis: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_feedback_analysis: XeSqlPkg_query_feedback_analysis
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_id;
	[WmiDataId(6), read] uint32 plan_id;
	[WmiDataId(7), read] uint32 check_queue_size;
	[WmiDataId(8), read] uint32 validation_queue_size;
	[WmiDataId(9), read] uint32 max_validation_queue_size;
	[WmiDataId(10), read] uint32 max_check_queue_size;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string feedback_hint;
};
		
[dynamic: ToInstance, Description("Reports the performance of each node and thread of a query plan after execution"): Amended,
    Guid("{24f665a5-7798-4d1c-914f-1b9315f1824f}"), locale("MS\\0x409"),
    DisplayName("query_thread_profile"): Amended]
class XeSqlPkg_query_thread_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_thread_profile: XeSqlPkg_query_thread_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 node_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint64 cpu_time_us;
	[WmiDataId(8), read] uint64 total_time_us;
	[WmiDataId(9), read] uint64 actual_rewinds;
	[WmiDataId(10), read] uint64 actual_rebinds;
	[WmiDataId(11), read, 
				XEMapId(66),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Row", 
					"Batch" }
			] uint32 actual_execution_mode;
	[WmiDataId(12), read] uint64 actual_rows;
	[WmiDataId(13), read] uint64 actual_batches;
	[WmiDataId(14), read] sint8  io_reported;
	[WmiDataId(15), read] uint64 actual_logical_reads;
	[WmiDataId(16), read] uint64 actual_physical_reads;
	[WmiDataId(17), read] uint64 actual_ra_reads;
	[WmiDataId(18), read] uint64 actual_writes;
};
		
[dynamic: ToInstance, Description("Reports the performance of each node and thread of a query plan after execution"): Amended,
    Guid("{24f665a5-7798-4d1c-914f-1b9315f1824f}"), locale("MS\\0x409"),
    DisplayName("query_thread_profile"): Amended]
class XeSqlPkg_query_thread_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_thread_profile: XeSqlPkg_query_thread_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 node_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint64 cpu_time_us;
	[WmiDataId(8), read] uint64 estimated_rows;
	[WmiDataId(9), read] uint64 total_time_us;
	[WmiDataId(10), read] uint64 actual_rewinds;
	[WmiDataId(11), read] uint64 actual_rebinds;
	[WmiDataId(12), read, 
				XEMapId(66),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Row", 
					"Batch" }
			] uint32 actual_execution_mode;
	[WmiDataId(13), read] uint64 actual_rows;
	[WmiDataId(14), read] uint64 actual_batches;
	[WmiDataId(15), read] sint8  io_reported;
	[WmiDataId(16), read] uint64 actual_logical_reads;
	[WmiDataId(17), read] uint64 actual_physical_reads;
	[WmiDataId(18), read] uint64 actual_ra_reads;
	[WmiDataId(19), read] uint64 actual_writes;
};
		
[dynamic: ToInstance, Description("Reports the performance of each node and thread of a query plan after execution"): Amended,
    Guid("{24f665a5-7798-4d1c-914f-1b9315f1824f}"), locale("MS\\0x409"),
    DisplayName("query_thread_profile"): Amended]
class XeSqlPkg_query_thread_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class query_thread_profile: XeSqlPkg_query_thread_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 node_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint64 cpu_time_us;
	[WmiDataId(8), read] uint64 estimated_rows;
	[WmiDataId(9), read] uint64 total_time_us;
	[WmiDataId(10), read] uint64 actual_rewinds;
	[WmiDataId(11), read] uint64 actual_rebinds;
	[WmiDataId(12), read, 
				XEMapId(66),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Row", 
					"Batch" }
			] uint32 actual_execution_mode;
	[WmiDataId(13), read] uint64 actual_rows;
	[WmiDataId(14), read] uint64 actual_batches;
	[WmiDataId(15), read] sint8  io_reported;
	[WmiDataId(16), read] uint64 actual_logical_reads;
	[WmiDataId(17), read] uint64 actual_physical_reads;
	[WmiDataId(18), read] uint64 actual_ra_reads;
	[WmiDataId(19), read] uint64 actual_writes;
	[WmiDataId(20), read] sint8  hpc_reported;
	[WmiDataId(21), read] uint64 hpc_row_count;
	[WmiDataId(22), read] uint64 hpc_kernel_elapsed_us;
	[WmiDataId(23), read] uint64 hpc_host_device_bytes;
	[WmiDataId(24), read] uint64 hpc_device_host_bytes;
};
		
[dynamic: ToInstance, Description("Reports the performance of each node and thread of a query plan after execution"): Amended,
    Guid("{24f665a5-7798-4d1c-914f-1b9315f1824f}"), locale("MS\\0x409"),
    DisplayName("query_thread_profile"): Amended]
class XeSqlPkg_query_thread_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class query_thread_profile: XeSqlPkg_query_thread_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 node_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint64 cpu_time_us;
	[WmiDataId(8), read] uint64 estimated_rows;
	[WmiDataId(9), read] uint64 total_time_us;
	[WmiDataId(10), read] uint64 actual_rewinds;
	[WmiDataId(11), read] uint64 actual_rebinds;
	[WmiDataId(12), read, 
				XEMapId(66),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Row", 
					"Batch" }
			] uint32 actual_execution_mode;
	[WmiDataId(13), read] uint64 actual_rows;
	[WmiDataId(14), read] uint64 actual_batches;
	[WmiDataId(15), read] sint8  io_reported;
	[WmiDataId(16), read] uint64 actual_logical_reads;
	[WmiDataId(17), read] uint64 actual_physical_reads;
	[WmiDataId(18), read] uint64 actual_page_server_reads;
	[WmiDataId(19), read] uint64 actual_ra_reads;
	[WmiDataId(20), read] uint64 actual_page_server_ra_reads;
	[WmiDataId(21), read] uint64 actual_writes;
	[WmiDataId(22), read] sint8  hpc_reported;
	[WmiDataId(23), read] uint64 hpc_row_count;
	[WmiDataId(24), read] uint64 hpc_kernel_elapsed_us;
	[WmiDataId(25), read] uint64 hpc_host_device_bytes;
	[WmiDataId(26), read] uint64 hpc_device_host_bytes;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement is compiled. This event returns an XML representation of the estimated query plan that is generated when the query is compiled. Using this event can have a significant performance overhead so it should only be used when troubleshooting or monitoring specific problems for brief periods of time."): Amended,
    Guid("{e3a29837-db87-4dd5-9eb2-4f8c7302f333}"), locale("MS\\0x409"),
    DisplayName("query_post_compilation_showplan"): Amended]
class XeSqlPkg_query_post_compilation_showplan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_post_compilation_showplan: XeSqlPkg_query_post_compilation_showplan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read, 
				XEMapId(119),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint16 nest_level;
	[WmiDataId(9), read] sint32 estimated_rows;
	[WmiDataId(10), read] sint32 estimated_cost;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 cpu_time;
	[WmiDataId(13), read] uint64 recompile_count;
	[WmiDataId(14), read] sint32 begin_offset;
	[WmiDataId(15), read] sint32 end_offset;
	[WmiDataId(16), read, Extension("Variant")] object plan_handle;
	[WmiDataId(17), read, Extension("Variant")] object sql_handle;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement is compiled. This event returns an XML representation of the estimated query plan that is generated when the query is compiled. Using this event can have a significant performance overhead so it should only be used when troubleshooting or monitoring specific problems for brief periods of time."): Amended,
    Guid("{e3a29837-db87-4dd5-9eb2-4f8c7302f333}"), locale("MS\\0x409"),
    DisplayName("query_post_compilation_showplan"): Amended]
class XeSqlPkg_query_post_compilation_showplan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_post_compilation_showplan: XeSqlPkg_query_post_compilation_showplan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read, 
				XEMapId(119),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint16 nest_level;
	[WmiDataId(9), read] sint32 estimated_rows;
	[WmiDataId(10), read] sint32 estimated_cost;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 cpu_time;
	[WmiDataId(13), read] uint64 recompile_count;
	[WmiDataId(14), read] sint32 begin_offset;
	[WmiDataId(15), read] sint32 end_offset;
	[WmiDataId(16), read] uint64 serial_ideal_memory_kb;
	[WmiDataId(17), read, Extension("Variant")] object plan_handle;
	[WmiDataId(18), read, Extension("Variant")] object sql_handle;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement is compiled. This event returns an XML representation of the estimated query plan that is generated when the query is optimized. Using this event can have a significant performance overhead so it should only be used when troubleshooting or monitoring specific problems for brief periods of time."): Amended,
    Guid("{46c873d9-77a2-4621-b05c-7fee8b8c4d89}"), locale("MS\\0x409"),
    DisplayName("query_pre_execution_showplan"): Amended]
class XeSqlPkg_query_pre_execution_showplan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_pre_execution_showplan: XeSqlPkg_query_pre_execution_showplan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read, 
				XEMapId(119),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint16 nest_level;
	[WmiDataId(9), read] sint32 estimated_rows;
	[WmiDataId(10), read] sint32 estimated_cost;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement is compiled. This event returns an XML representation of the estimated query plan that is generated when the query is optimized. Using this event can have a significant performance overhead so it should only be used when troubleshooting or monitoring specific problems for brief periods of time."): Amended,
    Guid("{46c873d9-77a2-4621-b05c-7fee8b8c4d89}"), locale("MS\\0x409"),
    DisplayName("query_pre_execution_showplan"): Amended]
class XeSqlPkg_query_pre_execution_showplan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_pre_execution_showplan: XeSqlPkg_query_pre_execution_showplan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read, 
				XEMapId(119),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint16 nest_level;
	[WmiDataId(9), read] sint32 estimated_rows;
	[WmiDataId(10), read] sint32 estimated_cost;
	[WmiDataId(11), read] uint64 serial_ideal_memory_kb;
	[WmiDataId(12), read] uint64 requested_memory_kb;
	[WmiDataId(13), read] uint64 ideal_memory_kb;
	[WmiDataId(14), read] uint64 granted_memory_kb;
	[WmiDataId(15), read] uint32 dop;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement is executed. This event returns an XML representation of the actual query plan. Using this event can have a significant performance overhead so it should only be used when troubleshooting or monitoring specific problems for brief periods of time."): Amended,
    Guid("{7bd6d19a-adb3-436b-bb29-cd2ee4d2468c}"), locale("MS\\0x409"),
    DisplayName("query_post_execution_showplan"): Amended]
class XeSqlPkg_query_post_execution_showplan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_post_execution_showplan: XeSqlPkg_query_post_execution_showplan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read, 
				XEMapId(119),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint16 nest_level;
	[WmiDataId(9), read] uint64 cpu_time;
	[WmiDataId(10), read] uint64 duration;
	[WmiDataId(11), read] sint32 estimated_rows;
	[WmiDataId(12), read] sint32 estimated_cost;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement is executed. This event returns an XML representation of the actual query plan. Using this event can have a significant performance overhead so it should only be used when troubleshooting or monitoring specific problems for brief periods of time."): Amended,
    Guid("{7bd6d19a-adb3-436b-bb29-cd2ee4d2468c}"), locale("MS\\0x409"),
    DisplayName("query_post_execution_showplan"): Amended]
class XeSqlPkg_query_post_execution_showplan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_post_execution_showplan: XeSqlPkg_query_post_execution_showplan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read, 
				XEMapId(119),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint16 nest_level;
	[WmiDataId(9), read] uint64 cpu_time;
	[WmiDataId(10), read] uint64 duration;
	[WmiDataId(11), read] sint32 estimated_rows;
	[WmiDataId(12), read] sint32 estimated_cost;
	[WmiDataId(13), read] uint64 serial_ideal_memory_kb;
	[WmiDataId(14), read] uint64 requested_memory_kb;
	[WmiDataId(15), read] uint64 used_memory_kb;
	[WmiDataId(16), read] uint64 ideal_memory_kb;
	[WmiDataId(17), read] uint64 granted_memory_kb;
	[WmiDataId(18), read] uint32 dop;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs after a DML statement. This event contains either XML representation of the query plan or plan hash value."): Amended,
    Guid("{990E68D3-33CC-48DF-906B-E78FD1EA5490}"), locale("MS\\0x409"),
    DisplayName("query_post_dml_showplan"): Amended]
class XeSqlPkg_query_post_dml_showplan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_post_dml_showplan: XeSqlPkg_query_post_dml_showplan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read] sint64 query_hash_signed;
	[WmiDataId(7), read] sint64 query_plan_hash_signed;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string xdes_id;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement with the QUERY_PLAN_PROFILE hint is executed. This event contains an XML representation of the actual query plan."): Amended,
    Guid("{4a4ffefd-d705-40e3-b8bf-ec1b13907494}"), locale("MS\\0x409"),
    DisplayName("query_plan_profile"): Amended]
class XeSqlPkg_query_plan_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_plan_profile: XeSqlPkg_query_plan_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read, 
				XEMapId(119),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint16 nest_level;
	[WmiDataId(9), read] uint64 cpu_time;
	[WmiDataId(10), read] uint64 duration;
	[WmiDataId(11), read] sint32 estimated_rows;
	[WmiDataId(12), read] sint32 estimated_cost;
	[WmiDataId(13), read] uint64 serial_ideal_memory_kb;
	[WmiDataId(14), read] uint64 requested_memory_kb;
	[WmiDataId(15), read] uint64 used_memory_kb;
	[WmiDataId(16), read] uint64 ideal_memory_kb;
	[WmiDataId(17), read] uint64 granted_memory_kb;
	[WmiDataId(18), read] uint32 dop;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement is executed. This event contains an XML representation of the actual query plan and uses lightweight profiling infrastructure."): Amended,
    Guid("{f68f5b0f-7b26-4c45-84be-4df646a7a539}"), locale("MS\\0x409"),
    DisplayName("query_post_execution_plan_profile"): Amended]
class XeSqlPkg_query_post_execution_plan_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_post_execution_plan_profile: XeSqlPkg_query_post_execution_plan_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read, 
				XEMapId(119),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"19267", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"19779", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"21316", 
					"17220", 
					"20036", 
					"21060", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"17221", 
					"20549", 
					"20037", 
					"21061", 
					"17477", 
					"17989", 
					"19536", 
					"21840", 
					"16716", 
					"19525", 
					"19544", 
					"22597", 
					"21317", 
					"19013", 
					"21573", 
					"21848", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20563", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CEK", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CMK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBCONFIG", 
					"DBCREDENTIAL", 
					"DBEVTNOT", 
					"DBRG", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"EDGE", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"EXRP", 
					"EXTDATASRC", 
					"EXTFILEFMT", 
					"EXTGRPLOGIN", 
					"EXTGRPUSER", 
					"EXTLANG", 
					"EXTLIB", 
					"EXTLOGIN", 
					"EXTSCRIPT", 
					"EXTSTREAM", 
					"EXTSTRJOB", 
					"EXTTAB", 
					"EXTUSER", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SECPOLICY", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint16 nest_level;
	[WmiDataId(9), read] uint64 cpu_time;
	[WmiDataId(10), read] uint64 duration;
	[WmiDataId(11), read] sint32 estimated_rows;
	[WmiDataId(12), read] sint32 estimated_cost;
	[WmiDataId(13), read] uint64 serial_ideal_memory_kb;
	[WmiDataId(14), read] uint64 requested_memory_kb;
	[WmiDataId(15), read] uint64 used_memory_kb;
	[WmiDataId(16), read] uint64 ideal_memory_kb;
	[WmiDataId(17), read] uint64 granted_memory_kb;
	[WmiDataId(18), read] uint32 dop;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{b3516521-ac25-4d23-8318-c71c24348377}"), locale("MS\\0x409"),
    DisplayName("maxdop_feedback_received"): Amended]
class XeSqlPkg_maxdop_feedback_received: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class maxdop_feedback_received: XeSqlPkg_maxdop_feedback_received
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 query_id;
	[WmiDataId(7), read] uint32 system_load;
	[WmiDataId(8), read] uint32 maxdop_feedback;
};
		
[dynamic: ToInstance, Description("DW large text store for fragmented text blobs."): Amended,
    Guid("{0f752390-3fef-491a-bc4f-ee69c42f9534}"), locale("MS\\0x409"),
    DisplayName("dw_large_text_store"): Amended]
class XeSqlPkg_dw_large_text_store: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dw_large_text_store: XeSqlPkg_dw_large_text_store
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 fragment_id;
	[WmiDataId(6), read] uint32 step_index;
	[WmiDataId(7), read] uint32 session_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string request_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string string_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string description;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string fragment;
};
		
[dynamic: ToInstance, Description("Query execution trace (internal testing only)"): Amended,
    Guid("{4673ec11-35fc-4a2f-8cb2-68a223404ba2}"), locale("MS\\0x409"),
    DisplayName("query_execution_generic_trace"): Amended]
class XeSqlPkg_query_execution_generic_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_generic_trace: XeSqlPkg_query_execution_generic_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated")] string buffer;
};
		
[dynamic: ToInstance, Description("RX about to allocate row buffers"): Amended,
    Guid("{a3bf79dc-bade-4f7a-9aea-bd2e1001883f}"), locale("MS\\0x409"),
    DisplayName("query_rx_allocating_buffers"): Amended]
class XeSqlPkg_query_rx_allocating_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_allocating_buffers: XeSqlPkg_query_rx_allocating_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX allocates row buffers"): Amended,
    Guid("{cd46f697-cf16-4e5e-908b-10aaa482d9a3}"), locale("MS\\0x409"),
    DisplayName("query_rx_allocate_buffers"): Amended]
class XeSqlPkg_query_rx_allocate_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_allocate_buffers: XeSqlPkg_query_rx_allocate_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] sint8  is_eos;
	[WmiDataId(9), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX releases row buffers"): Amended,
    Guid("{da9d59d5-101b-4bbe-8c4d-81a83873cf30}"), locale("MS\\0x409"),
    DisplayName("query_rx_release_buffers"): Amended]
class XeSqlPkg_query_rx_release_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_release_buffers: XeSqlPkg_query_rx_release_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX about to send row buffers"): Amended,
    Guid("{6462c046-f901-480f-8826-ed0c3061c266}"), locale("MS\\0x409"),
    DisplayName("query_rx_sending_buffers"): Amended]
class XeSqlPkg_query_rx_sending_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_sending_buffers: XeSqlPkg_query_rx_sending_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] sint8  is_eos;
	[WmiDataId(9), read] uint32 rows;
	[WmiDataId(10), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX sends row buffers"): Amended,
    Guid("{3bc014fc-947e-4eb8-be70-dab84683ce7f}"), locale("MS\\0x409"),
    DisplayName("query_rx_send_buffers"): Amended]
class XeSqlPkg_query_rx_send_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_send_buffers: XeSqlPkg_query_rx_send_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] sint8  is_eos;
	[WmiDataId(9), read] uint32 rows;
	[WmiDataId(10), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX receives row buffers"): Amended,
    Guid("{d8eaf6fe-367c-4c56-a397-b50bfbd117c1}"), locale("MS\\0x409"),
    DisplayName("query_rx_receive_buffers"): Amended]
class XeSqlPkg_query_rx_receive_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_receive_buffers: XeSqlPkg_query_rx_receive_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] sint8  is_eos;
	[WmiDataId(9), read] uint32 rows;
	[WmiDataId(10), read] uint32 eos_count;
	[WmiDataId(11), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX about to send an activate message"): Amended,
    Guid("{228f5902-bd1d-4115-bf01-8ba9f203b616}"), locale("MS\\0x409"),
    DisplayName("query_rx_sending_activation"): Amended]
class XeSqlPkg_query_rx_sending_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_sending_activation: XeSqlPkg_query_rx_sending_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX sends an activation message"): Amended,
    Guid("{7ecfbc34-2eee-4b1b-b88f-f8047c677a61}"), locale("MS\\0x409"),
    DisplayName("query_rx_send_activation"): Amended]
class XeSqlPkg_query_rx_send_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_send_activation: XeSqlPkg_query_rx_send_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query is starting up"): Amended,
    Guid("{60fec024-9b6a-433c-82b0-7f9326e4100b}"), locale("MS\\0x409"),
    DisplayName("query_scan_startup"): Amended]
class XeSqlPkg_query_scan_startup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_scan_startup: XeSqlPkg_query_scan_startup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(45),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"Standalone", 
					"RX Plan", 
					"RPC Plan", 
					"Mixed Plan" }
			] uint8 plan_type;
};
		
[dynamic: ToInstance, Description("Creating RPC column accessor."): Amended,
    Guid("{b7cdabbb-77c4-4462-8657-59972e1c8454}"), locale("MS\\0x409"),
    DisplayName("query_rpc_create_accessor"): Amended]
class XeSqlPkg_query_rpc_create_accessor: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_create_accessor: XeSqlPkg_query_rpc_create_accessor
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Creating RPC column accessor."): Amended,
    Guid("{bf52bf5e-0b2a-40bb-9d40-8f94e00a5657}"), locale("MS\\0x409"),
    DisplayName("query_rpc_create_col_accessor"): Amended]
class XeSqlPkg_query_rpc_create_col_accessor: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_create_col_accessor: XeSqlPkg_query_rpc_create_col_accessor
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Releasing RPC column accessor."): Amended,
    Guid("{3718798c-6827-4372-8d16-74ac63f76207}"), locale("MS\\0x409"),
    DisplayName("query_rpc_release_accessor"): Amended]
class XeSqlPkg_query_rpc_release_accessor: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_release_accessor: XeSqlPkg_query_rpc_release_accessor
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Closing RPC rowset."): Amended,
    Guid("{28e17571-1a94-43f5-a2eb-9261a0d5d128}"), locale("MS\\0x409"),
    DisplayName("query_rpc_close"): Amended]
class XeSqlPkg_query_rpc_close: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_close: XeSqlPkg_query_rpc_close
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Waking up RPC rowset."): Amended,
    Guid("{e878bdd1-5135-43dc-883b-80676e58f4d2}"), locale("MS\\0x409"),
    DisplayName("query_rpc_wake_up"): Amended]
class XeSqlPkg_query_rpc_wake_up: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_wake_up: XeSqlPkg_query_rpc_wake_up
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  in_clone_loop;
	[WmiDataId(6), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Setting RPC rowset to dormant state."): Amended,
    Guid("{603f4daa-5788-449f-a0a9-7ac37b6f4449}"), locale("MS\\0x409"),
    DisplayName("query_rpc_go_dormant"): Amended]
class XeSqlPkg_query_rpc_go_dormant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_go_dormant: XeSqlPkg_query_rpc_go_dormant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  in_clone_loop;
	[WmiDataId(6), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Setting range for RPC rowset."): Amended,
    Guid("{4c03fc96-29e3-4b81-a5d9-1f26c5a74f06}"), locale("MS\\0x409"),
    DisplayName("query_rpc_set_range"): Amended]
class XeSqlPkg_query_rpc_set_range: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_set_range: XeSqlPkg_query_rpc_set_range
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read, 
				XEMapId(234),
				BitMap { 
					"4", 
					"2", 
					"1", 
					"0", 
					"16", 
					"8" },
				BitValues { 
					"DBRANGE_EXCLUDENULLS", 
					"DBRANGE_EXCLUSIVEEND", 
					"DBRANGE_EXCLUSIVESTART", 
					"DBRANGE_INCLUSIVEEND", 
					"DBRANGE_MATCH", 
					"DBRANGE_PREFIX" }
			] uint64 range_options;
	[WmiDataId(9), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Fetching next row from RPC rowset."): Amended,
    Guid("{d069a386-e816-4077-b5a2-2864d3042afc}"), locale("MS\\0x409"),
    DisplayName("query_rpc_fetch_next_row"): Amended]
class XeSqlPkg_query_rpc_fetch_next_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_fetch_next_row: XeSqlPkg_query_rpc_fetch_next_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Getting data from RPC rowset."): Amended,
    Guid("{e736a7d3-4e25-42e7-83dd-9935353b0dd0}"), locale("MS\\0x409"),
    DisplayName("query_rpc_get_data"): Amended]
class XeSqlPkg_query_rpc_get_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_get_data: XeSqlPkg_query_rpc_get_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
	[WmiDataId(9), read] sint8  after_update;
};
		
[dynamic: ToInstance, Description("Setting data in RPC rowset."): Amended,
    Guid("{81da2979-794e-4328-a0c9-151a91cef534}"), locale("MS\\0x409"),
    DisplayName("query_rpc_set_data"): Amended]
class XeSqlPkg_query_rpc_set_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_set_data: XeSqlPkg_query_rpc_set_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Inserting row in RPC rowset."): Amended,
    Guid("{c9ce5fb9-700e-4222-b106-821db8e8babf}"), locale("MS\\0x409"),
    DisplayName("query_rpc_insert_row"): Amended]
class XeSqlPkg_query_rpc_insert_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_insert_row: XeSqlPkg_query_rpc_insert_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Deleting rows from RPC rowset."): Amended,
    Guid("{18f0e3cc-f352-4174-8e8f-c12c1cc1fb45}"), locale("MS\\0x409"),
    DisplayName("query_rpc_delete_rows"): Amended]
class XeSqlPkg_query_rpc_delete_rows: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_delete_rows: XeSqlPkg_query_rpc_delete_rows
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  use_local_rowset;
	[WmiDataId(6), read] sint8  row_deleted;
};
		
[dynamic: ToInstance, Description("Fetching row by key value from RPC rowset."): Amended,
    Guid("{c264916a-bfa9-4529-bc4f-9006706e3c43}"), locale("MS\\0x409"),
    DisplayName("query_rpc_fetch_row_by_key_value"): Amended]
class XeSqlPkg_query_rpc_fetch_row_by_key_value: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_fetch_row_by_key_value: XeSqlPkg_query_rpc_fetch_row_by_key_value
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 key_accessor;
	[WmiDataId(6), read] uint64 key_accessor_bindings;
	[WmiDataId(7), read] uint32 key_accessor_buffer_size;
	[WmiDataId(8), read] uint64 data_accessor;
	[WmiDataId(9), read] uint64 data_accessor_bindings;
	[WmiDataId(10), read] uint32 data_accessor_buffer_size;
	[WmiDataId(11), read] sint8  cache_keys;
	[WmiDataId(12), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Inserting index row in RPC rowset."): Amended,
    Guid("{17bbc16d-1515-46d8-8402-f6c5211af541}"), locale("MS\\0x409"),
    DisplayName("query_rpc_insert_index_row"): Amended]
class XeSqlPkg_query_rpc_insert_index_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_insert_index_row: XeSqlPkg_query_rpc_insert_index_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Ending update in RPC rowset."): Amended,
    Guid("{c430fedd-925b-45c4-a59b-f07d8d5c5cca}"), locale("MS\\0x409"),
    DisplayName("query_rpc_end_update"): Amended]
class XeSqlPkg_query_rpc_end_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_end_update: XeSqlPkg_query_rpc_end_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Setting cardinality in RPC rowset."): Amended,
    Guid("{0021027c-2f3b-4b5d-b34d-22f41144f596}"), locale("MS\\0x409"),
    DisplayName("query_rpc_set_cardinality"): Amended]
class XeSqlPkg_query_rpc_set_cardinality: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_set_cardinality: XeSqlPkg_query_rpc_set_cardinality
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Preparing to delete in RPC rowset."): Amended,
    Guid("{df6e9271-0220-4366-b1b0-87ddf66e6e26}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_to_delete"): Amended]
class XeSqlPkg_query_rpc_prepare_to_delete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_to_delete: XeSqlPkg_query_rpc_prepare_to_delete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Locating and deleting row in RPC rowset."): Amended,
    Guid("{16b13fa5-2905-443d-8742-3afbd2ef965b}"), locale("MS\\0x409"),
    DisplayName("query_rpc_locate_and_delete_row"): Amended]
class XeSqlPkg_query_rpc_locate_and_delete_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_locate_and_delete_row: XeSqlPkg_query_rpc_locate_and_delete_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Locating and updating row in RPC rowset."): Amended,
    Guid("{25ee094f-a526-41e8-97f6-eff37105c90f}"), locale("MS\\0x409"),
    DisplayName("query_rpc_locate_and_update_row"): Amended]
class XeSqlPkg_query_rpc_locate_and_update_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_locate_and_update_row: XeSqlPkg_query_rpc_locate_and_update_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 key_accessor;
	[WmiDataId(6), read] uint64 key_accessor_bindings;
	[WmiDataId(7), read] uint32 key_accessor_buffer_size;
	[WmiDataId(8), read] uint64 data_accessor;
	[WmiDataId(9), read] uint64 data_accessor_bindings;
	[WmiDataId(10), read] uint32 data_accessor_buffer_size;
	[WmiDataId(11), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Locating or inserting row in RPC rowset."): Amended,
    Guid("{44ce9c5a-6f09-4fad-a074-072113f339ff}"), locale("MS\\0x409"),
    DisplayName("query_rpc_locate_or_insert_row"): Amended]
class XeSqlPkg_query_rpc_locate_or_insert_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_locate_or_insert_row: XeSqlPkg_query_rpc_locate_or_insert_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Switching partition in RPC rowset."): Amended,
    Guid("{32b35a93-b240-422e-bdc5-506d88112dc5}"), locale("MS\\0x409"),
    DisplayName("query_rpc_switch_partition"): Amended]
class XeSqlPkg_query_rpc_switch_partition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_switch_partition: XeSqlPkg_query_rpc_switch_partition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Processing SetRange RPC command."): Amended,
    Guid("{092c758d-fda0-4d10-8ba8-0edc43b44c94}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_set_range"): Amended]
class XeSqlPkg_query_rpc_process_cmd_set_range: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_set_range: XeSqlPkg_query_rpc_process_cmd_set_range
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Processing GetData RPC command."): Amended,
    Guid("{c4b7ffb4-fbdc-4893-a5f6-63435ea724b2}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_get_data"): Amended]
class XeSqlPkg_query_rpc_process_cmd_get_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_get_data: XeSqlPkg_query_rpc_process_cmd_get_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
};
		
[dynamic: ToInstance, Description("Processing FetchData RPC command."): Amended,
    Guid("{5d918401-8da3-4995-b43b-6511cad5048b}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_fetch_data"): Amended]
class XeSqlPkg_query_rpc_process_cmd_fetch_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_fetch_data: XeSqlPkg_query_rpc_process_cmd_fetch_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
};
		
[dynamic: ToInstance, Description("Processing SetData RPC command."): Amended,
    Guid("{d4abb1d4-64e0-43fb-881b-3f36912e0c75}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_set_data"): Amended]
class XeSqlPkg_query_rpc_process_cmd_set_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_set_data: XeSqlPkg_query_rpc_process_cmd_set_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 row;
};
		
[dynamic: ToInstance, Description("Processing InsertRow RPC command."): Amended,
    Guid("{bef90015-2cd7-43b5-9657-7935e9402183}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_insert_row"): Amended]
class XeSqlPkg_query_rpc_process_cmd_insert_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_insert_row: XeSqlPkg_query_rpc_process_cmd_insert_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Processing DeleteRow RPC command."): Amended,
    Guid("{4e840bf0-5864-4417-83ee-c456dc9c0ab4}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_delete_row"): Amended]
class XeSqlPkg_query_rpc_process_cmd_delete_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_delete_row: XeSqlPkg_query_rpc_process_cmd_delete_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 row;
};
		
[dynamic: ToInstance, Description("Processing PrepareToDelete RPC command."): Amended,
    Guid("{e494446f-2f63-4d95-990b-d2e4d0eb0a5d}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_prepare_to_delete"): Amended]
class XeSqlPkg_query_rpc_process_cmd_prepare_to_delete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_prepare_to_delete: XeSqlPkg_query_rpc_process_cmd_prepare_to_delete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 row;
};
		
[dynamic: ToInstance, Description("Processing SetMarker RPC command."): Amended,
    Guid("{67249e46-2e71-4dd7-9e07-d6b80d7b01cb}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_set_marker"): Amended]
class XeSqlPkg_query_rpc_process_cmd_set_marker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_set_marker: XeSqlPkg_query_rpc_process_cmd_set_marker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Processing GotoMarker RPC command."): Amended,
    Guid("{7646fe7c-2bd9-41ee-97ed-5df6f36aba32}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_goto_marker"): Amended]
class XeSqlPkg_query_rpc_process_cmd_goto_marker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_goto_marker: XeSqlPkg_query_rpc_process_cmd_goto_marker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Processing LobAction RPC command."): Amended,
    Guid("{9de85962-44bf-45ec-923d-c6c8a8a4bf7b}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_lob_action"): Amended]
class XeSqlPkg_query_rpc_process_cmd_lob_action: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_lob_action: XeSqlPkg_query_rpc_process_cmd_lob_action
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Preparing WakeUp RPC command."): Amended,
    Guid("{de7a8a86-927a-46b3-9cf3-75c14c7b936e}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_wake_up"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_wake_up: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_wake_up: XeSqlPkg_query_rpc_prepare_cmd_wake_up
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
};
		
[dynamic: ToInstance, Description("Preparing FetchData RPC command."): Amended,
    Guid("{d6680279-21ff-4279-96c2-9eb5817ebe97}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_fetch_data"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_fetch_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_fetch_data: XeSqlPkg_query_rpc_prepare_cmd_fetch_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Preparing GetData RPC command."): Amended,
    Guid("{6a85382d-1716-45d4-b600-a65e365e193c}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_get_data"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_get_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_get_data: XeSqlPkg_query_rpc_prepare_cmd_get_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Preparing SetRange RPC command."): Amended,
    Guid("{285ec2c5-92b0-4419-a6ae-387e50b1cbc6}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_set_range"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_set_range: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_set_range: XeSqlPkg_query_rpc_prepare_cmd_set_range
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  one_row;
};
		
[dynamic: ToInstance, Description("Preparing SetRange RPC command with cached keys."): Amended,
    Guid("{6cc2a9c4-5e2e-4ca1-a34f-63c39f5a2833}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_set_range_with_cached_keys"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_set_range_with_cached_keys: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_set_range_with_cached_keys: XeSqlPkg_query_rpc_prepare_cmd_set_range_with_cached_keys
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  one_row;
};
		
[dynamic: ToInstance, Description("Preparing SetData RPC command."): Amended,
    Guid("{de48e949-ddb2-45f4-9625-7ec19a5014f0}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_set_data"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_set_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_set_data: XeSqlPkg_query_rpc_prepare_cmd_set_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Preparing InsertRow RPC command."): Amended,
    Guid("{e424068d-d6af-4c4a-9b22-f4dd03ed5c8c}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_insert_row"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_insert_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_insert_row: XeSqlPkg_query_rpc_prepare_cmd_insert_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_locate_or_insert;
};
		
[dynamic: ToInstance, Description("Preparing PrepareToDelete RPC command."): Amended,
    Guid("{af81d07f-3456-4242-a8d3-84f1a29b8dea}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_prepare_to_delete"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_prepare_to_delete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_prepare_to_delete: XeSqlPkg_query_rpc_prepare_cmd_prepare_to_delete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Preparing DeleteRow RPC command."): Amended,
    Guid("{dcfe2350-b865-4a65-96a6-8a701cae7aa4}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_delete_row"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_delete_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_delete_row: XeSqlPkg_query_rpc_prepare_cmd_delete_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Preparing SetMarker RPC command."): Amended,
    Guid("{8a48c514-5499-4a1b-a83b-bf35dc69c12c}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_set_marker"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_set_marker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_set_marker: XeSqlPkg_query_rpc_prepare_cmd_set_marker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Preparing GotoMarker RPC command."): Amended,
    Guid("{4809c149-0d22-4aac-ae77-075ff11c801f}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_goto_marker"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_goto_marker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_goto_marker: XeSqlPkg_query_rpc_prepare_cmd_goto_marker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when each batch processing operator get a new batch of data from child operators."): Amended,
    Guid("{a8405c41-76e4-44b3-bc2b-ad1bf95dad17}"), locale("MS\\0x409"),
    DisplayName("query_execution_get_batch_vector"): Amended]
class XeSqlPkg_query_execution_get_batch_vector: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_get_batch_vector: XeSqlPkg_query_execution_get_batch_vector
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 query_thread_id;
	[WmiDataId(7), read] sint8  is_const_vector;
	[WmiDataId(8), read] uint32 row_count;
	[WmiDataId(9), read] sint32 normalized_data_count;
	[WmiDataId(10), read] sint32 unnormalized_data_count;
	[WmiDataId(11), read] sint32 null_data_count;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string column_name;
};
		
[dynamic: ToInstance, Description("Occurs when hash table is built in batch processing."): Amended,
    Guid("{d92515a0-313f-4e44-97c1-b69f15f84993}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_processing_hash_table_build"): Amended]
class XeSqlPkg_query_execution_batch_processing_hash_table_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_processing_hash_table_build: XeSqlPkg_query_execution_batch_processing_hash_table_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 query_thread_id;
	[WmiDataId(7), read] sint32 hash_table_slice_count;
	[WmiDataId(8), read] uint64 bucket_count_per_hash_table_slice;
	[WmiDataId(9), read] uint64 bucket_size_bytes;
	[WmiDataId(10), read] uint64 overflow_pages_count;
	[WmiDataId(11), read] sint32 hash_table_slices_built;
	[WmiDataId(12), read] sint8  is_small_hash_table;
};
		
[dynamic: ToInstance, Description("Occurs when bitmap is built in batch processing."): Amended,
    Guid("{7cf368c3-9219-4de3-b988-5d19813f8c18}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_processing_bitmap_build"): Amended]
class XeSqlPkg_query_execution_batch_processing_bitmap_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_processing_bitmap_build: XeSqlPkg_query_execution_batch_processing_bitmap_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] uint64 row_count;
	[WmiDataId(7), read] uint64 bytes;
	[WmiDataId(8), read] sint8  is_fast_bitmap;
};
		
[dynamic: ToInstance, Description("Occurs when range elimination map is built in batch processing."): Amended,
    Guid("{eb0468db-7d6f-465e-bed3-318b93e83f64}"), locale("MS\\0x409"),
    DisplayName("query_execution_range_elimination_map_build"): Amended]
class XeSqlPkg_query_execution_range_elimination_map_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_range_elimination_map_build: XeSqlPkg_query_execution_range_elimination_map_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] uint64 ranges_count;
	[WmiDataId(7), read] uint64 bucket_size;
};
		
[dynamic: ToInstance, Description("Occurs when column segment scan starts."): Amended,
    Guid("{0f7beae2-32fe-4e34-a3bb-be27252b62bd}"), locale("MS\\0x409"),
    DisplayName("query_execution_column_store_segment_scan_started"): Amended]
class XeSqlPkg_query_execution_column_store_segment_scan_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_column_store_segment_scan_started: XeSqlPkg_query_execution_column_store_segment_scan_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 thread_id;
	[WmiDataId(6), read] sint32 node_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] sint32 rowset_column_id;
	[WmiDataId(9), read, 
				XEMapId(187),
				ValueMap { 
					"104", 
					"34", 
					"50", 
					"35", 
					"250", 
					"40", 
					"42", 
					"43", 
					"0", 
					"52", 
					"56", 
					"127", 
					"60", 
					"31", 
					"59", 
					"62", 
					"58", 
					"122", 
					"173", 
					"61", 
					"106", 
					"36", 
					"108", 
					"175", 
					"98", 
					"239", 
					"1", 
					"243", 
					"41", 
					"189", 
					"240", 
					"48", 
					"165", 
					"167", 
					"231", 
					"99", 
					"241", 
					"242" },
				Values { 
					"XE_XVT_BIT", 
					"XE_XVT_BLOB", 
					"XE_XVT_BOOL", 
					"XE_XVT_CLOB", 
					"XE_XVT_CURSOR", 
					"XE_XVT_DATE", 
					"XE_XVT_DATETIME2", 
					"XE_XVT_DATETIMEOFFSET", 
					"XE_XVT_EMPTY", 
					"XE_XVT_I2", 
					"XE_XVT_I4", 
					"XE_XVT_I8", 
					"XE_XVT_MONEY", 
					"XE_XVT_NULL", 
					"XE_XVT_R4", 
					"XE_XVT_R8", 
					"XE_XVT_SMALLDATE", 
					"XE_XVT_SMALLMONEY", 
					"XE_XVT_SSBYTES", 
					"XE_XVT_SSDATE", 
					"XE_XVT_SSDECIMAL", 
					"XE_XVT_SSGUID", 
					"XE_XVT_SSNUMERIC", 
					"XE_XVT_SSSTR", 
					"XE_XVT_SSVARIANT", 
					"XE_XVT_SSWSTR", 
					"XE_XVT_TABLE", 
					"XE_XVT_TABLETYPE", 
					"XE_XVT_TIME", 
					"XE_XVT_TIMESTAMP", 
					"XE_XVT_UDT", 
					"XE_XVT_UI1", 
					"XE_XVT_VARBYTES", 
					"XE_XVT_VARSTR", 
					"XE_XVT_VARWSTR", 
					"XE_XVT_WLOB", 
					"XE_XVT_XML", 
					"XE_XVT_XMLNODE" }
			] uint32 column_sql_data_type;
	[WmiDataId(10), read, 
				XEMapId(189),
				ValueMap { 
					"7", 
					"1", 
					"2", 
					"3", 
					"5", 
					"4", 
					"0", 
					"8", 
					"6" },
				Values { 
					"BYTES8", 
					"DATETIMEOFFSET_GREATER_THAN_64_BITS", 
					"DECIMAL", 
					"DECIMAL_GREATER_THAN_64_BITS", 
					"DOUBLE", 
					"FLOAT", 
					"INT", 
					"LOB", 
					"STRING" }
			] uint32 column_compressed_data_type;
	[WmiDataId(11), read] sint8  is_locator_column;
	[WmiDataId(12), read] sint8  is_generation_column;
	[WmiDataId(13), read, 
				XEMapId(188),
				ValueMap { 
					"3", 
					"4", 
					"5", 
					"6", 
					"0", 
					"8", 
					"7", 
					"2", 
					"1" },
				Values { 
					"HASH_PRIMARY_32_SECONDARY_32", 
					"HASH_PRIMARY_32_SECONDARY_64", 
					"HASH_PRIMARY_64_SECONDARY_32", 
					"HASH_PRIMARY_64_SECONDARY_64", 
					"NONE", 
					"STRING_HASH", 
					"STRING_VALUE", 
					"VALUE", 
					"VALUE_FAST" }
			] uint32 encoding_type;
	[WmiDataId(14), read] sint32 bit_packing;
	[WmiDataId(15), read] sint8  has_verification;
	[WmiDataId(16), read] sint8  is_nullable;
	[WmiDataId(17), read] sint8  id_deep_data_possible;
	[WmiDataId(18), read] sint64 min_data_id;
	[WmiDataId(19), read] sint64 base_id;
	[WmiDataId(20), read] real64 magnitude;
	[WmiDataId(21), read] sint64 null_value;
	[WmiDataId(22), read] sint32 secondary_base_id;
	[WmiDataId(23), read] uint32 primary_dictionary_value_count;
	[WmiDataId(24), read] uint32 secondary_dictionary_value_count;
	[WmiDataId(25), read] sint64 metadata_min_data_id;
	[WmiDataId(26), read] sint64 metadata_max_data_id;
	[WmiDataId(27), read, 
				XEMapId(190),
				ValueMap { 
					"5", 
					"4", 
					"6", 
					"2", 
					"1", 
					"3", 
					"18", 
					"17", 
					"16", 
					"15", 
					"9", 
					"13", 
					"11", 
					"14", 
					"12", 
					"10", 
					"21", 
					"22", 
					"23", 
					"19", 
					"20", 
					"8", 
					"7", 
					"0" },
				Values { 
					"BITMAP_COMPLEX", 
					"BITMAP_COMPLEX_DENSE", 
					"BITMAP_COMPLEX_PREFETCH", 
					"BITMAP_SIMPLE", 
					"BITMAP_SIMPLE_DENSE", 
					"BITMAP_SIMPLE_LARGE", 
					"BTW_GELE", 
					"BTW_GELT", 
					"BTW_GTLE", 
					"BTW_GTLT", 
					"CMP_EQ", 
					"CMP_GE", 
					"CMP_GT", 
					"CMP_LE", 
					"CMP_LT", 
					"CMP_NE", 
					"ES", 
					"FIDO_CREATE_TXN_ID", 
					"FIDO_DROP_TXN_ID", 
					"GENERIC", 
					"IN_LIST", 
					"IS_NOT_NULL", 
					"IS_NULL", 
					"NONE" }
			] uint32 filter_type;
	[WmiDataId(28), read, 
				XEMapId(192),
				ValueMap { 
					"2", 
					"3", 
					"0", 
					"1" },
				Values { 
					"AVX2", 
					"AVX512", 
					"NOSIMD", 
					"SSE42" }
			] uint32 cpu_instruction_set_available;
	[WmiDataId(29), read, 
				XEMapId(192),
				ValueMap { 
					"2", 
					"3", 
					"0", 
					"1" },
				Values { 
					"AVX2", 
					"AVX512", 
					"NOSIMD", 
					"SSE42" }
			] uint32 cpu_instruction_set_used;
	[WmiDataId(30), read] sint8  is_filter_on_compressed_data_used;
	[WmiDataId(31), read, 
				XEMapId(191),
				ValueMap { 
					"3", 
					"1", 
					"6", 
					"5", 
					"10", 
					"4", 
					"9", 
					"8", 
					"11", 
					"7", 
					"0", 
					"12", 
					"2" },
				Values { 
					"EQ", 
					"FALSE", 
					"GT", 
					"LT", 
					"LTGT", 
					"NE", 
					"NEGT", 
					"NELT", 
					"NELTGT", 
					"NENE", 
					"NONE", 
					"RAWBITMAP", 
					"TRUE" }
			] uint32 filter_on_compressed_data_type;
	[WmiDataId(32), read] sint8  is_column_output;
};
		
[dynamic: ToInstance, Description("Occurs when column segment scan starts."): Amended,
    Guid("{0f7beae2-32fe-4e34-a3bb-be27252b62bd}"), locale("MS\\0x409"),
    DisplayName("query_execution_column_store_segment_scan_started"): Amended]
class XeSqlPkg_query_execution_column_store_segment_scan_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_execution_column_store_segment_scan_started: XeSqlPkg_query_execution_column_store_segment_scan_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 thread_id;
	[WmiDataId(6), read] sint32 node_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] sint32 rowset_column_id;
	[WmiDataId(9), read, 
				XEMapId(187),
				ValueMap { 
					"104", 
					"34", 
					"50", 
					"35", 
					"250", 
					"40", 
					"42", 
					"43", 
					"0", 
					"52", 
					"56", 
					"127", 
					"60", 
					"31", 
					"59", 
					"62", 
					"58", 
					"122", 
					"173", 
					"61", 
					"106", 
					"36", 
					"108", 
					"175", 
					"98", 
					"239", 
					"1", 
					"243", 
					"41", 
					"189", 
					"240", 
					"48", 
					"165", 
					"167", 
					"231", 
					"99", 
					"241", 
					"242" },
				Values { 
					"XE_XVT_BIT", 
					"XE_XVT_BLOB", 
					"XE_XVT_BOOL", 
					"XE_XVT_CLOB", 
					"XE_XVT_CURSOR", 
					"XE_XVT_DATE", 
					"XE_XVT_DATETIME2", 
					"XE_XVT_DATETIMEOFFSET", 
					"XE_XVT_EMPTY", 
					"XE_XVT_I2", 
					"XE_XVT_I4", 
					"XE_XVT_I8", 
					"XE_XVT_MONEY", 
					"XE_XVT_NULL", 
					"XE_XVT_R4", 
					"XE_XVT_R8", 
					"XE_XVT_SMALLDATE", 
					"XE_XVT_SMALLMONEY", 
					"XE_XVT_SSBYTES", 
					"XE_XVT_SSDATE", 
					"XE_XVT_SSDECIMAL", 
					"XE_XVT_SSGUID", 
					"XE_XVT_SSNUMERIC", 
					"XE_XVT_SSSTR", 
					"XE_XVT_SSVARIANT", 
					"XE_XVT_SSWSTR", 
					"XE_XVT_TABLE", 
					"XE_XVT_TABLETYPE", 
					"XE_XVT_TIME", 
					"XE_XVT_TIMESTAMP", 
					"XE_XVT_UDT", 
					"XE_XVT_UI1", 
					"XE_XVT_VARBYTES", 
					"XE_XVT_VARSTR", 
					"XE_XVT_VARWSTR", 
					"XE_XVT_WLOB", 
					"XE_XVT_XML", 
					"XE_XVT_XMLNODE" }
			] uint32 column_sql_data_type;
	[WmiDataId(10), read, 
				XEMapId(189),
				ValueMap { 
					"7", 
					"1", 
					"2", 
					"3", 
					"5", 
					"4", 
					"0", 
					"8", 
					"6" },
				Values { 
					"BYTES8", 
					"DATETIMEOFFSET_GREATER_THAN_64_BITS", 
					"DECIMAL", 
					"DECIMAL_GREATER_THAN_64_BITS", 
					"DOUBLE", 
					"FLOAT", 
					"INT", 
					"LOB", 
					"STRING" }
			] uint32 column_compressed_data_type;
	[WmiDataId(11), read] sint8  is_csi_locator_column;
	[WmiDataId(12), read] sint8  is_physical_locator_column;
	[WmiDataId(13), read] sint8  is_generation_column;
	[WmiDataId(14), read, 
				XEMapId(188),
				ValueMap { 
					"3", 
					"4", 
					"5", 
					"6", 
					"0", 
					"8", 
					"7", 
					"2", 
					"1" },
				Values { 
					"HASH_PRIMARY_32_SECONDARY_32", 
					"HASH_PRIMARY_32_SECONDARY_64", 
					"HASH_PRIMARY_64_SECONDARY_32", 
					"HASH_PRIMARY_64_SECONDARY_64", 
					"NONE", 
					"STRING_HASH", 
					"STRING_VALUE", 
					"VALUE", 
					"VALUE_FAST" }
			] uint32 encoding_type;
	[WmiDataId(15), read] sint32 bit_packing;
	[WmiDataId(16), read] sint8  has_verification;
	[WmiDataId(17), read] sint8  is_nullable;
	[WmiDataId(18), read] sint8  id_deep_data_possible;
	[WmiDataId(19), read] sint64 min_data_id;
	[WmiDataId(20), read] sint64 base_id;
	[WmiDataId(21), read] real64 magnitude;
	[WmiDataId(22), read] sint64 null_value;
	[WmiDataId(23), read] sint32 secondary_base_id;
	[WmiDataId(24), read] uint32 primary_dictionary_value_count;
	[WmiDataId(25), read] uint32 secondary_dictionary_value_count;
	[WmiDataId(26), read] sint64 metadata_min_data_id;
	[WmiDataId(27), read] sint64 metadata_max_data_id;
	[WmiDataId(28), read, 
				XEMapId(190),
				ValueMap { 
					"5", 
					"4", 
					"6", 
					"2", 
					"1", 
					"3", 
					"18", 
					"17", 
					"16", 
					"15", 
					"9", 
					"13", 
					"11", 
					"14", 
					"12", 
					"10", 
					"21", 
					"22", 
					"23", 
					"19", 
					"20", 
					"8", 
					"7", 
					"0" },
				Values { 
					"BITMAP_COMPLEX", 
					"BITMAP_COMPLEX_DENSE", 
					"BITMAP_COMPLEX_PREFETCH", 
					"BITMAP_SIMPLE", 
					"BITMAP_SIMPLE_DENSE", 
					"BITMAP_SIMPLE_LARGE", 
					"BTW_GELE", 
					"BTW_GELT", 
					"BTW_GTLE", 
					"BTW_GTLT", 
					"CMP_EQ", 
					"CMP_GE", 
					"CMP_GT", 
					"CMP_LE", 
					"CMP_LT", 
					"CMP_NE", 
					"ES", 
					"FIDO_CREATE_TXN_ID", 
					"FIDO_DROP_TXN_ID", 
					"GENERIC", 
					"IN_LIST", 
					"IS_NOT_NULL", 
					"IS_NULL", 
					"NONE" }
			] uint32 filter_type;
	[WmiDataId(29), read, 
				XEMapId(192),
				ValueMap { 
					"2", 
					"3", 
					"0", 
					"1" },
				Values { 
					"AVX2", 
					"AVX512", 
					"NOSIMD", 
					"SSE42" }
			] uint32 cpu_instruction_set_available;
	[WmiDataId(30), read, 
				XEMapId(192),
				ValueMap { 
					"2", 
					"3", 
					"0", 
					"1" },
				Values { 
					"AVX2", 
					"AVX512", 
					"NOSIMD", 
					"SSE42" }
			] uint32 cpu_instruction_set_used;
	[WmiDataId(31), read] sint8  is_filter_on_compressed_data_used;
	[WmiDataId(32), read, 
				XEMapId(191),
				ValueMap { 
					"3", 
					"1", 
					"6", 
					"5", 
					"10", 
					"4", 
					"9", 
					"8", 
					"11", 
					"7", 
					"0", 
					"12", 
					"2" },
				Values { 
					"EQ", 
					"FALSE", 
					"GT", 
					"LT", 
					"LTGT", 
					"NE", 
					"NEGT", 
					"NELT", 
					"NELTGT", 
					"NENE", 
					"NONE", 
					"RAWBITMAP", 
					"TRUE" }
			] uint32 filter_on_compressed_data_type;
	[WmiDataId(33), read] sint8  is_column_output;
};
		
[dynamic: ToInstance, Description("Occurs when row bucket processor finishes column store segment scan."): Amended,
    Guid("{d21958f1-08c5-41a4-b76e-47d5f1d2c535}"), locale("MS\\0x409"),
    DisplayName("query_execution_column_store_segment_scan_finished"): Amended]
class XeSqlPkg_query_execution_column_store_segment_scan_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_column_store_segment_scan_finished: XeSqlPkg_query_execution_column_store_segment_scan_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 thread_id;
	[WmiDataId(6), read] sint32 node_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] sint32 rowset_column_id;
	[WmiDataId(9), read] sint64 pure_row_buckets_number;
	[WmiDataId(10), read] sint64 impure_row_buckets_number;
	[WmiDataId(11), read] sint64 input_rows_number;
	[WmiDataId(12), read] sint64 output_rows_number;
};
		
[dynamic: ToInstance, Description("Occurs when row bucket processor finishes column store row group scan."): Amended,
    Guid("{40b21e6f-b58c-4821-9131-f5e6ebe6b11c}"), locale("MS\\0x409"),
    DisplayName("query_execution_column_store_rowgroup_scan_finished"): Amended]
class XeSqlPkg_query_execution_column_store_rowgroup_scan_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_column_store_rowgroup_scan_finished: XeSqlPkg_query_execution_column_store_rowgroup_scan_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 thread_id;
	[WmiDataId(6), read] sint32 node_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] uint64 cpu_cycles_number;
	[WmiDataId(9), read] uint64 cpu_cycles_counter0;
	[WmiDataId(10), read] uint64 cpu_cycles_counter1;
	[WmiDataId(11), read] uint64 cpu_cycles_counter2;
	[WmiDataId(12), read] uint64 cpu_cycles_counter3;
	[WmiDataId(13), read] uint64 cpu_cycles_counter4;
	[WmiDataId(14), read] uint64 cpu_cycles_counter5;
};
		
[dynamic: ToInstance, Description("No CQSCAN cache due to memory limitation."): Amended,
    Guid("{D71F7902-6A78-4fd2-94E9-33CB73D10AE6}"), locale("MS\\0x409"),
    DisplayName("query_no_cqscan_cache_due_to_memory_limitation"): Amended]
class XeSqlPkg_query_no_cqscan_cache_due_to_memory_limitation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_no_cqscan_cache_due_to_memory_limitation: XeSqlPkg_query_no_cqscan_cache_due_to_memory_limitation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 cache_threshold_kb;
	[WmiDataId(6), read] uint64 requested_memory_kb;
};
		
[dynamic: ToInstance, Description("Occurs when column store scan get one batch in batch processing."): Amended,
    Guid("{7ef7e15d-35aa-4049-b2d9-8f9925f8d88f}"), locale("MS\\0x409"),
    DisplayName("query_execution_get_batch_from_column_store"): Amended]
class XeSqlPkg_query_execution_get_batch_from_column_store: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_get_batch_from_column_store: XeSqlPkg_query_execution_get_batch_from_column_store
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 query_thread_id;
};
		
[dynamic: ToInstance, Description("Occurs when batch processing filters one batch using expression services."): Amended,
    Guid("{1e70ed15-b99b-4d49-8f78-267f7b2e1f48}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_filter"): Amended]
class XeSqlPkg_query_execution_batch_filter: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_execution_batch_filter: XeSqlPkg_query_execution_batch_filter
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 query_thread_id;
	[WmiDataId(7), read] sint32 input_rows;
	[WmiDataId(8), read] sint32 output_rows;
	[WmiDataId(9), read] sint8  is_prefiltered;
};
		
[dynamic: ToInstance, Description("Occurs when column store scan does switch partition in batch processing."): Amended,
    Guid("{6753e24d-1db0-4f37-b2c7-398db758bf90}"), locale("MS\\0x409"),
    DisplayName("query_execution_switch_partition"): Amended]
class XeSqlPkg_query_execution_switch_partition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_switch_partition: XeSqlPkg_query_execution_switch_partition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 query_thread_id;
};
		
[dynamic: ToInstance, Description("Occurs when partition elimination info is built."): Amended,
    Guid("{d1066366-778e-442f-b60f-00e0c6d6bf63}"), locale("MS\\0x409"),
    DisplayName("query_execution_print_partition_elimination_info"): Amended]
class XeSqlPkg_query_execution_print_partition_elimination_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_print_partition_elimination_info: XeSqlPkg_query_execution_print_partition_elimination_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read, StringTermination("NullTerminated")] string partition_elimination_info;
};
		
[dynamic: ToInstance, Description("Occurs multiple times during batch mode hash aggregation and reports current memory usage of the hash tables structures."): Amended,
    Guid("{DA56B7DC-616E-4999-A68F-B2EAA9684514}"), locale("MS\\0x409"),
    DisplayName("query_execution_bp_hash_agg_mem_usage_stats"): Amended]
class XeSqlPkg_query_execution_bp_hash_agg_mem_usage_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_bp_hash_agg_mem_usage_stats: XeSqlPkg_query_execution_bp_hash_agg_mem_usage_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint64 worker_id;
	[WmiDataId(7), read] sint64 partition_id;
	[WmiDataId(8), read] sint64 partition_count;
	[WmiDataId(9), read] sint64 current_repartition_pages;
	[WmiDataId(10), read] sint64 global_hash_accum_pages_size;
	[WmiDataId(11), read] sint64 global_hash_table_size;
	[WmiDataId(12), read] sint64 worker_mem_usage;
};
		
[dynamic: ToInstance, Description("Occurs when a hashed aggregation operator is pushed down to the storage engine."): Amended,
    Guid("{21F95AC5-E07F-4EDD-BD7F-786D1FC71FE9}"), locale("MS\\0x409"),
    DisplayName("query_execution_push_down_aggregate"): Amended]
class XeSqlPkg_query_execution_push_down_aggregate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_push_down_aggregate: XeSqlPkg_query_execution_push_down_aggregate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] uint32 aggregation_count;
	[WmiDataId(7), read] uint32 group_by_count;
};
		
[dynamic: ToInstance, Description("Telemetry for dynamic aggregate pushdown to scan."): Amended,
    Guid("{78144E19-4110-4375-8F75-9F69BB5B9DE2}"), locale("MS\\0x409"),
    DisplayName("query_execution_dynamic_push_down_statistics"): Amended]
class XeSqlPkg_query_execution_dynamic_push_down_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_dynamic_push_down_statistics: XeSqlPkg_query_execution_dynamic_push_down_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 thread_id;
	[WmiDataId(6), read] sint32 node_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint32 rows_pushed_down_in_thread;
	[WmiDataId(9), read] uint32 rows_not_pushed_down_due_to_pushdown_disabled;
	[WmiDataId(10), read] uint32 rows_not_pushed_down_due_to_encoding;
	[WmiDataId(11), read] uint32 rows_not_pushed_down_due_to_possible_overflow;
};
		
[dynamic: ToInstance, Description("Remote DMV stream client side open call is made"): Amended,
    Guid("{6F21AFBF-AD4E-4e17-BA4B-3401540556BE}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_open_client"): Amended]
class XeSqlPkg_remote_dmv_stream_open_client: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_open_client: XeSqlPkg_remote_dmv_stream_open_client
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream is open call is serviced"): Amended,
    Guid("{9748888C-3898-4d04-95A1-60F1DB3F6AED}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_open_server"): Amended]
class XeSqlPkg_remote_dmv_stream_open_server: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_open_server: XeSqlPkg_remote_dmv_stream_open_server
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream get_row client side call is made"): Amended,
    Guid("{2EA3354C-748D-4aec-9656-157F84994C1A}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_get_rows_client"): Amended]
class XeSqlPkg_remote_dmv_stream_get_rows_client: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_get_rows_client: XeSqlPkg_remote_dmv_stream_get_rows_client
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream get_row call is serviced"): Amended,
    Guid("{58945AC1-FDFD-4f70-BB35-9AF55E39D620}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_get_rows_server"): Amended]
class XeSqlPkg_remote_dmv_stream_get_rows_server: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_get_rows_server: XeSqlPkg_remote_dmv_stream_get_rows_server
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream release resources call is made"): Amended,
    Guid("{73648C0C-5F42-4e67-A388-51AB9041D38D}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_release_resources_client"): Amended]
class XeSqlPkg_remote_dmv_stream_release_resources_client: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_release_resources_client: XeSqlPkg_remote_dmv_stream_release_resources_client
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream release resources call is serviced"): Amended,
    Guid("{56C2FE1B-D6A7-4928-BAB5-7581872D8E1A}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_release_resources_server"): Amended]
class XeSqlPkg_remote_dmv_stream_release_resources_server: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_release_resources_server: XeSqlPkg_remote_dmv_stream_release_resources_server
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream cache entry added"): Amended,
    Guid("{8B7E7280-13AA-4eee-AA7E-6925779FBD03}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_runtime_cache_added"): Amended]
class XeSqlPkg_remote_dmv_stream_runtime_cache_added: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_runtime_cache_added: XeSqlPkg_remote_dmv_stream_runtime_cache_added
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream cache hit"): Amended,
    Guid("{A1FB33C8-2DFA-4fe0-AAC5-F1592F8D1D27}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_runtime_cache_hit"): Amended]
class XeSqlPkg_remote_dmv_stream_runtime_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_runtime_cache_hit: XeSqlPkg_remote_dmv_stream_runtime_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream cache miss"): Amended,
    Guid("{CCE05E1A-0B4D-448e-8EE3-AF98C4570D32}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_runtime_cache_miss"): Amended]
class XeSqlPkg_remote_dmv_stream_runtime_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_runtime_cache_miss: XeSqlPkg_remote_dmv_stream_runtime_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream blob fetch call is serviced"): Amended,
    Guid("{8DD88129-2377-4b20-87AD-DE217DFA1663}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_blob_fetch_server"): Amended]
class XeSqlPkg_remote_dmv_stream_blob_fetch_server: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_blob_fetch_server: XeSqlPkg_remote_dmv_stream_blob_fetch_server
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Client call is made to fetch blob data from a remote DMV stream"): Amended,
    Guid("{13885262-E93F-4640-8C22-825489ED6DDB}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_blob_fetch_client"): Amended]
class XeSqlPkg_remote_dmv_stream_blob_fetch_client: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_blob_fetch_client: XeSqlPkg_remote_dmv_stream_blob_fetch_client
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Metadata cache entry hit"): Amended,
    Guid("{b1cb28f2-1761-48d7-bcb4-97f705a2fbb2}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_hit"): Amended]
class XeSqlPkg_metadata_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_hit: XeSqlPkg_metadata_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 cache_type;
	[WmiDataId(8), read, Extension("Variant")] object key;
};
		
[dynamic: ToInstance, Description("Metadata cache entry miss"): Amended,
    Guid("{7328a411-69fd-49f4-9667-b683b03794f6}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_miss"): Amended]
class XeSqlPkg_metadata_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_miss: XeSqlPkg_metadata_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 cache_type;
};
		
[dynamic: ToInstance, Description("Event which fires when we're acquiring new messages"): Amended,
    Guid("{B71AE8B9-57CA-49D6-BB7E-0BE0662D0D22}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_get_message"): Amended]
class XeSqlPkg_hadr_transport_get_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_get_message: XeSqlPkg_hadr_transport_get_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("Event which fires when we're receiving new log block message"): Amended,
    Guid("{99193196-B0A3-47B2-A9E0-12580ACA2E6E}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_receive_log_block_message"): Amended]
class XeSqlPkg_hadr_transport_receive_log_block_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_receive_log_block_message: XeSqlPkg_hadr_transport_receive_log_block_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 start_timestamp;
	[WmiDataId(6), read] uint64 processing_time;
	[WmiDataId(7), read] uint16 mode;
	[WmiDataId(8), read] uint64 sequence_number;
	[WmiDataId(9), read] uint64 acknowledgment_number;
	[WmiDataId(10), read] uint64 log_block_id;
	[WmiDataId(11), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(12), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(13), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(14), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Event which fires when we're receiving new log block message"): Amended,
    Guid("{99193196-B0A3-47B2-A9E0-12580ACA2E6E}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_receive_log_block_message"): Amended]
class XeSqlPkg_hadr_transport_receive_log_block_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_transport_receive_log_block_message: XeSqlPkg_hadr_transport_receive_log_block_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 start_timestamp;
	[WmiDataId(6), read] uint64 processing_time;
	[WmiDataId(7), read] uint16 mode;
	[WmiDataId(8), read] uint64 sequence_number;
	[WmiDataId(9), read] uint64 acknowledgment_number;
	[WmiDataId(10), read] uint64 log_block_id;
	[WmiDataId(11), read, Pointer] object  chadr_recv_message_address;
	[WmiDataId(12), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(13), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(14), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(15), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Use this event to trace HADR transport messages throughout the system."): Amended,
    Guid("{66D52E25-D8C2-46E4-8CB3-BDEBB1329B9F}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_dump_message"): Amended]
class XeSqlPkg_hadr_transport_dump_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_dump_message: XeSqlPkg_hadr_transport_dump_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(127),
				ValueMap { 
					"2", 
					"1", 
					"0", 
					"3" },
				Values { 
					"Drop", 
					"Recv", 
					"Send", 
					"TypeCount" }
			] uint32 operation;
	[WmiDataId(6), read, 
				XEMapId(128),
				ValueMap { 
					"27", 
					"5", 
					"43", 
					"45", 
					"41", 
					"17", 
					"42", 
					"48", 
					"46", 
					"20", 
					"10", 
					"40", 
					"15", 
					"24", 
					"35", 
					"9", 
					"8", 
					"39", 
					"21", 
					"7", 
					"16", 
					"28", 
					"49", 
					"22", 
					"50", 
					"47", 
					"38", 
					"37", 
					"11", 
					"0", 
					"18", 
					"19", 
					"6", 
					"4", 
					"26", 
					"25", 
					"1", 
					"3", 
					"30", 
					"12", 
					"2", 
					"23", 
					"13", 
					"14", 
					"31", 
					"29", 
					"33", 
					"32", 
					"36", 
					"34", 
					"44" },
				Values { 
					"AckForUnsentMessage", 
					"ArriveAtCaptureApplyLayer", 
					"DeferringLogMessageToPendingList", 
					"DuplicateLogMessageReceived", 
					"DuplicatePrimaryConfigMessage", 
					"FailedPartnerCreate", 
					"FailedToProcessPrimaryConfigMsg", 
					"FileStreamDrop", 
					"InconsistentAckNo", 
					"InvalidConfigDbr", 
					"InvalidConfigStateChange", 
					"InvalidDatabaseCopyOperation", 
					"InvalidDbr", 
					"InvalidMessageFormat", 
					"InvalidMessageFormatPartner", 
					"InvalidMessageType", 
					"InvalidReplicaObject", 
					"InvalidReplicaStateForProcessingPrimaryConfigMsg", 
					"InvalidSynSeqNo", 
					"InvalidTransportObject", 
					"InvalidTransportPartnerCreate", 
					"InvalidUnmarshallCall", 
					"LogBlockSuccessfullyAddedToMap", 
					"MemoryAllocationFailure", 
					"MessageLogReasonCount", 
					"MessageTooLarge", 
					"MismatchedLocalArId", 
					"MismatchedPrimaryGeneration", 
					"MismatchedSessionId", 
					"NoReasonSpecified", 
					"NoSessionAvailable", 
					"NullSessionGuid", 
					"PingReceived", 
					"QueuedToPartner", 
					"ReplicaCannotReceiveMessages", 
					"ReplicaDestructing", 
					"ResendDueToUCSSendFailure", 
					"RoutableMessage", 
					"ScanVersionMismatch", 
					"SeqNoOutOfOrder", 
					"SuccessfullyUnmarshalled", 
					"TaskSchedulingFailure", 
					"TraceFlagRandomDrop", 
					"TraceFlagReset", 
					"UcsSendFailure", 
					"UnableToAllocate", 
					"UnableToRouteFsMsg", 
					"UnableToRouteLogMsg", 
					"UnsupportedMessageVersion", 
					"UnsupportedPartnerMsgType", 
					"VlfSuccessfullyAddedToMap" }
			] uint32 operation_reason;
	[WmiDataId(7), read] uint64 sequence_number;
	[WmiDataId(8), read] uint64 acknowledgment_number;
	[WmiDataId(9), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(11), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(12), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(13), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(14), read, Extension("Guid")] guid connection_session_id;
	[WmiDataId(15), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Use this event to help trace HADR configuration messages."): Amended,
    Guid("{9E77198D-6F7E-49CA-8F22-D48FF62FA7D5}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_dump_config_message"): Amended]
class XeSqlPkg_hadr_transport_dump_config_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_dump_config_message: XeSqlPkg_hadr_transport_dump_config_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint64 min_version;
	[WmiDataId(7), read] uint64 max_version;
	[WmiDataId(8), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Use this event to help trace HADR failure messages."): Amended,
    Guid("{D1B37D47-8613-436B-883D-50F75B01EE8D}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_dump_failure_message"): Amended]
class XeSqlPkg_hadr_transport_dump_failure_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_dump_failure_message: XeSqlPkg_hadr_transport_dump_failure_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] sint32 err_major;
	[WmiDataId(7), read] sint32 err_minor;
	[WmiDataId(8), read] sint32 err_severity;
	[WmiDataId(9), read] sint32 err_state;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Use this event to help trace HADR preconfig messages."): Amended,
    Guid("{EF0D6A96-6A78-4A03-873E-78026CCFCD3F}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_dump_preconfig_message"): Amended]
class XeSqlPkg_hadr_transport_dump_preconfig_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_dump_preconfig_message: XeSqlPkg_hadr_transport_dump_preconfig_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint64 min_version;
	[WmiDataId(7), read] uint64 max_version;
	[WmiDataId(8), read] sint64 dataloss_number;
	[WmiDataId(9), read] sint64 configuration_number;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Use this event to help trace HADR preconfig messages."): Amended,
    Guid("{EF0D6A96-6A78-4A03-873E-78026CCFCD3F}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_dump_preconfig_message"): Amended]
class XeSqlPkg_hadr_transport_dump_preconfig_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_transport_dump_preconfig_message: XeSqlPkg_hadr_transport_dump_preconfig_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint64 min_version;
	[WmiDataId(7), read] uint64 max_version;
	[WmiDataId(8), read] sint64 dataloss_number;
	[WmiDataId(9), read] sint64 configuration_number;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string server_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string endpoint;
};
		
[dynamic: ToInstance, Description("Use this event to help trace HADR preconfig messages."): Amended,
    Guid("{EF0D6A96-6A78-4A03-873E-78026CCFCD3F}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_dump_preconfig_message"): Amended]
class XeSqlPkg_hadr_transport_dump_preconfig_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class hadr_transport_dump_preconfig_message: XeSqlPkg_hadr_transport_dump_preconfig_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint64 min_version;
	[WmiDataId(7), read] uint64 max_version;
	[WmiDataId(8), read] uint64 current_version;
	[WmiDataId(9), read] sint64 dataloss_number;
	[WmiDataId(10), read] sint64 configuration_number;
	[WmiDataId(11), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string server_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string endpoint;
};
		
[dynamic: ToInstance, Description("Use this event to help trace HADR extended recovery forks messages."): Amended,
    Guid("{399626E3-5A81-48FA-84C9-EEB1A78F0D9A}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_dump_extended_recovery_forks_message"): Amended]
class XeSqlPkg_hadr_transport_dump_extended_recovery_forks_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_dump_extended_recovery_forks_message: XeSqlPkg_hadr_transport_dump_extended_recovery_forks_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint64 min_version;
	[WmiDataId(7), read] uint64 max_version;
	[WmiDataId(8), read] uint64 stack_version;
	[WmiDataId(9), read] uint32 num_forks_in_message;
	[WmiDataId(10), read] sint8  is_valid;
	[WmiDataId(11), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string stack_bottom_lsn;
};
		
[dynamic: ToInstance, Description("Use this event to trace dropped HADR transport messages throughout the system."): Amended,
    Guid("{4E608F75-2CB7-440C-BB82-B1E1142664FF}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_dump_dropped_message"): Amended]
class XeSqlPkg_hadr_transport_dump_dropped_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_dump_dropped_message: XeSqlPkg_hadr_transport_dump_dropped_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(127),
				ValueMap { 
					"2", 
					"1", 
					"0", 
					"3" },
				Values { 
					"Drop", 
					"Recv", 
					"Send", 
					"TypeCount" }
			] uint32 operation;
	[WmiDataId(6), read, 
				XEMapId(128),
				ValueMap { 
					"27", 
					"5", 
					"43", 
					"45", 
					"41", 
					"17", 
					"42", 
					"48", 
					"46", 
					"20", 
					"10", 
					"40", 
					"15", 
					"24", 
					"35", 
					"9", 
					"8", 
					"39", 
					"21", 
					"7", 
					"16", 
					"28", 
					"49", 
					"22", 
					"50", 
					"47", 
					"38", 
					"37", 
					"11", 
					"0", 
					"18", 
					"19", 
					"6", 
					"4", 
					"26", 
					"25", 
					"1", 
					"3", 
					"30", 
					"12", 
					"2", 
					"23", 
					"13", 
					"14", 
					"31", 
					"29", 
					"33", 
					"32", 
					"36", 
					"34", 
					"44" },
				Values { 
					"AckForUnsentMessage", 
					"ArriveAtCaptureApplyLayer", 
					"DeferringLogMessageToPendingList", 
					"DuplicateLogMessageReceived", 
					"DuplicatePrimaryConfigMessage", 
					"FailedPartnerCreate", 
					"FailedToProcessPrimaryConfigMsg", 
					"FileStreamDrop", 
					"InconsistentAckNo", 
					"InvalidConfigDbr", 
					"InvalidConfigStateChange", 
					"InvalidDatabaseCopyOperation", 
					"InvalidDbr", 
					"InvalidMessageFormat", 
					"InvalidMessageFormatPartner", 
					"InvalidMessageType", 
					"InvalidReplicaObject", 
					"InvalidReplicaStateForProcessingPrimaryConfigMsg", 
					"InvalidSynSeqNo", 
					"InvalidTransportObject", 
					"InvalidTransportPartnerCreate", 
					"InvalidUnmarshallCall", 
					"LogBlockSuccessfullyAddedToMap", 
					"MemoryAllocationFailure", 
					"MessageLogReasonCount", 
					"MessageTooLarge", 
					"MismatchedLocalArId", 
					"MismatchedPrimaryGeneration", 
					"MismatchedSessionId", 
					"NoReasonSpecified", 
					"NoSessionAvailable", 
					"NullSessionGuid", 
					"PingReceived", 
					"QueuedToPartner", 
					"ReplicaCannotReceiveMessages", 
					"ReplicaDestructing", 
					"ResendDueToUCSSendFailure", 
					"RoutableMessage", 
					"ScanVersionMismatch", 
					"SeqNoOutOfOrder", 
					"SuccessfullyUnmarshalled", 
					"TaskSchedulingFailure", 
					"TraceFlagRandomDrop", 
					"TraceFlagReset", 
					"UcsSendFailure", 
					"UnableToAllocate", 
					"UnableToRouteFsMsg", 
					"UnableToRouteLogMsg", 
					"UnsupportedMessageVersion", 
					"UnsupportedPartnerMsgType", 
					"VlfSuccessfullyAddedToMap" }
			] uint32 operation_reason;
	[WmiDataId(7), read] uint64 sequence_number;
	[WmiDataId(8), read] uint64 acknowledgment_number;
	[WmiDataId(9), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(11), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(12), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(13), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(14), read, Extension("Guid")] guid connection_session_id;
	[WmiDataId(15), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Event which fires when we're processing an incoming message"): Amended,
    Guid("{e5ccfb86-8cc7-412d-ae82-09a6341bf36a}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_route_message"): Amended]
class XeSqlPkg_hadr_transport_route_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_route_message: XeSqlPkg_hadr_transport_route_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("Event which fires when we're registering a database replica partner"): Amended,
    Guid("{43AB7347-B302-4650-BA9B-0B4739687B09}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_register_partner"): Amended]
class XeSqlPkg_hadr_transport_register_partner: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_register_partner: XeSqlPkg_hadr_transport_register_partner
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid partner_database_id;
};
		
[dynamic: ToInstance, Description("Event which fires when we're resetting a HADR transport replica"): Amended,
    Guid("{9F498B72-9FDA-44DA-BDE2-E7F37A81D404}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_reset"): Amended]
class XeSqlPkg_hadr_transport_replica_reset: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_reset: XeSqlPkg_hadr_transport_replica_reset
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("Event which fires when a HADR transport replica is timed out"): Amended,
    Guid("{C9492E13-3B2D-49F6-B575-BAC57CF1DC93}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_timeout"): Amended]
class XeSqlPkg_hadr_transport_replica_timeout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_timeout: XeSqlPkg_hadr_transport_replica_timeout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("This event occurs when a HADR transport session changes states."): Amended,
    Guid("{20a57777-6ae9-4cf2-871b-c3ca8564c31f}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_session_state"): Amended]
class XeSqlPkg_hadr_transport_session_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_session_state: XeSqlPkg_hadr_transport_session_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  success;
	[WmiDataId(6), read, 
				XEMapId(130),
				ValueMap { 
					"1", 
					"5", 
					"7", 
					"6", 
					"4", 
					"3", 
					"2", 
					"0" },
				Values { 
					"Configuring", 
					"Connected", 
					"Count", 
					"Destructing", 
					"Failure", 
					"FailurePendingSend", 
					"Timeout", 
					"Uninitialized" }
			] uint32 current_state;
	[WmiDataId(7), read, 
				XEMapId(130),
				ValueMap { 
					"1", 
					"5", 
					"7", 
					"6", 
					"4", 
					"3", 
					"2", 
					"0" },
				Values { 
					"Configuring", 
					"Connected", 
					"Count", 
					"Destructing", 
					"Failure", 
					"FailurePendingSend", 
					"Timeout", 
					"Uninitialized" }
			] uint32 target_state;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("This event occurs when a HADR transport session changes states."): Amended,
    Guid("{20a57777-6ae9-4cf2-871b-c3ca8564c31f}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_session_state"): Amended]
class XeSqlPkg_hadr_transport_session_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_transport_session_state: XeSqlPkg_hadr_transport_session_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  success;
	[WmiDataId(6), read, 
				XEMapId(130),
				ValueMap { 
					"1", 
					"5", 
					"7", 
					"6", 
					"4", 
					"3", 
					"2", 
					"0" },
				Values { 
					"Configuring", 
					"Connected", 
					"Count", 
					"Destructing", 
					"Failure", 
					"FailurePendingSend", 
					"Timeout", 
					"Uninitialized" }
			] uint32 current_state;
	[WmiDataId(7), read, 
				XEMapId(130),
				ValueMap { 
					"1", 
					"5", 
					"7", 
					"6", 
					"4", 
					"3", 
					"2", 
					"0" },
				Values { 
					"Configuring", 
					"Connected", 
					"Count", 
					"Destructing", 
					"Failure", 
					"FailurePendingSend", 
					"Timeout", 
					"Uninitialized" }
			] uint32 target_state;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid session_id;
};
		
[dynamic: ToInstance, Description("Indicates session state changes"): Amended,
    Guid("{e0ff8815-9ae8-4a9a-a05d-bac6a404a697}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_configuration_state"): Amended]
class XeSqlPkg_hadr_transport_configuration_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_configuration_state: XeSqlPkg_hadr_transport_configuration_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  success;
	[WmiDataId(6), read, 
				XEMapId(131),
				ValueMap { 
					"1", 
					"6", 
					"7", 
					"3", 
					"5", 
					"4", 
					"0", 
					"2", 
					"11", 
					"10", 
					"8", 
					"9" },
				Values { 
					"ConfigRequest", 
					"Configured", 
					"Failure", 
					"LastInitState", 
					"LastRecvState", 
					"ReceivedSyn", 
					"Unconfigured", 
					"WaitingSynAck", 
					"e_stateCount", 
					"e_stateRedirectSynAck", 
					"e_stateSendPreConfig", 
					"e_stateWaitingSyn" }
			] uint32 current_state;
	[WmiDataId(7), read, 
				XEMapId(131),
				ValueMap { 
					"1", 
					"6", 
					"7", 
					"3", 
					"5", 
					"4", 
					"0", 
					"2", 
					"11", 
					"10", 
					"8", 
					"9" },
				Values { 
					"ConfigRequest", 
					"Configured", 
					"Failure", 
					"LastInitState", 
					"LastRecvState", 
					"ReceivedSyn", 
					"Unconfigured", 
					"WaitingSynAck", 
					"e_stateCount", 
					"e_stateRedirectSynAck", 
					"e_stateSendPreConfig", 
					"e_stateWaitingSyn" }
			] uint32 target_state;
};
		
[dynamic: ToInstance, Description("Indicates session state changes"): Amended,
    Guid("{e0ff8815-9ae8-4a9a-a05d-bac6a404a697}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_configuration_state"): Amended]
class XeSqlPkg_hadr_transport_configuration_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_transport_configuration_state: XeSqlPkg_hadr_transport_configuration_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  success;
	[WmiDataId(6), read] sint8  registered;
	[WmiDataId(7), read, 
				XEMapId(131),
				ValueMap { 
					"1", 
					"6", 
					"7", 
					"3", 
					"5", 
					"4", 
					"0", 
					"2", 
					"11", 
					"10", 
					"8", 
					"9" },
				Values { 
					"ConfigRequest", 
					"Configured", 
					"Failure", 
					"LastInitState", 
					"LastRecvState", 
					"ReceivedSyn", 
					"Unconfigured", 
					"WaitingSynAck", 
					"e_stateCount", 
					"e_stateRedirectSynAck", 
					"e_stateSendPreConfig", 
					"e_stateWaitingSyn" }
			] uint32 current_state;
	[WmiDataId(8), read, 
				XEMapId(131),
				ValueMap { 
					"1", 
					"6", 
					"7", 
					"3", 
					"5", 
					"4", 
					"0", 
					"2", 
					"11", 
					"10", 
					"8", 
					"9" },
				Values { 
					"ConfigRequest", 
					"Configured", 
					"Failure", 
					"LastInitState", 
					"LastRecvState", 
					"ReceivedSyn", 
					"Unconfigured", 
					"WaitingSynAck", 
					"e_stateCount", 
					"e_stateRedirectSynAck", 
					"e_stateSendPreConfig", 
					"e_stateWaitingSyn" }
			] uint32 target_state;
	[WmiDataId(9), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(10), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid session_id;
};
		
[dynamic: ToInstance, Description("Reports UCS registration state changes"): Amended,
    Guid("{9351a49e-794b-4398-9db7-c71604c72f66}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_ucs_registration"): Amended]
class XeSqlPkg_hadr_transport_ucs_registration: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_ucs_registration: XeSqlPkg_hadr_transport_ucs_registration
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  registered;
	[WmiDataId(6), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(7), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid session_id;
};
		
[dynamic: ToInstance, Description("Occurs when the ucs connection id associated with the hadron transport replica is registered or changes."): Amended,
    Guid("{7078acb9-78dd-46fe-920e-c466ff1c2cd9}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_ucs_connection_info"): Amended]
class XeSqlPkg_hadr_transport_ucs_connection_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_ucs_connection_info: XeSqlPkg_hadr_transport_ucs_connection_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid ucs_connection_id;
};
		
[dynamic: ToInstance, Description("Indicates that a flow control action has occured for a particular replica."): Amended,
    Guid("{6A63DDD1-080C-41F7-9009-E354B4DD165D}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_flow_control_action"): Amended]
class XeSqlPkg_hadr_transport_flow_control_action: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_flow_control_action: XeSqlPkg_hadr_transport_flow_control_action
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(134),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"Cleared", 
					"Set" }
			] uint32 control_action;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(8), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("Indicates the moment before the loop of sending primary replica info."): Amended,
    Guid("{FF504B64-F8F0-4E22-8C8C-E7D4E0C3D9A9}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_before_sending_primary_info"): Amended]
class XeSqlPkg_hadr_transport_replica_before_sending_primary_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_before_sending_primary_info: XeSqlPkg_hadr_transport_replica_before_sending_primary_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 work_id;
};
		
[dynamic: ToInstance, Description("Indicates that the correponding work has been cancelled."): Amended,
    Guid("{03249DFA-5B1C-45F5-9858-907036AEB8C3}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_send_primary_info_cancelled"): Amended]
class XeSqlPkg_hadr_transport_replica_send_primary_info_cancelled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_send_primary_info_cancelled: XeSqlPkg_hadr_transport_replica_send_primary_info_cancelled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 work_id;
};
		
[dynamic: ToInstance, Description("Fabric DBR Subscriber is about to send build replica message to secondary replica."): Amended,
    Guid("{fdc38bed-3db4-40c2-949f-9c5137f64560}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_before_sending_build_replica_message_on_primary"): Amended]
class XeSqlPkg_hadr_transport_replica_before_sending_build_replica_message_on_primary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_before_sending_build_replica_message_on_primary: XeSqlPkg_hadr_transport_replica_before_sending_build_replica_message_on_primary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid partition_id;
	[WmiDataId(6), read, Extension("Guid")] guid replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid db_guid;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string db_name;
};
		
[dynamic: ToInstance, Description("Fabric DBR Subscriber sent build replica message and waiting for response from the secondary replica."): Amended,
    Guid("{a5f703ff-dced-4162-bd44-45f5c2dab9c2}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_after_sending_build_replica_message_on_primary"): Amended]
class XeSqlPkg_hadr_transport_replica_after_sending_build_replica_message_on_primary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_after_sending_build_replica_message_on_primary: XeSqlPkg_hadr_transport_replica_after_sending_build_replica_message_on_primary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid partition_id;
	[WmiDataId(6), read, Extension("Guid")] guid replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid db_guid;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string db_name;
};
		
[dynamic: ToInstance, Description("Fabric DBR Subscriber on primary is about to process build replica message response from secondary replica."): Amended,
    Guid("{0b8a83c9-bd6a-4860-a8bd-9f3b8fcdc764}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_before_build_replica_response_processing_on_primary"): Amended]
class XeSqlPkg_hadr_transport_replica_before_build_replica_response_processing_on_primary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_before_build_replica_response_processing_on_primary: XeSqlPkg_hadr_transport_replica_before_build_replica_response_processing_on_primary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 result_of_build_replica_operation;
	[WmiDataId(6), read, Extension("Guid")] guid partition_id;
	[WmiDataId(7), read, Extension("Guid")] guid replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid db_guid;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string db_name;
};
		
[dynamic: ToInstance, Description("Indicates that a flow control action has occured for a particular dbr/replica."): Amended,
    Guid("{7E82C899-BADA-4F90-A61F-8595636ADF08}"), locale("MS\\0x409"),
    DisplayName("hadr_database_flow_control_action"): Amended]
class XeSqlPkg_hadr_database_flow_control_action: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_database_flow_control_action: XeSqlPkg_hadr_database_flow_control_action
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(134),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"Cleared", 
					"Set" }
			] uint32 control_action;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(8), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Indicates log block group commit processing duration."): Amended,
    Guid("{3AA433C6-FBA0-455C-8914-54FDCC582539}"), locale("MS\\0x409"),
    DisplayName("hadr_log_block_group_commit"): Amended]
class XeSqlPkg_hadr_log_block_group_commit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_log_block_group_commit: XeSqlPkg_hadr_log_block_group_commit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 processing_time;
	[WmiDataId(6), read] uint64 throttle_start_timestamp;
	[WmiDataId(7), read] uint64 start_timestamp;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint64 log_block_id;
	[WmiDataId(10), read, 
				XEMapId(152),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy;
};
		
[dynamic: ToInstance, Description("Indicates log block compression processing duration."): Amended,
    Guid("{5EFB8CE9-E0B1-402D-9676-226A70BB01B6}"), locale("MS\\0x409"),
    DisplayName("hadr_log_block_compression"): Amended]
class XeSqlPkg_hadr_log_block_compression: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_log_block_compression: XeSqlPkg_hadr_log_block_compression
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 start_timestamp;
	[WmiDataId(6), read] uint64 processing_time;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint64 log_block_id;
	[WmiDataId(9), read] sint8  is_compressed;
	[WmiDataId(10), read] uint32 compressed_size;
	[WmiDataId(11), read] uint32 uncompressed_size;
	[WmiDataId(12), read] uint64 compression_cache_insertion_time;
	[WmiDataId(13), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description("Indicates log block decompression processing duration."): Amended,
    Guid("{46C43284-1235-405F-A0CB-7F1E2D79DCF9}"), locale("MS\\0x409"),
    DisplayName("hadr_log_block_decompression"): Amended]
class XeSqlPkg_hadr_log_block_decompression: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_log_block_decompression: XeSqlPkg_hadr_log_block_decompression
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 start_timestamp;
	[WmiDataId(6), read] uint64 processing_time;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint64 log_block_id;
	[WmiDataId(9), read] sint8  is_compressed;
	[WmiDataId(10), read] uint32 compressed_size;
	[WmiDataId(11), read] uint32 uncompressed_size;
	[WmiDataId(12), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description("Indicates db_manager state changes."): Amended,
    Guid("{40E2DF52-E197-4182-8E41-836AAFD66E05}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_state"): Amended]
class XeSqlPkg_hadr_db_manager_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_state: XeSqlPkg_hadr_db_manager_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  success;
	[WmiDataId(6), read, 
				XEMapId(140),
				ValueMap { 
					"0", 
					"6", 
					"3", 
					"1", 
					"5", 
					"4", 
					"2" },
				Values { 
					"Created", 
					"Invalid", 
					"Started", 
					"Starting", 
					"Stopped", 
					"Stopping", 
					"Undo" }
			] uint32 current_state;
	[WmiDataId(7), read, 
				XEMapId(140),
				ValueMap { 
					"0", 
					"6", 
					"3", 
					"1", 
					"5", 
					"4", 
					"2" },
				Values { 
					"Created", 
					"Invalid", 
					"Started", 
					"Starting", 
					"Stopped", 
					"Stopping", 
					"Undo" }
			] uint32 proposed_state;
	[WmiDataId(8), read, 
				XEMapId(140),
				ValueMap { 
					"0", 
					"6", 
					"3", 
					"1", 
					"5", 
					"4", 
					"2" },
				Values { 
					"Created", 
					"Invalid", 
					"Started", 
					"Starting", 
					"Stopped", 
					"Stopping", 
					"Undo" }
			] uint32 target_state;
	[WmiDataId(9), read, 
				XEMapId(141),
				ValueMap { 
					"0", 
					"5", 
					"4", 
					"6", 
					"2", 
					"1", 
					"3" },
				Values { 
					"DbMgr", 
					"Filestream", 
					"FullText", 
					"Invalid", 
					"Redo", 
					"Scans", 
					"Users" }
			] uint32 dbmgr_object_type;
	[WmiDataId(10), read, Extension("Guid")] guid group_id;
	[WmiDataId(11), read, Extension("Guid")] guid replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Indicates db_manager api calls."): Amended,
    Guid("{8E165799-A703-4e95-A66D-9E1B05ADD38E}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_api"): Amended]
class XeSqlPkg_hadr_db_manager_api: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_api: XeSqlPkg_hadr_db_manager_api
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(144),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"Entry", 
					"Exit" }
			] uint32 entry_exit;
	[WmiDataId(7), read, Extension("Guid")] guid group_id;
	[WmiDataId(8), read, Extension("Guid")] guid replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(10), read, StringTermination("NullTerminated")] string api_function;
};
		
[dynamic: ToInstance, Description("LSN Sync message."): Amended,
    Guid("{7F013499-A0D4-47cf-9870-EE40B5EB4D24}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_lsn_sync_msg"): Amended]
class XeSqlPkg_hadr_db_manager_lsn_sync_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_lsn_sync_msg: XeSqlPkg_hadr_db_manager_lsn_sync_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string flushed_log;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string end_of_log;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string redo_point;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string log_truncation_block;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string hadr_truncation_block;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string recovery_point;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string sync_hardened_point;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string minimum_skip_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string hardened_skip_lsn;
};
		
[dynamic: ToInstance, Description("Establish DB message."): Amended,
    Guid("{3CACAB94-DCA2-4339-959E-ABA20799A2B4}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_establish_db_msg"): Amended]
class XeSqlPkg_hadr_db_manager_establish_db_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_establish_db_msg: XeSqlPkg_hadr_db_manager_establish_db_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(142),
				ValueMap { 
					"5", 
					"3", 
					"4", 
					"1", 
					"0", 
					"2" },
				Values { 
					"COUNT", 
					"FORWARDING_SECONDARY", 
					"INVALID", 
					"PRIMARY", 
					"RESOLVING", 
					"SECONDARY" }
			] uint32 msg_source;
	[WmiDataId(6), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string flushed_log;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string end_of_log;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string recovery_point;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string log_truncation_block;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string hadr_truncation_block;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string log_backup_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string minimum_skip_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string redo_point;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string redo_time;
};
		
[dynamic: ToInstance, Description("DBReplicaStatusChange message."): Amended,
    Guid("{D2185D4C-BEC7-4E9E-9CCD-E8D643126C19}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_status_change"): Amended]
class XeSqlPkg_hadr_db_manager_status_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_status_change: XeSqlPkg_hadr_db_manager_status_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(132),
				ValueMap { 
					"0", 
					"1", 
					"7", 
					"2", 
					"4", 
					"3", 
					"5", 
					"6" },
				Values { 
					"Remove_for_Disjoin", 
					"Remove_for_JoinError", 
					"Resume_Replica", 
					"Start_Replica", 
					"Start_Scan", 
					"Stop_Replica", 
					"Stop_Scan", 
					"Suspend_Replica" }
			] uint32 reason;
	[WmiDataId(6), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Redo processing on secondary."): Amended,
    Guid("{6A38107C-BDE7-4fbd-BE73-DAFB83452CDB}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_redo"): Amended]
class XeSqlPkg_hadr_db_manager_redo: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_redo: XeSqlPkg_hadr_db_manager_redo
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 flushed_log;
	[WmiDataId(7), read] uint64 end_of_log;
	[WmiDataId(8), read] uint64 log_truncation_block;
	[WmiDataId(9), read] uint64 hadr_truncation_block;
	[WmiDataId(10), read] uint64 redo_point;
	[WmiDataId(11), read, Extension("Guid")] guid group_id;
	[WmiDataId(12), read, Extension("Guid")] guid replica_id;
	[WmiDataId(13), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Undo processing on secondary."): Amended,
    Guid("{FC1E0CD0-B22B-413e-9B0E-F429AD709A73}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_undo"): Amended]
class XeSqlPkg_hadr_db_manager_undo: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_undo: XeSqlPkg_hadr_db_manager_undo
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 flushed_log;
	[WmiDataId(7), read] uint64 end_of_log;
	[WmiDataId(8), read] uint64 log_truncation_block;
	[WmiDataId(9), read] uint64 hadr_truncation_block;
	[WmiDataId(10), read] uint64 recovery_point;
	[WmiDataId(11), read] uint64 undo_scan;
	[WmiDataId(12), read] uint64 undo_safe_block;
	[WmiDataId(13), read] uint64 undo_pageid;
	[WmiDataId(14), read, 
				XEMapId(148),
				ValueMap { 
					"0", 
					"3", 
					"1", 
					"2" },
				Values { 
					"Entry", 
					"Exit", 
					"Scanning", 
					"Snip_Log" }
			] uint32 undo_phase;
	[WmiDataId(15), read, Extension("Guid")] guid group_id;
	[WmiDataId(16), read, Extension("Guid")] guid replica_id;
	[WmiDataId(17), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Queue restart hadron datadabase."): Amended,
    Guid("{0E32F844-4211-4d2c-8FA8-77A4B599A0EB}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_db_queue_restart"): Amended]
class XeSqlPkg_hadr_db_manager_db_queue_restart: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_db_queue_restart: XeSqlPkg_hadr_db_manager_db_queue_restart
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 flushed_log;
	[WmiDataId(7), read] uint64 end_of_log;
	[WmiDataId(8), read, 
				XEMapId(143),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 clean_shutdown;
	[WmiDataId(9), read, 
				XEMapId(145),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"Disable", 
					"Enable", 
					"Suspend" }
			] uint32 log_accept;
	[WmiDataId(10), read, Extension("Guid")] guid group_id;
	[WmiDataId(11), read, Extension("Guid")] guid replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Start hadron database."): Amended,
    Guid("{CB74D4F8-AE16-428e-A991-6F5177A80797}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_db_startdb"): Amended]
class XeSqlPkg_hadr_db_manager_db_startdb: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_db_startdb: XeSqlPkg_hadr_db_manager_db_startdb
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(145),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"Disable", 
					"Enable", 
					"Suspend" }
			] uint32 log_accept;
	[WmiDataId(7), read, Extension("Guid")] guid group_id;
	[WmiDataId(8), read, Extension("Guid")] guid replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Shutdown hadron datadabase."): Amended,
    Guid("{1C67AACE-C013-4e22-9C41-DCB71E431B88}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_db_shutdown"): Amended]
class XeSqlPkg_hadr_db_manager_db_shutdown: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_db_shutdown: XeSqlPkg_hadr_db_manager_db_shutdown
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 flushed_log;
	[WmiDataId(7), read] uint64 end_of_log;
	[WmiDataId(8), read, 
				XEMapId(143),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 clean_shutdown;
	[WmiDataId(9), read, Extension("Guid")] guid group_id;
	[WmiDataId(10), read, Extension("Guid")] guid replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Change user status for a hadron controlled database."): Amended,
    Guid("{0DAA8493-6904-4ae3-93AC-A4DAFAFD793D}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_user_control"): Amended]
class XeSqlPkg_hadr_db_manager_user_control: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_user_control: XeSqlPkg_hadr_db_manager_user_control
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(145),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"Disable", 
					"Enable", 
					"Suspend" }
			] uint32 users_status;
	[WmiDataId(7), read, 
				XEMapId(143),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 shutdown_type;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Change log scan status for a hadron controlled database."): Amended,
    Guid("{97A9CD48-8F3B-4430-8D77-BF043C329122}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_redo_control"): Amended]
class XeSqlPkg_hadr_db_manager_redo_control: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_redo_control: XeSqlPkg_hadr_db_manager_redo_control
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(145),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"Disable", 
					"Enable", 
					"Suspend" }
			] uint32 redo_status;
	[WmiDataId(7), read, 
				XEMapId(143),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 shutdown_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string stopat;
	[WmiDataId(9), read, Extension("Guid")] guid group_id;
	[WmiDataId(10), read, Extension("Guid")] guid replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Change log scan status for a hadron controlled database."): Amended,
    Guid("{D72645CD-A9EC-448e-82F9-835D66575378}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_scan_control"): Amended]
class XeSqlPkg_hadr_db_manager_scan_control: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_scan_control: XeSqlPkg_hadr_db_manager_scan_control
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(145),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"Disable", 
					"Enable", 
					"Suspend" }
			] uint32 scan_status;
	[WmiDataId(7), read, 
				XEMapId(143),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 shutdown_type;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Change suspend/resume status for a hadron controlled database."): Amended,
    Guid("{1114F3DB-74D9-4135-9B8F-DAB68E0AD61F}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_suspend_resume"): Amended]
class XeSqlPkg_hadr_db_manager_suspend_resume: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_suspend_resume: XeSqlPkg_hadr_db_manager_suspend_resume
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(146),
				ValueMap { 
					"1", 
					"0", 
					"2", 
					"3" },
				Values { 
					"RESUMED", 
					"SUSPEND_NULL", 
					"SUSPENDED", 
					"SUSPENDED_INVALID" }
			] uint32 suspend_status;
	[WmiDataId(7), read, 
				XEMapId(147),
				ValueMap { 
					"4", 
					"3", 
					"9", 
					"-1", 
					"1", 
					"2", 
					"5", 
					"7", 
					"6", 
					"0", 
					"8" },
				Values { 
					"APPLY", 
					"CAPTURE", 
					"Count", 
					"NULL", 
					"PARTNER", 
					"REDO", 
					"RESTART", 
					"REVALIDATION", 
					"UNDO", 
					"USER", 
					"XRF_UPDATE" }
			] uint32 suspend_source;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Restart hadron database."): Amended,
    Guid("{D2A159B7-0673-4c47-B59F-F8BFFE6A6475}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_db_restart"): Amended]
class XeSqlPkg_hadr_db_manager_db_restart: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_db_restart: XeSqlPkg_hadr_db_manager_db_restart
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 flushed_log;
	[WmiDataId(7), read] uint64 end_of_log;
	[WmiDataId(8), read, 
				XEMapId(143),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 clean_shutdown;
	[WmiDataId(9), read, Extension("Guid")] guid group_id;
	[WmiDataId(10), read, Extension("Guid")] guid replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Before scheduling a task into worker pool."): Amended,
    Guid("{73a8224d-95ac-4194-aaff-c1e5e390cb40}"), locale("MS\\0x409"),
    DisplayName("hadr_worker_pool_before_schedule_task"): Amended]
class XeSqlPkg_hadr_worker_pool_before_schedule_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_worker_pool_before_schedule_task: XeSqlPkg_hadr_worker_pool_before_schedule_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  task_id;
};
		
[dynamic: ToInstance, Description("HADRON worker pool thread actions."): Amended,
    Guid("{82D56312-9EE3-4829-89F2-99AE924FE224}"), locale("MS\\0x409"),
    DisplayName("hadr_worker_pool_thread"): Amended]
class XeSqlPkg_hadr_worker_pool_thread: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_worker_pool_thread: XeSqlPkg_hadr_worker_pool_thread
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint32 status;
	[WmiDataId(7), read, 
				XEMapId(151),
				ValueMap { 
					"7", 
					"8", 
					"0", 
					"6", 
					"1", 
					"4", 
					"5", 
					"3", 
					"2" },
				Values { 
					"Aborted", 
					"Completed", 
					"Created", 
					"Executing", 
					"Initialized", 
					"OnDispatcherQueue", 
					"OnRedundantQueue", 
					"OnResourceQueue", 
					"OnTimerQueue" }
			] uint32 action;
};
		
[dynamic: ToInstance, Description("HADRON worker pool task actions."): Amended,
    Guid("{8FAA8A13-B7AD-494e-A4BC-944C7C743019}"), locale("MS\\0x409"),
    DisplayName("hadr_worker_pool_task"): Amended]
class XeSqlPkg_hadr_worker_pool_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_worker_pool_task: XeSqlPkg_hadr_worker_pool_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  task_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint32 status;
	[WmiDataId(8), read] uint32 wait_time;
	[WmiDataId(9), read, 
				XEMapId(150),
				ValueMap { 
					"21", 
					"20", 
					"8", 
					"10", 
					"37", 
					"47", 
					"26", 
					"25", 
					"31", 
					"29", 
					"28", 
					"38", 
					"42", 
					"45", 
					"35", 
					"43", 
					"44", 
					"27", 
					"34", 
					"46", 
					"36", 
					"49", 
					"48", 
					"40", 
					"32", 
					"41", 
					"33", 
					"30", 
					"39", 
					"0", 
					"4", 
					"3", 
					"17", 
					"19", 
					"2", 
					"13", 
					"12", 
					"7", 
					"14", 
					"24", 
					"18", 
					"15", 
					"50", 
					"16", 
					"22", 
					"11", 
					"23", 
					"6", 
					"5", 
					"1", 
					"9" },
				Values { 
					"AgConfigProcess", 
					"AgConfigResent", 
					"ArMgrDbOp", 
					"ArMgrDbSerializedAccess", 
					"AsyncOpAbort", 
					"AsyncOpAddTempdbRemoteFiles", 
					"AsyncOpAdminNotifyWorker", 
					"AsyncOpAdminSimpleWorker", 
					"AsyncOpBuildSecondary", 
					"AsyncOpChangeRole", 
					"AsyncOpClose", 
					"AsyncOpDetectQuorumLoss", 
					"AsyncOpForwarderJoin", 
					"AsyncOpGenericSubscriberWork", 
					"AsyncOpGetBeginEndLsns", 
					"AsyncOpLogicalReseeding", 
					"AsyncOpOnDataLoss", 
					"AsyncOpOpen", 
					"AsyncOpQuorumCatchUp", 
					"AsyncOpRbIoRoleChangeCompletion", 
					"AsyncOpRemoveReplica", 
					"AsyncOpRespondRestoreSeedingReplica", 
					"AsyncOpRestoreSeedingReplica", 
					"AsyncOpRoleChangeNotification", 
					"AsyncOpStartStreamingRestore", 
					"AsyncOpSyncStateReachedNotification", 
					"AsyncOpUpdateConfiguration", 
					"AsyncOpUpdateEpoch", 
					"AsyncOpUpdateLayeredAgConfig", 
					"Base", 
					"BuildMsgAndSend", 
					"Conversation", 
					"DbCopyMsg", 
					"DbLogScanStateChange", 
					"DbMsg", 
					"DbRedo", 
					"DbRestart", 
					"EndpointChange", 
					"EvalReadonlyRoutingInfo", 
					"FirstFabricTaskType", 
					"LogGovernorTask", 
					"LogPoolTrunc", 
					"MaxTask", 
					"NewLogReady", 
					"RequestPageFromPrimary", 
					"SyncProgress", 
					"Test", 
					"Timer", 
					"TransportNotification", 
					"TransportRouting", 
					"TransportVersioned" }
			] uint32 task_type;
	[WmiDataId(10), read, 
				XEMapId(151),
				ValueMap { 
					"7", 
					"8", 
					"0", 
					"6", 
					"1", 
					"4", 
					"5", 
					"3", 
					"2" },
				Values { 
					"Aborted", 
					"Completed", 
					"Created", 
					"Executing", 
					"Initialized", 
					"OnDispatcherQueue", 
					"OnRedundantQueue", 
					"OnResourceQueue", 
					"OnTimerQueue" }
			] uint32 task_state;
};
		
[dynamic: ToInstance, Description("HADRON thread pool worker thread start actions."): Amended,
    Guid("{3df30504-9242-49d4-ad38-0d7c729436a3}"), locale("MS\\0x409"),
    DisplayName("hadr_thread_pool_worker_start"): Amended]
class XeSqlPkg_hadr_thread_pool_worker_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_thread_pool_worker_start: XeSqlPkg_hadr_thread_pool_worker_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 worker_limit;
	[WmiDataId(6), read] uint32 idle_workers;
	[WmiDataId(7), read] uint32 active_workers;
	[WmiDataId(8), read] sint8  worker_start_success;
};
		
[dynamic: ToInstance, Description("Page Request/Response between servers."): Amended,
    Guid("{DF3348E0-CB85-4c1b-8AB9-FB6ABD9B2589}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_page_request"): Amended]
class XeSqlPkg_hadr_db_manager_page_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_page_request: XeSqlPkg_hadr_db_manager_page_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint32 status;
	[WmiDataId(9), read] uint32 read_ahead_count;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string minimum_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string page_lsn;
};
		
[dynamic: ToInstance, Description("Update the hardened LSN for a HADR database."): Amended,
    Guid("{1A81638F-8C50-4335-B45F-930276CC96FF}"), locale("MS\\0x409"),
    DisplayName("hadr_db_commit_mgr_update_harden"): Amended]
class XeSqlPkg_hadr_db_commit_mgr_update_harden: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_commit_mgr_update_harden: XeSqlPkg_hadr_db_commit_mgr_update_harden
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 processing_time;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read, 
				XEMapId(152),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy;
	[WmiDataId(8), read] uint32 delay;
	[WmiDataId(9), read] uint64 prior_hardened_log_block;
	[WmiDataId(10), read] uint64 new_hardened_log_block;
	[WmiDataId(11), read, 
				XEMapId(153),
				ValueMap { 
					"3", 
					"2", 
					"0", 
					"1" },
				Values { 
					"MaxHardenStatus", 
					"MinSyncCommitFailure", 
					"NoCommitFailure", 
					"QuorumCommitFailure" }
			] uint32 harden_status;
	[WmiDataId(12), read, Extension("Guid")] guid group_id;
	[WmiDataId(13), read, Extension("Guid")] guid replica_id;
	[WmiDataId(14), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Transaction Commit harden still waiting for Hadron Commit management."): Amended,
    Guid("{E1F05761-6181-4fef-974D-3F606CD6EC82}"), locale("MS\\0x409"),
    DisplayName("hadr_db_commit_mgr_harden_still_waiting"): Amended]
class XeSqlPkg_hadr_db_commit_mgr_harden_still_waiting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_commit_mgr_harden_still_waiting: XeSqlPkg_hadr_db_commit_mgr_harden_still_waiting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 wait_time;
	[WmiDataId(7), read] uint64 wait_log_block;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Transaction Commit harden result from Hadron Commit management."): Amended,
    Guid("{E34A2983-49EF-4ef8-B38C-392D7767F58F}"), locale("MS\\0x409"),
    DisplayName("hadr_db_commit_mgr_harden"): Amended]
class XeSqlPkg_hadr_db_commit_mgr_harden: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_commit_mgr_harden: XeSqlPkg_hadr_db_commit_mgr_harden
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(152),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy;
	[WmiDataId(7), read] uint32 delay;
	[WmiDataId(8), read] uint64 time_to_commit;
	[WmiDataId(9), read] uint32 result;
	[WmiDataId(10), read] uint32 valid_lease;
	[WmiDataId(11), read] uint64 wait_log_block;
	[WmiDataId(12), read] uint64 hardened_log_block;
	[WmiDataId(13), read, Extension("Guid")] guid group_id;
	[WmiDataId(14), read, Extension("Guid")] guid replica_id;
	[WmiDataId(15), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Transaction Commit manager policy update."): Amended,
    Guid("{5D0B76DC-D138-4818-9AEA-809AF0EB8C05}"), locale("MS\\0x409"),
    DisplayName("hadr_db_commit_mgr_set_policy"): Amended]
class XeSqlPkg_hadr_db_commit_mgr_set_policy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_commit_mgr_set_policy: XeSqlPkg_hadr_db_commit_mgr_set_policy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(152),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy;
	[WmiDataId(7), read] uint32 delay;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("HADR partner commit policy update."): Amended,
    Guid("{0504B9FF-A4FA-4193-BF93-F4EAE312B6CD}"), locale("MS\\0x409"),
    DisplayName("hadr_db_partner_set_policy"): Amended]
class XeSqlPkg_hadr_db_partner_set_policy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_partner_set_policy: XeSqlPkg_hadr_db_partner_set_policy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(152),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy;
	[WmiDataId(7), read, 
				XEMapId(152),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy_target;
	[WmiDataId(8), read] uint32 delay;
	[WmiDataId(9), read, Extension("Guid")] guid group_id;
	[WmiDataId(10), read, Extension("Guid")] guid replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("HADR partner sync state change."): Amended,
    Guid("{38625C7B-1DB9-4fb3-B637-3E5FA24FB6C3}"), locale("MS\\0x409"),
    DisplayName("hadr_db_partner_set_sync_state"): Amended]
class XeSqlPkg_hadr_db_partner_set_sync_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_partner_set_sync_state: XeSqlPkg_hadr_db_partner_set_sync_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(152),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy;
	[WmiDataId(7), read, 
				XEMapId(152),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy_target;
	[WmiDataId(8), read, 
				XEMapId(154),
				ValueMap { 
					"128", 
					"12", 
					"4", 
					"1", 
					"0", 
					"8", 
					"2" },
				Values { 
					"INVALID", 
					"LAST", 
					"LOG", 
					"NOT", 
					"NOT_JOINED", 
					"REDO", 
					"SUSPENDED" }
			] uint32 sync_state;
	[WmiDataId(9), read] uint64 sync_log_block;
	[WmiDataId(10), read, Extension("Guid")] guid group_id;
	[WmiDataId(11), read, Extension("Guid")] guid replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Test point for failure injection in Hadr Db Mgr."): Amended,
    Guid("{38755635-1EEC-4fa7-9BA2-B75449033691}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_test_point"): Amended]
class XeSqlPkg_hadr_db_manager_test_point: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_test_point: XeSqlPkg_hadr_db_manager_test_point
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(158),
				ValueMap { 
					"13", 
					"6", 
					"5", 
					"1", 
					"2", 
					"3", 
					"4", 
					"10", 
					"9", 
					"7", 
					"8", 
					"12", 
					"11", 
					"27", 
					"0", 
					"24", 
					"23", 
					"26", 
					"25", 
					"14", 
					"18", 
					"17", 
					"20", 
					"19", 
					"22", 
					"21", 
					"16", 
					"15" },
				Values { 
					"Test_Point_DisJoin_BackupLSNs", 
					"Test_Point_EstablishDB_Recv", 
					"Test_Point_EstablishDB_Send", 
					"Test_Point_File_Header_Update", 
					"Test_Point_File_Header_Update_FileStream", 
					"Test_Point_File_Header_Update_FullText", 
					"Test_Point_File_Header_Update_FullText_Metadata_In_Master", 
					"Test_Point_Join_Boot_Page_Update_After", 
					"Test_Point_Join_Boot_Page_Update_Before", 
					"Test_Point_Join_File_Header_Update", 
					"Test_Point_Join_File_Header_Update_FileStream", 
					"Test_Point_Join_MD_Commit_After", 
					"Test_Point_Join_MD_Commit_Before", 
					"Test_Point_Last", 
					"Test_Point_NULL", 
					"Test_Point_Persist_AG_Config_After", 
					"Test_Point_Persist_AG_Config_Before", 
					"Test_Point_Report_DbFault_After", 
					"Test_Point_Report_DbFault_Before", 
					"Test_Point_Undo_ProcessPage", 
					"Test_Point_Update_AG_DB_After", 
					"Test_Point_Update_AG_DB_Before", 
					"Test_Point_Update_AG_DB_Replica_After", 
					"Test_Point_Update_AG_DB_Replica_Before", 
					"Test_Point_Update_AG_DB_Replica_No_Commit_After", 
					"Test_Point_Update_AG_DB_Replica_No_Commit_Before", 
					"Test_Point_Update_Suspend_Resume_After", 
					"Test_Point_Update_Suspend_Resume_Before" }
			] uint32 test_point;
	[WmiDataId(6), read] uint64 test_value1;
	[WmiDataId(7), read] uint64 test_value2;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Failpoint right after acquire DB lock during stop DB"): Amended,
    Guid("{fe77a2d9-cacc-4904-88ed-096453846b2d}"), locale("MS\\0x409"),
    DisplayName("hadr_dbmgr_stopdb_before_acquire_lock_failpoint"): Amended]
class XeSqlPkg_hadr_dbmgr_stopdb_before_acquire_lock_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_dbmgr_stopdb_before_acquire_lock_failpoint: XeSqlPkg_hadr_dbmgr_stopdb_before_acquire_lock_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 ag_database_id;
};
		
[dynamic: ToInstance, Description("Test point for failure injection in Hadr Undo Mgr."): Amended,
    Guid("{1FE3D275-585D-454C-A195-9427B681C3C5}"), locale("MS\\0x409"),
    DisplayName("hadr_undo_manager_test_point"): Amended]
class XeSqlPkg_hadr_undo_manager_test_point: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_undo_manager_test_point: XeSqlPkg_hadr_undo_manager_test_point
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(159),
				ValueMap { 
					"6", 
					"5", 
					"3", 
					"9", 
					"8", 
					"1", 
					"2", 
					"4", 
					"10", 
					"0", 
					"7" },
				Values { 
					"Test_Point_After_Laying_Down_VLF_Header", 
					"Test_Point_After_Physical_File_Create", 
					"Test_Point_After_Physical_File_Grow", 
					"Test_Point_After_Recreating_Log_File", 
					"Test_Point_After_Syncing_Logs", 
					"Test_Point_After_Undo_LSN_Set", 
					"Test_Point_Before_DBInfo_Update", 
					"Test_Point_Before_Physical_File_Shrink", 
					"Test_Point_Last", 
					"Test_Point_NULL", 
					"Test_Point_Scan_Passed_Failover_LSN" }
			] uint32 test_point;
	[WmiDataId(6), read, Extension("Guid")] guid group_id;
	[WmiDataId(7), read, Extension("Guid")] guid replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Test point for failure injection in Hadr Backup On Secondary."): Amended,
    Guid("{FFC5AC26-43E5-4C18-AE11-FEDAC6183244}"), locale("MS\\0x409"),
    DisplayName("hadr_backup_on_sec_test_point"): Amended]
class XeSqlPkg_hadr_backup_on_sec_test_point: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_backup_on_sec_test_point: XeSqlPkg_hadr_backup_on_sec_test_point
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(161),
				ValueMap { 
					"9", 
					"4", 
					"5", 
					"6", 
					"2", 
					"8", 
					"1", 
					"3", 
					"0", 
					"7" },
				Values { 
					"Test_Point_After_Log_Copy_Steps", 
					"Test_Point_Backup_File_Closed", 
					"Test_Point_Before_Commit_On_Primary", 
					"Test_Point_Before_Lock_Release", 
					"Test_Point_Init_Info_Sent_From_Primary", 
					"Test_Point_Last", 
					"Test_Point_Lock_Taken_On_Primary", 
					"Test_Point_Lock_Taken_On_Secondary", 
					"Test_Point_NULL", 
					"Test_Point_Within_Data_Backup" }
			] uint32 test_point;
	[WmiDataId(6), read, Extension("Guid")] guid group_id;
	[WmiDataId(7), read, Extension("Guid")] guid replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Test point for failure injection in Hadr Auto Page Repair."): Amended,
    Guid("{9A40000D-52E5-46FC-B028-580C47512820}"), locale("MS\\0x409"),
    DisplayName("hadr_auto_page_repair_test_point"): Amended]
class XeSqlPkg_hadr_auto_page_repair_test_point: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_auto_page_repair_test_point: XeSqlPkg_hadr_auto_page_repair_test_point
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(169),
				ValueMap { 
					"7", 
					"3", 
					"2", 
					"1", 
					"5", 
					"8", 
					"4", 
					"6", 
					"9", 
					"10", 
					"0" },
				Values { 
					"Test_Point_Before_Clearing_Suspect_Entry", 
					"Test_Point_Before_Fixing_Page", 
					"Test_Point_Before_Page_Recorded", 
					"Test_Point_Before_Request_Sent", 
					"Test_Point_Before_Restarting_DB", 
					"Test_Point_Before_Restore_Pending_Reset", 
					"Test_Point_Before_Sending_Page_Back", 
					"Test_Point_Before_Suspending_DB", 
					"Test_Point_In_Getting_Corrupted_Page", 
					"Test_Point_Last", 
					"Test_Point_NULL" }
			] uint32 test_point;
	[WmiDataId(6), read, Extension("Guid")] guid group_id;
	[WmiDataId(7), read, Extension("Guid")] guid replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Auto page repair added a corrupted page."): Amended,
    Guid("{1B9780B6-5660-4958-BD30-DB34100C1CFE}"), locale("MS\\0x409"),
    DisplayName("hadr_apr_added_corrupted_page"): Amended]
class XeSqlPkg_hadr_apr_added_corrupted_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apr_added_corrupted_page: XeSqlPkg_hadr_apr_added_corrupted_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Auto page repair repaired a corrupted page."): Amended,
    Guid("{1C2C14C5-A03F-428e-8FE3-50A40CF0D958}"), locale("MS\\0x409"),
    DisplayName("hadr_apr_repaired_page"): Amended]
class XeSqlPkg_hadr_apr_repaired_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apr_repaired_page: XeSqlPkg_hadr_apr_repaired_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string received_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string redo_lsn;
};
		
[dynamic: ToInstance, Description("Auto page repair skipped a page repair."): Amended,
    Guid("{19140FA7-AABA-4de8-83FD-3D16B0EB5499}"), locale("MS\\0x409"),
    DisplayName("hadr_apr_skipped_page_repair"): Amended]
class XeSqlPkg_hadr_apr_skipped_page_repair: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apr_skipped_page_repair: XeSqlPkg_hadr_apr_skipped_page_repair
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string received_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string redo_lsn;
};
		
[dynamic: ToInstance, Description("Auto page repair added a corrupted page."): Amended,
    Guid("{CB778893-B16E-419e-A0FA-ED42352D3A37}"), locale("MS\\0x409"),
    DisplayName("hadr_apr_failed_page_repair"): Amended]
class XeSqlPkg_hadr_apr_failed_page_repair: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apr_failed_page_repair: XeSqlPkg_hadr_apr_failed_page_repair
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Auto page repair sent a page repair request."): Amended,
    Guid("{33698776-6DCD-4de1-B6B1-B39DC10EFFD6}"), locale("MS\\0x409"),
    DisplayName("hadr_apr_sent_repair_request_for_page"): Amended]
class XeSqlPkg_hadr_apr_sent_repair_request_for_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apr_sent_repair_request_for_page: XeSqlPkg_hadr_apr_sent_repair_request_for_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint32 result;
	[WmiDataId(9), read, Extension("Guid")] guid group_id;
	[WmiDataId(10), read, Extension("Guid")] guid replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string min_lsn;
};
		
[dynamic: ToInstance, Description("Auto page repair received a page repair request."): Amended,
    Guid("{CC56DDC7-1B39-4075-BD41-79287D1BD2CB}"), locale("MS\\0x409"),
    DisplayName("hadr_apr_received_page_repair_request"): Amended]
class XeSqlPkg_hadr_apr_received_page_repair_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apr_received_page_repair_request: XeSqlPkg_hadr_apr_received_page_repair_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(11), read, Extension("Guid")] guid partner_replica_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string min_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string redo_lsn;
};
		
[dynamic: ToInstance, Description("Auto page repair is deffering the page repair request."): Amended,
    Guid("{7B3C74E9-F5A0-4f5b-99FE-40400E5293B0}"), locale("MS\\0x409"),
    DisplayName("hadr_apr_deffering_page_repair_request"): Amended]
class XeSqlPkg_hadr_apr_deffering_page_repair_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apr_deffering_page_repair_request: XeSqlPkg_hadr_apr_deffering_page_repair_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(11), read, Extension("Guid")] guid partner_replica_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string min_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string redo_lsn;
};
		
[dynamic: ToInstance, Description("Auto page repair failed to repair page."): Amended,
    Guid("{51EA9FB9-905B-4261-932F-2C529DE3757B}"), locale("MS\\0x409"),
    DisplayName("hadr_apr_page_repair_failed"): Amended]
class XeSqlPkg_hadr_apr_page_repair_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apr_page_repair_failed: XeSqlPkg_hadr_apr_page_repair_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint32 status;
	[WmiDataId(9), read, Extension("Guid")] guid group_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string page_lsn;
	[WmiDataId(12), read, Extension("Guid")] guid replica_id;
};
		
[dynamic: ToInstance, Description("Failpoint to simulate login failed due to Deny External Connections."): Amended,
    Guid("{525DEFD2-A5C3-4020-AA89-168EE2E97AE4}"), locale("MS\\0x409"),
    DisplayName("hadr_deny_external_connections_failpoint"): Amended]
class XeSqlPkg_hadr_deny_external_connections_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_deny_external_connections_failpoint: XeSqlPkg_hadr_deny_external_connections_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  deny_external_connections;
};
		
[dynamic: ToInstance, Description("Amount of log scanned in Undo of Redo and Total log need to be scanned."): Amended,
    Guid("{64AD24E9-255E-4B28-B74F-5C374FA41A1C}"), locale("MS\\0x409"),
    DisplayName("hadr_undo_of_redo_log_scan"): Amended]
class XeSqlPkg_hadr_undo_of_redo_log_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_undo_of_redo_log_scan: XeSqlPkg_hadr_undo_of_redo_log_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 Log_Remaining;
	[WmiDataId(6), read] uint64 Total_Log;
};
		
[dynamic: ToInstance, Description("First missing page id in parallel page request buffer."): Amended,
    Guid("{915AC803-0F6B-4314-9A08-0756A1514A6F}"), locale("MS\\0x409"),
    DisplayName("hadr_undo_of_redo_parallel_page_requesting_first_missing_page"): Amended]
class XeSqlPkg_hadr_undo_of_redo_parallel_page_requesting_first_missing_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_undo_of_redo_parallel_page_requesting_first_missing_page: XeSqlPkg_hadr_undo_of_redo_parallel_page_requesting_first_missing_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read, Extension("Guid")] guid group_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
};
		
[dynamic: ToInstance, Description("Requesting page in parallel for Undo of Redo enabled."): Amended,
    Guid("{D23908B5-62E0-4883-A3A0-4CC8080EE19E}"), locale("MS\\0x409"),
    DisplayName("hadr_undo_of_redo_parallel_page_requesting_notification"): Amended]
class XeSqlPkg_hadr_undo_of_redo_parallel_page_requesting_notification: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_undo_of_redo_parallel_page_requesting_notification: XeSqlPkg_hadr_undo_of_redo_parallel_page_requesting_notification
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid group_id;
	[WmiDataId(6), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(7), read, Extension("Guid")] guid replica_id;
};
		
[dynamic: ToInstance, Description("Pages processing stats"): Amended,
    Guid("{A649D9D3-9592-4887-AE5C-FC179AC265A3}"), locale("MS\\0x409"),
    DisplayName("hadr_undo_of_redo_pages_processing_stats"): Amended]
class XeSqlPkg_hadr_undo_of_redo_pages_processing_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_undo_of_redo_pages_processing_stats: XeSqlPkg_hadr_undo_of_redo_pages_processing_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 next_batch_size;
	[WmiDataId(6), read] uint64 total_number_of_processed_data_pages;
	[WmiDataId(7), read, Extension("Guid")] guid group_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
};
		
[dynamic: ToInstance, Description("File Metadata Request/Response between servers."): Amended,
    Guid("{0512DF7C-023C-4c8d-94E7-275053726787}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_filemetadata_request"): Amended]
class XeSqlPkg_hadr_db_manager_filemetadata_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_filemetadata_request: XeSqlPkg_hadr_db_manager_filemetadata_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read, 
				XEMapId(155),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Data", 
					"Log" }
			] uint32 file_type;
	[WmiDataId(8), read] uint32 status;
	[WmiDataId(9), read] uint32 file_count;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Hit/miss ratio for the compressed log block cache."): Amended,
    Guid("{0A9F6D4F-FDB0-451F-B642-F55F7B51FEE9}"), locale("MS\\0x409"),
    DisplayName("hadr_capture_compressed_log_cache"): Amended]
class XeSqlPkg_hadr_capture_compressed_log_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_capture_compressed_log_cache: XeSqlPkg_hadr_capture_compressed_log_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 hits;
	[WmiDataId(7), read] uint32 misses;
	[WmiDataId(8), read] uint32 insert_misses;
};
		
[dynamic: ToInstance, Description("Backup Sync message."): Amended,
    Guid("{5CEDCF0A-8430-4148-9009-E8B183DE4A04}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_backup_sync_msg"): Amended]
class XeSqlPkg_hadr_db_manager_backup_sync_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_backup_sync_msg: XeSqlPkg_hadr_db_manager_backup_sync_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint32 message_sub_type;
	[WmiDataId(7), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Backup Info message."): Amended,
    Guid("{C7E933BF-A40E-4ED4-9527-D2D5C80E0054}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_backup_info_msg"): Amended]
class XeSqlPkg_hadr_db_manager_backup_info_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_backup_info_msg: XeSqlPkg_hadr_db_manager_backup_info_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint32 message_sub_type;
	[WmiDataId(7), read] uint32 status;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string backup_lsn;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string oldest_xact_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string min_skip_lsn;
	[WmiDataId(11), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Primary replica file list message."): Amended,
    Guid("{A6AC1557-0EAC-4DDF-B81A-FA704785E22D}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_primary_replica_file_list_msg"): Amended]
class XeSqlPkg_hadr_db_manager_primary_replica_file_list_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_primary_replica_file_list_msg: XeSqlPkg_hadr_db_manager_primary_replica_file_list_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint32 file_count;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string first_file;
	[WmiDataId(8), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Seeding request message."): Amended,
    Guid("{833B04D0-3D80-474D-AE2C-0C13135DCEC2}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_seeding_request_msg"): Amended]
class XeSqlPkg_hadr_db_manager_seeding_request_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_seeding_request_msg: XeSqlPkg_hadr_db_manager_seeding_request_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Seeding cancel message."): Amended,
    Guid("{FFD14D2C-E4EA-44CB-AFC4-54468428BF4F}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_seeding_cancel_msg"): Amended]
class XeSqlPkg_hadr_db_manager_seeding_cancel_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_seeding_cancel_msg: XeSqlPkg_hadr_db_manager_seeding_cancel_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read, Extension("Guid")] guid operation_id;
	[WmiDataId(7), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("QDS messages sent between replicas."): Amended,
    Guid("{22e3df9f-1747-496f-b7aa-a6f42b11e87a}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_qds_msg"): Amended]
class XeSqlPkg_hadr_db_manager_qds_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_qds_msg: XeSqlPkg_hadr_db_manager_qds_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(133),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"eOriginInvalid", 
					"eOriginPrimary", 
					"eOriginSecondary" }
			] uint32 origin;
	[WmiDataId(6), read, Extension("Variant")] object message;
};
		
[dynamic: ToInstance, Description("Scan type performed for the table (heap)."): Amended,
    Guid("{aebac015-592b-490e-8b3b-3884fadc014e}"), locale("MS\\0x409"),
    DisplayName("heap_scan_type"): Amended]
class XeSqlPkg_heap_scan_type: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class heap_scan_type: XeSqlPkg_heap_scan_type
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint8 scan_type;
};
		
[dynamic: ToInstance, Description("Physical Seeding Backup Side State Change."): Amended,
    Guid("{941CA734-599E-4680-94D1-268B4C497200}"), locale("MS\\0x409"),
    DisplayName("hadr_physical_seeding_backup_state_change"): Amended]
class XeSqlPkg_hadr_physical_seeding_backup_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_physical_seeding_backup_state_change: XeSqlPkg_hadr_physical_seeding_backup_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(180),
				ValueMap { 
					"9", 
					"8", 
					"6", 
					"0", 
					"2", 
					"3", 
					"7", 
					"5", 
					"4", 
					"1" },
				Values { 
					"Count", 
					"Failed", 
					"FailureWaitingForAsyncCallback", 
					"Inital", 
					"ReadingAndSendingData", 
					"SendingData", 
					"Success", 
					"SuccessWaitingForAsyncCallback", 
					"WaitingForRestoreToFinish", 
					"WaitingForRestoreToStart" }
			] uint32 old_state;
	[WmiDataId(7), read, 
				XEMapId(180),
				ValueMap { 
					"9", 
					"8", 
					"6", 
					"0", 
					"2", 
					"3", 
					"7", 
					"5", 
					"4", 
					"1" },
				Values { 
					"Count", 
					"Failed", 
					"FailureWaitingForAsyncCallback", 
					"Inital", 
					"ReadingAndSendingData", 
					"SendingData", 
					"Success", 
					"SuccessWaitingForAsyncCallback", 
					"WaitingForRestoreToFinish", 
					"WaitingForRestoreToStart" }
			] uint32 new_state;
	[WmiDataId(8), read] uint64 transferred_size_bytes;
	[WmiDataId(9), read] uint64 transfer_rate_bytes_per_second;
	[WmiDataId(10), read] uint64 database_size_bytes;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 seeding_start_time;
	[WmiDataId(12), read, Extension("WmiTime")] uint64 seeding_end_time;
	[WmiDataId(13), read, Extension("WmiTime")] uint64 estimated_completion_time;
	[WmiDataId(14), read] uint64 total_disk_io_wait_time_ms;
	[WmiDataId(15), read] uint64 total_network_wait_time_ms;
	[WmiDataId(16), read] sint8  is_compression_enabled;
	[WmiDataId(17), read] uint32 failure_code;
	[WmiDataId(18), read, Extension("Guid")] guid local_seeding_guid;
	[WmiDataId(19), read, Extension("Guid")] guid remote_seeding_guid;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string role_desc;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string remote_machine_name;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string failure_message;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string internal_state_desc;
};
		
[dynamic: ToInstance, Description("Physical Seeding Restore Side State Change."): Amended,
    Guid("{45102D1F-90AE-4FFF-9388-2EB09FF3CB28}"), locale("MS\\0x409"),
    DisplayName("hadr_physical_seeding_restore_state_change"): Amended]
class XeSqlPkg_hadr_physical_seeding_restore_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_physical_seeding_restore_state_change: XeSqlPkg_hadr_physical_seeding_restore_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(181),
				ValueMap { 
					"10", 
					"9", 
					"5", 
					"0", 
					"2", 
					"8", 
					"4", 
					"7", 
					"6", 
					"1", 
					"3" },
				Values { 
					"Count", 
					"Failed", 
					"FailureWaitingForAsyncCallback", 
					"Inital", 
					"ReceivingAndWritingData", 
					"Success", 
					"SuccessWaitingForAsyncCallback", 
					"WaitingForBackupToAckFailure", 
					"WaitingForBackupToAckSuccess", 
					"WaitingForBackupToStartSending", 
					"WaitingForRestoreToFinish" }
			] uint32 old_state;
	[WmiDataId(7), read, 
				XEMapId(181),
				ValueMap { 
					"10", 
					"9", 
					"5", 
					"0", 
					"2", 
					"8", 
					"4", 
					"7", 
					"6", 
					"1", 
					"3" },
				Values { 
					"Count", 
					"Failed", 
					"FailureWaitingForAsyncCallback", 
					"Inital", 
					"ReceivingAndWritingData", 
					"Success", 
					"SuccessWaitingForAsyncCallback", 
					"WaitingForBackupToAckFailure", 
					"WaitingForBackupToAckSuccess", 
					"WaitingForBackupToStartSending", 
					"WaitingForRestoreToFinish" }
			] uint32 new_state;
	[WmiDataId(8), read] uint64 transferred_size_bytes;
	[WmiDataId(9), read] uint64 transfer_rate_bytes_per_second;
	[WmiDataId(10), read] uint64 database_size_bytes;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 seeding_start_time;
	[WmiDataId(12), read, Extension("WmiTime")] uint64 seeding_end_time;
	[WmiDataId(13), read, Extension("WmiTime")] uint64 estimated_completion_time;
	[WmiDataId(14), read] uint64 total_disk_io_wait_time_ms;
	[WmiDataId(15), read] uint64 total_network_wait_time_ms;
	[WmiDataId(16), read] sint8  is_compression_enabled;
	[WmiDataId(17), read] uint32 failure_code;
	[WmiDataId(18), read, Extension("Guid")] guid local_seeding_guid;
	[WmiDataId(19), read, Extension("Guid")] guid remote_seeding_guid;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string role_desc;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string remote_machine_name;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string failure_message;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string internal_state_desc;
};
		
[dynamic: ToInstance, Description("Physical Seeding Forwarder Side State Change."): Amended,
    Guid("{A00EAA51-AC93-424B-80E2-7344D1FFA115}"), locale("MS\\0x409"),
    DisplayName("hadr_physical_seeding_forwarder_state_change"): Amended]
class XeSqlPkg_hadr_physical_seeding_forwarder_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_physical_seeding_forwarder_state_change: XeSqlPkg_hadr_physical_seeding_forwarder_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(182),
				ValueMap { 
					"12", 
					"11", 
					"7", 
					"0", 
					"3", 
					"10", 
					"6", 
					"9", 
					"8", 
					"1", 
					"4", 
					"2", 
					"5" },
				Values { 
					"Count", 
					"Failed", 
					"FailureWaitingForAsyncCallback", 
					"Inital", 
					"ReceivingAndWritingData", 
					"Success", 
					"SuccessWaitingForAsyncCallback", 
					"WaitingForBackupToAckFailure", 
					"WaitingForBackupToAckSuccess", 
					"WaitingForBackupToStartSending", 
					"WaitingForRestoreToFinish", 
					"WaitingForTargetsToBeOnline", 
					"WaitingForTargetsToRestore" }
			] uint32 old_state;
	[WmiDataId(7), read, 
				XEMapId(182),
				ValueMap { 
					"12", 
					"11", 
					"7", 
					"0", 
					"3", 
					"10", 
					"6", 
					"9", 
					"8", 
					"1", 
					"4", 
					"2", 
					"5" },
				Values { 
					"Count", 
					"Failed", 
					"FailureWaitingForAsyncCallback", 
					"Inital", 
					"ReceivingAndWritingData", 
					"Success", 
					"SuccessWaitingForAsyncCallback", 
					"WaitingForBackupToAckFailure", 
					"WaitingForBackupToAckSuccess", 
					"WaitingForBackupToStartSending", 
					"WaitingForRestoreToFinish", 
					"WaitingForTargetsToBeOnline", 
					"WaitingForTargetsToRestore" }
			] uint32 new_state;
	[WmiDataId(8), read] uint64 transferred_size_bytes;
	[WmiDataId(9), read] uint64 transfer_rate_bytes_per_second;
	[WmiDataId(10), read] uint64 database_size_bytes;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 seeding_start_time;
	[WmiDataId(12), read, Extension("WmiTime")] uint64 seeding_end_time;
	[WmiDataId(13), read, Extension("WmiTime")] uint64 estimated_completion_time;
	[WmiDataId(14), read] uint64 total_disk_io_wait_time_ms;
	[WmiDataId(15), read] uint64 total_network_wait_time_ms;
	[WmiDataId(16), read] sint8  is_compression_enabled;
	[WmiDataId(17), read] uint32 failure_code;
	[WmiDataId(18), read, Extension("Guid")] guid local_seeding_guid;
	[WmiDataId(19), read, Extension("Guid")] guid remote_seeding_guid;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string role_desc;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string remote_machine_name;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string failure_message;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string internal_state_desc;
};
		
[dynamic: ToInstance, Description("Physical Seeding Forwarder Target Side State Change."): Amended,
    Guid("{234C4239-E519-4E57-A4E1-8FD1DF05DA41}"), locale("MS\\0x409"),
    DisplayName("hadr_physical_seeding_forwarder_target_state_change"): Amended]
class XeSqlPkg_hadr_physical_seeding_forwarder_target_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_physical_seeding_forwarder_target_state_change: XeSqlPkg_hadr_physical_seeding_forwarder_target_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(183),
				ValueMap { 
					"5", 
					"0", 
					"6", 
					"2", 
					"4", 
					"3", 
					"1" },
				Values { 
					"Failure", 
					"Initial", 
					"Last", 
					"ReceivingAndSendingData", 
					"Success", 
					"WaitingForRestoreToFinish", 
					"WaitingForRestoreToStart" }
			] uint32 old_state;
	[WmiDataId(7), read, 
				XEMapId(183),
				ValueMap { 
					"5", 
					"0", 
					"6", 
					"2", 
					"4", 
					"3", 
					"1" },
				Values { 
					"Failure", 
					"Initial", 
					"Last", 
					"ReceivingAndSendingData", 
					"Success", 
					"WaitingForRestoreToFinish", 
					"WaitingForRestoreToStart" }
			] uint32 new_state;
	[WmiDataId(8), read] uint64 transferred_size_bytes;
	[WmiDataId(9), read] uint64 transfer_rate_bytes_per_second;
	[WmiDataId(10), read] uint64 database_size_bytes;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 seeding_start_time;
	[WmiDataId(12), read, Extension("WmiTime")] uint64 seeding_end_time;
	[WmiDataId(13), read, Extension("WmiTime")] uint64 estimated_completion_time;
	[WmiDataId(14), read] uint64 total_disk_io_wait_time_ms;
	[WmiDataId(15), read] uint64 total_network_wait_time_ms;
	[WmiDataId(16), read] sint8  is_compression_enabled;
	[WmiDataId(17), read] uint32 failure_code;
	[WmiDataId(18), read, Extension("Guid")] guid local_seeding_guid;
	[WmiDataId(19), read, Extension("Guid")] guid remote_seeding_guid;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string role_desc;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string remote_machine_name;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string failure_message;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string internal_state_desc;
};
		
[dynamic: ToInstance, Description("Physical Seeding Submit Callback Event."): Amended,
    Guid("{A6DD353E-DA95-4464-B022-557DC8C98A3A}"), locale("MS\\0x409"),
    DisplayName("hadr_physical_seeding_submit_callback"): Amended]
class XeSqlPkg_hadr_physical_seeding_submit_callback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_physical_seeding_submit_callback: XeSqlPkg_hadr_physical_seeding_submit_callback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 retry_count;
	[WmiDataId(7), read] uint64 transferred_size_bytes;
	[WmiDataId(8), read] uint64 transfer_rate_bytes_per_second;
	[WmiDataId(9), read] uint64 database_size_bytes;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 seeding_start_time;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 seeding_end_time;
	[WmiDataId(12), read, Extension("WmiTime")] uint64 estimated_completion_time;
	[WmiDataId(13), read] uint64 total_disk_io_wait_time_ms;
	[WmiDataId(14), read] uint64 total_network_wait_time_ms;
	[WmiDataId(15), read] sint8  is_compression_enabled;
	[WmiDataId(16), read] uint32 failure_code;
	[WmiDataId(17), read, Extension("Guid")] guid local_seeding_guid;
	[WmiDataId(18), read, Extension("Guid")] guid remote_seeding_guid;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string role_desc;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string remote_machine_name;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string failure_message;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string internal_state_desc;
};
		
[dynamic: ToInstance, Description("Physical Seeding Failure Event."): Amended,
    Guid("{716A0C3A-4E2B-421C-BA75-80AD5436F7D1}"), locale("MS\\0x409"),
    DisplayName("hadr_physical_seeding_failure"): Amended]
class XeSqlPkg_hadr_physical_seeding_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_physical_seeding_failure: XeSqlPkg_hadr_physical_seeding_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 failure_code;
	[WmiDataId(6), read, Extension("Guid")] guid local_seeding_guid;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string failure_message;
};
		
[dynamic: ToInstance, Description("Physical Seeding Progress Event."): Amended,
    Guid("{EA668266-0A2A-4289-B313-17EB14CACA69}"), locale("MS\\0x409"),
    DisplayName("hadr_physical_seeding_progress"): Amended]
class XeSqlPkg_hadr_physical_seeding_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_physical_seeding_progress: XeSqlPkg_hadr_physical_seeding_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 transfer_rate_bytes_per_second;
	[WmiDataId(7), read] uint64 transferred_size_bytes;
	[WmiDataId(8), read] uint64 database_size_bytes;
	[WmiDataId(9), read, Extension("WmiTime")] uint64 seeding_start_time;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 seeding_end_time;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 estimated_completion_time;
	[WmiDataId(12), read] uint64 total_disk_io_wait_time_ms;
	[WmiDataId(13), read] uint64 total_network_wait_time_ms;
	[WmiDataId(14), read] sint8  is_compression_enabled;
	[WmiDataId(15), read] uint32 failure_code;
	[WmiDataId(16), read, Extension("Guid")] guid local_seeding_guid;
	[WmiDataId(17), read, Extension("Guid")] guid remote_seeding_guid;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string role_desc;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string remote_machine_name;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string failure_message;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string internal_state_desc;
};
		
[dynamic: ToInstance, Description("Physical Seeding Schedule Long Task Failure Event."): Amended,
    Guid("{E90B2FFF-696B-4EAD-83AB-36ED139FE5DA}"), locale("MS\\0x409"),
    DisplayName("hadr_physical_seeding_schedule_long_task_failure"): Amended]
class XeSqlPkg_hadr_physical_seeding_schedule_long_task_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_physical_seeding_schedule_long_task_failure: XeSqlPkg_hadr_physical_seeding_schedule_long_task_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 failure_code;
	[WmiDataId(6), read] sint8  enqueue_type_node;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string failure_message;
};
		
[dynamic: ToInstance, Description("Occurs when an automatic seeding operation is submitted."): Amended,
    Guid("{E76FA758-2E6A-4813-9E9E-58B7027BF66B}"), locale("MS\\0x409"),
    DisplayName("hadr_automatic_seeding_start"): Amended]
class XeSqlPkg_hadr_automatic_seeding_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_automatic_seeding_start: XeSqlPkg_hadr_automatic_seeding_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_source;
	[WmiDataId(6), read] sint32 operation_attempt_number;
	[WmiDataId(7), read, Extension("Guid")] guid operation_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_id;
	[WmiDataId(9), read, Extension("Guid")] guid ag_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_remote_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when an automatic seeding operation changes state."): Amended,
    Guid("{B2E14527-5E7F-437B-BF4E-B56A61EC1E4E}"), locale("MS\\0x409"),
    DisplayName("hadr_automatic_seeding_state_transition"): Amended]
class XeSqlPkg_hadr_automatic_seeding_state_transition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_automatic_seeding_state_transition: XeSqlPkg_hadr_automatic_seeding_state_transition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_source;
	[WmiDataId(6), read, Extension("Guid")] guid operation_id;
	[WmiDataId(7), read, Extension("Guid")] guid ag_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid ag_remote_replica_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string previous_state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string current_state;
};
		
[dynamic: ToInstance, Description("Occurs when an automatic seeding operation succeeds."): Amended,
    Guid("{0B1C0023-6E73-401B-937A-CF6A35816EAE}"), locale("MS\\0x409"),
    DisplayName("hadr_automatic_seeding_success"): Amended]
class XeSqlPkg_hadr_automatic_seeding_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_automatic_seeding_success: XeSqlPkg_hadr_automatic_seeding_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_source;
	[WmiDataId(6), read] sint8  required_seeding;
	[WmiDataId(7), read, Extension("Guid")] guid operation_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_id;
	[WmiDataId(9), read, Extension("Guid")] guid ag_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_remote_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when an automatic seeding operation fails."): Amended,
    Guid("{4A718E5F-B431-430A-9E71-DB1886361F6F}"), locale("MS\\0x409"),
    DisplayName("hadr_automatic_seeding_failure"): Amended]
class XeSqlPkg_hadr_automatic_seeding_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_automatic_seeding_failure: XeSqlPkg_hadr_automatic_seeding_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_source;
	[WmiDataId(6), read] sint32 failure_state;
	[WmiDataId(7), read, Extension("Guid")] guid operation_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_id;
	[WmiDataId(9), read, Extension("Guid")] guid ag_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_remote_replica_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string failure_state_desc;
};
		
[dynamic: ToInstance, Description("Occurs when an automatic seeding operation times out."): Amended,
    Guid("{7B2B912C-D92C-4498-AA6E-32985575114F}"), locale("MS\\0x409"),
    DisplayName("hadr_automatic_seeding_timeout"): Amended]
class XeSqlPkg_hadr_automatic_seeding_timeout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_automatic_seeding_timeout: XeSqlPkg_hadr_automatic_seeding_timeout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_source;
	[WmiDataId(6), read] uint32 timeout_ms;
	[WmiDataId(7), read, Extension("Guid")] guid operation_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_id;
	[WmiDataId(9), read, Extension("Guid")] guid ag_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_remote_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport opens a file."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06500}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_file_open"): Amended]
class XeSqlPkg_hadr_filestream_file_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_file_open: XeSqlPkg_hadr_filestream_file_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read, 
				XEMapId(156),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"INVALID", 
					"READ", 
					"WRITE" }
			] uint32 open_mode;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport closes a file."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06501}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_file_close"): Amended]
class XeSqlPkg_hadr_filestream_file_close: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_file_close: XeSqlPkg_hadr_filestream_file_close
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read, 
				XEMapId(156),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"INVALID", 
					"READ", 
					"WRITE" }
			] uint32 open_mode;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport finds relevant log records when interpreting log."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06502}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_log_interpreter"): Amended]
class XeSqlPkg_hadr_filestream_log_interpreter: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_log_interpreter: XeSqlPkg_hadr_filestream_log_interpreter
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 total_records;
	[WmiDataId(7), read] uint32 filestream_chunk_records;
	[WmiDataId(8), read] uint32 transaction_abort_records;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string log_block_id;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport has completed processing a log block."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06503}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_processed_block"): Amended]
class XeSqlPkg_hadr_filestream_processed_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_processed_block: XeSqlPkg_hadr_filestream_processed_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string log_block_id;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport creates a directory."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06504}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_directory_create"): Amended]
class XeSqlPkg_hadr_filestream_directory_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_directory_create: XeSqlPkg_hadr_filestream_directory_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string directory_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport detects message corruption."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06505}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_corrupt_message"): Amended]
class XeSqlPkg_hadr_filestream_corrupt_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_corrupt_message: XeSqlPkg_hadr_filestream_corrupt_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport traces a block end message."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06506}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_message_block_end"): Amended]
class XeSqlPkg_hadr_filestream_message_block_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_message_block_end: XeSqlPkg_hadr_filestream_message_block_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sequence_number;
	[WmiDataId(6), read] uint64 scan_generation;
	[WmiDataId(7), read] uint32 message_size;
	[WmiDataId(8), read, 
				XEMapId(157),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"MODE_INVALID", 
					"MODE_READ", 
					"MODE_WRITE" }
			] uint32 transfer_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string log_block_id;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport traces a directory create message."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06507}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_message_dir_create"): Amended]
class XeSqlPkg_hadr_filestream_message_dir_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_message_dir_create: XeSqlPkg_hadr_filestream_message_dir_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sequence_number;
	[WmiDataId(6), read] uint64 scan_generation;
	[WmiDataId(7), read] uint32 message_size;
	[WmiDataId(8), read] sint32 root_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string transaction_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string directory_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport traces a file write message."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06508}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_message_file_write"): Amended]
class XeSqlPkg_hadr_filestream_message_file_write: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_message_file_write: XeSqlPkg_hadr_filestream_message_file_write
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sequence_number;
	[WmiDataId(6), read] uint64 scan_generation;
	[WmiDataId(7), read] uint32 message_size;
	[WmiDataId(8), read] sint32 root_id;
	[WmiDataId(9), read] uint64 data_offset;
	[WmiDataId(10), read] uint64 data_size;
	[WmiDataId(11), read] uint16 data_flags;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string transaction_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport flushes a file."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06509}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_file_flush"): Amended]
class XeSqlPkg_hadr_filestream_file_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_file_flush: XeSqlPkg_hadr_filestream_file_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read, 
				XEMapId(156),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"INVALID", 
					"READ", 
					"WRITE" }
			] uint32 open_mode;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport sets end of a file."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA0650A}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_file_set_eof"): Amended]
class XeSqlPkg_hadr_filestream_file_set_eof: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_file_set_eof: XeSqlPkg_hadr_filestream_file_set_eof
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read] uint64 file_size;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport detects inplace update to undo."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA0650B}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_undo_inplace_update"): Amended]
class XeSqlPkg_hadr_filestream_undo_inplace_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_undo_inplace_update: XeSqlPkg_hadr_filestream_undo_inplace_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 root_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string transaction_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport traces a file write message."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA0650C}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_message_file_request"): Amended]
class XeSqlPkg_hadr_filestream_message_file_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_message_file_request: XeSqlPkg_hadr_filestream_message_file_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sequence_number;
	[WmiDataId(6), read] uint64 scan_generation;
	[WmiDataId(7), read] uint32 message_size;
	[WmiDataId(8), read] sint32 root_id;
	[WmiDataId(9), read] sint8  eol_requested;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering change notifier status."): Amended,
    Guid("{b20e673e-abef-4c6c-a1ab-02a34c48529e}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_change_notifier_status"): Amended]
class XeSqlPkg_hadr_wsfc_change_notifier_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_change_notifier_status: XeSqlPkg_hadr_wsfc_change_notifier_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(49),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7" },
				Values { 
					"Starting", 
					"WaitingForClusterAvailability", 
					"WaitingForNodeAvailability", 
					"WaitingForNodeOnline", 
					"Running", 
					"WaitingForEvent", 
					"Stopping", 
					"Stopped" }
			] uint32 current_status;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering change notifier starts receiving Availability Group specific notifications."): Amended,
    Guid("{dc686069-1cd1-4671-aaeb-4685eb4898c0}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_change_notifier_start_ag_specific_notifications"): Amended]
class XeSqlPkg_hadr_wsfc_change_notifier_start_ag_specific_notifications: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_change_notifier_start_ag_specific_notifications: XeSqlPkg_hadr_wsfc_change_notifier_start_ag_specific_notifications
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 notification_key;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering change notifier encountered a severe error and will terminate."): Amended,
    Guid("{8f162c44-d6fd-4207-b29e-528dca92a499}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_change_notifier_severe_error"): Amended]
class XeSqlPkg_hadr_wsfc_change_notifier_severe_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_change_notifier_severe_error: XeSqlPkg_hadr_wsfc_change_notifier_severe_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering change notifier received a cluster notification."): Amended,
    Guid("{d191468f-2130-4b65-81bc-421b3435e08c}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_change_notifier_event_received"): Amended]
class XeSqlPkg_hadr_wsfc_change_notifier_event_received: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_change_notifier_event_received: XeSqlPkg_hadr_wsfc_change_notifier_event_received
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 notify_type;
	[WmiDataId(6), read] uint64 notify_key;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering will bring an availability group listener resource online."): Amended,
    Guid("{B1EA6391-1AF3-4B7C-8D5F-6C2A5F35E77F}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_bring_ag_listener_online"): Amended]
class XeSqlPkg_hadr_wsfc_bring_ag_listener_online: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_bring_ag_listener_online: XeSqlPkg_hadr_wsfc_bring_ag_listener_online
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string listener_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("HADR is about to rollback availability group listener WSFC resource changes."): Amended,
    Guid("{6AC02B3B-A78B-4908-8BE0-4DB6C72BE9EC}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_rollback_ag_listener_change"): Amended]
class XeSqlPkg_hadr_wsfc_rollback_ag_listener_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_rollback_ag_listener_change: XeSqlPkg_hadr_wsfc_rollback_ag_listener_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string listener_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("HADR set the WSFC dependency between an availability group and its listener resource object."): Amended,
    Guid("{51FD536D-F3A4-4F50-8A77-95DEF5D7EE6F}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_update_ag_listener_dependency"): Amended]
class XeSqlPkg_hadr_wsfc_update_ag_listener_dependency: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_update_ag_listener_dependency: XeSqlPkg_hadr_wsfc_update_ag_listener_dependency
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string listener_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string dependency_expression;
};
		
[dynamic: ToInstance, Description("Could not create a hadron availability group listener."): Amended,
    Guid("{10EEB60A-1F45-4E04-A723-277DE2C3CCD8}"), locale("MS\\0x409"),
    DisplayName("hadr_cannot_create_listener"): Amended]
class XeSqlPkg_hadr_cannot_create_listener: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_cannot_create_listener: XeSqlPkg_hadr_cannot_create_listener
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("The availability group listener TCP/IP port number was modified."): Amended,
    Guid("{52F56F8E-FB9B-4E82-AC6E-51A6890817AF}"), locale("MS\\0x409"),
    DisplayName("hadr_modify_listener_port"): Amended]
class XeSqlPkg_hadr_modify_listener_port: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_modify_listener_port: XeSqlPkg_hadr_modify_listener_port
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 old_port_number;
	[WmiDataId(6), read] uint16 new_port_number;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string listener_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("Hadron Tds Listener Synchronizer skipped a listener payload because there were no changes since the previous payload."): Amended,
    Guid("{A5B309EC-1C42-4D33-884B-DB74108E6B85}"), locale("MS\\0x409"),
    DisplayName("hadr_tds_synchronizer_payload_skip"): Amended]
class XeSqlPkg_hadr_tds_synchronizer_payload_skip: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_tds_synchronizer_payload_skip: XeSqlPkg_hadr_tds_synchronizer_payload_skip
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string listener_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("End of API that creates/opens SQL Server instance name to cluster node name map key in the cluster store (registry)."): Amended,
    Guid("{c9de348f-7082-4734-b4a6-e6354438e8c8}"), locale("MS\\0x409"),
    DisplayName("hadr_sql_instance_to_node_map_key_created_opened"): Amended]
class XeSqlPkg_hadr_sql_instance_to_node_map_key_created_opened: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_sql_instance_to_node_map_key_created_opened: XeSqlPkg_hadr_sql_instance_to_node_map_key_created_opened
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_created;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string map_key_name;
};
		
[dynamic: ToInstance, Description("End of API that creates/updates a SQL Server instance to cluster node map entry."): Amended,
    Guid("{00af2579-fce5-4578-855f-e7ef793ef5ce}"), locale("MS\\0x409"),
    DisplayName("hadr_sql_instance_to_node_map_entry_created_updated"): Amended]
class XeSqlPkg_hadr_sql_instance_to_node_map_entry_created_updated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_sql_instance_to_node_map_entry_created_updated: XeSqlPkg_hadr_sql_instance_to_node_map_entry_created_updated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string sql_instance_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string cluster_node_name;
};
		
[dynamic: ToInstance, Description("End of API that deletes a SQL Server instance to cluster node map entry."): Amended,
    Guid("{e3a2ea58-bde7-4059-b862-321168fe74ca}"), locale("MS\\0x409"),
    DisplayName("hadr_sql_instance_to_node_map_entry_deleted"): Amended]
class XeSqlPkg_hadr_sql_instance_to_node_map_entry_deleted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_sql_instance_to_node_map_entry_deleted: XeSqlPkg_hadr_sql_instance_to_node_map_entry_deleted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string sql_instance_name;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering change notifier detected that the local cluster node is not online. Change notifier will terminate."): Amended,
    Guid("{1b540cef-ab57-4aff-88a7-4df6e958ca02}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_change_notifier_node_not_online"): Amended]
class XeSqlPkg_hadr_wsfc_change_notifier_node_not_online: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_change_notifier_node_not_online: XeSqlPkg_hadr_wsfc_change_notifier_node_not_online
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(137),
				ValueMap { 
					"1", 
					"3", 
					"2", 
					"-1", 
					"0" },
				Values { 
					"ClusterNodeDown", 
					"ClusterNodeJoining", 
					"ClusterNodePaused", 
					"ClusterNodeStateUnknown", 
					"ClusterNodeUp" }
			] sint32 local_node_state;
};
		
[dynamic: ToInstance, Description("First attempt to bring a HADR Availability Group resource online failed. SQL Server will retry the operation at regular intervals."): Amended,
    Guid("{d9a16085-d896-4c82-808c-639d0a329dc1}"), locale("MS\\0x409"),
    DisplayName("hadr_online_availability_group_first_attempt_failure"): Amended]
class XeSqlPkg_hadr_online_availability_group_first_attempt_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_online_availability_group_first_attempt_failure: XeSqlPkg_hadr_online_availability_group_first_attempt_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 retry_interval_ms;
	[WmiDataId(6), read] uint32 max_retry_count;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("SQL Server has either exhausted all retry attempts, or Windows Server Failover Cluster has accepted the command to bring a HADR Availability Group resource online."): Amended,
    Guid("{a70bb3b4-0e54-4b8c-a2b8-054b4a072ad1}"), locale("MS\\0x409"),
    DisplayName("hadr_online_availability_group_retry_end"): Amended]
class XeSqlPkg_hadr_online_availability_group_retry_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_online_availability_group_retry_end: XeSqlPkg_hadr_online_availability_group_retry_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 retry_interval_ms;
	[WmiDataId(6), read] uint32 retry_count;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("HADR Availability replica API call."): Amended,
    Guid("{314b25c1-e79e-4d72-ba23-6431ddb2266c}"), locale("MS\\0x409"),
    DisplayName("hadr_ar_api_call"): Amended]
class XeSqlPkg_hadr_ar_api_call: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ar_api_call: XeSqlPkg_hadr_ar_api_call
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_entering;
	[WmiDataId(6), read, StringTermination("NullTerminated")] string api_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("HADR Availability Group replica manager is starting."): Amended,
    Guid("{25252fc4-cb11-4405-b480-3eafb5f657b1}"), locale("MS\\0x409"),
    DisplayName("hadr_ar_manager_starting"): Amended]
class XeSqlPkg_hadr_ar_manager_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ar_manager_starting: XeSqlPkg_hadr_ar_manager_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_entering;
};
		
[dynamic: ToInstance, Description("Occurs when the Availability Replica is starting or shutting down."): Amended,
    Guid("{E0C1C073-03E0-4de5-AF91-F0F5E7A9D065}"), locale("MS\\0x409"),
    DisplayName("availability_replica_state"): Amended]
class XeSqlPkg_availability_replica_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class availability_replica_state: XeSqlPkg_availability_replica_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(52),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Starting", 
					"Stopping" }
			] uint32 current_state;
	[WmiDataId(6), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(8), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description("HADR Availability Group state in Wsfc."): Amended,
    Guid("{c6dd8a9e-9385-4031-a3c2-8180e35a9306}"), locale("MS\\0x409"),
    DisplayName("hadr_ag_wsfc_resource_state"): Amended]
class XeSqlPkg_hadr_ag_wsfc_resource_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ag_wsfc_resource_state: XeSqlPkg_hadr_ag_wsfc_resource_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(136),
				ValueMap { 
					"4", 
					"0", 
					"1", 
					"3", 
					"130", 
					"2", 
					"129", 
					"128", 
					"-1" },
				Values { 
					"ClusterResourceFailed", 
					"ClusterResourceInherited", 
					"ClusterResourceInitializing", 
					"ClusterResourceOffline", 
					"ClusterResourceOfflinePending", 
					"ClusterResourceOnline", 
					"ClusterResourceOnlinePending", 
					"ClusterResourcePending", 
					"ClusterResourceStateUnknown" }
			] sint32 resource_state;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("Occurs when the state of the Availability Replica has changed."): Amended,
    Guid("{b989b90e-a2eb-4176-9c07-c7f56045539f}"), locale("MS\\0x409"),
    DisplayName("availability_replica_state_change"): Amended]
class XeSqlPkg_availability_replica_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class availability_replica_state_change: XeSqlPkg_availability_replica_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(138),
				ValueMap { 
					"8", 
					"7", 
					"6", 
					"5", 
					"3", 
					"2", 
					"0", 
					"1", 
					"4" },
				Values { 
					"COUNT", 
					"FORWARDER", 
					"GLOBAL_PRIMARY", 
					"NOT_AVAILABLE", 
					"PRIMARY_NORMAL", 
					"PRIMARY_PENDING", 
					"RESOLVING_NORMAL", 
					"RESOLVING_PENDING_FAILOVER", 
					"SECONDARY_NORMAL" }
			] sint32 previous_state;
	[WmiDataId(6), read, 
				XEMapId(138),
				ValueMap { 
					"8", 
					"7", 
					"6", 
					"5", 
					"3", 
					"2", 
					"0", 
					"1", 
					"4" },
				Values { 
					"COUNT", 
					"FORWARDER", 
					"GLOBAL_PRIMARY", 
					"NOT_AVAILABLE", 
					"PRIMARY_NORMAL", 
					"PRIMARY_PENDING", 
					"RESOLVING_NORMAL", 
					"RESOLVING_PENDING_FAILOVER", 
					"SECONDARY_NORMAL" }
			] sint32 current_state;
	[WmiDataId(7), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(9), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when the state of the Availability Replica has changed."): Amended,
    Guid("{b989b90e-a2eb-4176-9c07-c7f56045539f}"), locale("MS\\0x409"),
    DisplayName("availability_replica_state_change"): Amended]
class XeSqlPkg_availability_replica_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class availability_replica_state_change: XeSqlPkg_availability_replica_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(138),
				ValueMap { 
					"8", 
					"7", 
					"6", 
					"5", 
					"3", 
					"2", 
					"0", 
					"1", 
					"4" },
				Values { 
					"COUNT", 
					"FORWARDER", 
					"GLOBAL_PRIMARY", 
					"NOT_AVAILABLE", 
					"PRIMARY_NORMAL", 
					"PRIMARY_PENDING", 
					"RESOLVING_NORMAL", 
					"RESOLVING_PENDING_FAILOVER", 
					"SECONDARY_NORMAL" }
			] sint32 previous_state;
	[WmiDataId(6), read, 
				XEMapId(138),
				ValueMap { 
					"8", 
					"7", 
					"6", 
					"5", 
					"3", 
					"2", 
					"0", 
					"1", 
					"4" },
				Values { 
					"COUNT", 
					"FORWARDER", 
					"GLOBAL_PRIMARY", 
					"NOT_AVAILABLE", 
					"PRIMARY_NORMAL", 
					"PRIMARY_PENDING", 
					"RESOLVING_NORMAL", 
					"RESOLVING_PENDING_FAILOVER", 
					"SECONDARY_NORMAL" }
			] sint32 current_state;
	[WmiDataId(7), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(9), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string availability_replica_name;
};
		
[dynamic: ToInstance, Description("Occurs when the state of the Availability Replica Manager has changed."): Amended,
    Guid("{e29669fb-38f7-456f-bdd5-340ac42a541e}"), locale("MS\\0x409"),
    DisplayName("availability_replica_manager_state_change"): Amended]
class XeSqlPkg_availability_replica_manager_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class availability_replica_manager_state_change: XeSqlPkg_availability_replica_manager_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(139),
				ValueMap { 
					"2", 
					"1", 
					"0" },
				Values { 
					"OFFLINE", 
					"ONLINE", 
					"PENDING_WSFC_COMMUNICATION" }
			] sint32 current_state;
};
		
[dynamic: ToInstance, Description("HADR Availability Group database replica API call."): Amended,
    Guid("{297535eb-0f97-4ef7-9f67-49e7884dcdde}"), locale("MS\\0x409"),
    DisplayName("hadr_ag_database_api_call"): Amended]
class XeSqlPkg_hadr_ag_database_api_call: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ag_database_api_call: XeSqlPkg_hadr_ag_database_api_call
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_entering;
	[WmiDataId(6), read, StringTermination("NullTerminated")] string api_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string ag_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string db_name;
};
		
[dynamic: ToInstance, Description("HADR Availability Group Lease Renewal."): Amended,
    Guid("{D17DBBC4-B1F2-4454-B6C6-A85604C193BA}"), locale("MS\\0x409"),
    DisplayName("hadr_ag_lease_renewal"): Amended]
class XeSqlPkg_hadr_ag_lease_renewal: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ag_lease_renewal: XeSqlPkg_hadr_ag_lease_renewal
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 new_timeout;
	[WmiDataId(6), read] uint32 error_code;
	[WmiDataId(7), read, 
				XEMapId(160),
				ValueMap { 
					"4", 
					"2", 
					"9", 
					"10", 
					"8", 
					"6", 
					"0", 
					"5", 
					"3", 
					"1", 
					"7" },
				Values { 
					"ExcessSleepSucceeded", 
					"FailedExcessSleepInvalidOnlineLease", 
					"FailedWithWindowsError", 
					"Last", 
					"LeaseExpired", 
					"LeaseNotValid", 
					"LeaseWorkerStarted", 
					"RenewSucceeded", 
					"SkipExcessSleep", 
					"StartedExcessLeaseSleep", 
					"StopLeaseRenewal" }
			] uint32 state;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("Occurs when there is a connectivity issue between the cluster and the Availability Group resulting in a failure to renew the lease"): Amended,
    Guid("{98D27D0D-4197-4707-B434-2C39A6CE8CC6}"), locale("MS\\0x409"),
    DisplayName("availability_group_lease_expired"): Amended]
class XeSqlPkg_availability_group_lease_expired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class availability_group_lease_expired: XeSqlPkg_availability_group_lease_expired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 new_timeout;
	[WmiDataId(6), read] uint64 current_time;
	[WmiDataId(7), read] uint64 lease_interval;
	[WmiDataId(8), read, 
				XEMapId(160),
				ValueMap { 
					"4", 
					"2", 
					"9", 
					"10", 
					"8", 
					"6", 
					"0", 
					"5", 
					"3", 
					"1", 
					"7" },
				Values { 
					"ExcessSleepSucceeded", 
					"FailedExcessSleepInvalidOnlineLease", 
					"FailedWithWindowsError", 
					"Last", 
					"LeaseExpired", 
					"LeaseNotValid", 
					"LeaseWorkerStarted", 
					"RenewSucceeded", 
					"SkipExcessSleep", 
					"StartedExcessLeaseSleep", 
					"StopLeaseRenewal" }
			] uint32 state;
	[WmiDataId(9), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
};
		
[dynamic: ToInstance, Description("HADR availability replica mutex acquisition state for synchronization of ar manager startup and shutdown operations."): Amended,
    Guid("{5d239fac-407a-4fb4-8257-77952f3fd29f}"), locale("MS\\0x409"),
    DisplayName("hadr_ar_manager_mutex_acquisition_state"): Amended]
class XeSqlPkg_hadr_ar_manager_mutex_acquisition_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ar_manager_mutex_acquisition_state: XeSqlPkg_hadr_ar_manager_mutex_acquisition_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(50),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"AttemptToAcquire", 
					"Acquired", 
					"Released" }
			] uint32 acquisition_state;
};
		
[dynamic: ToInstance, Description("HADR availability replica critical section entry state (point of interest for tracing/testing)."): Amended,
    Guid("{bac45d5d-f354-40f5-81c4-dacc7a49fd5f}"), locale("MS\\0x409"),
    DisplayName("hadr_ar_critical_section_entry_state"): Amended]
class XeSqlPkg_hadr_ar_critical_section_entry_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ar_critical_section_entry_state: XeSqlPkg_hadr_ar_critical_section_entry_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(51),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"AttemptToEnter", 
					"Entered", 
					"Exit" }
			] uint32 entry_state;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("HADR availability group mutex acquisition state (point of interest for tracing/testing) for accessing local availability group config data."): Amended,
    Guid("{2636b74d-18b4-4e23-b38e-ea4b5c36c102}"), locale("MS\\0x409"),
    DisplayName("hadr_ag_config_data_mutex_acquisition_state"): Amended]
class XeSqlPkg_hadr_ag_config_data_mutex_acquisition_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ag_config_data_mutex_acquisition_state: XeSqlPkg_hadr_ag_config_data_mutex_acquisition_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(50),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"AttemptToAcquire", 
					"Acquired", 
					"Released" }
			] uint32 acquisition_state;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("HADR Database Replica has been fully unjoined from the Availability Group."): Amended,
    Guid("{89753de5-9e46-4653-8153-e02a5d10f834}"), locale("MS\\0x409"),
    DisplayName("hadr_database_replica_disjoin_completion"): Amended]
class XeSqlPkg_hadr_database_replica_disjoin_completion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_database_replica_disjoin_completion: XeSqlPkg_hadr_database_replica_disjoin_completion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a HADR replica controller outputs a debug message."): Amended,
    Guid("{8834D9D9-C5EE-4A48-93EA-C6C9C7104C8A}"), locale("MS\\0x409"),
    DisplayName("hadr_ar_controller_debug"): Amended]
class XeSqlPkg_hadr_ar_controller_debug: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ar_controller_debug: XeSqlPkg_hadr_ar_controller_debug
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid ag_id;
	[WmiDataId(6), read, Extension("Guid")] guid replica_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string debug_message;
};
		
[dynamic: ToInstance, Description("HADR Database Replica XCluster Configuration Message."): Amended,
    Guid("{9C947C00-3DA5-42CA-84DC-887184ADA6D5}"), locale("MS\\0x409"),
    DisplayName("hadr_xcluster_config_msg"): Amended]
class XeSqlPkg_hadr_xcluster_config_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_xcluster_config_msg: XeSqlPkg_hadr_xcluster_config_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 message_op;
	[WmiDataId(6), read] uint64 message_type;
	[WmiDataId(7), read] uint64 message_id;
	[WmiDataId(8), read] uint64 message_ballot;
	[WmiDataId(9), read] uint64 message_size;
	[WmiDataId(10), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(11), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when secondary is going to append a log block to logmgr."): Amended,
    Guid("{226B89D5-F431-4187-871B-6D00FD1C1722}"), locale("MS\\0x409"),
    DisplayName("hadr_apply_log_block"): Amended]
class XeSqlPkg_hadr_apply_log_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apply_log_block: XeSqlPkg_hadr_apply_log_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint32 log_block_size;
	[WmiDataId(7), read] uint64 log_block_acknowledgment_sequence;
	[WmiDataId(8), read] uint64 processing_time;
	[WmiDataId(9), read] uint64 log_cache_copy_time;
	[WmiDataId(10), read] uint64 apply_ready_queue_size;
	[WmiDataId(11), read] uint64 apply_pending_queue_size;
	[WmiDataId(12), read] uint16 mode;
	[WmiDataId(13), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when secondary is going to append a log block to logmgr."): Amended,
    Guid("{226B89D5-F431-4187-871B-6D00FD1C1722}"), locale("MS\\0x409"),
    DisplayName("hadr_apply_log_block"): Amended]
class XeSqlPkg_hadr_apply_log_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_apply_log_block: XeSqlPkg_hadr_apply_log_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 start_timestamp;
	[WmiDataId(6), read] uint64 log_accept_start_timestamp;
	[WmiDataId(7), read] uint64 processing_time;
	[WmiDataId(8), read] uint64 log_block_id;
	[WmiDataId(9), read] uint32 log_block_size;
	[WmiDataId(10), read] uint64 log_block_acknowledgment_sequence;
	[WmiDataId(11), read] uint64 total_processing_time;
	[WmiDataId(12), read] uint64 log_cache_copy_time;
	[WmiDataId(13), read] uint64 apply_ready_queue_size;
	[WmiDataId(14), read] uint64 apply_pending_queue_size;
	[WmiDataId(15), read] uint16 mode;
	[WmiDataId(16), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs just prior to the update of the EOL LSN"): Amended,
    Guid("{5158EB8E-5991-4981-A699-55D176507D7F}"), locale("MS\\0x409"),
    DisplayName("before_redo_lsn_update"): Amended]
class XeSqlPkg_before_redo_lsn_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class before_redo_lsn_update: XeSqlPkg_before_redo_lsn_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when primary has captured a log block."): Amended,
    Guid("{06431D78-4587-411C-AF25-EFE0D599CDF1}"), locale("MS\\0x409"),
    DisplayName("hadr_capture_log_block"): Amended]
class XeSqlPkg_hadr_capture_log_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_capture_log_block: XeSqlPkg_hadr_capture_log_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint32 log_block_size;
	[WmiDataId(7), read] uint64 log_block_sequence;
	[WmiDataId(8), read] uint64 log_block_acknowledgment_sequence;
	[WmiDataId(9), read] uint32 queue_size;
	[WmiDataId(10), read] uint16 mode;
	[WmiDataId(11), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(12), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(13), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary has captured a log block."): Amended,
    Guid("{06431D78-4587-411C-AF25-EFE0D599CDF1}"), locale("MS\\0x409"),
    DisplayName("hadr_capture_log_block"): Amended]
class XeSqlPkg_hadr_capture_log_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_capture_log_block: XeSqlPkg_hadr_capture_log_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 processing_time;
	[WmiDataId(6), read] uint64 start_timestamp;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint32 log_block_size;
	[WmiDataId(9), read] uint64 log_block_sequence;
	[WmiDataId(10), read] uint64 log_block_acknowledgment_sequence;
	[WmiDataId(11), read] uint32 queue_size;
	[WmiDataId(12), read] uint16 mode;
	[WmiDataId(13), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(14), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(15), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary has captured a log block which starts new virtual file."): Amended,
    Guid("{27DF1E5B-22DD-423B-8D02-56835EC9DAF1}"), locale("MS\\0x409"),
    DisplayName("hadr_capture_vlfheader"): Amended]
class XeSqlPkg_hadr_capture_vlfheader: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_capture_vlfheader: XeSqlPkg_hadr_capture_vlfheader
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(8), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary has captured a log block which starts new virtual file."): Amended,
    Guid("{27DF1E5B-22DD-423B-8D02-56835EC9DAF1}"), locale("MS\\0x409"),
    DisplayName("hadr_capture_vlfheader"): Amended]
class XeSqlPkg_hadr_capture_vlfheader: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_capture_vlfheader: XeSqlPkg_hadr_capture_vlfheader
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 processing_time;
	[WmiDataId(6), read] uint64 start_timestamp;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint16 file_id;
	[WmiDataId(9), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(10), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary is waiting for filestream to be sent."): Amended,
    Guid("{E167EF3D-AD68-4FE0-BF0F-4F85F03EB2E2}"), locale("MS\\0x409"),
    DisplayName("hadr_capture_filestream_wait"): Amended]
class XeSqlPkg_hadr_capture_filestream_wait: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_capture_filestream_wait: XeSqlPkg_hadr_capture_filestream_wait
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 processing_time;
	[WmiDataId(6), read] uint64 start_timestamp;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when secondary is going to apply a VLF header."): Amended,
    Guid("{A3E65B18-EC06-4546-9835-90B440EBC98F}"), locale("MS\\0x409"),
    DisplayName("hadr_apply_vlfheader"): Amended]
class XeSqlPkg_hadr_apply_vlfheader: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apply_vlfheader: XeSqlPkg_hadr_apply_vlfheader
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read, Extension("Guid")] guid hadr_database_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary or secondary DBR is changing state"): Amended,
    Guid("{97AC5E41-3A6E-4B2A-96AC-A9EBA66D5BB7}"), locale("MS\\0x409"),
    DisplayName("hadr_scan_state"): Amended]
class XeSqlPkg_hadr_scan_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_scan_state: XeSqlPkg_hadr_scan_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  success;
	[WmiDataId(6), read, 
				XEMapId(135),
				ValueMap { 
					"6", 
					"7", 
					"5", 
					"2", 
					"0", 
					"4", 
					"3", 
					"1" },
				Values { 
					"AcceptingLog", 
					"Count", 
					"SendingLog", 
					"SendWatermark", 
					"Uninitialized", 
					"WaitForRedo", 
					"WaitForUndo", 
					"WaitForWatermark" }
			] uint32 current_state;
	[WmiDataId(7), read, 
				XEMapId(135),
				ValueMap { 
					"6", 
					"7", 
					"5", 
					"2", 
					"0", 
					"4", 
					"3", 
					"1" },
				Values { 
					"AcceptingLog", 
					"Count", 
					"SendingLog", 
					"SendWatermark", 
					"Uninitialized", 
					"WaitForRedo", 
					"WaitForUndo", 
					"WaitForWatermark" }
			] uint32 target_state;
	[WmiDataId(8), read, Extension("Guid")] guid hadr_database_id;
	[WmiDataId(9), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string availability_group_resource_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary send or secondary receives logblock message."): Amended,
    Guid("{BF35D86D-E5DB-4BD6-BFBB-A36955898DED}"), locale("MS\\0x409"),
    DisplayName("hadr_dump_log_block"): Amended]
class XeSqlPkg_hadr_dump_log_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_dump_log_block: XeSqlPkg_hadr_dump_log_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint32 log_block_size;
	[WmiDataId(7), read] uint32 log_buffer_size;
	[WmiDataId(8), read] uint64 fc_sequence;
	[WmiDataId(9), read] uint64 scan_generation;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(11), read, Extension("Variant")] object log_buffer;
};
		
[dynamic: ToInstance, Description("Occurs after a log block message has been sent. This event is only used for failpoints."): Amended,
    Guid("{ceb34131-40a8-44c1-a59e-e4f04305e78e}"), locale("MS\\0x409"),
    DisplayName("hadr_log_block_send_complete"): Amended]
class XeSqlPkg_hadr_log_block_send_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_log_block_send_complete: XeSqlPkg_hadr_log_block_send_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  has_been_sent;
	[WmiDataId(6), read] uint64 processing_time;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint32 log_block_size;
	[WmiDataId(9), read] uint32 log_buffer_size;
};
		
[dynamic: ToInstance, Description("Occurs after a log block message has been sent. This event is only used for failpoints."): Amended,
    Guid("{ceb34131-40a8-44c1-a59e-e4f04305e78e}"), locale("MS\\0x409"),
    DisplayName("hadr_log_block_send_complete"): Amended]
class XeSqlPkg_hadr_log_block_send_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_log_block_send_complete: XeSqlPkg_hadr_log_block_send_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 start_timestamp;
	[WmiDataId(6), read] sint8  has_been_sent;
	[WmiDataId(7), read] uint64 total_processing_time;
	[WmiDataId(8), read] uint64 log_block_id;
	[WmiDataId(9), read] uint32 log_block_size;
	[WmiDataId(10), read] uint32 log_buffer_size;
};
		
[dynamic: ToInstance, Description("Occurs after an lsn message has been sent."): Amended,
    Guid("{AB490538-2E27-4CE7-9615-D1B2A460F1D1}"), locale("MS\\0x409"),
    DisplayName("hadr_lsn_send_complete"): Amended]
class XeSqlPkg_hadr_lsn_send_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_lsn_send_complete: XeSqlPkg_hadr_lsn_send_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 start_timestamp;
	[WmiDataId(6), read] uint64 total_processing_time;
	[WmiDataId(7), read] uint64 total_sending_time;
	[WmiDataId(8), read] uint64 log_block_id;
	[WmiDataId(9), read] sint8  has_been_sent;
};
		
[dynamic: ToInstance, Description("Occurs when primary send or secondary receives vlfheader message."): Amended,
    Guid("{E3DAAE1F-B29E-4433-A5CD-0C86832A1DA6}"), locale("MS\\0x409"),
    DisplayName("hadr_dump_vlf_header"): Amended]
class XeSqlPkg_hadr_dump_vlf_header: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_dump_vlf_header: XeSqlPkg_hadr_dump_vlf_header
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint32 vlf_status;
	[WmiDataId(7), read] uint16 vlf_fileid;
	[WmiDataId(8), read] uint64 scan_generation;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string vlf_physical_filename;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string vlf_logical_filename;
	[WmiDataId(11), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(12), read, Extension("Variant")] object log_buffer;
};
		
[dynamic: ToInstance, Description("Occurs when secondary sends progress message."): Amended,
    Guid("{0755B10B-B355-4397-A1AB-8FE2D57953D2}"), locale("MS\\0x409"),
    DisplayName("hadr_dump_log_progress"): Amended]
class XeSqlPkg_hadr_dump_log_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_dump_log_progress: XeSqlPkg_hadr_dump_log_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 last_shipped_log_block_id;
	[WmiDataId(6), read] uint32 last_shipped_log_block_size;
	[WmiDataId(7), read] uint64 sequence_num;
	[WmiDataId(8), read] uint64 target_redo;
	[WmiDataId(9), read] uint64 redo_rate;
	[WmiDataId(10), read] uint64 redo_queue_size;
	[WmiDataId(11), read] uint64 scan_generation;
	[WmiDataId(12), read] sint8  is_send_watermark;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string last_redone_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string hardened_lsn;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string truncation_lsn;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string end_of_log_lsn;
	[WmiDataId(17), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary sends progress message."): Amended,
    Guid("{72A07A74-4C82-4331-B45C-EC7E92F9778D}"), locale("MS\\0x409"),
    DisplayName("hadr_dump_primary_progress"): Amended]
class XeSqlPkg_hadr_dump_primary_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_dump_primary_progress: XeSqlPkg_hadr_dump_primary_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 send_queue_size;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string common_redo_lsn;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string truncation_lsn;
	[WmiDataId(8), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary sends progress message."): Amended,
    Guid("{72A07A74-4C82-4331-B45C-EC7E92F9778D}"), locale("MS\\0x409"),
    DisplayName("hadr_dump_primary_progress"): Amended]
class XeSqlPkg_hadr_dump_primary_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_dump_primary_progress: XeSqlPkg_hadr_dump_primary_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 send_queue_size;
	[WmiDataId(6), read] uint64 log_send_rate;
	[WmiDataId(7), read] uint64 filestream_send_rate;
	[WmiDataId(8), read] uint64 xtp_safe_read_timestamp;
	[WmiDataId(9), read] uint64 xtp_safe_read_log_block_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string common_redo_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string truncation_lsn;
	[WmiDataId(12), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Occurs when sync secondary sends a progress message"): Amended,
    Guid("{b46b150f-64e6-4c56-a005-0f8bf4302a4b}"), locale("MS\\0x409"),
    DisplayName("hadr_dump_sync_primary_progress"): Amended]
class XeSqlPkg_hadr_dump_sync_primary_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_dump_sync_primary_progress: XeSqlPkg_hadr_dump_sync_primary_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 hardened_log_block_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string hardened_lsn;
	[WmiDataId(7), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Occurs when we're crafting a message to send containing a new hardened LSN on a secondary. Test only."): Amended,
    Guid("{bf5d5752-52bf-465c-9afd-7037b9cfbda6}"), locale("MS\\0x409"),
    DisplayName("hadr_send_harden_lsn_message"): Amended]
class XeSqlPkg_hadr_send_harden_lsn_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_send_harden_lsn_message: XeSqlPkg_hadr_send_harden_lsn_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 writelog_wait;
	[WmiDataId(6), read] uint64 total_wait;
	[WmiDataId(7), read] uint16 mode;
	[WmiDataId(8), read] uint64 processing_time;
	[WmiDataId(9), read] uint64 sending_time;
	[WmiDataId(10), read] uint64 log_block_id;
	[WmiDataId(11), read] sint8  waited;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string hardened_lsn;
	[WmiDataId(13), read, Extension("Guid")] guid hadr_database_id;
	[WmiDataId(14), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when we're crafting a message to send containing a new hardened LSN on a secondary. Test only."): Amended,
    Guid("{bf5d5752-52bf-465c-9afd-7037b9cfbda6}"), locale("MS\\0x409"),
    DisplayName("hadr_send_harden_lsn_message"): Amended]
class XeSqlPkg_hadr_send_harden_lsn_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_send_harden_lsn_message: XeSqlPkg_hadr_send_harden_lsn_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 start_timestamp;
	[WmiDataId(6), read] uint64 writelog_wait;
	[WmiDataId(7), read] uint64 total_wait;
	[WmiDataId(8), read] uint16 mode;
	[WmiDataId(9), read] uint64 processing_time;
	[WmiDataId(10), read] uint64 sending_time;
	[WmiDataId(11), read] uint64 log_block_id;
	[WmiDataId(12), read] sint8  waited;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string hardened_lsn;
	[WmiDataId(14), read, Extension("Guid")] guid hadr_database_id;
	[WmiDataId(15), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(16), read, Extension("Guid")] guid availability_group_id;
};
		
[dynamic: ToInstance, Description("Occurs when a new hardened LSN from the secondary."): Amended,
    Guid("{8EBDD19C-2988-45D7-A29B-CA6FFE2416A3}"), locale("MS\\0x409"),
    DisplayName("hadr_receive_harden_lsn_message"): Amended]
class XeSqlPkg_hadr_receive_harden_lsn_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_receive_harden_lsn_message: XeSqlPkg_hadr_receive_harden_lsn_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 processing_time;
	[WmiDataId(6), read] uint64 start_timestamp;
	[WmiDataId(7), read] uint16 mode;
	[WmiDataId(8), read] uint64 sequence_number;
	[WmiDataId(9), read] uint64 acknowledgment_number;
	[WmiDataId(10), read] uint64 log_block_id;
	[WmiDataId(11), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(12), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(13), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(14), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when a new hardened LSN from the secondary."): Amended,
    Guid("{8EBDD19C-2988-45D7-A29B-CA6FFE2416A3}"), locale("MS\\0x409"),
    DisplayName("hadr_receive_harden_lsn_message"): Amended]
class XeSqlPkg_hadr_receive_harden_lsn_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_receive_harden_lsn_message: XeSqlPkg_hadr_receive_harden_lsn_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 processing_time;
	[WmiDataId(6), read] uint64 start_timestamp;
	[WmiDataId(7), read] uint16 mode;
	[WmiDataId(8), read] uint64 sequence_number;
	[WmiDataId(9), read] uint64 acknowledgment_number;
	[WmiDataId(10), read] uint64 log_block_id;
	[WmiDataId(11), read, Pointer] object  chadr_recv_message_address;
	[WmiDataId(12), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(13), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(14), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(15), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when we're crafting a message to send containing a new truncation LSN on a secondary. Test only."): Amended,
    Guid("{449B4538-33E2-44F5-A586-194DD15C9A44}"), locale("MS\\0x409"),
    DisplayName("hadr_send_truncation_lsn_message"): Amended]
class XeSqlPkg_hadr_send_truncation_lsn_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_send_truncation_lsn_message: XeSqlPkg_hadr_send_truncation_lsn_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string truncation_lsn;
	[WmiDataId(6), read, Extension("Guid")] guid hadr_database_id;
	[WmiDataId(7), read, Extension("Guid")] guid ag_id;
	[WmiDataId(8), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{e2a283af-23c0-40ad-a58d-740a8b71f1f1}"), locale("MS\\0x409"),
    DisplayName("hadr_partner_updated_lsns"): Amended]
class XeSqlPkg_hadr_partner_updated_lsns: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_partner_updated_lsns: XeSqlPkg_hadr_partner_updated_lsns
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 redo_target;
	[WmiDataId(6), read, Extension("WmiTime")] uint64 redone_time;
	[WmiDataId(7), read] uint64 redo_rate;
	[WmiDataId(8), read] uint64 redo_queue_size;
	[WmiDataId(9), read, Extension("WmiTime")] uint64 commit_time;
	[WmiDataId(10), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(11), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid database_replica_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string truncation_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string hardened_lsn;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string undo_lsn;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string oldest_xact_lsn;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string start_of_log_lsn;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string redo_lsn;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string end_of_log_lsn;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string commit_lsn;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string shipped_lsn;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string log_scan_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when evaluating read-only routing information on a local primary DB replica."): Amended,
    Guid("{C1AA9158-5470-49E3-83D9-C73A7E2F7B99}"), locale("MS\\0x409"),
    DisplayName("hadr_evaluate_readonly_routing_info"): Amended]
class XeSqlPkg_hadr_evaluate_readonly_routing_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_evaluate_readonly_routing_info: XeSqlPkg_hadr_evaluate_readonly_routing_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_empty;
	[WmiDataId(6), read] sint8  is_primary;
	[WmiDataId(7), read] sint8  is_routing_replica_not_found;
	[WmiDataId(8), read] uint16 port;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string host_name;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(11), read, Extension("Guid")] guid ag_primary_replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid ag_id;
};
		
[dynamic: ToInstance, Description("A read-only routing operation successfully completed."): Amended,
    Guid("{7DF7E9C2-5727-432D-8938-E8B1CB7C0E5A}"), locale("MS\\0x409"),
    DisplayName("read_only_route_complete"): Amended]
class XeSqlPkg_read_only_route_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class read_only_route_complete: XeSqlPkg_read_only_route_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 route_port;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string route_server_name;
};
		
[dynamic: ToInstance, Description("The read-only routing operation failed. This is sent when the primary replica has a READ_ONLY_ROUTING_LIST configured and none of the replicas in the list are available for read-only routing."): Amended,
    Guid("{66E79EBD-B0C0-489C-892C-96E5B88A9F40}"), locale("MS\\0x409"),
    DisplayName("read_only_route_fail"): Amended]
class XeSqlPkg_read_only_route_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class read_only_route_fail: XeSqlPkg_read_only_route_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("The read-only routing operation failed. This is sent when the primary replica has a READ_ONLY_ROUTING_LIST configured and none of the replicas in the list are available for read-only routing."): Amended,
    Guid("{66E79EBD-B0C0-489C-892C-96E5B88A9F40}"), locale("MS\\0x409"),
    DisplayName("read_only_route_fail"): Amended]
class XeSqlPkg_read_only_route_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class read_only_route_fail: XeSqlPkg_read_only_route_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 port;
	[WmiDataId(6), read, Extension("Guid")] guid route_availability_group_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string route_host;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string intent_database;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string login_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string remote_ip;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string client_interface_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string failure_reason;
};
		
[dynamic: ToInstance, Description("Occurs when Always On DDL is executed including CREATE, ALTER or DROP"): Amended,
    Guid("{29777CC6-8145-490d-AFF2-36E18D2785FC}"), locale("MS\\0x409"),
    DisplayName("alwayson_ddl_executed"): Amended]
class XeSqlPkg_alwayson_ddl_executed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class alwayson_ddl_executed: XeSqlPkg_alwayson_ddl_executed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(58),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"create", 
					"drop", 
					"alter" }
			] uint8 ddl_action;
	[WmiDataId(6), read, 
				XEMapId(59),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"begin", 
					"commit", 
					"rollback" }
			] uint8 ddl_phase;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
};
		
[dynamic: ToInstance, Description("Occurs when Always On DDL is executed including CREATE, ALTER or DROP"): Amended,
    Guid("{29777CC6-8145-490d-AFF2-36E18D2785FC}"), locale("MS\\0x409"),
    DisplayName("alwayson_ddl_executed"): Amended]
class XeSqlPkg_alwayson_ddl_executed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class alwayson_ddl_executed: XeSqlPkg_alwayson_ddl_executed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(58),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"create", 
					"drop", 
					"alter" }
			] uint8 ddl_action;
	[WmiDataId(6), read, 
				XEMapId(59),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"begin", 
					"commit", 
					"rollback" }
			] uint8 ddl_phase;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string nt_username;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string client_hostname;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string client_app_name;
};
		
[dynamic: ToInstance, Description("Occurs when the failover validates the readiness of replica as a primary. For instance, the failover validation will return false when not all databases are synchronized or not joined"): Amended,
    Guid("{1DBAD0D7-5B6F-443c-B25B-58F48FA451BE}"), locale("MS\\0x409"),
    DisplayName("availability_replica_automatic_failover_validation"): Amended]
class XeSqlPkg_availability_replica_automatic_failover_validation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class availability_replica_automatic_failover_validation: XeSqlPkg_availability_replica_automatic_failover_validation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  forced_quorum;
	[WmiDataId(6), read] sint8  joined_and_synchronized;
	[WmiDataId(7), read] sint8  previous_primary_or_automatic_failover_target;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(10), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when the failover validates the readiness of replica as a primary. For instance, the failover validation will return false when not all databases are synchronized or not joined"): Amended,
    Guid("{1DBAD0D7-5B6F-443c-B25B-58F48FA451BE}"), locale("MS\\0x409"),
    DisplayName("availability_replica_automatic_failover_validation"): Amended]
class XeSqlPkg_availability_replica_automatic_failover_validation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class availability_replica_automatic_failover_validation: XeSqlPkg_availability_replica_automatic_failover_validation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  forced_quorum;
	[WmiDataId(6), read] sint8  joined_and_synchronized;
	[WmiDataId(7), read] sint8  previous_primary_or_automatic_failover_target;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(10), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string availability_replica_name;
};
		
[dynamic: ToInstance, Description("Occurs when a database reports a fault to the availability replica manager which will trigger a replica restart if the database is critical"): Amended,
    Guid("{1024f1ab-8a43-48e1-bb94-c5f61bf1266d}"), locale("MS\\0x409"),
    DisplayName("availability_replica_database_fault_reporting"): Amended]
class XeSqlPkg_availability_replica_database_fault_reporting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class availability_replica_database_fault_reporting: XeSqlPkg_availability_replica_database_fault_reporting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 fault_type;
	[WmiDataId(6), read] sint8  is_critical;
	[WmiDataId(7), read] uint32 failover_ready_replicas;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(10), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string availability_replica_name;
	[WmiDataId(12), read, Extension("Guid")] guid database_replica_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when DB log generation throttle changes."): Amended,
    Guid("{AD54783A-07CC-4616-B222-E10226B98D96}"), locale("MS\\0x409"),
    DisplayName("hadr_db_log_throttle"): Amended]
class XeSqlPkg_hadr_db_log_throttle: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_log_throttle: XeSqlPkg_hadr_db_log_throttle
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  throttle_on;
	[WmiDataId(6), read] sint8  is_reseeding_replica;
	[WmiDataId(7), read] sint8  is_seeding_in_progress;
	[WmiDataId(8), read] uint64 total_throttle_time;
	[WmiDataId(9), read] uint64 current_throttle_time;
	[WmiDataId(10), read] uint64 throttled_log_generation_rate;
	[WmiDataId(11), read] uint64 sku_max_log_generation_rate;
	[WmiDataId(12), read] uint64 log_generation_rate_due_to_log_size;
	[WmiDataId(13), read] uint64 current_log_size;
	[WmiDataId(14), read] uint64 log_size_throttling_threshold;
	[WmiDataId(15), read] uint64 is_throttling_happening_due_to_log_size;
	[WmiDataId(16), read] uint64 percent_throttle_open;
	[WmiDataId(17), read, 
				XEMapId(184),
				ValueMap { 
					"3", 
					"5", 
					"4", 
					"0", 
					"2", 
					"1", 
					"6" },
				Values { 
					"LogSize", 
					"LogStorageCapabilities", 
					"MismatchedSlo", 
					"NoThrottling", 
					"QueueSize", 
					"Seeding", 
					"SloDowngrade" }
			] sint32 throttling_reason;
	[WmiDataId(18), read, 
				XEMapId(185),
				ValueMap { 
					"3", 
					"4", 
					"9", 
					"1", 
					"7", 
					"5", 
					"8", 
					"16", 
					"19", 
					"2", 
					"14", 
					"15", 
					"0", 
					"13", 
					"18", 
					"6", 
					"11", 
					"10", 
					"12", 
					"17" },
				Values { 
					"ActiveBackup", 
					"ActiveTransaction", 
					"AvailabilityReplica", 
					"CheckpointLsn", 
					"CopyOnWriteCreation", 
					"DatabaseMirroring", 
					"DiagnosticScan", 
					"HkCheckpoint", 
					"HoldupArraySize", 
					"LogBackup", 
					"LogConsolidationHost", 
					"LogHostedBackups", 
					"NoHoldup", 
					"OldestPage", 
					"Other", 
					"ReplicationXact", 
					"SEReplActiveCatchup", 
					"SEReplCatchupQueue", 
					"SEReplTemporaryReservation", 
					"SLogScan" }
			] sint32 log_truncation_holdup;
	[WmiDataId(19), read] uint64 max_log_size;
	[WmiDataId(20), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(21), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(22), read, Extension("Guid")] guid database_replica_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when HADR Fabric log management component updates log throttle."): Amended,
    Guid("{DA54783A-07AA-4616-B222-E10226B98D89}"), locale("MS\\0x409"),
    DisplayName("hadr_db_log_throttle_input"): Amended]
class XeSqlPkg_hadr_db_log_throttle_input: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_log_throttle_input: XeSqlPkg_hadr_db_log_throttle_input
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 throttling_progress;
	[WmiDataId(6), read] sint8  throttle_started;
	[WmiDataId(7), read] uint64 send_time;
	[WmiDataId(8), read] uint64 redo_time;
	[WmiDataId(9), read] uint64 redo_rate;
	[WmiDataId(10), read] uint64 redo_queue_size;
	[WmiDataId(11), read] uint64 send_rate;
	[WmiDataId(12), read] uint64 send_queue_size;
	[WmiDataId(13), read] uint64 reseed_threshold;
	[WmiDataId(14), read] uint64 log_holdup_in_bytes_due_to_slow_truncating_secondary_partner;
	[WmiDataId(15), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(16), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(17), read, Extension("Guid")] guid database_replica_id;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when HADR Fabric log management component updates log throttle."): Amended,
    Guid("{DA54783A-07AA-4616-B222-E10226B98D89}"), locale("MS\\0x409"),
    DisplayName("hadr_db_log_throttle_input"): Amended]
class XeSqlPkg_hadr_db_log_throttle_input: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_db_log_throttle_input: XeSqlPkg_hadr_db_log_throttle_input
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(184),
				ValueMap { 
					"3", 
					"5", 
					"4", 
					"0", 
					"2", 
					"1", 
					"6" },
				Values { 
					"LogSize", 
					"LogStorageCapabilities", 
					"MismatchedSlo", 
					"NoThrottling", 
					"QueueSize", 
					"Seeding", 
					"SloDowngrade" }
			] sint32 throttling_reason;
	[WmiDataId(6), read] uint64 throttling_progress;
	[WmiDataId(7), read] sint8  throttle_started;
	[WmiDataId(8), read] uint64 send_time;
	[WmiDataId(9), read] uint64 redo_time;
	[WmiDataId(10), read] uint64 redo_rate;
	[WmiDataId(11), read] uint64 redo_queue_size;
	[WmiDataId(12), read] uint64 send_rate;
	[WmiDataId(13), read] uint64 send_queue_size;
	[WmiDataId(14), read] uint64 reseed_threshold;
	[WmiDataId(15), read] uint64 log_holdup_in_bytes_due_to_slow_truncating_secondary_partner;
	[WmiDataId(16), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(17), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(18), read, Extension("Guid")] guid database_replica_id;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a HADR secondary DB falls too far behind primary and is marked for reseed."): Amended,
    Guid("{F7BA9BE4-92E0-4261-B02B-F8413CA9397E}"), locale("MS\\0x409"),
    DisplayName("hadr_db_marked_for_reseed"): Amended]
class XeSqlPkg_hadr_db_marked_for_reseed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_marked_for_reseed: XeSqlPkg_hadr_db_marked_for_reseed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 catchup_queue_size;
	[WmiDataId(6), read] uint64 reseed_threshold;
	[WmiDataId(7), read] uint64 holdup_due_to_secondary_partner;
	[WmiDataId(8), read] uint64 truncation_holdup_threshold;
	[WmiDataId(9), read] uint64 geo_truncation_holdup_threshold;
	[WmiDataId(10), read, 
				XEMapId(149),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"CATCHUP_QUEUE_EXCEEDS_MAX_SIZE", 
					"SLOW_TRUNCATING_SECONDARY_REPLICA" }
			] uint32 reseed_reason;
	[WmiDataId(11), read, Extension("Guid")] guid secondary_availability_replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(13), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(14), read, Extension("Guid")] guid database_replica_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string truncation_lsn_without_secondary_partner;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string secondary_truncation_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when seeding is cancelled due to log full."): Amended,
    Guid("{2EEF93F2-A955-48F4-B0D8-44BBC63EFD62}"), locale("MS\\0x409"),
    DisplayName("hadr_db_log_management_seeding_cancelled"): Amended]
class XeSqlPkg_hadr_db_log_management_seeding_cancelled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_log_management_seeding_cancelled: XeSqlPkg_hadr_db_log_management_seeding_cancelled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid secondary_availability_replica_id;
	[WmiDataId(6), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(7), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string truncation_lsn_without_secondary_partner;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string current_truncation_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when automatic log management configurations are read."): Amended,
    Guid("{BAA3783A-971D-A122-C21F-E10226BA8D96}"), locale("MS\\0x409"),
    DisplayName("hadr_db_log_management_configuration_parameters"): Amended]
class XeSqlPkg_hadr_db_log_management_configuration_parameters: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hadr_db_log_management_configuration_parameters: XeSqlPkg_hadr_db_log_management_configuration_parameters
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_auto_log_management_enabled;
	[WmiDataId(6), read] real64 log_generation_max_throttle_pct;
	[WmiDataId(7), read] uint64 expected_send_time_threshold_in_msecs;
	[WmiDataId(8), read] uint64 expected_redo_time_threshold_in_msecs;
	[WmiDataId(9), read] uint64 expected_send_time_threshold_for_geo_replica_in_secs;
	[WmiDataId(10), read] real64 log_generation_throttle_delta_pct;
	[WmiDataId(11), read] real64 log_consumption_threshold_for_throttling_pct;
	[WmiDataId(12), read] uint64 throttle_update_interval_in_msecs;
	[WmiDataId(13), read] real64 max_catchup_queue_size_threshold_pct;
	[WmiDataId(14), read] uint64 max_catchup_queue_size_in_bytes;
	[WmiDataId(15), read] real64 log_size_due_to_secondary_truncation_holdup_pct;
	[WmiDataId(16), read] real64 log_consumption_threshold_for_xact_abort_pct;
	[WmiDataId(17), read] real64 age_threshold_for_xact_abort_in_minutes;
	[WmiDataId(18), read] uint64 max_log_generation_rate_in_bytes_per_sec;
	[WmiDataId(19), read] uint64 min_log_generation_rate_in_bytes_per_sec;
	[WmiDataId(20), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(21), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(22), read, Extension("Guid")] guid database_replica_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Raised when a long running transaction is force terminated by the system to avoid log getting full."): Amended,
    Guid("{778f5da5-b6fa-4797-bbce-7e77c7a3ba19}"), locale("MS\\0x409"),
    DisplayName("hadr_db_long_running_xact_aborted"): Amended]
class XeSqlPkg_hadr_db_long_running_xact_aborted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_long_running_xact_aborted: XeSqlPkg_hadr_db_long_running_xact_aborted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 xact_age_in_minutes;
	[WmiDataId(6), read] real64 log_consumption_threshold_for_xact_abort_pct;
	[WmiDataId(7), read] real64 age_threshold_for_xact_abort_in_minutes;
};
		
[dynamic: ToInstance, Description("A harden request as part of a commit or prepare failed due to remote failure."): Amended,
    Guid("{C8C740B8-A4C1-45C9-BCAD-C31067EE941B}"), locale("MS\\0x409"),
    DisplayName("hadr_db_remote_harden_failure"): Amended]
class XeSqlPkg_hadr_db_remote_harden_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_remote_harden_failure: XeSqlPkg_hadr_db_remote_harden_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 transaction_id;
	[WmiDataId(6), read] uint32 state;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 transaction_start_time;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string xdes_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string last_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string transaction_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Log send transition between log writer and log capture."): Amended,
    Guid("{0C9C200C-A64A-4C12-BE85-526B72BCE189}"), locale("MS\\0x409"),
    DisplayName("hadr_partner_log_send_transition"): Amended]
class XeSqlPkg_hadr_partner_log_send_transition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_partner_log_send_transition: XeSqlPkg_hadr_partner_log_send_transition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("WmiTime")] uint64 transition_time;
	[WmiDataId(6), read, 
				XEMapId(193),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"LogCapture", 
					"LogWriter" }
			] uint32 type;
	[WmiDataId(7), read] uint32 transition_count;
	[WmiDataId(8), read, 
				XEMapId(194),
				ValueMap { 
					"7", 
					"5", 
					"6", 
					"4", 
					"3", 
					"9", 
					"0", 
					"2", 
					"8", 
					"1" },
				Values { 
					"ContainsMustCatchupReplica", 
					"FailedToSend", 
					"FailPoint", 
					"FeatureDisabled", 
					"FileStreamProcessing", 
					"None", 
					"ReachEOL", 
					"ScanGenerationChange", 
					"UnableToGetPartnerLock", 
					"UnableToGetScanLock" }
			] uint32 transition_reason;
	[WmiDataId(9), read] uint64 log_block_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(11), read, Extension("Guid")] guid ag_id;
	[WmiDataId(12), read, Extension("Guid")] guid replica_id;
	[WmiDataId(13), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Restart partner scans for this partner."): Amended,
    Guid("{CDBD2B48-6753-480A-B435-EC78C8872D68}"), locale("MS\\0x409"),
    DisplayName("hadr_partner_restart_scan"): Amended]
class XeSqlPkg_hadr_partner_restart_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_partner_restart_scan: XeSqlPkg_hadr_partner_restart_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(195),
				ValueMap { 
					"2", 
					"4", 
					"5", 
					"1", 
					"0", 
					"3" },
				Values { 
					"FeatureSwitchModified", 
					"MapFull", 
					"MapTooBigWithGap", 
					"MissedAckSequence", 
					"RestartReasonNone", 
					"TimeoutDetected" }
			] uint32 restart_reason;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(7), read, Extension("Guid")] guid ag_id;
	[WmiDataId(8), read, Extension("Guid")] guid replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Synchronous send failure in hadr transport."): Amended,
    Guid("{23A19244-CB46-4A45-BFD5-D96D34DB9FB9}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_sync_send_failure"): Amended]
class XeSqlPkg_hadr_transport_sync_send_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_sync_send_failure: XeSqlPkg_hadr_transport_sync_send_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(196),
				ValueMap { 
					"16", 
					"3", 
					"11", 
					"22", 
					"13", 
					"18", 
					"7", 
					"15", 
					"10", 
					"4", 
					"20", 
					"9", 
					"8", 
					"12", 
					"24", 
					"6", 
					"0", 
					"19", 
					"5", 
					"21", 
					"26", 
					"14", 
					"2", 
					"23", 
					"17", 
					"25", 
					"1" },
				Values { 
					"x_etssArbitrationLost", 
					"x_etssConnecting", 
					"x_etssConnectionError", 
					"x_etssConnectionRedirected", 
					"x_etssDisconnected", 
					"x_etssDNSLookpConnectedIP", 
					"x_etssDnsLookupFailed", 
					"x_etssException", 
					"x_etssExtensiveFlowControlClose", 
					"x_etssFlowControlled", 
					"x_etssForwarderDisconnected", 
					"x_etssIdleClose", 
					"x_etssInvalidToAddress", 
					"x_etssLoginError", 
					"x_etssNegotiationRestarted", 
					"x_etssNoMemory", 
					"x_etssNone", 
					"x_etssNoProxy", 
					"x_etssNoRoute", 
					"x_etssNotFound", 
					"x_etssNumStatus", 
					"x_etssProtocolError", 
					"x_etssReady", 
					"x_etssRedirectionFailed", 
					"x_etssShutdown", 
					"x_etssSocketDuplicated", 
					"x_etssUnavailable" }
			] uint32 failure_reason;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(7), read, Extension("Guid")] guid ag_id;
	[WmiDataId(8), read, Extension("Guid")] guid replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Index Rebuild Invalidate Secondary"): Amended,
    Guid("{82784afd-bf2c-4298-9cc1-0c23b0ebc843}"), locale("MS\\0x409"),
    DisplayName("hadr_secondary_index_rebuild_invalidation"): Amended]
class XeSqlPkg_hadr_secondary_index_rebuild_invalidation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_secondary_index_rebuild_invalidation: XeSqlPkg_hadr_secondary_index_rebuild_invalidation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] sint32 index_id;
	[WmiDataId(7), read] sint8  resumable;
	[WmiDataId(8), read] sint8  rollback;
};
		
[dynamic: ToInstance, Description("Provide reason for deny external connections."): Amended,
    Guid("{02d07a3c-5f63-46bd-908b-d1d82b4bcd85}"), locale("MS\\0x409"),
    DisplayName("hadr_deny_external_connections"): Amended]
class XeSqlPkg_hadr_deny_external_connections: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_deny_external_connections: XeSqlPkg_hadr_deny_external_connections
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read, Extension("Guid")] guid group_id;
	[WmiDataId(7), read, Extension("Guid")] guid replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Hadr trace message for always_health session"): Amended,
    Guid("{A85193A3-A5F5-44AD-A464-B5BB76A02A13}"), locale("MS\\0x409"),
    DisplayName("hadr_trace_message"): Amended]
class XeSqlPkg_hadr_trace_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_trace_message: XeSqlPkg_hadr_trace_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string hadr_message;
};
		
[dynamic: ToInstance, Description("Log ucs subscription authentication failure for hybrid link."): Amended,
    Guid("{c8f017f9-cc77-4faf-9e17-f4cac68a76a5}"), locale("MS\\0x409"),
    DisplayName("hadr_hybrid_subscription_auth_failure"): Amended]
class XeSqlPkg_hadr_hybrid_subscription_auth_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_hybrid_subscription_auth_failure: XeSqlPkg_hadr_hybrid_subscription_auth_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("Log ucs subscription authentication success for hybrid link."): Amended,
    Guid("{84084503-0639-4146-8b39-50ad3e9ed194}"), locale("MS\\0x409"),
    DisplayName("hadr_hybrid_subscription_auth_success"): Amended]
class XeSqlPkg_hadr_hybrid_subscription_auth_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_hybrid_subscription_auth_success: XeSqlPkg_hadr_hybrid_subscription_auth_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("Log ucs subscription authentication retry info for hybrid link."): Amended,
    Guid("{a607e617-40fa-480b-b1fa-c2bf059390a4}"), locale("MS\\0x409"),
    DisplayName("hadr_hybrid_subscription_auth_long_retry"): Amended]
class XeSqlPkg_hadr_hybrid_subscription_auth_long_retry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_hybrid_subscription_auth_long_retry: XeSqlPkg_hadr_hybrid_subscription_auth_long_retry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Alert for long retries when sending notification request to control ring"): Amended,
    Guid("{6b0c0888-5a1a-4f47-88fa-48774bdffc70}"), locale("MS\\0x409"),
    DisplayName("hadr_chimera_send_request_to_MS_long_retry"): Amended]
class XeSqlPkg_hadr_chimera_send_request_to_MS_long_retry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_chimera_send_request_to_MS_long_retry: XeSqlPkg_hadr_chimera_send_request_to_MS_long_retry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 retry_times;
	[WmiDataId(6), read] uint32 elapsed_time_in_secs;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string cas_action;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string request_payload;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Metadata cache entry added"): Amended,
    Guid("{0811209e-b5e9-45ba-b29f-1da995a21bde}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_add"): Amended]
class XeSqlPkg_metadata_cache_add: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_add: XeSqlPkg_metadata_cache_add
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 cache_type;
	[WmiDataId(8), read, Extension("Variant")] object key;
};
		
[dynamic: ToInstance, Description("Metadata cache entry flushed"): Amended,
    Guid("{3f8a3817-df15-4041-bb68-f6f8c4cda933}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_flush"): Amended]
class XeSqlPkg_metadata_cache_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_flush: XeSqlPkg_metadata_cache_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 cache_type;
	[WmiDataId(8), read] sint8  in_cache;
	[WmiDataId(9), read] sint8  aged_out;
};
		
[dynamic: ToInstance, Description("Metadata cache entry updated"): Amended,
    Guid("{69ba0f2f-c4e5-4389-aa32-f4fb2cd1e6a5}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_update"): Amended]
class XeSqlPkg_metadata_cache_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_update: XeSqlPkg_metadata_cache_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 update_type;
	[WmiDataId(7), read] uint32 from_brick_id;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read, Extension("Variant")] object key;
};
		
[dynamic: ToInstance, Description("Metadata entry version updated"): Amended,
    Guid("{d7440919-ed32-415e-9e43-1ebd5eeff77f}"), locale("MS\\0x409"),
    DisplayName("metadata_version_update"): Amended]
class XeSqlPkg_metadata_version_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_version_update: XeSqlPkg_metadata_version_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 cache_type;
	[WmiDataId(8), read] uint64 version;
};
		
[dynamic: ToInstance, Description("Metadata manager catalog inserted"): Amended,
    Guid("{d73f384b-0476-4077-a13a-877aa54acdf3}"), locale("MS\\0x409"),
    DisplayName("metadata_manager_catalog_inserted"): Amended]
class XeSqlPkg_metadata_manager_catalog_inserted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_manager_catalog_inserted: XeSqlPkg_metadata_manager_catalog_inserted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 from_brick_id;
	[WmiDataId(8), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata manager catalog updated"): Amended,
    Guid("{f6625f11-6f0e-4c1c-84c0-91853fd09431}"), locale("MS\\0x409"),
    DisplayName("metadata_manager_catalog_updated"): Amended]
class XeSqlPkg_metadata_manager_catalog_updated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_manager_catalog_updated: XeSqlPkg_metadata_manager_catalog_updated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 from_brick_id;
	[WmiDataId(8), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata manager catalog deleted"): Amended,
    Guid("{67a4459d-e6dc-4fd2-a637-9f79155f01e6}"), locale("MS\\0x409"),
    DisplayName("metadata_manager_catalog_deleted"): Amended]
class XeSqlPkg_metadata_manager_catalog_deleted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_manager_catalog_deleted: XeSqlPkg_metadata_manager_catalog_deleted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 from_brick_id;
	[WmiDataId(8), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata agent catalog updated"): Amended,
    Guid("{8c5d28c3-c368-4fb6-8ce4-803c9fd73d1b}"), locale("MS\\0x409"),
    DisplayName("metadata_agent_catalog_updated"): Amended]
class XeSqlPkg_metadata_agent_catalog_updated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_agent_catalog_updated: XeSqlPkg_metadata_agent_catalog_updated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 update_type;
	[WmiDataId(8), read] uint32 from_brick_id;
	[WmiDataId(9), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata cache vlr posted"): Amended,
    Guid("{f0c59884-17c9-4bec-8113-94667095a7f4}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_vlr_posted"): Amended]
class XeSqlPkg_metadata_cache_vlr_posted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_vlr_posted: XeSqlPkg_metadata_cache_vlr_posted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint32 cache_type;
};
		
[dynamic: ToInstance, Description("Metadata initiate lock object"): Amended,
    Guid("{1c5b1537-fd5d-4161-90ce-ba4e1f3cd4d5}"), locale("MS\\0x409"),
    DisplayName("metadata_initiate_lock_object"): Amended]
class XeSqlPkg_metadata_initiate_lock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_initiate_lock_object: XeSqlPkg_metadata_initiate_lock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
};
		
[dynamic: ToInstance, Description("Metadata manager lock object"): Amended,
    Guid("{75b3d0af-8551-4a0c-8ede-ab3d5d21c8a0}"), locale("MS\\0x409"),
    DisplayName("metadata_manager_lock_object"): Amended]
class XeSqlPkg_metadata_manager_lock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_manager_lock_object: XeSqlPkg_metadata_manager_lock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
};
		
[dynamic: ToInstance, Description("Metadata agent lock object"): Amended,
    Guid("{79f0bc46-a30f-4215-b393-666d320f9c96}"), locale("MS\\0x409"),
    DisplayName("metadata_agent_lock_object"): Amended]
class XeSqlPkg_metadata_agent_lock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_agent_lock_object: XeSqlPkg_metadata_agent_lock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
};
		
[dynamic: ToInstance, Description("Metadata lock object"): Amended,
    Guid("{4898aca0-e2c4-11dd-baf7-0a7355d89593}"), locale("MS\\0x409"),
    DisplayName("metadata_lock_object"): Amended]
class XeSqlPkg_metadata_lock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_lock_object: XeSqlPkg_metadata_lock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
};
		
[dynamic: ToInstance, Description("Metadata initiate unlock object"): Amended,
    Guid("{7921adfe-e2c9-11dd-93e1-0a9555d89593}"), locale("MS\\0x409"),
    DisplayName("metadata_initiate_unlock_object"): Amended]
class XeSqlPkg_metadata_initiate_unlock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_initiate_unlock_object: XeSqlPkg_metadata_initiate_unlock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata unlock object"): Amended,
    Guid("{84aa24b2-e2c9-11dd-94b5-539555d89593}"), locale("MS\\0x409"),
    DisplayName("metadata_unlock_object"): Amended]
class XeSqlPkg_metadata_unlock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_unlock_object: XeSqlPkg_metadata_unlock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata add the segmentid column into secondary indexes of matrixdb heaps"): Amended,
    Guid("{99d4d8d6-9b51-4ac3-82d9-2a280bd90ed1}"), locale("MS\\0x409"),
    DisplayName("metadata_add_segmentid"): Amended]
class XeSqlPkg_metadata_add_segmentid: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_add_segmentid: XeSqlPkg_metadata_add_segmentid
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string index_name;
};
		
[dynamic: ToInstance, Description("Attempting to lookup a metadata object by name"): Amended,
    Guid("{b6a74aac-e5af-4405-8292-46de646f664b}"), locale("MS\\0x409"),
    DisplayName("metadata_name_lookup_failed"): Amended]
class XeSqlPkg_metadata_name_lookup_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_name_lookup_failed: XeSqlPkg_metadata_name_lookup_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Tracing RemoveFromCache callers"): Amended,
    Guid("{b5d4cb8e-273a-4543-ae57-f20298f3ce53}"), locale("MS\\0x409"),
    DisplayName("metadata_remove_from_cache_tracing"): Amended]
class XeSqlPkg_metadata_remove_from_cache_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_remove_from_cache_tracing: XeSqlPkg_metadata_remove_from_cache_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 primary_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string caller_function;
};
		
[dynamic: ToInstance, Description("Failed HRESULT"): Amended,
    Guid("{d9eec9e7-a0e9-4948-a077-a96404f60134}"), locale("MS\\0x409"),
    DisplayName("failed_hresult"): Amended]
class XeSqlPkg_failed_hresult: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failed_hresult: XeSqlPkg_failed_hresult
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
};
		
[dynamic: ToInstance, Description("Failed HRESULT"): Amended,
    Guid("{db4b8a86-ef93-409d-949e-d08be6b794f0}"), locale("MS\\0x409"),
    DisplayName("failed_hresult_msg"): Amended]
class XeSqlPkg_failed_hresult_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failed_hresult_msg: XeSqlPkg_failed_hresult_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string description;
};
		
[dynamic: ToInstance, Description("Event used for LIKE tests only"): Amended,
    Guid("{0c8e4395-4192-46d6-a1ba-5ecb92acfcdc}"), locale("MS\\0x409"),
    DisplayName("like_unittest"): Amended]
class XeSqlPkg_like_unittest: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class like_unittest: XeSqlPkg_like_unittest
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string text_w;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string text_w_st;
	[WmiDataId(7), read, StringTermination("NullTerminated")] string text_a;
	[WmiDataId(8), read, StringTermination("NullTerminated")] string text_a_st;
};
		
[dynamic: ToInstance, Description("Time taken to acquire a latch"): Amended,
    Guid("{3917182b-98d0-4452-b68f-a0fcff55fdeb}"), locale("MS\\0x409"),
    DisplayName("latch_acquire_time"): Amended]
class XeSqlPkg_latch_acquire_time: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_acquire_time: XeSqlPkg_latch_acquire_time
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  latch_address;
	[WmiDataId(6), read] uint64 duration_cycles;
	[WmiDataId(7), read] uint32 sample_count;
	[WmiDataId(8), read] uint32 reference_count;
	[WmiDataId(9), read] uint64 total_duration_cycles;
	[WmiDataId(10), read] uint64 promotion_threshold_cycles;
	[WmiDataId(11), read] uint16 file_id;
	[WmiDataId(12), read] uint32 page_id;
	[WmiDataId(13), read, 
				XEMapId(231),
				BitMap { 
					"0", 
					"16", 
					"1048576", 
					"256", 
					"131072", 
					"262144", 
					"8192", 
					"2", 
					"64", 
					"268435456", 
					"128", 
					"134217728", 
					"536870912", 
					"65536", 
					"32768", 
					"8", 
					"4", 
					"2048", 
					"4194304", 
					"8388608", 
					"33554432", 
					"16384", 
					"67108864", 
					"2097152", 
					"524288", 
					"32", 
					"1", 
					"16777216", 
					"3221225472", 
					"4096", 
					"1024", 
					"512" },
				BitValues { 
					"BSTATS_NONE", 
					"AUDITED", 
					"CHECKWRITE", 
					"CHKGEN", 
					"COPYONWRITE", 
					"COPYWRITTEN", 
					"DBREMOVED", 
					"DIRTY", 
					"DONT_IGNORE", 
					"EAGER_L2", 
					"EMERG", 
					"FAST_PROMOTE", 
					"FLAG_FOR_DISCARD", 
					"FLUSHING", 
					"FORCE_FLUSH_OR_LOG", 
					"HASHED", 
					"IO", 
					"IOERR", 
					"L2BPOOL", 
					"L2DIRTY", 
					"L2EVACIO", 
					"LAZYIO", 
					"LOG_BUFWRITE", 
					"LOGFORMATFULL", 
					"MINLOGGED", 
					"ONFREELIST", 
					"ONLRU", 
					"PFPOOL", 
					"PROTECTION", 
					"PTD", 
					"READ", 
					"SIMULATED" }
			] uint32 status;
};
		
[dynamic: ToInstance, Description("Parallel scan with IO affinity started"): Amended,
    Guid("{69053859-FD32-5435-978F-5422390989AC}"), locale("MS\\0x409"),
    DisplayName("ioaff_scan_start"): Amended]
class XeSqlPkg_ioaff_scan_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ioaff_scan_start: XeSqlPkg_ioaff_scan_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 dop;
	[WmiDataId(8), read] uint32 file_count;
	[WmiDataId(9), read] uint32 max_range_length;
};
		
[dynamic: ToInstance, Description("Parallel scan with IO affinity ended"): Amended,
    Guid("{985DFE3A-6890-6318-AF5F-789DFBC0154F}"), locale("MS\\0x409"),
    DisplayName("ioaff_scan_end"): Amended]
class XeSqlPkg_ioaff_scan_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ioaff_scan_end: XeSqlPkg_ioaff_scan_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 ranges_total;
	[WmiDataId(8), read] uint64 pages_total;
	[WmiDataId(9), read] uint64 upper_level_pages_total;
	[WmiDataId(10), read] uint64 total_time_ms;
};
		
[dynamic: ToInstance, Description("Parallel scan worker started processing"): Amended,
    Guid("{09F12383-F586-4F46-B853-6E1F135C6EF1}"), locale("MS\\0x409"),
    DisplayName("ioaff_scan_worker_start"): Amended]
class XeSqlPkg_ioaff_scan_worker_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ioaff_scan_worker_start: XeSqlPkg_ioaff_scan_worker_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read, Pointer] object  worker;
	[WmiDataId(8), read] uint32 worker_id;
	[WmiDataId(9), read] uint32 scheduler_id;
	[WmiDataId(10), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Parallel scan worker finished processing"): Amended,
    Guid("{721F02D7-6AB8-482E-8EB2-104D724CF305}"), locale("MS\\0x409"),
    DisplayName("ioaff_scan_worker_end"): Amended]
class XeSqlPkg_ioaff_scan_worker_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ioaff_scan_worker_end: XeSqlPkg_ioaff_scan_worker_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 worker_id;
	[WmiDataId(8), read] sint64 total_pages_read;
	[WmiDataId(9), read] sint64 total_pages_processed;
	[WmiDataId(10), read] sint64 total_ranges_processed;
	[WmiDataId(11), read] sint64 total_ranges_generated_for_local;
	[WmiDataId(12), read] sint64 total_ranges_generated_for_remote;
	[WmiDataId(13), read] sint64 total_ranges_local_rebalanced_to_this;
	[WmiDataId(14), read] sint64 total_ranges_remote_rebalanced_to_this;
	[WmiDataId(15), read] sint64 total_pages_local_rebalanced_to_this;
	[WmiDataId(16), read] sint64 total_pages_remote_rebalanced_to_this;
	[WmiDataId(17), read] sint64 total_ranges_local_rebalanced_from_this;
	[WmiDataId(18), read] sint64 total_ranges_remote_rebalanced_from_this;
	[WmiDataId(19), read] sint64 total_pages_local_rebalanced_from_this;
	[WmiDataId(20), read] sint64 total_pages_remote_rebalanced_from_this;
	[WmiDataId(21), read] uint64 total_time_ms;
};
		
[dynamic: ToInstance, Description("Parallel scan with IO affinity started"): Amended,
    Guid("{10B2E17B-3979-4E35-BC94-891FF7EDA40B}"), locale("MS\\0x409"),
    DisplayName("ioaff_node_summary"): Amended]
class XeSqlPkg_ioaff_node_summary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ioaff_node_summary: XeSqlPkg_ioaff_node_summary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 node_id;
	[WmiDataId(8), read] sint64 total_pages_read;
	[WmiDataId(9), read] sint64 total_pages_processed;
	[WmiDataId(10), read] sint64 total_ranges_processed;
	[WmiDataId(11), read] sint64 total_ranges_generated_for_local;
	[WmiDataId(12), read] sint64 total_ranges_generated_for_remote;
	[WmiDataId(13), read] sint64 total_ranges_local_rebalanced_to_this;
	[WmiDataId(14), read] sint64 total_ranges_remote_rebalanced_to_this;
	[WmiDataId(15), read] sint64 total_pages_local_rebalanced_to_this;
	[WmiDataId(16), read] sint64 total_pages_remote_rebalanced_to_this;
	[WmiDataId(17), read] sint64 total_ranges_local_rebalanced_from_this;
	[WmiDataId(18), read] sint64 total_ranges_remote_rebalanced_from_this;
	[WmiDataId(19), read] sint64 total_pages_local_rebalanced_from_this;
	[WmiDataId(20), read] sint64 total_pages_remote_rebalanced_from_this;
	[WmiDataId(21), read] uint64 total_time_ms;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{CCA9A859-861E-493E-9C2F-1CFFF12DF363}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_range_created"): Amended]
class XeSqlPkg_parallel_scan_range_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_range_created: XeSqlPkg_parallel_scan_range_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
	[WmiDataId(13), read] uint32 range_id;
	[WmiDataId(14), read] uint32 original_worker_id;
	[WmiDataId(15), read] uint64 pages_in_range;
	[WmiDataId(16), read] uint64 pages_in_queue;
	[WmiDataId(17), read] sint64 outstanding_pages;
	[WmiDataId(18), read] uint32 ranges_in_queue;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string start_key;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string end_key;
};
		
[dynamic: ToInstance, Description("Parallel scan advances read ahead"): Amended,
    Guid("{6A166597-B079-4658-8604-61C9071FB608}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_readahead_advance"): Amended]
class XeSqlPkg_parallel_scan_readahead_advance: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_readahead_advance: XeSqlPkg_parallel_scan_readahead_advance
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read] uint32 scheduler_id;
	[WmiDataId(7), read, Pointer] object  worker;
	[WmiDataId(8), read] uint32 node_id;
	[WmiDataId(9), read] uint32 ranges_in_queue;
	[WmiDataId(10), read] uint64 pages_in_queue;
	[WmiDataId(11), read] sint64 read_ahead_distance;
	[WmiDataId(12), read] uint32 fixup_range_id;
	[WmiDataId(13), read] uint64 fixup_base_pos;
	[WmiDataId(14), read] uint32 range_id;
	[WmiDataId(15), read] uint16 start_file_id;
	[WmiDataId(16), read] uint16 end_file_id;
	[WmiDataId(17), read] uint32 start_page_id;
	[WmiDataId(18), read] uint32 end_page_id;
};
		
[dynamic: ToInstance, Description("Parallel scan read ahead position fixup"): Amended,
    Guid("{B0DE51B1-ECFB-49AE-94A5-572C79892995}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_readahead_fixup"): Amended]
class XeSqlPkg_parallel_scan_readahead_fixup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_readahead_fixup: XeSqlPkg_parallel_scan_readahead_fixup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read] uint32 scheduler_id;
	[WmiDataId(7), read, Pointer] object  worker;
	[WmiDataId(8), read] uint32 node_id;
	[WmiDataId(9), read] uint32 ranges_in_queue;
	[WmiDataId(10), read] uint64 pages_in_queue;
	[WmiDataId(11), read] sint64 read_ahead_distance;
	[WmiDataId(12), read] uint32 fixup_range_id;
	[WmiDataId(13), read] uint64 fixup_base_pos;
	[WmiDataId(14), read] uint32 range_id;
	[WmiDataId(15), read] uint32 range_worker_id;
	[WmiDataId(16), read] uint64 range_base_pos;
	[WmiDataId(17), read] sint64 adjusted_read_ahead_distance;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{949830BA-9D53-4F2B-AB10-74265E4D8FA7}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_range_returned"): Amended]
class XeSqlPkg_parallel_scan_range_returned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_range_returned: XeSqlPkg_parallel_scan_range_returned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
	[WmiDataId(13), read] uint32 range_id;
	[WmiDataId(14), read] uint32 original_worker_id;
	[WmiDataId(15), read] uint64 pages_in_range;
	[WmiDataId(16), read] uint64 pages_in_queue;
	[WmiDataId(17), read] sint64 outstanding_pages;
	[WmiDataId(18), read] uint32 ranges_in_queue;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string start_key;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string end_key;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{2E23935F-7BBB-4919-91E8-DA9C759B5B63}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_upper_level_readahead"): Amended]
class XeSqlPkg_parallel_scan_upper_level_readahead: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_upper_level_readahead: XeSqlPkg_parallel_scan_upper_level_readahead
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint16 start_file_id;
	[WmiDataId(13), read] uint16 end_file_id;
	[WmiDataId(14), read] uint32 start_page_id;
	[WmiDataId(15), read] uint32 end_page_id;
	[WmiDataId(16), read] uint64 page_count;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{83F3FE72-0190-4171-BFA7-B7739E929601}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_wait_for_work"): Amended]
class XeSqlPkg_parallel_scan_wait_for_work: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_wait_for_work: XeSqlPkg_parallel_scan_wait_for_work
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{EEA3FE72-2190-4581-5467-B77FE4545431}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_stuck_read_ahead"): Amended]
class XeSqlPkg_parallel_scan_stuck_read_ahead: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_stuck_read_ahead: XeSqlPkg_parallel_scan_stuck_read_ahead
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
	[WmiDataId(13), read] uint32 stuck_worker_id;
	[WmiDataId(14), read] uint64 pages_in_queue;
	[WmiDataId(15), read] sint64 outstanding_pages;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{41E69BF2-87DE-4497-8E80-39ADB7EB42D5}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_resume_range_generation"): Amended]
class XeSqlPkg_parallel_scan_resume_range_generation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_resume_range_generation: XeSqlPkg_parallel_scan_resume_range_generation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{05E2D70B-A124-4B17-A49B-63C94D4E7699}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_pause_range_generation"): Amended]
class XeSqlPkg_parallel_scan_pause_range_generation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_pause_range_generation: XeSqlPkg_parallel_scan_pause_range_generation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager Startup/Shutdown operations"): Amended,
    Guid("{6caacdc7-a449-411f-9aaf-c6c5ea6a7f6f}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_factory"): Amended]
class XeSqlPkg_hobt_schema_mgr_factory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_factory: XeSqlPkg_hobt_schema_mgr_factory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read, Pointer] object  schema_mgr_addr;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager HoBt operations"): Amended,
    Guid("{143c2869-c3b1-40af-aa0d-3aee4f8464d1}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_hobt"): Amended]
class XeSqlPkg_hobt_schema_mgr_hobt: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_hobt: XeSqlPkg_hobt_schema_mgr_hobt
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read, 
				XEMapId(163),
				ValueMap { 
					"4", 
					"2", 
					"5", 
					"3", 
					"6", 
					"7", 
					"0", 
					"1" },
				Values { 
					"ADDCOLUMN", 
					"ALLOCUNIT", 
					"ALTERCOLUMN", 
					"AU_PAGE", 
					"DROPCOLUMN", 
					"LAST", 
					"NONE", 
					"ROWSETATTR" }
			] uint32 ddl_operation;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager column operations"): Amended,
    Guid("{d0b0035b-fb63-4f6f-80a2-d6e16adba647}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_column"): Amended]
class XeSqlPkg_hobt_schema_mgr_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_column: XeSqlPkg_hobt_schema_mgr_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read, 
				XEMapId(163),
				ValueMap { 
					"4", 
					"2", 
					"5", 
					"3", 
					"6", 
					"7", 
					"0", 
					"1" },
				Values { 
					"ADDCOLUMN", 
					"ALLOCUNIT", 
					"ALTERCOLUMN", 
					"AU_PAGE", 
					"DROPCOLUMN", 
					"LAST", 
					"NONE", 
					"ROWSETATTR" }
			] uint32 ddl_operation;
	[WmiDataId(10), read] uint32 column_id;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager allocation unit operations"): Amended,
    Guid("{a7fd3bae-483a-4321-afca-9538d2d44256}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_allocation_unit"): Amended]
class XeSqlPkg_hobt_schema_mgr_allocation_unit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_allocation_unit: XeSqlPkg_hobt_schema_mgr_allocation_unit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read, 
				XEMapId(164),
				ValueMap { 
					"1", 
					"4", 
					"3", 
					"0", 
					"2" },
				Values { 
					"DATA", 
					"LAST", 
					"LOB", 
					"NONE", 
					"SLOB" }
			] uint32 allocation_unit;
	[WmiDataId(10), read] uint16 au_fg_id;
	[WmiDataId(11), read] uint16 au_first_file_id;
	[WmiDataId(12), read] uint32 au_first_page_id;
	[WmiDataId(13), read] uint16 au_root_file_id;
	[WmiDataId(14), read] uint32 au_root_page_id;
	[WmiDataId(15), read] uint16 au_iam_file_id;
	[WmiDataId(16), read] uint32 au_iam_page_id;
	[WmiDataId(17), read] uint64 page_count_leaf;
	[WmiDataId(18), read] uint64 page_count_used;
	[WmiDataId(19), read] uint64 page_count_reserved;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager HoBt page operations"): Amended,
    Guid("{f1e2f446-a1c2-4734-b6b2-4627ade8d4fd}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_hobt_page"): Amended]
class XeSqlPkg_hobt_schema_mgr_hobt_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_hobt_page: XeSqlPkg_hobt_schema_mgr_hobt_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read, 
				XEMapId(164),
				ValueMap { 
					"1", 
					"4", 
					"3", 
					"0", 
					"2" },
				Values { 
					"DATA", 
					"LAST", 
					"LOB", 
					"NONE", 
					"SLOB" }
			] uint32 allocation_unit;
	[WmiDataId(10), read, 
				XEMapId(165),
				ValueMap { 
					"4", 
					"2", 
					"3", 
					"0", 
					"1" },
				Values { 
					"ALLOCUNIT_LAST", 
					"FIRST", 
					"IAM", 
					"NONE", 
					"ROOT" }
			] uint32 hobt_allocation_page;
	[WmiDataId(11), read] uint32 page_id;
	[WmiDataId(12), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager HoBt attributes operations"): Amended,
    Guid("{59a7c68d-3b94-417f-838b-c1355804ff24}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_hobt_attributes"): Amended]
class XeSqlPkg_hobt_schema_mgr_hobt_attributes: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_hobt_attributes: XeSqlPkg_hobt_schema_mgr_hobt_attributes
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 row_count;
	[WmiDataId(10), read] uint16 file_stream_file_group_id;
	[WmiDataId(11), read, 
				XEMapId(167),
				ValueMap { 
					"3", 
					"4", 
					"0", 
					"2", 
					"1" },
				Values { 
					"Columnstore", 
					"ColumnstoreArchive", 
					"None", 
					"Page", 
					"Row" }
			] uint32 compress_level;
	[WmiDataId(12), read, 
				XEMapId(168),
				ValueMap { 
					"2", 
					"1", 
					"0" },
				Values { 
					"Clean", 
					"Unclean", 
					"Unknown" }
			] uint32 lob_status;
	[WmiDataId(13), read] sint8  unique;
	[WmiDataId(14), read] sint8  replicated;
	[WmiDataId(15), read] sint8  log_off_rows_for_replication;
	[WmiDataId(16), read] sint8  column_store;
	[WmiDataId(17), read] sint8  se_replicated;
};
		
[dynamic: ToInstance, Description("Storage Engine detected a low memory condition and the rowgroup size was reduced."): Amended,
    Guid("{a75ceca2-fd67-4942-9e13-7f960966eebc}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_low_memory"): Amended]
class XeSqlPkg_column_store_index_build_low_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_index_build_low_memory: XeSqlPkg_column_store_index_build_low_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 object_id;
	[WmiDataId(10), read] uint64 index_id;
	[WmiDataId(11), read] uint64 partition_number;
};
		
[dynamic: ToInstance, Description("Storage Engine detected a low memory condition and the rowgroup size was reduced."): Amended,
    Guid("{a75ceca2-fd67-4942-9e13-7f960966eebc}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_low_memory"): Amended]
class XeSqlPkg_column_store_index_build_low_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_index_build_low_memory: XeSqlPkg_column_store_index_build_low_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 object_id;
	[WmiDataId(10), read] uint64 index_id;
	[WmiDataId(11), read] uint64 partition_number;
	[WmiDataId(12), read] uint64 max_used_memory_for_current_thread;
	[WmiDataId(13), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(14), read] uint64 reserved_memory_for_current_thread;
	[WmiDataId(15), read] uint64 ideal_memory_grant_total;
	[WmiDataId(16), read] uint64 requested_memory_grant_total;
	[WmiDataId(17), read] uint64 memory_grant_total;
	[WmiDataId(18), read, 
				XEMapId(101),
				ValueMap { 
					"1", 
					"0", 
					"2" },
				Values { 
					"ColumnstoreBulkInsert", 
					"ColumnstoreIndexBuild", 
					"ColumnstoreLoadUnknown" }
			] uint8 load_type;
	[WmiDataId(19), read] uint32 dop;
};
		
[dynamic: ToInstance, Description("Storage Engine detected a low memory condition and the rowgroup size was reduced."): Amended,
    Guid("{a75ceca2-fd67-4942-9e13-7f960966eebc}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_low_memory"): Amended]
class XeSqlPkg_column_store_index_build_low_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class column_store_index_build_low_memory: XeSqlPkg_column_store_index_build_low_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 object_id;
	[WmiDataId(10), read] uint64 index_id;
	[WmiDataId(11), read] uint64 partition_number;
	[WmiDataId(12), read] uint64 max_used_memory_for_current_thread;
	[WmiDataId(13), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(14), read] uint64 memory_limit_total;
	[WmiDataId(15), read] uint64 ideal_memory_grant_total;
	[WmiDataId(16), read] uint64 requested_memory_grant_total;
	[WmiDataId(17), read] uint64 memory_grant_total;
	[WmiDataId(18), read, 
				XEMapId(101),
				ValueMap { 
					"1", 
					"0", 
					"2" },
				Values { 
					"ColumnstoreBulkInsert", 
					"ColumnstoreIndexBuild", 
					"ColumnstoreLoadUnknown" }
			] uint8 load_type;
	[WmiDataId(19), read] uint32 effective_dop;
	[WmiDataId(20), read] uint32 max_effective_dop;
	[WmiDataId(21), read] uint64 current_used_memory_for_current_thread;
	[WmiDataId(22), read] uint64 transient_dictionary_page_size;
	[WmiDataId(23), read] sint8  rowgroup_growth_exceeded_memory_limit;
};
		
[dynamic: ToInstance, Description("Storage Engine detected a low memory condition and the rowgroup size was reduced."): Amended,
    Guid("{a75ceca2-fd67-4942-9e13-7f960966eebc}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_low_memory"): Amended]
class XeSqlPkg_column_store_index_build_low_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class column_store_index_build_low_memory: XeSqlPkg_column_store_index_build_low_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 object_id;
	[WmiDataId(10), read] uint64 index_id;
	[WmiDataId(11), read] uint64 partition_number;
	[WmiDataId(12), read] uint64 max_used_memory_for_current_thread;
	[WmiDataId(13), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(14), read] uint64 memory_limit_total;
	[WmiDataId(15), read] uint64 ideal_memory_grant_total;
	[WmiDataId(16), read] uint64 requested_memory_grant_total;
	[WmiDataId(17), read] uint64 memory_grant_total;
	[WmiDataId(18), read, 
				XEMapId(101),
				ValueMap { 
					"1", 
					"0", 
					"2" },
				Values { 
					"ColumnstoreBulkInsert", 
					"ColumnstoreIndexBuild", 
					"ColumnstoreLoadUnknown" }
			] uint8 load_type;
	[WmiDataId(19), read] uint32 effective_dop;
	[WmiDataId(20), read] uint32 max_effective_dop;
	[WmiDataId(21), read] uint64 current_used_memory_for_current_thread;
	[WmiDataId(22), read] uint64 transient_dictionary_page_size;
	[WmiDataId(23), read] uint64 secondary_dictionary_page_size;
	[WmiDataId(24), read] sint8  rowgroup_growth_exceeded_memory_limit;
};
		
[dynamic: ToInstance, Description("Storage Engine detected a low memory condition and the rowgroup size was reduced."): Amended,
    Guid("{a75ceca2-fd67-4942-9e13-7f960966eebc}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_low_memory"): Amended]
class XeSqlPkg_column_store_index_build_low_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class column_store_index_build_low_memory: XeSqlPkg_column_store_index_build_low_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 object_id;
	[WmiDataId(10), read] uint64 index_id;
	[WmiDataId(11), read] uint64 partition_number;
	[WmiDataId(12), read] uint64 max_used_memory_for_current_thread;
	[WmiDataId(13), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(14), read] uint64 memory_limit_total;
	[WmiDataId(15), read] uint64 ideal_memory_grant_total;
	[WmiDataId(16), read] uint64 requested_memory_grant_total;
	[WmiDataId(17), read] uint64 memory_grant_total;
	[WmiDataId(18), read, 
				XEMapId(101),
				ValueMap { 
					"1", 
					"0", 
					"2" },
				Values { 
					"ColumnstoreBulkInsert", 
					"ColumnstoreIndexBuild", 
					"ColumnstoreLoadUnknown" }
			] uint8 load_type;
	[WmiDataId(19), read] uint32 effective_dop;
	[WmiDataId(20), read] uint32 max_effective_dop;
	[WmiDataId(21), read] uint64 current_used_memory_for_current_thread;
	[WmiDataId(22), read] uint64 transient_dictionary_page_size;
	[WmiDataId(23), read] uint64 secondary_dictionary_page_size;
	[WmiDataId(24), read] sint8  rowgroup_growth_exceeded_memory_limit;
	[WmiDataId(25), read] sint8  is_any_secondary_dictionary_shared;
	[WmiDataId(26), read] uint32 column_count;
};
		
[dynamic: ToInstance, Description("Storage Engine detected a low memory condition and the rowgroup size was reduced."): Amended,
    Guid("{a75ceca2-fd67-4942-9e13-7f960966eebc}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_low_memory"): Amended]
class XeSqlPkg_column_store_index_build_low_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(7)]
class column_store_index_build_low_memory: XeSqlPkg_column_store_index_build_low_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 object_id;
	[WmiDataId(10), read] uint64 index_id;
	[WmiDataId(11), read] uint64 partition_number;
	[WmiDataId(12), read] uint64 max_used_memory_for_current_thread;
	[WmiDataId(13), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(14), read] uint64 memory_limit_total;
	[WmiDataId(15), read] uint64 ideal_memory_grant_total;
	[WmiDataId(16), read] uint64 requested_memory_grant_total;
	[WmiDataId(17), read] uint64 memory_grant_total;
	[WmiDataId(18), read, 
				XEMapId(101),
				ValueMap { 
					"1", 
					"0", 
					"2" },
				Values { 
					"ColumnstoreBulkInsert", 
					"ColumnstoreIndexBuild", 
					"ColumnstoreLoadUnknown" }
			] uint8 load_type;
	[WmiDataId(19), read] uint32 effective_dop;
	[WmiDataId(20), read] uint32 max_effective_dop;
	[WmiDataId(21), read] uint64 current_used_memory_for_current_thread;
	[WmiDataId(22), read] uint64 transient_dictionary_page_size;
	[WmiDataId(23), read] uint64 secondary_dictionary_page_size;
	[WmiDataId(24), read] sint8  rowgroup_growth_exceeded_memory_limit;
	[WmiDataId(25), read] sint8  is_any_secondary_dictionary_shared;
	[WmiDataId(26), read] uint32 column_count;
};
		
[dynamic: ToInstance, Description("Storage Engine detected a low memory condition and the rowgroup size was reduced."): Amended,
    Guid("{a75ceca2-fd67-4942-9e13-7f960966eebc}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_low_memory"): Amended]
class XeSqlPkg_column_store_index_build_low_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(8)]
class column_store_index_build_low_memory: XeSqlPkg_column_store_index_build_low_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] sint64 object_id;
	[WmiDataId(10), read] uint64 index_id;
	[WmiDataId(11), read] uint64 partition_number;
	[WmiDataId(12), read] uint64 max_used_memory_for_current_thread;
	[WmiDataId(13), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(14), read] uint64 memory_limit_total;
	[WmiDataId(15), read] uint64 ideal_memory_grant_total;
	[WmiDataId(16), read] uint64 requested_memory_grant_total;
	[WmiDataId(17), read] uint64 memory_grant_total;
	[WmiDataId(18), read, 
				XEMapId(101),
				ValueMap { 
					"1", 
					"0", 
					"2" },
				Values { 
					"ColumnstoreBulkInsert", 
					"ColumnstoreIndexBuild", 
					"ColumnstoreLoadUnknown" }
			] uint8 load_type;
	[WmiDataId(19), read] uint32 effective_dop;
	[WmiDataId(20), read] uint32 max_effective_dop;
	[WmiDataId(21), read] uint64 current_used_memory_for_current_thread;
	[WmiDataId(22), read] uint64 transient_dictionary_page_size;
	[WmiDataId(23), read] uint64 secondary_dictionary_page_size;
	[WmiDataId(24), read] sint8  rowgroup_growth_exceeded_memory_limit;
	[WmiDataId(25), read] sint8  is_any_secondary_dictionary_shared;
	[WmiDataId(26), read] uint32 column_count;
};
		
[dynamic: ToInstance, Description("Storage Engine detected a low memory and chose to scale down page size of transient dictionaries."): Amended,
    Guid("{54a6aacd-26d9-448f-8791-449a962dfa59}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_transient_dictionary_scale_down"): Amended]
class XeSqlPkg_column_store_index_build_transient_dictionary_scale_down: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_build_transient_dictionary_scale_down: XeSqlPkg_column_store_index_build_transient_dictionary_scale_down
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 object_id;
	[WmiDataId(10), read] uint64 index_id;
	[WmiDataId(11), read] uint64 partition_number;
	[WmiDataId(12), read] sint8  low_memory_detected;
	[WmiDataId(13), read] uint64 last_row_count;
	[WmiDataId(14), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(15), read] uint64 memory_grant_estimate;
	[WmiDataId(16), read] uint64 estimated_rowgroup_size;
	[WmiDataId(17), read] real64 memory_threshold_percentage;
};
		
[dynamic: ToInstance, Description("Storage Engine detected low memory."): Amended,
    Guid("{43a2ef90-c80c-454f-b5ed-6c0b120bd98e}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_low_memory_detected"): Amended]
class XeSqlPkg_column_store_index_build_low_memory_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_build_low_memory_detected: XeSqlPkg_column_store_index_build_low_memory_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 object_id;
	[WmiDataId(10), read] uint64 index_id;
	[WmiDataId(11), read] uint64 partition_number;
	[WmiDataId(12), read] sint8  low_memory_detected;
	[WmiDataId(13), read] uint64 last_row_count;
	[WmiDataId(14), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(15), read] uint64 memory_grant_estimate;
	[WmiDataId(16), read] uint64 estimated_rowgroup_size;
};
		
[dynamic: ToInstance, Description("Storage Engine scaled down."): Amended,
    Guid("{84bde69e-c055-4fa3-8a82-1098f4e6e5d3}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_memory_usage_scale_down"): Amended]
class XeSqlPkg_column_store_index_build_memory_usage_scale_down: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_build_memory_usage_scale_down: XeSqlPkg_column_store_index_build_memory_usage_scale_down
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 object_id;
	[WmiDataId(10), read] uint64 index_id;
	[WmiDataId(11), read] uint64 partition_number;
	[WmiDataId(12), read] sint8  low_memory_detected;
	[WmiDataId(13), read] uint64 last_row_count;
	[WmiDataId(14), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(15), read] uint64 memory_grant_estimate;
	[WmiDataId(16), read] uint64 estimated_rowgroup_size;
	[WmiDataId(17), read] uint64 transient_dictionary_page_size;
	[WmiDataId(18), read] uint64 secondary_dictionary_page_size;
};
		
[dynamic: ToInstance, Description("Storage Engine scaled down."): Amended,
    Guid("{84bde69e-c055-4fa3-8a82-1098f4e6e5d3}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_memory_usage_scale_down"): Amended]
class XeSqlPkg_column_store_index_build_memory_usage_scale_down: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_index_build_memory_usage_scale_down: XeSqlPkg_column_store_index_build_memory_usage_scale_down
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] sint64 object_id;
	[WmiDataId(10), read] uint64 index_id;
	[WmiDataId(11), read] uint64 partition_number;
	[WmiDataId(12), read] sint8  low_memory_detected;
	[WmiDataId(13), read] uint64 last_row_count;
	[WmiDataId(14), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(15), read] uint64 memory_grant_estimate;
	[WmiDataId(16), read] uint64 estimated_rowgroup_size;
	[WmiDataId(17), read] uint64 transient_dictionary_page_size;
	[WmiDataId(18), read] uint64 secondary_dictionary_page_size;
};
		
[dynamic: ToInstance, Description("Shows the memory estimation result during columnstore rowgroup build."): Amended,
    Guid("{4bc6653c-798f-4645-87e1-72f2b552fe15}"), locale("MS\\0x409"),
    DisplayName("column_store_index_memory_estimation"): Amended]
class XeSqlPkg_column_store_index_memory_estimation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_memory_estimation: XeSqlPkg_column_store_index_memory_estimation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_index_build;
	[WmiDataId(6), read] uint64 estimate_dop;
	[WmiDataId(7), read] uint64 runtime_dop;
	[WmiDataId(8), read] uint64 index_build_max_dop;
	[WmiDataId(9), read] uint64 total_normal_memory;
	[WmiDataId(10), read] uint64 per_thread_local_memory;
	[WmiDataId(11), read] uint64 total_required_memory;
	[WmiDataId(12), read] uint64 grant_memory;
	[WmiDataId(13), read] uint64 ideal_memory;
};
		
[dynamic: ToInstance, Description("Shows the memory estimation result during columnstore rowgroup build."): Amended,
    Guid("{4bc6653c-798f-4645-87e1-72f2b552fe15}"), locale("MS\\0x409"),
    DisplayName("column_store_index_memory_estimation"): Amended]
class XeSqlPkg_column_store_index_memory_estimation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_index_memory_estimation: XeSqlPkg_column_store_index_memory_estimation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_index_build;
	[WmiDataId(6), read] sint8  is_tuple_mover;
	[WmiDataId(7), read] uint64 estimate_dop;
	[WmiDataId(8), read] uint64 runtime_dop;
	[WmiDataId(9), read] uint64 index_build_max_dop;
	[WmiDataId(10), read] uint64 total_normal_memory;
	[WmiDataId(11), read] uint64 per_thread_local_memory;
	[WmiDataId(12), read] uint64 total_required_memory;
	[WmiDataId(13), read] uint64 grant_memory;
	[WmiDataId(14), read] uint64 ideal_memory;
};
		
[dynamic: ToInstance, Description("Shows more memory estimation information during columnstore rowgroup build."): Amended,
    Guid("{8C006BF5-3B40-4F48-AA69-81B7B0AB2C2D}"), locale("MS\\0x409"),
    DisplayName("column_store_index_memory_estimation_extension"): Amended]
class XeSqlPkg_column_store_index_memory_estimation_extension: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_memory_estimation_extension: XeSqlPkg_column_store_index_memory_estimation_extension
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 object_id;
	[WmiDataId(6), read] sint8  is_insert_select;
	[WmiDataId(7), read] sint32 dop;
	[WmiDataId(8), read] sint32 dop_max;
	[WmiDataId(9), read] sint32 dop_new;
	[WmiDataId(10), read] sint32 dop_saved;
	[WmiDataId(11), read] uint64 max_query_memory_pages;
	[WmiDataId(12), read] uint64 memory_estimate_before_adjustment_pages;
	[WmiDataId(13), read] uint64 memory_estimate_after_adjustment_pages;
	[WmiDataId(14), read] uint64 estimated_required_memory_pages;
	[WmiDataId(15), read] uint64 estimated_additional_memory_pages;
	[WmiDataId(16), read] uint64 estimated_child_exchange_memory_pages;
	[WmiDataId(17), read] uint64 estimated_child_required_memory_pages;
	[WmiDataId(18), read] uint64 estimated_child_additional_memory_pages;
};
		
[dynamic: ToInstance, Description("Shows more memory estimation information during columnstore rowgroup build."): Amended,
    Guid("{8C006BF5-3B40-4F48-AA69-81B7B0AB2C2D}"), locale("MS\\0x409"),
    DisplayName("column_store_index_memory_estimation_extension"): Amended]
class XeSqlPkg_column_store_index_memory_estimation_extension: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_index_memory_estimation_extension: XeSqlPkg_column_store_index_memory_estimation_extension
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 object_id;
	[WmiDataId(6), read] sint8  is_insert_select;
	[WmiDataId(7), read] sint8  has_soft_sort;
	[WmiDataId(8), read] sint32 dop;
	[WmiDataId(9), read] sint32 dop_max;
	[WmiDataId(10), read] sint32 dop_new;
	[WmiDataId(11), read] sint32 dop_saved;
	[WmiDataId(12), read] uint64 max_query_memory_pages;
	[WmiDataId(13), read] uint64 memory_estimate_before_adjustment_pages;
	[WmiDataId(14), read] uint64 memory_estimate_after_adjustment_pages;
	[WmiDataId(15), read] uint64 estimated_required_memory_pages;
	[WmiDataId(16), read] uint64 estimated_additional_memory_pages;
	[WmiDataId(17), read] uint64 estimated_child_exchange_memory_pages;
	[WmiDataId(18), read] uint64 estimated_child_required_memory_pages;
	[WmiDataId(19), read] uint64 estimated_child_additional_memory_pages;
};
		
[dynamic: ToInstance, Description("Shows more memory estimation information during columnstore rowgroup build."): Amended,
    Guid("{8C006BF5-3B40-4F48-AA69-81B7B0AB2C2D}"), locale("MS\\0x409"),
    DisplayName("column_store_index_memory_estimation_extension"): Amended]
class XeSqlPkg_column_store_index_memory_estimation_extension: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_index_memory_estimation_extension: XeSqlPkg_column_store_index_memory_estimation_extension
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 object_id;
	[WmiDataId(6), read] sint8  is_insert_select;
	[WmiDataId(7), read] sint8  has_soft_sort;
	[WmiDataId(8), read] sint32 dop;
	[WmiDataId(9), read] sint32 dop_max;
	[WmiDataId(10), read] sint32 dop_new;
	[WmiDataId(11), read] sint32 dop_saved;
	[WmiDataId(12), read] uint64 max_query_memory_pages;
	[WmiDataId(13), read] uint64 memory_estimate_before_adjustment_pages;
	[WmiDataId(14), read] uint64 memory_estimate_after_adjustment_pages;
	[WmiDataId(15), read] uint64 estimated_required_memory_pages;
	[WmiDataId(16), read] uint64 estimated_additional_memory_pages;
	[WmiDataId(17), read] uint64 estimated_child_exchange_memory_pages;
	[WmiDataId(18), read] uint64 estimated_child_required_memory_pages;
	[WmiDataId(19), read] uint64 estimated_child_additional_memory_pages;
};
		
[dynamic: ToInstance, Description("Shows more memory estimation information during columnstore rowgroup build."): Amended,
    Guid("{8C006BF5-3B40-4F48-AA69-81B7B0AB2C2D}"), locale("MS\\0x409"),
    DisplayName("column_store_index_memory_estimation_extension"): Amended]
class XeSqlPkg_column_store_index_memory_estimation_extension: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class column_store_index_memory_estimation_extension: XeSqlPkg_column_store_index_memory_estimation_extension
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 object_id;
	[WmiDataId(6), read] sint8  is_insert_select;
	[WmiDataId(7), read] sint8  has_soft_sort;
	[WmiDataId(8), read] sint32 dop;
	[WmiDataId(9), read] sint32 dop_max;
	[WmiDataId(10), read] sint32 dop_new;
	[WmiDataId(11), read] sint32 dop_saved;
	[WmiDataId(12), read] uint64 max_query_memory_pages;
	[WmiDataId(13), read] uint64 memory_estimate_before_adjustment_pages;
	[WmiDataId(14), read] uint64 memory_estimate_after_adjustment_pages;
	[WmiDataId(15), read] uint64 memory_estimate_before_consolidated_rowgroup_adjustment_pages;
	[WmiDataId(16), read] uint64 estimated_required_memory_pages;
	[WmiDataId(17), read] uint64 estimated_additional_memory_pages;
	[WmiDataId(18), read] uint64 estimated_child_exchange_memory_pages;
	[WmiDataId(19), read] uint64 estimated_child_required_memory_pages;
	[WmiDataId(20), read] uint64 estimated_child_additional_memory_pages;
};
		
[dynamic: ToInstance, Description("Shows column store index addtional memory fraction information during columnstore index build."): Amended,
    Guid("{62160066-2206-4cb3-8f48-5f1dcf9c1b76}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_additional_memory_fraction"): Amended]
class XeSqlPkg_columnstore_index_additional_memory_fraction: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_additional_memory_fraction: XeSqlPkg_columnstore_index_additional_memory_fraction
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] real64 memory_fraction;
	[WmiDataId(6), read] real64 memory_fraction_in;
	[WmiDataId(7), read] real64 memory_fraction_out;
	[WmiDataId(8), read] sint8  is_scalability_enabled;
	[WmiDataId(9), read] sint32 dop;
	[WmiDataId(10), read] uint64 rows_per_segment;
	[WmiDataId(11), read] uint64 per_thread_required_memory_pages;
	[WmiDataId(12), read] uint64 per_thread_additional_memory_pages;
};
		
[dynamic: ToInstance, Description("Shows column store memory information when the required memory is adjusted to zero."): Amended,
    Guid("{6fb915c4-3397-4b2a-9c8a-830cb3ef274b}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_adjust_required_memory"): Amended]
class XeSqlPkg_columnstore_index_adjust_required_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_adjust_required_memory: XeSqlPkg_columnstore_index_adjust_required_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_parallel_insert_dop_throttle_enabled;
	[WmiDataId(6), read] sint8  is_column_store_bulk_insert_max_query_memory_percent_enabled;
	[WmiDataId(7), read] sint8  has_soft_sort;
	[WmiDataId(8), read] sint32 dop;
	[WmiDataId(9), read] uint64 max_query_memory_pages_after_adjustment;
	[WmiDataId(10), read] uint64 deducted_pages_from_max_query_memory_pages;
	[WmiDataId(11), read] uint64 required_memory_pages_per_thread_before_adjustment;
	[WmiDataId(12), read] uint64 required_memory_pages_per_thread_after_adjustment;
	[WmiDataId(13), read] uint64 additional_memory_pages_after_adjustment;
	[WmiDataId(14), read] uint64 estimated_required_memory_pages_per_thread_from_se;
};
		
[dynamic: ToInstance, Description("Shows column store memory information when the required memory is adjusted to zero."): Amended,
    Guid("{6fb915c4-3397-4b2a-9c8a-830cb3ef274b}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_adjust_required_memory"): Amended]
class XeSqlPkg_columnstore_index_adjust_required_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_adjust_required_memory: XeSqlPkg_columnstore_index_adjust_required_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_parallel_insert_dop_throttle_enabled;
	[WmiDataId(6), read] sint8  is_column_store_bulk_insert_max_query_memory_percent_enabled;
	[WmiDataId(7), read] sint8  has_soft_sort;
	[WmiDataId(8), read] sint32 dop;
	[WmiDataId(9), read] sint64 max_query_memory_adjustment_percent;
	[WmiDataId(10), read] uint64 max_query_memory_pages_before_adjustment;
	[WmiDataId(11), read] uint64 max_query_memory_pages_after_adjustment;
	[WmiDataId(12), read] uint64 deducted_pages_from_max_query_memory_pages;
	[WmiDataId(13), read] uint64 required_memory_pages_per_thread_before_adjustment;
	[WmiDataId(14), read] uint64 required_memory_pages_per_thread_after_adjustment;
	[WmiDataId(15), read] uint64 additional_memory_pages_after_adjustment;
	[WmiDataId(16), read] uint64 estimated_required_memory_pages_per_thread_from_se;
};
		
[dynamic: ToInstance, Description("Shows column store memory information when the memory grant request of columnstore bulk insert times out."): Amended,
    Guid("{da6c0645-1cc0-4016-aff6-761607f869d8}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_convert_bulk_insert_to_trickle_insert"): Amended]
class XeSqlPkg_columnstore_index_convert_bulk_insert_to_trickle_insert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_convert_bulk_insert_to_trickle_insert: XeSqlPkg_columnstore_index_convert_bulk_insert_to_trickle_insert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 requested_pages;
	[WmiDataId(6), read] uint64 max_query_memory_pages;
	[WmiDataId(7), read] uint64 min_query_memory_pages;
	[WmiDataId(8), read, 
				XEMapId(90),
				ValueMap { 
					"-10", 
					"-9", 
					"-8", 
					"-2", 
					"-3", 
					"-7", 
					"-6", 
					"0", 
					"1", 
					"-5", 
					"-1", 
					"-4" },
				Values { 
					"FIDO_MANAGER_CANCEL", 
					"FIDO_MANAGER_NOT_FOUND", 
					"FIDO_PARSING_FAILED", 
					"CANCEL", 
					"DEADLOCK", 
					"KILL_BLOCKED_BY_SYSTEM_TASK", 
					"KILL_EXISTS", 
					"OK", 
					"OKWAIT", 
					"RESULTS_IN_DISTRIBUTED_MODE", 
					"TIMEDOUT", 
					"TMABORT" }
			] uint32 lock_result;
	[WmiDataId(9), read] uint64 lock_timeout_ms;
	[WmiDataId(10), read] sint8  has_soft_sort;
	[WmiDataId(11), read] sint8  is_triggered_by_timout_tf;
	[WmiDataId(12), read] sint64 resource_group_id;
	[WmiDataId(13), read] sint64 resource_pool_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string resource_group_name;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string resource_pool_name;
};
		
[dynamic: ToInstance, Description("Shows column store memory information when an attempt of the memory grant request of columnstore bulk insert times out."): Amended,
    Guid("{db4fd8d4-c4ff-4254-8a21-f9bc25b51e8b}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bulk_insert_acquire_memory_grant_attempt_timeout"): Amended]
class XeSqlPkg_columnstore_index_bulk_insert_acquire_memory_grant_attempt_timeout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bulk_insert_acquire_memory_grant_attempt_timeout: XeSqlPkg_columnstore_index_bulk_insert_acquire_memory_grant_attempt_timeout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 requested_pages;
	[WmiDataId(6), read] uint64 max_query_memory_pages;
	[WmiDataId(7), read] uint64 min_query_memory_pages;
	[WmiDataId(8), read, 
				XEMapId(90),
				ValueMap { 
					"-10", 
					"-9", 
					"-8", 
					"-2", 
					"-3", 
					"-7", 
					"-6", 
					"0", 
					"1", 
					"-5", 
					"-1", 
					"-4" },
				Values { 
					"FIDO_MANAGER_CANCEL", 
					"FIDO_MANAGER_NOT_FOUND", 
					"FIDO_PARSING_FAILED", 
					"CANCEL", 
					"DEADLOCK", 
					"KILL_BLOCKED_BY_SYSTEM_TASK", 
					"KILL_EXISTS", 
					"OK", 
					"OKWAIT", 
					"RESULTS_IN_DISTRIBUTED_MODE", 
					"TIMEDOUT", 
					"TMABORT" }
			] uint32 lock_result;
	[WmiDataId(9), read] uint64 lock_timeout_ms;
	[WmiDataId(10), read] sint8  has_soft_sort;
	[WmiDataId(11), read] sint8  is_triggered_by_timeout_tf;
	[WmiDataId(12), read] uint32 attempt_count;
	[WmiDataId(13), read] sint8  will_be_converted_into_trickle_insert;
	[WmiDataId(14), read] sint64 resource_group_id;
	[WmiDataId(15), read] sint64 resource_pool_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string resource_group_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string resource_pool_name;
};
		
[dynamic: ToInstance, Description("Shows rowset information when the columnstore bulk insert flag is cleared."): Amended,
    Guid("{2d54fd5c-8a89-4f58-bbff-95de770d64cb}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_clear_bulk_insert_flag"): Amended]
class XeSqlPkg_columnstore_index_clear_bulk_insert_flag: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_clear_bulk_insert_flag: XeSqlPkg_columnstore_index_clear_bulk_insert_flag
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 db_id;
	[WmiDataId(6), read] uint64 table_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint64 rowset_type;
	[WmiDataId(9), read] uint64 number_of_partitions;
};
		
[dynamic: ToInstance, Description("Shows rowset information when the columnstore bulk insert flag is cleared."): Amended,
    Guid("{2d54fd5c-8a89-4f58-bbff-95de770d64cb}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_clear_bulk_insert_flag"): Amended]
class XeSqlPkg_columnstore_index_clear_bulk_insert_flag: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_clear_bulk_insert_flag: XeSqlPkg_columnstore_index_clear_bulk_insert_flag
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 db_id;
	[WmiDataId(6), read] sint64 table_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint64 rowset_type;
	[WmiDataId(9), read] uint64 number_of_partitions;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is about to finish."): Amended,
    Guid("{b8d8f681-4fdd-43dc-9ae6-487a23406c8d}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_create_task"): Amended]
class XeSqlPkg_columnstore_index_bucketization_create_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_create_task: XeSqlPkg_columnstore_index_bucketization_create_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cell_id;
	[WmiDataId(6), read] uint64 cell_row_count;
	[WmiDataId(7), read] sint8  exact_full_rowgroup;
	[WmiDataId(8), read] uint64 worktable_count_for_task;
	[WmiDataId(9), read] uint64 enqueued_worktable_count_for_task;
	[WmiDataId(10), read] uint64 rowgroup_max_row_count;
	[WmiDataId(11), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is about to finish."): Amended,
    Guid("{b8d8f681-4fdd-43dc-9ae6-487a23406c8d}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_create_task"): Amended]
class XeSqlPkg_columnstore_index_bucketization_create_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_create_task: XeSqlPkg_columnstore_index_bucketization_create_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cell_id;
	[WmiDataId(6), read] uint64 cell_row_count;
	[WmiDataId(7), read] sint8  exact_full_rowgroup;
	[WmiDataId(8), read] uint32 reason_for_task_creation;
	[WmiDataId(9), read] uint64 worktable_count_for_task;
	[WmiDataId(10), read] uint64 enqueued_worktable_count_for_task;
	[WmiDataId(11), read] uint64 rowgroup_max_row_count;
	[WmiDataId(12), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is about to finish."): Amended,
    Guid("{b8d8f681-4fdd-43dc-9ae6-487a23406c8d}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_create_task"): Amended]
class XeSqlPkg_columnstore_index_bucketization_create_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_index_bucketization_create_task: XeSqlPkg_columnstore_index_bucketization_create_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 partition_id;
	[WmiDataId(6), read] uint64 cell_id;
	[WmiDataId(7), read] uint64 cell_row_count;
	[WmiDataId(8), read] sint8  exact_full_rowgroup;
	[WmiDataId(9), read] uint32 reason_for_task_creation;
	[WmiDataId(10), read] uint64 worktable_count_for_task;
	[WmiDataId(11), read] uint64 enqueued_worktable_count_for_task;
	[WmiDataId(12), read] uint64 rowgroup_max_row_count;
	[WmiDataId(13), read] uint64 total_inserted_rows_count;
	[WmiDataId(14), read] uint32 thread_id;
	[WmiDataId(15), read] uint64 tid;
	[WmiDataId(16), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is about to finish."): Amended,
    Guid("{b8d8f681-4fdd-43dc-9ae6-487a23406c8d}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_create_task"): Amended]
class XeSqlPkg_columnstore_index_bucketization_create_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_index_bucketization_create_task: XeSqlPkg_columnstore_index_bucketization_create_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 partition_id;
	[WmiDataId(6), read] uint64 cell_id;
	[WmiDataId(7), read] uint64 cell_row_count;
	[WmiDataId(8), read] sint8  exact_full_rowgroup;
	[WmiDataId(9), read] uint32 reason_for_task_creation;
	[WmiDataId(10), read] uint64 worktable_count_for_task;
	[WmiDataId(11), read] uint64 enqueued_worktable_count_for_task;
	[WmiDataId(12), read] uint64 rowgroup_max_row_count;
	[WmiDataId(13), read] uint64 total_inserted_rows_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(15), read] uint32 thread_id;
	[WmiDataId(16), read] uint64 tid;
	[WmiDataId(17), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is about to finish."): Amended,
    Guid("{b8d8f681-4fdd-43dc-9ae6-487a23406c8d}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_create_task"): Amended]
class XeSqlPkg_columnstore_index_bucketization_create_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_index_bucketization_create_task: XeSqlPkg_columnstore_index_bucketization_create_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 partition_id;
	[WmiDataId(6), read] uint64 cell_id;
	[WmiDataId(7), read] uint64 cell_row_count;
	[WmiDataId(8), read] sint8  exact_full_rowgroup;
	[WmiDataId(9), read] uint32 reason_for_task_creation;
	[WmiDataId(10), read] uint64 worktable_count_for_task;
	[WmiDataId(11), read] uint64 enqueued_worktable_count_for_task;
	[WmiDataId(12), read] uint64 rowgroup_max_row_count;
	[WmiDataId(13), read] uint64 total_inserted_rows_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(15), read] uint32 thread_id;
	[WmiDataId(16), read] uint64 tid;
	[WmiDataId(17), read] uint64 global_created_dataset_count;
	[WmiDataId(18), read] uint64 global_reused_dataset_count;
	[WmiDataId(19), read] uint64 global_deleted_dataset_count;
	[WmiDataId(20), read] uint64 dataset_count;
	[WmiDataId(21), read] uint64 dataset_in_dormant_state_count;
	[WmiDataId(22), read] uint64 created_dataset_count;
	[WmiDataId(23), read] uint64 reused_dataset_count;
	[WmiDataId(24), read] uint64 deleted_dataset_count;
	[WmiDataId(25), read] sint64 bucketization_pmo_budget_pages;
	[WmiDataId(26), read] sint64 bucketization_pmo_used_pages;
	[WmiDataId(27), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has enqueued all remaining worktables."): Amended,
    Guid("{f9eb4b12-c43c-4ea3-a0cd-73b1a19712e3}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_enqueue_all_tables"): Amended]
class XeSqlPkg_columnstore_index_bucketization_enqueue_all_tables: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_enqueue_all_tables: XeSqlPkg_columnstore_index_bucketization_enqueue_all_tables
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string total_row_counts;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string total_worktable_counts;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has created one or more tasks from multiple cells."): Amended,
    Guid("{efb6cf8a-896d-4f81-9dfe-a5dab6d3dcb7}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_create_task_from_multiple_cells"): Amended]
class XeSqlPkg_columnstore_index_bucketization_create_task_from_multiple_cells: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_create_task_from_multiple_cells: XeSqlPkg_columnstore_index_bucketization_create_task_from_multiple_cells
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint8  avoid_starcell;
	[WmiDataId(7), read] sint8  exact_full_rowgroup;
	[WmiDataId(8), read] uint32 reason_for_task_creation;
	[WmiDataId(9), read] uint64 total_row_count;
	[WmiDataId(10), read] uint64 total_task_count;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string cell_ids;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string total_row_counts;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string total_worktable_counts;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has created one or more tasks from multiple cells."): Amended,
    Guid("{efb6cf8a-896d-4f81-9dfe-a5dab6d3dcb7}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_create_task_from_multiple_cells"): Amended]
class XeSqlPkg_columnstore_index_bucketization_create_task_from_multiple_cells: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_create_task_from_multiple_cells: XeSqlPkg_columnstore_index_bucketization_create_task_from_multiple_cells
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 partition_id;
	[WmiDataId(6), read] uint64 tid;
	[WmiDataId(7), read] uint32 thread_id;
	[WmiDataId(8), read] sint8  avoid_starcell;
	[WmiDataId(9), read] sint8  exact_full_rowgroup;
	[WmiDataId(10), read] uint32 reason_for_task_creation;
	[WmiDataId(11), read] uint64 total_row_count;
	[WmiDataId(12), read] uint64 total_task_count;
	[WmiDataId(13), read] uint64 total_inserted_rows_count;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string cell_ids;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string total_row_counts;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string total_worktable_counts;
	[WmiDataId(17), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has created one or more tasks from multiple cells."): Amended,
    Guid("{efb6cf8a-896d-4f81-9dfe-a5dab6d3dcb7}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_create_task_from_multiple_cells"): Amended]
class XeSqlPkg_columnstore_index_bucketization_create_task_from_multiple_cells: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_index_bucketization_create_task_from_multiple_cells: XeSqlPkg_columnstore_index_bucketization_create_task_from_multiple_cells
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 partition_id;
	[WmiDataId(6), read] uint64 tid;
	[WmiDataId(7), read] uint32 thread_id;
	[WmiDataId(8), read] sint8  avoid_starcell;
	[WmiDataId(9), read] sint8  exact_full_rowgroup;
	[WmiDataId(10), read] uint32 reason_for_task_creation;
	[WmiDataId(11), read] uint64 total_row_count;
	[WmiDataId(12), read] uint64 total_task_count;
	[WmiDataId(13), read] uint64 total_inserted_rows_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string cell_ids;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string total_row_counts;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string total_worktable_counts;
	[WmiDataId(18), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has created one or more tasks from multiple cells."): Amended,
    Guid("{efb6cf8a-896d-4f81-9dfe-a5dab6d3dcb7}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_create_task_from_multiple_cells"): Amended]
class XeSqlPkg_columnstore_index_bucketization_create_task_from_multiple_cells: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_index_bucketization_create_task_from_multiple_cells: XeSqlPkg_columnstore_index_bucketization_create_task_from_multiple_cells
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 partition_id;
	[WmiDataId(6), read] uint64 tid;
	[WmiDataId(7), read] uint32 thread_id;
	[WmiDataId(8), read] sint8  avoid_starcell;
	[WmiDataId(9), read] sint8  exact_full_rowgroup;
	[WmiDataId(10), read] uint32 reason_for_task_creation;
	[WmiDataId(11), read] uint64 total_row_count;
	[WmiDataId(12), read] uint64 total_task_count;
	[WmiDataId(13), read] uint64 total_inserted_rows_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(15), read] uint64 global_created_dataset_count;
	[WmiDataId(16), read] uint64 global_reused_dataset_count;
	[WmiDataId(17), read] uint64 global_deleted_dataset_count;
	[WmiDataId(18), read] uint64 dataset_count;
	[WmiDataId(19), read] uint64 dataset_in_dormant_state_count;
	[WmiDataId(20), read] uint64 created_dataset_count;
	[WmiDataId(21), read] uint64 reused_dataset_count;
	[WmiDataId(22), read] uint64 deleted_dataset_count;
	[WmiDataId(23), read] sint64 bucketization_pmo_budget_pages;
	[WmiDataId(24), read] sint64 bucketization_pmo_used_pages;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string cell_ids;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string total_row_counts;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string total_worktable_counts;
	[WmiDataId(28), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task is finished."): Amended,
    Guid("{5d7ca2de-aad4-4869-83c8-865fd4aaf3ca}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_process_task: XeSqlPkg_columnstore_index_bucketization_process_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 expected_row_count;
	[WmiDataId(7), read] sint64 processed_row_count;
	[WmiDataId(8), read] uint64 processed_worktable_count;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task is finished."): Amended,
    Guid("{5d7ca2de-aad4-4869-83c8-865fd4aaf3ca}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_process_task: XeSqlPkg_columnstore_index_bucketization_process_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 partition_id;
	[WmiDataId(6), read] uint64 tid;
	[WmiDataId(7), read] uint32 thread_id;
	[WmiDataId(8), read] sint64 expected_row_count;
	[WmiDataId(9), read] sint64 processed_row_count;
	[WmiDataId(10), read] uint64 processed_worktable_count;
	[WmiDataId(11), read] uint64 total_inserted_rows_count;
	[WmiDataId(12), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task is finished."): Amended,
    Guid("{5d7ca2de-aad4-4869-83c8-865fd4aaf3ca}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_index_bucketization_process_task: XeSqlPkg_columnstore_index_bucketization_process_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 partition_id;
	[WmiDataId(6), read] uint64 tid;
	[WmiDataId(7), read] uint32 thread_id;
	[WmiDataId(8), read] sint64 expected_row_count;
	[WmiDataId(9), read] sint64 processed_row_count;
	[WmiDataId(10), read] uint64 processed_worktable_count;
	[WmiDataId(11), read] uint64 total_inserted_rows_count;
	[WmiDataId(12), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(13), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task is finished."): Amended,
    Guid("{5d7ca2de-aad4-4869-83c8-865fd4aaf3ca}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_index_bucketization_process_task: XeSqlPkg_columnstore_index_bucketization_process_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 partition_id;
	[WmiDataId(6), read] uint64 tid;
	[WmiDataId(7), read] uint32 thread_id;
	[WmiDataId(8), read] sint64 expected_row_count;
	[WmiDataId(9), read] sint64 processed_row_count;
	[WmiDataId(10), read] uint64 processed_worktable_count;
	[WmiDataId(11), read] uint64 total_inserted_rows_count;
	[WmiDataId(12), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(13), read] sint8  is_idle_thread_in_end_index_build;
	[WmiDataId(14), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task is finished."): Amended,
    Guid("{5d7ca2de-aad4-4869-83c8-865fd4aaf3ca}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_index_bucketization_process_task: XeSqlPkg_columnstore_index_bucketization_process_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 partition_id;
	[WmiDataId(6), read] uint64 tid;
	[WmiDataId(7), read] uint32 thread_id;
	[WmiDataId(8), read] sint64 expected_row_count;
	[WmiDataId(9), read] sint64 processed_row_count;
	[WmiDataId(10), read] uint64 processed_worktable_count;
	[WmiDataId(11), read] uint64 total_inserted_rows_count;
	[WmiDataId(12), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(13), read] sint8  is_idle_thread_in_end_index_build;
	[WmiDataId(14), read] uint64 partition_count;
	[WmiDataId(15), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task is finished."): Amended,
    Guid("{5d7ca2de-aad4-4869-83c8-865fd4aaf3ca}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class columnstore_index_bucketization_process_task: XeSqlPkg_columnstore_index_bucketization_process_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 partition_id;
	[WmiDataId(6), read] uint64 tid;
	[WmiDataId(7), read] uint32 thread_id;
	[WmiDataId(8), read] sint64 expected_row_count;
	[WmiDataId(9), read] sint64 processed_row_count;
	[WmiDataId(10), read] uint64 processed_worktable_count;
	[WmiDataId(11), read] uint64 total_inserted_rows_count;
	[WmiDataId(12), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(13), read] sint8  is_idle_thread_in_end_index_build;
	[WmiDataId(14), read] uint64 partition_count;
	[WmiDataId(15), read] uint64 global_created_dataset_count;
	[WmiDataId(16), read] uint64 global_reused_dataset_count;
	[WmiDataId(17), read] uint64 global_deleted_dataset_count;
	[WmiDataId(18), read] uint64 dataset_count;
	[WmiDataId(19), read] uint64 dataset_in_dormant_state_count;
	[WmiDataId(20), read] uint64 created_dataset_count;
	[WmiDataId(21), read] uint64 reused_dataset_count;
	[WmiDataId(22), read] uint64 deleted_dataset_count;
	[WmiDataId(23), read] sint64 bucketization_pmo_budget_pages;
	[WmiDataId(24), read] sint64 bucketization_pmo_used_pages;
	[WmiDataId(25), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task is started."): Amended,
    Guid("{70273103-12ec-44f0-af38-f91d8c9d5052}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task_start"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_process_task_start: XeSqlPkg_columnstore_index_bucketization_process_task_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] sint64 expected_row_count;
	[WmiDataId(8), read] uint64 expected_worktable_count;
	[WmiDataId(9), read] uint64 total_inserted_rows_count;
	[WmiDataId(10), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task is started."): Amended,
    Guid("{70273103-12ec-44f0-af38-f91d8c9d5052}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task_start"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_process_task_start: XeSqlPkg_columnstore_index_bucketization_process_task_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] sint64 expected_row_count;
	[WmiDataId(8), read] uint64 expected_worktable_count;
	[WmiDataId(9), read] uint64 total_inserted_rows_count;
	[WmiDataId(10), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(11), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task is started."): Amended,
    Guid("{70273103-12ec-44f0-af38-f91d8c9d5052}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task_start"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_index_bucketization_process_task_start: XeSqlPkg_columnstore_index_bucketization_process_task_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] sint64 expected_row_count;
	[WmiDataId(8), read] uint64 expected_worktable_count;
	[WmiDataId(9), read] uint64 total_inserted_rows_count;
	[WmiDataId(10), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(11), read] sint8  is_idle_thread_in_end_index_build;
	[WmiDataId(12), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task is started."): Amended,
    Guid("{70273103-12ec-44f0-af38-f91d8c9d5052}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task_start"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_index_bucketization_process_task_start: XeSqlPkg_columnstore_index_bucketization_process_task_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] sint64 expected_row_count;
	[WmiDataId(8), read] uint64 expected_worktable_count;
	[WmiDataId(9), read] uint64 total_inserted_rows_count;
	[WmiDataId(10), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(11), read] sint8  is_idle_thread_in_end_index_build;
	[WmiDataId(12), read] uint64 partition_count;
	[WmiDataId(13), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task is started."): Amended,
    Guid("{70273103-12ec-44f0-af38-f91d8c9d5052}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task_start"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_index_bucketization_process_task_start: XeSqlPkg_columnstore_index_bucketization_process_task_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] sint64 expected_row_count;
	[WmiDataId(8), read] uint64 expected_worktable_count;
	[WmiDataId(9), read] uint64 total_inserted_rows_count;
	[WmiDataId(10), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(11), read] sint8  is_idle_thread_in_end_index_build;
	[WmiDataId(12), read] uint64 partition_count;
	[WmiDataId(13), read] uint64 global_created_dataset_count;
	[WmiDataId(14), read] uint64 global_reused_dataset_count;
	[WmiDataId(15), read] uint64 global_deleted_dataset_count;
	[WmiDataId(16), read] uint64 dataset_count;
	[WmiDataId(17), read] uint64 dataset_in_dormant_state_count;
	[WmiDataId(18), read] uint64 created_dataset_count;
	[WmiDataId(19), read] uint64 reused_dataset_count;
	[WmiDataId(20), read] uint64 deleted_dataset_count;
	[WmiDataId(21), read] sint64 bucketization_pmo_budget_pages;
	[WmiDataId(22), read] sint64 bucketization_pmo_used_pages;
	[WmiDataId(23), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is initialized."): Amended,
    Guid("{b83f1791-daed-4cfe-b6a2-62dff64ecc23}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_init_index_build"): Amended]
class XeSqlPkg_columnstore_index_bucketization_init_index_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_init_index_build: XeSqlPkg_columnstore_index_bucketization_init_index_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is reached to the end of index build, but has not finished its work yet."): Amended,
    Guid("{2b763b86-0342-457b-9fd5-5aba1fd5b433}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_reached_end_index_build"): Amended]
class XeSqlPkg_columnstore_index_bucketization_reached_end_index_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_reached_end_index_build: XeSqlPkg_columnstore_index_bucketization_reached_end_index_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint64 total_inserted_rows_count;
	[WmiDataId(7), read] uint64 total_inserted_rows_count_in_this_thread;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is reached to the end of index build, but has not finished its work yet."): Amended,
    Guid("{2b763b86-0342-457b-9fd5-5aba1fd5b433}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_reached_end_index_build"): Amended]
class XeSqlPkg_columnstore_index_bucketization_reached_end_index_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_reached_end_index_build: XeSqlPkg_columnstore_index_bucketization_reached_end_index_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint64 total_inserted_rows_count;
	[WmiDataId(7), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(8), read] sint8  is_prepared_for_inserts;
	[WmiDataId(9), read] sint8  is_globally_prepared_for_inserts;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is reached to the end of index build, but has not finished its work yet."): Amended,
    Guid("{2b763b86-0342-457b-9fd5-5aba1fd5b433}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_reached_end_index_build"): Amended]
class XeSqlPkg_columnstore_index_bucketization_reached_end_index_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_index_bucketization_reached_end_index_build: XeSqlPkg_columnstore_index_bucketization_reached_end_index_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint64 total_inserted_rows_count;
	[WmiDataId(7), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(8), read] sint8  is_prepared_for_inserts;
	[WmiDataId(9), read] sint8  is_globally_prepared_for_inserts;
	[WmiDataId(10), read] uint64 partition_count;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is reached to the end of index build, but has not finished its work yet."): Amended,
    Guid("{2b763b86-0342-457b-9fd5-5aba1fd5b433}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_reached_end_index_build"): Amended]
class XeSqlPkg_columnstore_index_bucketization_reached_end_index_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_index_bucketization_reached_end_index_build: XeSqlPkg_columnstore_index_bucketization_reached_end_index_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint64 total_inserted_rows_count;
	[WmiDataId(7), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(8), read] sint8  is_prepared_for_inserts;
	[WmiDataId(9), read] sint8  is_globally_prepared_for_inserts;
	[WmiDataId(10), read] uint64 partition_count;
	[WmiDataId(11), read] uint64 global_created_dataset_count;
	[WmiDataId(12), read] uint64 global_reused_dataset_count;
	[WmiDataId(13), read] uint64 global_deleted_dataset_count;
	[WmiDataId(14), read] uint64 dataset_count;
	[WmiDataId(15), read] uint64 dataset_in_dormant_state_count;
	[WmiDataId(16), read] uint64 created_dataset_count;
	[WmiDataId(17), read] uint64 reused_dataset_count;
	[WmiDataId(18), read] uint64 deleted_dataset_count;
	[WmiDataId(19), read] sint64 bucketization_pmo_budget_pages;
	[WmiDataId(20), read] sint64 bucketization_pmo_used_pages;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is about to create a task."): Amended,
    Guid("{e82d4763-7062-434a-b7f6-1731d18096e0}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_end_index_build"): Amended]
class XeSqlPkg_columnstore_index_bucketization_end_index_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_end_index_build: XeSqlPkg_columnstore_index_bucketization_end_index_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 worktables_count_in_create_task;
	[WmiDataId(6), read] uint64 worktables_count_in_enqueued_all;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is about to create a task."): Amended,
    Guid("{e82d4763-7062-434a-b7f6-1731d18096e0}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_end_index_build"): Amended]
class XeSqlPkg_columnstore_index_bucketization_end_index_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_end_index_build: XeSqlPkg_columnstore_index_bucketization_end_index_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 worktables_count_in_create_task;
	[WmiDataId(6), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(7), read] uint64 tid;
	[WmiDataId(8), read] uint64 created_worktables_count;
	[WmiDataId(9), read] uint64 reused_worktables_count;
	[WmiDataId(10), read] uint64 deleted_worktables_count;
	[WmiDataId(11), read] uint64 total_inserted_rows_count;
	[WmiDataId(12), read] uint64 partition_count;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is about to create a task."): Amended,
    Guid("{e82d4763-7062-434a-b7f6-1731d18096e0}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_end_index_build"): Amended]
class XeSqlPkg_columnstore_index_bucketization_end_index_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_index_bucketization_end_index_build: XeSqlPkg_columnstore_index_bucketization_end_index_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 worktables_count_in_create_task;
	[WmiDataId(6), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(7), read] uint64 tid;
	[WmiDataId(8), read] uint64 created_worktables_count;
	[WmiDataId(9), read] uint64 reused_worktables_count;
	[WmiDataId(10), read] uint64 deleted_worktables_count;
	[WmiDataId(11), read] uint64 total_inserted_rows_count;
	[WmiDataId(12), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(13), read] uint64 partition_count;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is about to create a task."): Amended,
    Guid("{e82d4763-7062-434a-b7f6-1731d18096e0}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_end_index_build"): Amended]
class XeSqlPkg_columnstore_index_bucketization_end_index_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_index_bucketization_end_index_build: XeSqlPkg_columnstore_index_bucketization_end_index_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 worktables_count_in_create_task;
	[WmiDataId(6), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(7), read] uint64 tid;
	[WmiDataId(8), read] uint64 created_worktables_count;
	[WmiDataId(9), read] uint64 reused_worktables_count;
	[WmiDataId(10), read] uint64 deleted_worktables_count;
	[WmiDataId(11), read] uint64 total_inserted_rows_count;
	[WmiDataId(12), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(13), read] uint64 partition_count;
	[WmiDataId(14), read] sint8  is_prepared_for_inserts;
	[WmiDataId(15), read] sint8  is_globally_prepared_for_inserts;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process is about to create a task."): Amended,
    Guid("{e82d4763-7062-434a-b7f6-1731d18096e0}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_end_index_build"): Amended]
class XeSqlPkg_columnstore_index_bucketization_end_index_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_index_bucketization_end_index_build: XeSqlPkg_columnstore_index_bucketization_end_index_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 worktables_count_in_create_task;
	[WmiDataId(6), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(7), read] uint64 tid;
	[WmiDataId(8), read] uint64 created_worktables_count;
	[WmiDataId(9), read] uint64 reused_worktables_count;
	[WmiDataId(10), read] uint64 deleted_worktables_count;
	[WmiDataId(11), read] uint64 total_inserted_rows_count;
	[WmiDataId(12), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(13), read] uint64 partition_count;
	[WmiDataId(14), read] sint8  is_prepared_for_inserts;
	[WmiDataId(15), read] sint8  is_globally_prepared_for_inserts;
	[WmiDataId(16), read] uint64 global_created_dataset_count;
	[WmiDataId(17), read] uint64 global_reused_dataset_count;
	[WmiDataId(18), read] uint64 global_deleted_dataset_count;
	[WmiDataId(19), read] uint64 dataset_count;
	[WmiDataId(20), read] uint64 dataset_in_dormant_state_count;
	[WmiDataId(21), read] uint64 created_dataset_count;
	[WmiDataId(22), read] uint64 reused_dataset_count;
	[WmiDataId(23), read] uint64 deleted_dataset_count;
	[WmiDataId(24), read] sint64 bucketization_pmo_budget_pages;
	[WmiDataId(25), read] sint64 bucketization_pmo_used_pages;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has failed."): Amended,
    Guid("{7be866cd-6423-490b-87f0-e472753b27d9}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_insert_fail: XeSqlPkg_columnstore_index_bucketization_insert_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 last_failed_result_code;
	[WmiDataId(7), read] sint32 insert_attempt_count;
	[WmiDataId(8), read] sint32 max_allowed_insert_attempt_count;
	[WmiDataId(9), read] sint64 error_code;
	[WmiDataId(10), read] uint64 tempdb_current_pages_count;
	[WmiDataId(11), read] uint64 tempdb_max_pages_count;
	[WmiDataId(12), read] real64 tempdb_usage_ratio;
	[WmiDataId(13), read] real64 tempdb_max_usage_ratio;
	[WmiDataId(14), read] uint64 worktables_count_in_create_task;
	[WmiDataId(15), read] uint64 worktables_count_in_enqueued_all;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has failed."): Amended,
    Guid("{7be866cd-6423-490b-87f0-e472753b27d9}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_insert_fail: XeSqlPkg_columnstore_index_bucketization_insert_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 last_failed_result_code;
	[WmiDataId(7), read] sint32 insert_attempt_count;
	[WmiDataId(8), read] sint32 max_allowed_insert_attempt_count;
	[WmiDataId(9), read] sint64 error_code;
	[WmiDataId(10), read] uint64 tempdb_current_pages_count;
	[WmiDataId(11), read] uint64 tempdb_max_pages_count;
	[WmiDataId(12), read] real64 tempdb_usage_ratio;
	[WmiDataId(13), read] real64 tempdb_max_usage_ratio;
	[WmiDataId(14), read] uint64 worktables_count_in_create_task;
	[WmiDataId(15), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(16), read] uint64 created_worktables_count;
	[WmiDataId(17), read] uint64 reused_worktables_count;
	[WmiDataId(18), read] uint64 deleted_worktables_count;
	[WmiDataId(19), read] uint64 rowset_id;
	[WmiDataId(20), read] uint64 total_inserted_rows_count;
	[WmiDataId(21), read] sint8  is_partitioned;
	[WmiDataId(22), read] uint64 tid;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has failed."): Amended,
    Guid("{7be866cd-6423-490b-87f0-e472753b27d9}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_index_bucketization_insert_fail: XeSqlPkg_columnstore_index_bucketization_insert_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 last_failed_result_code;
	[WmiDataId(7), read] sint32 insert_attempt_count;
	[WmiDataId(8), read] sint32 max_allowed_insert_attempt_count;
	[WmiDataId(9), read] sint64 error_code;
	[WmiDataId(10), read] sint64 error_severity;
	[WmiDataId(11), read] sint64 error_state;
	[WmiDataId(12), read] uint64 tempdb_current_pages_count;
	[WmiDataId(13), read] uint64 tempdb_max_pages_count;
	[WmiDataId(14), read] real64 tempdb_usage_ratio;
	[WmiDataId(15), read] real64 tempdb_max_usage_ratio;
	[WmiDataId(16), read] uint64 worktables_count_in_create_task;
	[WmiDataId(17), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(18), read] uint64 created_worktables_count;
	[WmiDataId(19), read] uint64 reused_worktables_count;
	[WmiDataId(20), read] uint64 deleted_worktables_count;
	[WmiDataId(21), read] uint64 rowset_id;
	[WmiDataId(22), read] uint64 total_inserted_rows_count;
	[WmiDataId(23), read] sint8  is_partitioned;
	[WmiDataId(24), read] sint8  should_abort_insert;
	[WmiDataId(25), read] uint64 tid;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has failed."): Amended,
    Guid("{7be866cd-6423-490b-87f0-e472753b27d9}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_index_bucketization_insert_fail: XeSqlPkg_columnstore_index_bucketization_insert_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 last_failed_result_code;
	[WmiDataId(7), read] sint32 insert_attempt_count;
	[WmiDataId(8), read] sint32 max_allowed_insert_attempt_count;
	[WmiDataId(9), read] sint64 error_code;
	[WmiDataId(10), read] sint64 error_severity;
	[WmiDataId(11), read] sint64 error_state;
	[WmiDataId(12), read] uint64 tempdb_current_pages_count;
	[WmiDataId(13), read] uint64 tempdb_max_pages_count;
	[WmiDataId(14), read] real64 tempdb_usage_ratio;
	[WmiDataId(15), read] real64 tempdb_max_usage_ratio;
	[WmiDataId(16), read] uint64 worktables_count_in_create_task;
	[WmiDataId(17), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(18), read] uint64 created_worktables_count;
	[WmiDataId(19), read] uint64 reused_worktables_count;
	[WmiDataId(20), read] uint64 deleted_worktables_count;
	[WmiDataId(21), read] uint64 rowset_id;
	[WmiDataId(22), read] uint64 total_inserted_rows_count;
	[WmiDataId(23), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(24), read] sint8  is_partitioned;
	[WmiDataId(25), read] sint8  should_abort_insert;
	[WmiDataId(26), read] uint64 tid;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has failed."): Amended,
    Guid("{7be866cd-6423-490b-87f0-e472753b27d9}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_index_bucketization_insert_fail: XeSqlPkg_columnstore_index_bucketization_insert_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 last_failed_result_code;
	[WmiDataId(7), read] sint32 insert_attempt_count;
	[WmiDataId(8), read] sint32 max_allowed_insert_attempt_count;
	[WmiDataId(9), read] sint64 error_code;
	[WmiDataId(10), read] sint64 error_severity;
	[WmiDataId(11), read] sint64 error_state;
	[WmiDataId(12), read] uint64 tempdb_current_pages_count;
	[WmiDataId(13), read] uint64 tempdb_max_pages_count;
	[WmiDataId(14), read] real64 tempdb_usage_ratio;
	[WmiDataId(15), read] real64 tempdb_max_usage_ratio;
	[WmiDataId(16), read] uint64 worktables_count_in_create_task;
	[WmiDataId(17), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(18), read] uint64 created_worktables_count;
	[WmiDataId(19), read] uint64 reused_worktables_count;
	[WmiDataId(20), read] uint64 deleted_worktables_count;
	[WmiDataId(21), read] uint64 rowset_id;
	[WmiDataId(22), read] uint64 total_inserted_rows_count;
	[WmiDataId(23), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(24), read] sint8  is_partitioned;
	[WmiDataId(25), read] sint8  should_abort_insert;
	[WmiDataId(26), read] uint64 tid;
	[WmiDataId(27), read] uint32 dop;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has failed."): Amended,
    Guid("{7be866cd-6423-490b-87f0-e472753b27d9}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class columnstore_index_bucketization_insert_fail: XeSqlPkg_columnstore_index_bucketization_insert_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 last_failed_result_code;
	[WmiDataId(7), read] sint32 insert_attempt_count;
	[WmiDataId(8), read] sint32 max_allowed_insert_attempt_count;
	[WmiDataId(9), read] sint64 error_code;
	[WmiDataId(10), read] sint64 error_severity;
	[WmiDataId(11), read] sint64 error_state;
	[WmiDataId(12), read] uint64 tempdb_current_pages_count;
	[WmiDataId(13), read] uint64 tempdb_max_pages_count;
	[WmiDataId(14), read] real64 tempdb_usage_ratio;
	[WmiDataId(15), read] real64 tempdb_max_usage_ratio;
	[WmiDataId(16), read] uint64 worktables_count_in_create_task;
	[WmiDataId(17), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(18), read] uint64 created_worktables_count;
	[WmiDataId(19), read] uint64 reused_worktables_count;
	[WmiDataId(20), read] uint64 deleted_worktables_count;
	[WmiDataId(21), read] uint64 rowset_id;
	[WmiDataId(22), read] uint64 total_inserted_rows_count;
	[WmiDataId(23), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(24), read] sint8  is_partitioned;
	[WmiDataId(25), read] sint8  should_abort_insert;
	[WmiDataId(26), read] uint64 tid;
	[WmiDataId(27), read] uint32 dop;
	[WmiDataId(28), read] sint8  any_tasks_being_processed;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has failed."): Amended,
    Guid("{7be866cd-6423-490b-87f0-e472753b27d9}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(7)]
class columnstore_index_bucketization_insert_fail: XeSqlPkg_columnstore_index_bucketization_insert_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 last_failed_result_code;
	[WmiDataId(7), read] sint32 insert_attempt_count;
	[WmiDataId(8), read] sint32 max_allowed_insert_attempt_count;
	[WmiDataId(9), read] sint64 error_code;
	[WmiDataId(10), read] sint64 error_severity;
	[WmiDataId(11), read] sint64 error_state;
	[WmiDataId(12), read] uint64 tempdb_current_pages_count;
	[WmiDataId(13), read] uint64 tempdb_max_pages_count;
	[WmiDataId(14), read] real64 tempdb_usage_ratio;
	[WmiDataId(15), read] real64 tempdb_max_usage_ratio;
	[WmiDataId(16), read] uint64 worktables_count_in_create_task;
	[WmiDataId(17), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(18), read] uint64 created_worktables_count;
	[WmiDataId(19), read] uint64 reused_worktables_count;
	[WmiDataId(20), read] uint64 deleted_worktables_count;
	[WmiDataId(21), read] uint64 rowset_id;
	[WmiDataId(22), read] uint64 total_inserted_rows_count;
	[WmiDataId(23), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(24), read] sint8  is_partitioned;
	[WmiDataId(25), read] sint8  should_abort_insert;
	[WmiDataId(26), read] uint64 tid;
	[WmiDataId(27), read] uint32 dop;
	[WmiDataId(28), read] sint8  any_tasks_being_processed;
	[WmiDataId(29), read] uint64 partition_id;
	[WmiDataId(30), read] uint64 cell_id;
	[WmiDataId(31), read] uint64 partition_count;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process has failed."): Amended,
    Guid("{7be866cd-6423-490b-87f0-e472753b27d9}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(8)]
class columnstore_index_bucketization_insert_fail: XeSqlPkg_columnstore_index_bucketization_insert_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 last_failed_result_code;
	[WmiDataId(7), read] sint32 insert_attempt_count;
	[WmiDataId(8), read] sint32 max_allowed_insert_attempt_count;
	[WmiDataId(9), read] sint64 error_code;
	[WmiDataId(10), read] sint64 error_severity;
	[WmiDataId(11), read] sint64 error_state;
	[WmiDataId(12), read] uint64 tempdb_current_pages_count;
	[WmiDataId(13), read] uint64 tempdb_max_pages_count;
	[WmiDataId(14), read] real64 tempdb_usage_ratio;
	[WmiDataId(15), read] real64 tempdb_max_usage_ratio;
	[WmiDataId(16), read] uint64 worktables_count_in_create_task;
	[WmiDataId(17), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(18), read] uint64 created_worktables_count;
	[WmiDataId(19), read] uint64 reused_worktables_count;
	[WmiDataId(20), read] uint64 deleted_worktables_count;
	[WmiDataId(21), read] uint64 global_created_dataset_count;
	[WmiDataId(22), read] uint64 global_reused_dataset_count;
	[WmiDataId(23), read] uint64 global_deleted_dataset_count;
	[WmiDataId(24), read] uint64 rowset_id;
	[WmiDataId(25), read] uint64 total_inserted_rows_count;
	[WmiDataId(26), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(27), read] sint8  is_partitioned;
	[WmiDataId(28), read] sint8  should_abort_insert;
	[WmiDataId(29), read] uint64 tid;
	[WmiDataId(30), read] uint32 dop;
	[WmiDataId(31), read] sint8  any_tasks_being_processed;
	[WmiDataId(32), read] uint64 partition_id;
	[WmiDataId(33), read] uint64 cell_id;
	[WmiDataId(34), read] uint64 partition_count;
	[WmiDataId(35), read] uint64 dataset_count;
	[WmiDataId(36), read] uint64 dataset_in_dormant_state_count;
	[WmiDataId(37), read] uint64 created_dataset_count;
	[WmiDataId(38), read] uint64 reused_dataset_count;
	[WmiDataId(39), read] uint64 deleted_dataset_count;
	[WmiDataId(40), read] sint64 bucketization_pmo_budget_pages;
	[WmiDataId(41), read] sint64 bucketization_pmo_used_pages;
	[WmiDataId(42), read] uint32 insert_blocked_state;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task has failed."): Amended,
    Guid("{409c9624-c8b7-46d0-a4df-26eec3722440}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_process_task_fail: XeSqlPkg_columnstore_index_bucketization_process_task_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 error_code;
	[WmiDataId(7), read] sint64 error_severity;
	[WmiDataId(8), read] sint64 error_state;
	[WmiDataId(9), read] uint64 worktables_count_in_create_task;
	[WmiDataId(10), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(11), read] uint64 created_worktables_count;
	[WmiDataId(12), read] uint64 reused_worktables_count;
	[WmiDataId(13), read] uint64 deleted_worktables_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count;
	[WmiDataId(15), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(16), read] sint8  is_partitioned;
	[WmiDataId(17), read] uint64 tid;
	[WmiDataId(18), read] uint32 dop;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task has failed."): Amended,
    Guid("{409c9624-c8b7-46d0-a4df-26eec3722440}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_process_task_fail: XeSqlPkg_columnstore_index_bucketization_process_task_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 error_code;
	[WmiDataId(7), read] sint64 error_severity;
	[WmiDataId(8), read] sint64 error_state;
	[WmiDataId(9), read] uint64 worktables_count_in_create_task;
	[WmiDataId(10), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(11), read] uint64 created_worktables_count;
	[WmiDataId(12), read] uint64 reused_worktables_count;
	[WmiDataId(13), read] uint64 deleted_worktables_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count;
	[WmiDataId(15), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(16), read] sint8  is_partitioned;
	[WmiDataId(17), read] uint64 tid;
	[WmiDataId(18), read] uint32 dop;
	[WmiDataId(19), read] uint64 partition_count;
	[WmiDataId(20), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization process task has failed."): Amended,
    Guid("{409c9624-c8b7-46d0-a4df-26eec3722440}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_index_bucketization_process_task_fail: XeSqlPkg_columnstore_index_bucketization_process_task_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 error_code;
	[WmiDataId(7), read] sint64 error_severity;
	[WmiDataId(8), read] sint64 error_state;
	[WmiDataId(9), read] uint64 worktables_count_in_create_task;
	[WmiDataId(10), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(11), read] uint64 created_worktables_count;
	[WmiDataId(12), read] uint64 reused_worktables_count;
	[WmiDataId(13), read] uint64 deleted_worktables_count;
	[WmiDataId(14), read] uint64 global_created_dataset_count;
	[WmiDataId(15), read] uint64 global_reused_dataset_count;
	[WmiDataId(16), read] uint64 global_deleted_dataset_count;
	[WmiDataId(17), read] uint64 total_inserted_rows_count;
	[WmiDataId(18), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(19), read] sint8  is_partitioned;
	[WmiDataId(20), read] uint64 tid;
	[WmiDataId(21), read] uint32 dop;
	[WmiDataId(22), read] uint64 partition_count;
	[WmiDataId(23), read] uint64 dataset_count;
	[WmiDataId(24), read] uint64 dataset_in_dormant_state_count;
	[WmiDataId(25), read] uint64 created_dataset_count;
	[WmiDataId(26), read] uint64 reused_dataset_count;
	[WmiDataId(27), read] uint64 deleted_dataset_count;
	[WmiDataId(28), read] sint64 bucketization_pmo_budget_pages;
	[WmiDataId(29), read] sint64 bucketization_pmo_used_pages;
	[WmiDataId(30), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion into a worktable has failed."): Amended,
    Guid("{457f8f80-7b60-4c2e-b474-7b6c64c51c45}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_into_worktable_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_into_worktable_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_insert_into_worktable_fail: XeSqlPkg_columnstore_index_bucketization_insert_into_worktable_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 hresult_code;
	[WmiDataId(7), read] uint64 partition_id;
	[WmiDataId(8), read] uint64 cell_id;
	[WmiDataId(9), read] uint64 worktables_count_in_create_task;
	[WmiDataId(10), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(11), read] uint64 created_worktables_count;
	[WmiDataId(12), read] uint64 reused_worktables_count;
	[WmiDataId(13), read] uint64 deleted_worktables_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count;
	[WmiDataId(15), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(16), read] sint8  is_partitioned;
	[WmiDataId(17), read] uint64 tid;
	[WmiDataId(18), read] uint32 dop;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion into a worktable has failed."): Amended,
    Guid("{457f8f80-7b60-4c2e-b474-7b6c64c51c45}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_into_worktable_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_into_worktable_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_insert_into_worktable_fail: XeSqlPkg_columnstore_index_bucketization_insert_into_worktable_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 hresult_code;
	[WmiDataId(7), read] sint64 error_code;
	[WmiDataId(8), read] sint64 error_severity;
	[WmiDataId(9), read] sint64 error_state;
	[WmiDataId(10), read] uint64 partition_id;
	[WmiDataId(11), read] uint64 cell_id;
	[WmiDataId(12), read] uint64 worktables_count_in_create_task;
	[WmiDataId(13), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(14), read] uint64 created_worktables_count;
	[WmiDataId(15), read] uint64 reused_worktables_count;
	[WmiDataId(16), read] uint64 deleted_worktables_count;
	[WmiDataId(17), read] uint64 total_inserted_rows_count;
	[WmiDataId(18), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(19), read] sint8  is_partitioned;
	[WmiDataId(20), read] uint64 tid;
	[WmiDataId(21), read] uint32 dop;
	[WmiDataId(22), read] uint64 worktable_current_rows_count;
	[WmiDataId(23), read] uint64 worktable_row_reset_count;
	[WmiDataId(24), read] uint64 partition_count;
	[WmiDataId(25), read] uint64 worktable_id;
	[WmiDataId(26), read] uint64 created_dataset_count_on_worktable;
	[WmiDataId(27), read] uint64 dataset_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion into a worktable has failed."): Amended,
    Guid("{457f8f80-7b60-4c2e-b474-7b6c64c51c45}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_into_worktable_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_into_worktable_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_index_bucketization_insert_into_worktable_fail: XeSqlPkg_columnstore_index_bucketization_insert_into_worktable_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 hresult_code;
	[WmiDataId(7), read] sint64 error_code;
	[WmiDataId(8), read] sint64 error_severity;
	[WmiDataId(9), read] sint64 error_state;
	[WmiDataId(10), read] uint64 partition_id;
	[WmiDataId(11), read] uint64 cell_id;
	[WmiDataId(12), read] uint64 worktables_count_in_create_task;
	[WmiDataId(13), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(14), read] uint64 created_worktables_count;
	[WmiDataId(15), read] uint64 reused_worktables_count;
	[WmiDataId(16), read] uint64 deleted_worktables_count;
	[WmiDataId(17), read] uint64 global_created_dataset_count;
	[WmiDataId(18), read] uint64 global_reused_dataset_count;
	[WmiDataId(19), read] uint64 global_deleted_dataset_count;
	[WmiDataId(20), read] uint64 total_inserted_rows_count;
	[WmiDataId(21), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(22), read] sint8  is_partitioned;
	[WmiDataId(23), read] uint64 tid;
	[WmiDataId(24), read] uint32 dop;
	[WmiDataId(25), read] uint64 worktable_current_rows_count;
	[WmiDataId(26), read] uint64 worktable_row_reset_count;
	[WmiDataId(27), read] uint64 partition_count;
	[WmiDataId(28), read] uint64 worktable_id;
	[WmiDataId(29), read] uint64 created_dataset_count_on_worktable;
	[WmiDataId(30), read] uint64 dataset_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion created a worktable."): Amended,
    Guid("{bbebac5d-8e7d-4ba4-b6f0-d0ef2382d5e3}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_get_or_create_worktable"): Amended]
class XeSqlPkg_columnstore_index_bucketization_get_or_create_worktable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_get_or_create_worktable: XeSqlPkg_columnstore_index_bucketization_get_or_create_worktable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 worktables_count_in_create_task;
	[WmiDataId(7), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(8), read] uint64 created_worktables_count;
	[WmiDataId(9), read] uint64 reused_worktables_count;
	[WmiDataId(10), read] uint64 deleted_worktables_count;
	[WmiDataId(11), read] uint64 total_inserted_rows_count;
	[WmiDataId(12), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(13), read] sint8  is_partitioned;
	[WmiDataId(14), read] uint64 tid;
	[WmiDataId(15), read] uint32 dop;
	[WmiDataId(16), read] uint64 worktable_current_rows_count;
	[WmiDataId(17), read] uint64 worktable_row_reset_count;
	[WmiDataId(18), read] uint64 partition_id;
	[WmiDataId(19), read] uint64 cell_id;
	[WmiDataId(20), read] uint64 partition_count;
	[WmiDataId(21), read] uint64 worktable_id;
	[WmiDataId(22), read] uint64 created_dataset_count_on_worktable;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion created a worktable."): Amended,
    Guid("{bbebac5d-8e7d-4ba4-b6f0-d0ef2382d5e3}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_get_or_create_worktable"): Amended]
class XeSqlPkg_columnstore_index_bucketization_get_or_create_worktable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_get_or_create_worktable: XeSqlPkg_columnstore_index_bucketization_get_or_create_worktable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 worktables_count_in_create_task;
	[WmiDataId(7), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(8), read] uint64 created_worktables_count;
	[WmiDataId(9), read] uint64 reused_worktables_count;
	[WmiDataId(10), read] uint64 deleted_worktables_count;
	[WmiDataId(11), read] uint64 global_created_dataset_count;
	[WmiDataId(12), read] uint64 global_reused_dataset_count;
	[WmiDataId(13), read] uint64 global_deleted_dataset_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count;
	[WmiDataId(15), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(16), read] sint8  is_partitioned;
	[WmiDataId(17), read] uint64 tid;
	[WmiDataId(18), read] uint32 dop;
	[WmiDataId(19), read] uint64 worktable_current_rows_count;
	[WmiDataId(20), read] uint64 worktable_row_reset_count;
	[WmiDataId(21), read] uint64 partition_id;
	[WmiDataId(22), read] uint64 cell_id;
	[WmiDataId(23), read] uint64 partition_count;
	[WmiDataId(24), read] uint64 worktable_id;
	[WmiDataId(25), read] uint64 created_dataset_count_on_worktable;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization dropped a worktable."): Amended,
    Guid("{b05e2f4d-6f5d-4c80-b733-7d9d680ec44f}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_drop_worktable"): Amended]
class XeSqlPkg_columnstore_index_bucketization_drop_worktable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_drop_worktable: XeSqlPkg_columnstore_index_bucketization_drop_worktable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 worktable_id;
	[WmiDataId(7), read] uint64 worktable_row_reset_count;
	[WmiDataId(8), read] uint64 worktable_total_inserted_row_count;
	[WmiDataId(9), read] uint64 created_dataset_count_on_worktable;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion created a dataset."): Amended,
    Guid("{3b88da64-c240-4431-afaf-e3bac2a19df6}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_create_dataset"): Amended]
class XeSqlPkg_columnstore_index_bucketization_create_dataset: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_create_dataset: XeSqlPkg_columnstore_index_bucketization_create_dataset
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 worktables_count_in_create_task;
	[WmiDataId(7), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(8), read] uint64 created_worktables_count;
	[WmiDataId(9), read] uint64 reused_worktables_count;
	[WmiDataId(10), read] uint64 deleted_worktables_count;
	[WmiDataId(11), read] uint64 total_inserted_rows_count;
	[WmiDataId(12), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(13), read] sint8  is_partitioned;
	[WmiDataId(14), read] uint64 tid;
	[WmiDataId(15), read] uint32 dop;
	[WmiDataId(16), read] uint64 worktable_current_rows_count;
	[WmiDataId(17), read] uint64 worktable_row_reset_count;
	[WmiDataId(18), read] uint64 partition_count;
	[WmiDataId(19), read] uint64 worktable_datasets_count;
	[WmiDataId(20), read] uint32 reason_for_dataset_creation;
	[WmiDataId(21), read] uint64 worktable_id;
	[WmiDataId(22), read] uint64 created_dataset_count_on_worktable;
	[WmiDataId(23), read] uint32 dataset_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion created a dataset."): Amended,
    Guid("{3b88da64-c240-4431-afaf-e3bac2a19df6}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_create_dataset"): Amended]
class XeSqlPkg_columnstore_index_bucketization_create_dataset: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_create_dataset: XeSqlPkg_columnstore_index_bucketization_create_dataset
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 worktables_count_in_create_task;
	[WmiDataId(7), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(8), read] uint64 created_worktables_count;
	[WmiDataId(9), read] uint64 reused_worktables_count;
	[WmiDataId(10), read] uint64 deleted_worktables_count;
	[WmiDataId(11), read] uint64 global_created_dataset_count;
	[WmiDataId(12), read] uint64 global_reused_dataset_count;
	[WmiDataId(13), read] uint64 global_deleted_dataset_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count;
	[WmiDataId(15), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(16), read] sint8  is_partitioned;
	[WmiDataId(17), read] uint64 tid;
	[WmiDataId(18), read] uint32 dop;
	[WmiDataId(19), read] uint64 worktable_current_rows_count;
	[WmiDataId(20), read] uint64 worktable_row_reset_count;
	[WmiDataId(21), read] uint64 partition_count;
	[WmiDataId(22), read] uint64 worktable_datasets_count;
	[WmiDataId(23), read] uint32 reason_for_dataset_creation;
	[WmiDataId(24), read] uint64 worktable_id;
	[WmiDataId(25), read] uint64 created_dataset_count_on_worktable;
	[WmiDataId(26), read] uint32 dataset_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization failed to clean up a task related objects."): Amended,
    Guid("{0c59a1cf-8fcd-4ce4-8007-10b8aace8e22}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_cleanup_task_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_cleanup_task_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_cleanup_task_fail: XeSqlPkg_columnstore_index_bucketization_cleanup_task_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 hresult_code;
	[WmiDataId(7), read] uint64 worktables_count_in_create_task;
	[WmiDataId(8), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(9), read] uint64 created_worktables_count;
	[WmiDataId(10), read] uint64 reused_worktables_count;
	[WmiDataId(11), read] uint64 deleted_worktables_count;
	[WmiDataId(12), read] uint64 total_inserted_rows_count;
	[WmiDataId(13), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(14), read] sint8  is_partitioned;
	[WmiDataId(15), read] uint64 tid;
	[WmiDataId(16), read] uint32 dop;
	[WmiDataId(17), read] uint64 worktable_current_rows_count;
	[WmiDataId(18), read] uint64 worktable_row_reset_count;
	[WmiDataId(19), read] uint64 worktable_datasets_count;
	[WmiDataId(20), read] uint64 partition_count;
	[WmiDataId(21), read] uint64 worktable_id;
	[WmiDataId(22), read] uint64 created_dataset_count_on_worktable;
	[WmiDataId(23), read] uint64 dataset_id;
	[WmiDataId(24), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization failed to clean up a task related objects."): Amended,
    Guid("{0c59a1cf-8fcd-4ce4-8007-10b8aace8e22}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_cleanup_task_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_cleanup_task_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_cleanup_task_fail: XeSqlPkg_columnstore_index_bucketization_cleanup_task_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 hresult_code;
	[WmiDataId(7), read] uint64 worktables_count_in_create_task;
	[WmiDataId(8), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(9), read] uint64 created_worktables_count;
	[WmiDataId(10), read] uint64 reused_worktables_count;
	[WmiDataId(11), read] uint64 deleted_worktables_count;
	[WmiDataId(12), read] uint64 global_created_dataset_count;
	[WmiDataId(13), read] uint64 global_reused_dataset_count;
	[WmiDataId(14), read] uint64 global_deleted_dataset_count;
	[WmiDataId(15), read] uint64 total_inserted_rows_count;
	[WmiDataId(16), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(17), read] sint8  is_partitioned;
	[WmiDataId(18), read] uint64 tid;
	[WmiDataId(19), read] uint32 dop;
	[WmiDataId(20), read] uint64 worktable_current_rows_count;
	[WmiDataId(21), read] uint64 worktable_row_reset_count;
	[WmiDataId(22), read] uint64 worktable_datasets_count;
	[WmiDataId(23), read] uint64 partition_count;
	[WmiDataId(24), read] uint64 worktable_id;
	[WmiDataId(25), read] uint64 created_dataset_count_on_worktable;
	[WmiDataId(26), read] uint64 dataset_id;
	[WmiDataId(27), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion into a columnstore segment has failed."): Amended,
    Guid("{ed262a33-4f7f-4eec-93c4-7bfa7418ea74}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_into_columnstore_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_into_columnstore_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_insert_into_columnstore_fail: XeSqlPkg_columnstore_index_bucketization_insert_into_columnstore_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 hresult_code;
	[WmiDataId(7), read] sint64 row_counter;
	[WmiDataId(8), read] sint64 total_row_count;
	[WmiDataId(9), read] uint64 worktables_count_in_create_task;
	[WmiDataId(10), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(11), read] uint64 created_worktables_count;
	[WmiDataId(12), read] uint64 reused_worktables_count;
	[WmiDataId(13), read] uint64 deleted_worktables_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count;
	[WmiDataId(15), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(16), read] sint8  is_partitioned;
	[WmiDataId(17), read] uint64 tid;
	[WmiDataId(18), read] uint32 dop;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion into a columnstore segment has failed."): Amended,
    Guid("{ed262a33-4f7f-4eec-93c4-7bfa7418ea74}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_into_columnstore_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_into_columnstore_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_insert_into_columnstore_fail: XeSqlPkg_columnstore_index_bucketization_insert_into_columnstore_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 hresult_code;
	[WmiDataId(7), read] sint64 row_counter;
	[WmiDataId(8), read] sint64 total_row_count;
	[WmiDataId(9), read] uint64 worktables_count_in_create_task;
	[WmiDataId(10), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(11), read] uint64 created_worktables_count;
	[WmiDataId(12), read] uint64 reused_worktables_count;
	[WmiDataId(13), read] uint64 deleted_worktables_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count;
	[WmiDataId(15), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(16), read] sint8  is_partitioned;
	[WmiDataId(17), read] uint64 tid;
	[WmiDataId(18), read] uint32 dop;
	[WmiDataId(19), read] uint64 worktable_current_rows_count;
	[WmiDataId(20), read] uint64 worktable_row_reset_count;
	[WmiDataId(21), read] uint64 worktable_datasets_count;
	[WmiDataId(22), read] uint64 partition_count;
	[WmiDataId(23), read] uint64 worktable_id;
	[WmiDataId(24), read] uint64 created_dataset_count_on_worktable;
	[WmiDataId(25), read] uint32 dataset_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion into a columnstore segment has failed."): Amended,
    Guid("{ed262a33-4f7f-4eec-93c4-7bfa7418ea74}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_into_columnstore_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_into_columnstore_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_index_bucketization_insert_into_columnstore_fail: XeSqlPkg_columnstore_index_bucketization_insert_into_columnstore_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 hresult_code;
	[WmiDataId(7), read] sint64 row_counter;
	[WmiDataId(8), read] sint64 total_row_count;
	[WmiDataId(9), read] uint64 worktables_count_in_create_task;
	[WmiDataId(10), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(11), read] uint64 created_worktables_count;
	[WmiDataId(12), read] uint64 reused_worktables_count;
	[WmiDataId(13), read] uint64 deleted_worktables_count;
	[WmiDataId(14), read] uint64 total_inserted_rows_count;
	[WmiDataId(15), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(16), read] sint8  is_partitioned;
	[WmiDataId(17), read] uint64 tid;
	[WmiDataId(18), read] uint32 dop;
	[WmiDataId(19), read] uint64 worktable_current_rows_count;
	[WmiDataId(20), read] uint64 worktable_row_reset_count;
	[WmiDataId(21), read] uint64 worktable_datasets_count;
	[WmiDataId(22), read] uint64 partition_count;
	[WmiDataId(23), read] uint64 worktable_id;
	[WmiDataId(24), read] uint64 created_dataset_count_on_worktable;
	[WmiDataId(25), read] uint32 dataset_id;
	[WmiDataId(26), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion into a columnstore segment has failed."): Amended,
    Guid("{ed262a33-4f7f-4eec-93c4-7bfa7418ea74}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_insert_into_columnstore_fail"): Amended]
class XeSqlPkg_columnstore_index_bucketization_insert_into_columnstore_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_index_bucketization_insert_into_columnstore_fail: XeSqlPkg_columnstore_index_bucketization_insert_into_columnstore_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 hresult_code;
	[WmiDataId(7), read] sint64 row_counter;
	[WmiDataId(8), read] sint64 total_row_count;
	[WmiDataId(9), read] uint64 worktables_count_in_create_task;
	[WmiDataId(10), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(11), read] uint64 created_worktables_count;
	[WmiDataId(12), read] uint64 reused_worktables_count;
	[WmiDataId(13), read] uint64 deleted_worktables_count;
	[WmiDataId(14), read] uint64 global_created_dataset_count;
	[WmiDataId(15), read] uint64 global_reused_dataset_count;
	[WmiDataId(16), read] uint64 global_deleted_dataset_count;
	[WmiDataId(17), read] uint64 total_inserted_rows_count;
	[WmiDataId(18), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(19), read] sint8  is_partitioned;
	[WmiDataId(20), read] uint64 tid;
	[WmiDataId(21), read] uint32 dop;
	[WmiDataId(22), read] uint64 worktable_current_rows_count;
	[WmiDataId(23), read] uint64 worktable_row_reset_count;
	[WmiDataId(24), read] uint64 worktable_datasets_count;
	[WmiDataId(25), read] uint64 partition_count;
	[WmiDataId(26), read] uint64 worktable_id;
	[WmiDataId(27), read] uint64 created_dataset_count_on_worktable;
	[WmiDataId(28), read] uint32 dataset_id;
	[WmiDataId(29), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization task flushed the last row into columnstore index builder."): Amended,
    Guid("{7d6985b4-4abc-47fc-9477-ed3dbb6748b2}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_process_task_about_to_flush_last_row"): Amended]
class XeSqlPkg_columnstore_index_bucketization_process_task_about_to_flush_last_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_process_task_about_to_flush_last_row: XeSqlPkg_columnstore_index_bucketization_process_task_about_to_flush_last_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 row_counter;
	[WmiDataId(7), read] sint64 total_row_count;
	[WmiDataId(8), read] uint64 total_inserted_rows_count;
	[WmiDataId(9), read] uint64 total_inserted_rows_count_in_this_thread;
	[WmiDataId(10), read] sint8  is_partitioned;
	[WmiDataId(11), read] uint64 tid;
	[WmiDataId(12), read] uint32 dop;
	[WmiDataId(13), read] uint64 worktable_current_rows_count;
	[WmiDataId(14), read] uint64 worktable_row_reset_count;
	[WmiDataId(15), read] uint64 worktable_datasets_count;
	[WmiDataId(16), read] uint64 partition_count;
	[WmiDataId(17), read] uint64 worktable_id;
	[WmiDataId(18), read] uint64 created_dataset_count_on_worktable;
	[WmiDataId(19), read] uint32 dataset_id;
	[WmiDataId(20), read, Extension("Guid")] guid task_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion thread received the first row."): Amended,
    Guid("{fc144bd9-92cf-4590-a6f5-b92addd8b3ce}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_first_row_received"): Amended]
class XeSqlPkg_columnstore_index_bucketization_first_row_received: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_first_row_received: XeSqlPkg_columnstore_index_bucketization_first_row_received
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 partition_id;
	[WmiDataId(7), read] uint64 cell_id;
	[WmiDataId(8), read] sint8  is_partitioned;
	[WmiDataId(9), read] uint64 tid;
	[WmiDataId(10), read] uint32 dop;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion thread received rows."): Amended,
    Guid("{e78d0da2-6c11-45e6-ba98-7548364d232f}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_rows_received"): Amended]
class XeSqlPkg_columnstore_index_bucketization_rows_received: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_bucketization_rows_received: XeSqlPkg_columnstore_index_bucketization_rows_received
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 tempdb_current_pages_count;
	[WmiDataId(7), read] uint64 tempdb_max_pages_count;
	[WmiDataId(8), read] real64 tempdb_usage_ratio;
	[WmiDataId(9), read] real64 tempdb_max_usage_ratio;
	[WmiDataId(10), read] uint64 worktables_count_in_create_task;
	[WmiDataId(11), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(12), read] uint64 created_worktables_count;
	[WmiDataId(13), read] uint64 reused_worktables_count;
	[WmiDataId(14), read] uint64 deleted_worktables_count;
	[WmiDataId(15), read] uint64 total_inserted_rows_count;
	[WmiDataId(16), read] sint8  is_partitioned;
	[WmiDataId(17), read] uint64 partition_count;
	[WmiDataId(18), read] uint32 dop;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a bucketization insertion thread received rows."): Amended,
    Guid("{e78d0da2-6c11-45e6-ba98-7548364d232f}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_bucketization_rows_received"): Amended]
class XeSqlPkg_columnstore_index_bucketization_rows_received: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_bucketization_rows_received: XeSqlPkg_columnstore_index_bucketization_rows_received
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 tempdb_current_pages_count;
	[WmiDataId(7), read] uint64 tempdb_max_pages_count;
	[WmiDataId(8), read] real64 tempdb_usage_ratio;
	[WmiDataId(9), read] real64 tempdb_max_usage_ratio;
	[WmiDataId(10), read] uint64 worktables_count_in_create_task;
	[WmiDataId(11), read] uint64 worktables_count_in_enqueued_all;
	[WmiDataId(12), read] uint64 created_worktables_count;
	[WmiDataId(13), read] uint64 reused_worktables_count;
	[WmiDataId(14), read] uint64 deleted_worktables_count;
	[WmiDataId(15), read] uint64 global_created_dataset_count;
	[WmiDataId(16), read] uint64 global_reused_dataset_count;
	[WmiDataId(17), read] uint64 global_deleted_dataset_count;
	[WmiDataId(18), read] uint64 total_inserted_rows_count;
	[WmiDataId(19), read] sint8  is_partitioned;
	[WmiDataId(20), read] uint64 partition_count;
	[WmiDataId(21), read] uint32 dop;
	[WmiDataId(22), read] sint8  limit_number_of_datasets;
	[WmiDataId(23), read] sint8  reuse_dataset;
	[WmiDataId(24), read] sint64 bucketization_pmo_budget_pages;
	[WmiDataId(25), read] sint64 bucketization_pmo_used_pages;
	[WmiDataId(26), read] uint32 current_insert_blocked_state;
	[WmiDataId(27), read] uint32 new_insert_blocked_state;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when remaining rows in the current rowgroup have been flushed into deltastore."): Amended,
    Guid("{136996b0-8afe-4290-9b85-9f81ca2e655b}"), locale("MS\\0x409"),
    DisplayName("columnstore_flush_as_deltastore_fido"): Amended]
class XeSqlPkg_columnstore_flush_as_deltastore_fido: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_flush_as_deltastore_fido: XeSqlPkg_columnstore_flush_as_deltastore_fido
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 rowset_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint16 transaction_id_high;
	[WmiDataId(12), read] uint32 transaction_id_low;
	[WmiDataId(13), read] sint64 inserted_row_count;
	[WmiDataId(14), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a parquet-loading thread is initialized."): Amended,
    Guid("{c6695a5d-9c31-4091-84b1-c7527841f94a}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_parquet_index_build_init"): Amended]
class XeSqlPkg_columnstore_index_parquet_index_build_init: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_parquet_index_build_init: XeSqlPkg_columnstore_index_parquet_index_build_init
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint64 column_count;
	[WmiDataId(7), read] sint64 row_cache_max_row_count;
	[WmiDataId(8), read] sint64 row_cache_max_memory_mb;
	[WmiDataId(9), read] sint64 parquet_load_column_chunk_buffer_size_mb;
	[WmiDataId(10), read] sint64 parquet_load_max_row_group_mb;
	[WmiDataId(11), read] sint64 parquet_load_max_row_count_in_rowgroup;
	[WmiDataId(12), read] sint64 parquet_load_max_lob_size_mb;
	[WmiDataId(13), read] sint64 parquet_load_column_chunk_buffer_max_row_count;
	[WmiDataId(14), read] sint64 parquet_load_data_page_size_mb;
	[WmiDataId(15), read] sint64 parquet_load_dictionary_page_size_limit_mb;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a close method is called in parquet-loading thread."): Amended,
    Guid("{3f12ef90-71db-4c66-b51b-ae07b76ec069}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_parquet_index_build_close"): Amended]
class XeSqlPkg_columnstore_index_parquet_index_build_close: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_parquet_index_build_close: XeSqlPkg_columnstore_index_parquet_index_build_close
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint64 oid;
	[WmiDataId(7), read] sint8  is_final_close;
	[WmiDataId(8), read] uint64 cell_id;
	[WmiDataId(9), read] sint32 remaining_cache_row_count;
	[WmiDataId(10), read] uint64 inserted_row_count_before_this_close;
	[WmiDataId(11), read] uint64 total_inserted_row_count_this_thread;
	[WmiDataId(12), read] uint64 total_inserted_row_count_all_threads;
	[WmiDataId(13), read] uint64 block_id_count;
};
		
[dynamic: ToInstance, Description("Shows column store index build information when a new output file is open in parquet-loading thread."): Amended,
    Guid("{67cb6ad8-3d2b-43f6-b08c-e4ef3278fb5b}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_parquet_index_build_open"): Amended]
class XeSqlPkg_columnstore_index_parquet_index_build_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_parquet_index_build_open: XeSqlPkg_columnstore_index_parquet_index_build_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 tid;
	[WmiDataId(6), read] uint64 oid;
	[WmiDataId(7), read] uint64 cell_id;
	[WmiDataId(8), read] uint64 total_inserted_row_count_this_thread;
	[WmiDataId(9), read] uint64 total_inserted_row_count_all_threads;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Shows the statistics of columnstore index build parallelism throttling."): Amended,
    Guid("{62026e8a-6dfe-4395-9060-fa6fadf3c70d}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_throttle"): Amended]
class XeSqlPkg_column_store_index_build_throttle: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_index_build_throttle: XeSqlPkg_column_store_index_build_throttle
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 segment_count;
	[WmiDataId(6), read] uint64 row_count;
	[WmiDataId(7), read] uint32 query_dop;
	[WmiDataId(8), read] uint32 effective_dop;
	[WmiDataId(9), read] uint32 max_effective_dop;
};
		
[dynamic: ToInstance, Description("Shows the statistics of columnstore index build parallelism throttling."): Amended,
    Guid("{62026e8a-6dfe-4395-9060-fa6fadf3c70d}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_throttle"): Amended]
class XeSqlPkg_column_store_index_build_throttle: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_index_build_throttle: XeSqlPkg_column_store_index_build_throttle
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 segment_count;
	[WmiDataId(6), read] uint64 row_count;
	[WmiDataId(7), read] uint32 query_dop;
	[WmiDataId(8), read] uint32 effective_dop;
	[WmiDataId(9), read] uint32 max_effective_dop;
	[WmiDataId(10), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Trace memory usage during index build."): Amended,
    Guid("{7cb1fdfe-7e17-4888-afae-b3c7484b2621}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_memory_trace"): Amended]
class XeSqlPkg_column_store_index_build_memory_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_build_memory_trace: XeSqlPkg_column_store_index_build_memory_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 max_used_memory_for_current_thread;
	[WmiDataId(8), read] uint64 memory_limit_for_current_thread;
};
		
[dynamic: ToInstance, Description("Trace memory usage during index build."): Amended,
    Guid("{7cb1fdfe-7e17-4888-afae-b3c7484b2621}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_memory_trace"): Amended]
class XeSqlPkg_column_store_index_build_memory_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_index_build_memory_trace: XeSqlPkg_column_store_index_build_memory_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint64 hobt_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 max_used_memory_for_current_thread;
	[WmiDataId(10), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(11), read] uint64 prev_memory_limit_for_current_thread;
};
		
[dynamic: ToInstance, Description("Trace memory usage during index build."): Amended,
    Guid("{7cb1fdfe-7e17-4888-afae-b3c7484b2621}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_memory_trace"): Amended]
class XeSqlPkg_column_store_index_build_memory_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_index_build_memory_trace: XeSqlPkg_column_store_index_build_memory_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint64 hobt_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 max_used_memory_for_current_thread;
	[WmiDataId(10), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(11), read] uint64 prev_memory_limit_for_current_thread;
	[WmiDataId(12), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Trace memory usage during index build."): Amended,
    Guid("{7cb1fdfe-7e17-4888-afae-b3c7484b2621}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_memory_trace"): Amended]
class XeSqlPkg_column_store_index_build_memory_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class column_store_index_build_memory_trace: XeSqlPkg_column_store_index_build_memory_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 hobt_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 max_used_memory_for_current_thread;
	[WmiDataId(10), read] uint64 memory_limit_for_current_thread;
	[WmiDataId(11), read] uint64 prev_memory_limit_for_current_thread;
	[WmiDataId(12), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("A rowgroup was processed. Indicates the number of rows in the rowgroup and the reason it was trimmed if any."): Amended,
    Guid("{3c40682e-9481-4c1e-a54e-8009b6c2ec5c}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_process_segment"): Amended]
class XeSqlPkg_column_store_index_build_process_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_index_build_process_segment: XeSqlPkg_column_store_index_build_process_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 trim_reason;
	[WmiDataId(10), read] uint64 object_id;
	[WmiDataId(11), read] uint64 index_id;
	[WmiDataId(12), read] uint64 partition_number;
};
		
[dynamic: ToInstance, Description("A rowgroup was processed. Indicates the number of rows in the rowgroup and the reason it was trimmed if any."): Amended,
    Guid("{3c40682e-9481-4c1e-a54e-8009b6c2ec5c}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_process_segment"): Amended]
class XeSqlPkg_column_store_index_build_process_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_index_build_process_segment: XeSqlPkg_column_store_index_build_process_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 trim_reason;
	[WmiDataId(10), read] uint64 object_id;
	[WmiDataId(11), read] uint64 index_id;
	[WmiDataId(12), read] uint64 partition_number;
};
		
[dynamic: ToInstance, Description("A rowgroup was processed. Indicates the number of rows in the rowgroup and the reason it was trimmed if any."): Amended,
    Guid("{3c40682e-9481-4c1e-a54e-8009b6c2ec5c}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_process_segment"): Amended]
class XeSqlPkg_column_store_index_build_process_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class column_store_index_build_process_segment: XeSqlPkg_column_store_index_build_process_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 trim_reason;
	[WmiDataId(10), read] uint64 object_id;
	[WmiDataId(11), read] uint64 index_id;
	[WmiDataId(12), read] uint64 partition_number;
	[WmiDataId(13), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("A rowgroup was processed. Indicates the number of rows in the rowgroup and the reason it was trimmed if any."): Amended,
    Guid("{3c40682e-9481-4c1e-a54e-8009b6c2ec5c}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_process_segment"): Amended]
class XeSqlPkg_column_store_index_build_process_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class column_store_index_build_process_segment: XeSqlPkg_column_store_index_build_process_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 trim_reason;
	[WmiDataId(10), read] sint64 object_id;
	[WmiDataId(11), read] uint64 index_id;
	[WmiDataId(12), read] uint64 partition_number;
	[WmiDataId(13), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("A rowgroup was processed. Indicates the number of rows in the rowgroup and the reason it was trimmed if any."): Amended,
    Guid("{3c40682e-9481-4c1e-a54e-8009b6c2ec5c}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_process_segment"): Amended]
class XeSqlPkg_column_store_index_build_process_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class column_store_index_build_process_segment: XeSqlPkg_column_store_index_build_process_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] sint64 used_memory_in_kb;
	[WmiDataId(10), read] uint64 trim_reason;
	[WmiDataId(11), read] sint64 object_id;
	[WmiDataId(12), read] uint64 index_id;
	[WmiDataId(13), read] uint64 partition_number;
	[WmiDataId(14), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("A rowgroup was processed. Indicates the number of rows in the rowgroup and the reason it was trimmed if any."): Amended,
    Guid("{3c40682e-9481-4c1e-a54e-8009b6c2ec5c}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_process_segment"): Amended]
class XeSqlPkg_column_store_index_build_process_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(7)]
class column_store_index_build_process_segment: XeSqlPkg_column_store_index_build_process_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] sint64 used_memory_in_kb;
	[WmiDataId(10), read] uint64 trim_reason;
	[WmiDataId(11), read] sint64 object_id;
	[WmiDataId(12), read] uint64 index_id;
	[WmiDataId(13), read] uint64 partition_number;
	[WmiDataId(14), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("A rowgroup was processed. Indicates the number of rows in the rowgroup and the reason it was trimmed if any."): Amended,
    Guid("{3c40682e-9481-4c1e-a54e-8009b6c2ec5c}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_process_segment"): Amended]
class XeSqlPkg_column_store_index_build_process_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(8)]
class column_store_index_build_process_segment: XeSqlPkg_column_store_index_build_process_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] sint64 used_memory_in_kb;
	[WmiDataId(10), read] uint64 trim_reason;
	[WmiDataId(11), read] sint64 object_id;
	[WmiDataId(12), read] uint64 index_id;
	[WmiDataId(13), read] uint64 partition_number;
	[WmiDataId(14), read] uint32 thread_id;
	[WmiDataId(15), read] uint32 dw_min_data_id;
	[WmiDataId(16), read] uint32 dw_max_data_id;
};
		
[dynamic: ToInstance, Description("Secondary dictionaries were processed."): Amended,
    Guid("{18DF3C3F-921B-4D24-A60D-EB3EEF93F05B}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_process_secondary_dictionaries"): Amended]
class XeSqlPkg_column_store_index_build_process_secondary_dictionaries: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_build_process_secondary_dictionaries: XeSqlPkg_column_store_index_build_process_secondary_dictionaries
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 index_id;
	[WmiDataId(9), read] uint64 partition_number;
};
		
[dynamic: ToInstance, Description("Statistics and compression info on LOB columns for off-row and inlined (in secondary dictionary) values."): Amended,
    Guid("{91EAC36D-01A1-473A-9287-D53F7E221723}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_process_segment_lob"): Amended]
class XeSqlPkg_column_store_index_build_process_segment_lob: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_build_process_segment_lob: XeSqlPkg_column_store_index_build_process_segment_lob
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read] uint32 partition_number;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint32 column_id;
	[WmiDataId(11), read] uint64 rowgroup_id;
	[WmiDataId(12), read] uint32 original_count;
	[WmiDataId(13), read] uint64 original_total_size;
	[WmiDataId(14), read] uint32 inline_count;
	[WmiDataId(15), read] uint64 inline_original_total_size;
	[WmiDataId(16), read] uint32 inline_unique_count;
	[WmiDataId(17), read] uint64 inline_unique_total_size;
	[WmiDataId(18), read] uint32 inline_primary_count;
	[WmiDataId(19), read] uint64 inline_primary_total_size;
	[WmiDataId(20), read] uint32 offrow_compressed_count;
	[WmiDataId(21), read] uint64 offrow_compressed_total_size;
	[WmiDataId(22), read] uint64 offrow_compressed_original_total_size;
	[WmiDataId(23), read] uint32 offrow_passthrough_count;
	[WmiDataId(24), read] uint64 offrow_passthrough_total_size;
	[WmiDataId(25), read] real64 approx_compression_ratio;
};
		
[dynamic: ToInstance, Description("A bloom filter has been created for a column segment."): Amended,
    Guid("{c6ef5da2-2446-4dd5-9c16-a4b81e1fbe39}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_bloom_filter_created"): Amended]
class XeSqlPkg_column_store_index_build_bloom_filter_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_build_bloom_filter_created: XeSqlPkg_column_store_index_build_bloom_filter_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 partition_number;
	[WmiDataId(10), read] uint64 rowgroup_id;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read] uint64 max_memory_used_kb;
	[WmiDataId(13), read] uint64 most_expensive_column;
	[WmiDataId(14), read] uint64 build_time_in_ms;
};
		
[dynamic: ToInstance, Description("Statistics about columnstore object manager SerializeToDisk."): Amended,
    Guid("{2443a423-7272-47e2-b7c1-adad09c99b60}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_manager_serialize_to_disk"): Amended]
class XeSqlPkg_columnstore_object_manager_serialize_to_disk: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_manager_serialize_to_disk: XeSqlPkg_columnstore_object_manager_serialize_to_disk
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read] uint64 object_id;
	[WmiDataId(9), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint8 object_type;
	[WmiDataId(10), read] uint64 duration_ms;
	[WmiDataId(11), read] uint64 size;
};
		
[dynamic: ToInstance, Description("Retry read from azure blobk blob on sbs read failure."): Amended,
    Guid("{316AA4FE-7218-4616-987C-3A0436241DDA}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_manager_read_retry"): Amended]
class XeSqlPkg_columnstore_object_manager_read_retry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_manager_read_retry: XeSqlPkg_columnstore_object_manager_read_retry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 pages_read;
};
		
[dynamic: ToInstance, Description("A delta rowgroup was closed."): Amended,
    Guid("{3423781b-361e-4c94-a723-f8711ea7fa13}"), locale("MS\\0x409"),
    DisplayName("columnstore_delta_rowgroup_closed"): Amended]
class XeSqlPkg_columnstore_delta_rowgroup_closed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_delta_rowgroup_closed: XeSqlPkg_columnstore_delta_rowgroup_closed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 delta_store_id;
	[WmiDataId(11), read] uint64 rowgroup_id;
	[WmiDataId(12), read] uint64 row_count;
};
		
[dynamic: ToInstance, Description("A delta rowgroup was closed."): Amended,
    Guid("{3423781b-361e-4c94-a723-f8711ea7fa13}"), locale("MS\\0x409"),
    DisplayName("columnstore_delta_rowgroup_closed"): Amended]
class XeSqlPkg_columnstore_delta_rowgroup_closed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_delta_rowgroup_closed: XeSqlPkg_columnstore_delta_rowgroup_closed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 delta_store_id;
	[WmiDataId(11), read] uint64 rowgroup_id;
	[WmiDataId(12), read] uint64 row_count;
	[WmiDataId(13), read] sint8  reorg_forced;
};
		
[dynamic: ToInstance, Description("A delta rowgroup was closed."): Amended,
    Guid("{3423781b-361e-4c94-a723-f8711ea7fa13}"), locale("MS\\0x409"),
    DisplayName("columnstore_delta_rowgroup_closed"): Amended]
class XeSqlPkg_columnstore_delta_rowgroup_closed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_delta_rowgroup_closed: XeSqlPkg_columnstore_delta_rowgroup_closed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 delta_store_id;
	[WmiDataId(11), read] uint64 rowgroup_id;
	[WmiDataId(12), read] uint64 row_count;
	[WmiDataId(13), read] sint8  reorg_forced;
	[WmiDataId(14), read] sint64 minimum_logging_count;
};
		
[dynamic: ToInstance, Description("A delta rowgroup was closed."): Amended,
    Guid("{3423781b-361e-4c94-a723-f8711ea7fa13}"), locale("MS\\0x409"),
    DisplayName("columnstore_delta_rowgroup_closed"): Amended]
class XeSqlPkg_columnstore_delta_rowgroup_closed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_delta_rowgroup_closed: XeSqlPkg_columnstore_delta_rowgroup_closed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 delta_store_id;
	[WmiDataId(11), read] sint64 rowgroup_id;
	[WmiDataId(12), read] uint64 row_count;
	[WmiDataId(13), read] sint8  reorg_forced;
	[WmiDataId(14), read] sint64 minimum_logging_count;
};
		
[dynamic: ToInstance, Description("A compressed rowgroup was created."): Amended,
    Guid("{5CA255C4-9FAF-4AA8-8036-DE522991B909}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_compressed"): Amended]
class XeSqlPkg_columnstore_rowgroup_compressed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_rowgroup_compressed: XeSqlPkg_columnstore_rowgroup_compressed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 transition_reason;
	[WmiDataId(11), read] uint64 trim_reason;
	[WmiDataId(12), read] uint64 rowgroup_id;
	[WmiDataId(13), read] uint64 source_rowgroup_id;
	[WmiDataId(14), read] uint64 row_count;
	[WmiDataId(15), read] uint64 tx_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("A compressed rowgroup was created."): Amended,
    Guid("{5CA255C4-9FAF-4AA8-8036-DE522991B909}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_compressed"): Amended]
class XeSqlPkg_columnstore_rowgroup_compressed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_rowgroup_compressed: XeSqlPkg_columnstore_rowgroup_compressed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 transition_reason;
	[WmiDataId(11), read] uint64 trim_reason;
	[WmiDataId(12), read] uint64 rowgroup_id;
	[WmiDataId(13), read] uint64 source_rowgroup_id;
	[WmiDataId(14), read] uint64 row_count;
	[WmiDataId(15), read] uint64 tx_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("A compressed rowgroup was created."): Amended,
    Guid("{5CA255C4-9FAF-4AA8-8036-DE522991B909}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_compressed"): Amended]
class XeSqlPkg_columnstore_rowgroup_compressed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_rowgroup_compressed: XeSqlPkg_columnstore_rowgroup_compressed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 transition_reason;
	[WmiDataId(11), read] uint64 trim_reason;
	[WmiDataId(12), read] uint64 rowgroup_id;
	[WmiDataId(13), read] uint64 source_rowgroup_id;
	[WmiDataId(14), read] uint64 row_count;
	[WmiDataId(15), read] uint64 tx_id;
	[WmiDataId(16), read] uint32 thread_id;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("A compressed rowgroup was created."): Amended,
    Guid("{5CA255C4-9FAF-4AA8-8036-DE522991B909}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_compressed"): Amended]
class XeSqlPkg_columnstore_rowgroup_compressed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class columnstore_rowgroup_compressed: XeSqlPkg_columnstore_rowgroup_compressed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 transition_reason;
	[WmiDataId(11), read] uint64 trim_reason;
	[WmiDataId(12), read] sint64 rowgroup_id;
	[WmiDataId(13), read] uint64 source_rowgroup_id;
	[WmiDataId(14), read] uint64 row_count;
	[WmiDataId(15), read] uint64 tx_id;
	[WmiDataId(16), read] uint32 thread_id;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("A columnstore deltastore rowgroup was rewritten from altering a column."): Amended,
    Guid("{b3463e68-c07e-48ec-8380-b560ab6ac9ce}"), locale("MS\\0x409"),
    DisplayName("column_store_index_deltastore_alter_column"): Amended]
class XeSqlPkg_column_store_index_deltastore_alter_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_deltastore_alter_column: XeSqlPkg_column_store_index_deltastore_alter_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 index_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 delta_store_id;
	[WmiDataId(11), read] uint64 rowgroup_id;
};
		
[dynamic: ToInstance, Description("A columnstore deltastore rowgroup was rewritten from altering a column."): Amended,
    Guid("{b3463e68-c07e-48ec-8380-b560ab6ac9ce}"), locale("MS\\0x409"),
    DisplayName("column_store_index_deltastore_alter_column"): Amended]
class XeSqlPkg_column_store_index_deltastore_alter_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_index_deltastore_alter_column: XeSqlPkg_column_store_index_deltastore_alter_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint64 object_id;
	[WmiDataId(8), read] uint64 index_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 delta_store_id;
	[WmiDataId(11), read] sint64 rowgroup_id;
};
		
[dynamic: ToInstance, Description("A columnstore deltastore rowgroup was rewritten from adding a column."): Amended,
    Guid("{7379a232-c6d7-4b3e-8770-63f294309a3e}"), locale("MS\\0x409"),
    DisplayName("column_store_index_deltastore_add_column"): Amended]
class XeSqlPkg_column_store_index_deltastore_add_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_deltastore_add_column: XeSqlPkg_column_store_index_deltastore_add_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 index_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 delta_store_id;
	[WmiDataId(11), read] uint64 rowgroup_id;
};
		
[dynamic: ToInstance, Description("A columnstore deltastore rowgroup was rewritten from adding a column."): Amended,
    Guid("{7379a232-c6d7-4b3e-8770-63f294309a3e}"), locale("MS\\0x409"),
    DisplayName("column_store_index_deltastore_add_column"): Amended]
class XeSqlPkg_column_store_index_deltastore_add_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_index_deltastore_add_column: XeSqlPkg_column_store_index_deltastore_add_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint64 object_id;
	[WmiDataId(8), read] uint64 index_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint64 delta_store_id;
	[WmiDataId(11), read] sint64 rowgroup_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover worker stealing."): Amended,
    Guid("{C8FF116F-2941-4BAE-ACF0-35F8687ED9EC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_worker_stealing"): Amended]
class XeSqlPkg_columnstore_tuple_mover_worker_stealing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tuple_mover_worker_stealing: XeSqlPkg_columnstore_tuple_mover_worker_stealing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 scheduler_id_at_start;
	[WmiDataId(6), read] sint32 worker_migration_count_at_start;
	[WmiDataId(7), read] sint32 scheduler_id_at_end;
	[WmiDataId(8), read] sint32 worker_migration_count_at_end;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover started compressing a deltastore."): Amended,
    Guid("{A81CCD79-F3DC-4060-816C-B1956DB61ECC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_begin_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_begin_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_begin_compress: XeSqlPkg_columnstore_tuple_mover_begin_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 row_count;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover started compressing a deltastore."): Amended,
    Guid("{A81CCD79-F3DC-4060-816C-B1956DB61ECC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_begin_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_begin_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_tuple_mover_begin_compress: XeSqlPkg_columnstore_tuple_mover_begin_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover started compressing a deltastore."): Amended,
    Guid("{A81CCD79-F3DC-4060-816C-B1956DB61ECC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_begin_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_begin_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_tuple_mover_begin_compress: XeSqlPkg_columnstore_tuple_mover_begin_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read] sint8  is_nci_on_cci;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover started compressing a deltastore."): Amended,
    Guid("{A81CCD79-F3DC-4060-816C-B1956DB61ECC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_begin_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_begin_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_tuple_mover_begin_compress: XeSqlPkg_columnstore_tuple_mover_begin_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] sint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read] sint8  is_nci_on_cci;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover completed compressing a deltastore."): Amended,
    Guid("{8538384F-E68D-4bd1-8BC5-71B5E3883EEC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_end_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_end_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_end_compress: XeSqlPkg_columnstore_tuple_mover_end_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 reads;
	[WmiDataId(13), read] uint64 writes;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover completed compressing a deltastore."): Amended,
    Guid("{8538384F-E68D-4bd1-8BC5-71B5E3883EEC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_end_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_end_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_tuple_mover_end_compress: XeSqlPkg_columnstore_tuple_mover_end_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 reads;
	[WmiDataId(13), read] uint64 writes;
	[WmiDataId(14), read] sint32 compression_delay;
	[WmiDataId(15), read, Extension("WmiTime")] uint64 rowgroup_created_time;
	[WmiDataId(16), read, Extension("WmiTime")] uint64 rowgroup_closed_time;
	[WmiDataId(17), read, Extension("WmiTime")] uint64 time_of_comparison;
	[WmiDataId(18), read] sint8  compress_all_row_groups_on;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover completed compressing a deltastore."): Amended,
    Guid("{8538384F-E68D-4bd1-8BC5-71B5E3883EEC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_end_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_end_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_tuple_mover_end_compress: XeSqlPkg_columnstore_tuple_mover_end_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 reads;
	[WmiDataId(13), read] uint64 writes;
	[WmiDataId(14), read] sint32 compression_delay;
	[WmiDataId(15), read, Extension("WmiTime")] uint64 rowgroup_created_time;
	[WmiDataId(16), read, Extension("WmiTime")] uint64 rowgroup_closed_time;
	[WmiDataId(17), read, Extension("WmiTime")] uint64 time_of_comparison;
	[WmiDataId(18), read] sint8  compress_all_row_groups_on;
	[WmiDataId(19), read] sint8  is_aggressive_compression;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover completed compressing a deltastore."): Amended,
    Guid("{8538384F-E68D-4bd1-8BC5-71B5E3883EEC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_end_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_end_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_tuple_mover_end_compress: XeSqlPkg_columnstore_tuple_mover_end_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 reads;
	[WmiDataId(13), read] uint64 writes;
	[WmiDataId(14), read] sint32 compression_delay;
	[WmiDataId(15), read, Extension("WmiTime")] uint64 rowgroup_created_time;
	[WmiDataId(16), read, Extension("WmiTime")] uint64 rowgroup_closed_time;
	[WmiDataId(17), read, Extension("WmiTime")] uint64 time_of_comparison;
	[WmiDataId(18), read] sint8  compress_all_row_groups_on;
	[WmiDataId(19), read] sint8  is_aggressive_compression;
	[WmiDataId(20), read] sint8  is_nci_on_cci;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover completed compressing a deltastore."): Amended,
    Guid("{8538384F-E68D-4bd1-8BC5-71B5E3883EEC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_end_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_end_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class columnstore_tuple_mover_end_compress: XeSqlPkg_columnstore_tuple_mover_end_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 reads;
	[WmiDataId(13), read] uint64 writes;
	[WmiDataId(14), read] sint32 compression_delay;
	[WmiDataId(15), read, Extension("WmiTime")] uint64 rowgroup_created_time;
	[WmiDataId(16), read, Extension("WmiTime")] uint64 rowgroup_closed_time;
	[WmiDataId(17), read, Extension("WmiTime")] uint64 time_of_comparison;
	[WmiDataId(18), read] sint8  compress_all_row_groups_on;
	[WmiDataId(19), read] sint8  is_aggressive_compression;
	[WmiDataId(20), read] sint8  is_nci_on_cci;
	[WmiDataId(21), read] sint8  has_no_rows;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover completed compressing a deltastore."): Amended,
    Guid("{8538384F-E68D-4bd1-8BC5-71B5E3883EEC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_end_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_end_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(7)]
class columnstore_tuple_mover_end_compress: XeSqlPkg_columnstore_tuple_mover_end_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] sint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 reads;
	[WmiDataId(13), read] uint64 writes;
	[WmiDataId(14), read] sint32 compression_delay;
	[WmiDataId(15), read, Extension("WmiTime")] uint64 rowgroup_created_time;
	[WmiDataId(16), read, Extension("WmiTime")] uint64 rowgroup_closed_time;
	[WmiDataId(17), read, Extension("WmiTime")] uint64 time_of_comparison;
	[WmiDataId(18), read] sint8  compress_all_row_groups_on;
	[WmiDataId(19), read] sint8  is_aggressive_compression;
	[WmiDataId(20), read] sint8  is_nci_on_cci;
	[WmiDataId(21), read] sint8  has_no_rows;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover has acquired required locks and is ready to start flushing a delete buffer."): Amended,
    Guid("{d3a69ac5-e8c7-4bd2-886a-c7cdd7e4d8fc}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_met_requirements_for_delete_buffer_flush"): Amended]
class XeSqlPkg_columnstore_tuple_mover_met_requirements_for_delete_buffer_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tuple_mover_met_requirements_for_delete_buffer_flush: XeSqlPkg_columnstore_tuple_mover_met_requirements_for_delete_buffer_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover has acquired required locks and is ready to start flushing a delete buffer."): Amended,
    Guid("{d3a69ac5-e8c7-4bd2-886a-c7cdd7e4d8fc}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_met_requirements_for_delete_buffer_flush"): Amended]
class XeSqlPkg_columnstore_tuple_mover_met_requirements_for_delete_buffer_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_met_requirements_for_delete_buffer_flush: XeSqlPkg_columnstore_tuple_mover_met_requirements_for_delete_buffer_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover was not able to acquire required locks for flushing a delete buffer."): Amended,
    Guid("{2d2363b6-340e-4119-927d-1f0160da01b4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_flush_requirements_not_met"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_flush_requirements_not_met: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tuple_mover_delete_buffer_flush_requirements_not_met: XeSqlPkg_columnstore_tuple_mover_delete_buffer_flush_requirements_not_met
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover was not able to acquire required locks for flushing a delete buffer."): Amended,
    Guid("{2d2363b6-340e-4119-927d-1f0160da01b4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_flush_requirements_not_met"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_flush_requirements_not_met: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_delete_buffer_flush_requirements_not_met: XeSqlPkg_columnstore_tuple_mover_delete_buffer_flush_requirements_not_met
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover was not able to acquire required locks for flushing a delete buffer."): Amended,
    Guid("{2d2363b6-340e-4119-927d-1f0160da01b4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_flush_requirements_not_met"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_flush_requirements_not_met: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_tuple_mover_delete_buffer_flush_requirements_not_met: XeSqlPkg_columnstore_tuple_mover_delete_buffer_flush_requirements_not_met
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover was not able to acquire required locks for flushing a delete buffer."): Amended,
    Guid("{2d2363b6-340e-4119-927d-1f0160da01b4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_flush_requirements_not_met"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_flush_requirements_not_met: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_tuple_mover_delete_buffer_flush_requirements_not_met: XeSqlPkg_columnstore_tuple_mover_delete_buffer_flush_requirements_not_met
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Statistics about the movement of a deltastore to a compressed rowgroup, including duration, size, etc."): Amended,
    Guid("{281D7B37-9892-4998-A93A-79935F88F7B3}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_compression_stats"): Amended]
class XeSqlPkg_columnstore_tuple_mover_compression_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_compression_stats: XeSqlPkg_columnstore_tuple_mover_compression_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint64 precompressed_size;
	[WmiDataId(10), read] uint64 compressed_size;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read] uint64 object_id;
	[WmiDataId(13), read] uint64 index_id;
	[WmiDataId(14), read] uint64 partition_number;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Statistics about the movement of a deltastore to a compressed rowgroup, including duration, size, etc."): Amended,
    Guid("{281D7B37-9892-4998-A93A-79935F88F7B3}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_compression_stats"): Amended]
class XeSqlPkg_columnstore_tuple_mover_compression_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_tuple_mover_compression_stats: XeSqlPkg_columnstore_tuple_mover_compression_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint64 precompressed_size;
	[WmiDataId(10), read] uint64 compressed_size;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read] uint64 object_id;
	[WmiDataId(13), read] uint64 index_id;
	[WmiDataId(14), read] uint64 partition_number;
	[WmiDataId(15), read] sint8  is_aggressive_compression;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Statistics about the movement of a deltastore to a compressed rowgroup, including duration, size, etc."): Amended,
    Guid("{281D7B37-9892-4998-A93A-79935F88F7B3}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_compression_stats"): Amended]
class XeSqlPkg_columnstore_tuple_mover_compression_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_tuple_mover_compression_stats: XeSqlPkg_columnstore_tuple_mover_compression_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint64 precompressed_size;
	[WmiDataId(10), read] uint64 compressed_size;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read] uint64 object_id;
	[WmiDataId(13), read] uint64 index_id;
	[WmiDataId(14), read] uint64 partition_number;
	[WmiDataId(15), read] sint8  is_aggressive_compression;
	[WmiDataId(16), read] sint8  is_nci_on_cci;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Statistics about the movement of a deltastore to a compressed rowgroup, including duration, size, etc."): Amended,
    Guid("{281D7B37-9892-4998-A93A-79935F88F7B3}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_compression_stats"): Amended]
class XeSqlPkg_columnstore_tuple_mover_compression_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_tuple_mover_compression_stats: XeSqlPkg_columnstore_tuple_mover_compression_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint64 precompressed_size;
	[WmiDataId(10), read] uint64 compressed_size;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read] sint64 object_id;
	[WmiDataId(13), read] uint64 index_id;
	[WmiDataId(14), read] uint64 partition_number;
	[WmiDataId(15), read] sint8  is_aggressive_compression;
	[WmiDataId(16), read] sint8  is_nci_on_cci;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Generated when a rowgroup is not compressed because it does not satisfy the compression delay condition."): Amended,
    Guid("{0C54F52B-2585-4C2C-B36C-346BD1656D95}"), locale("MS\\0x409"),
    DisplayName("columnstore_compression_delay_disqualified_rowgroup"): Amended]
class XeSqlPkg_columnstore_compression_delay_disqualified_rowgroup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_compression_delay_disqualified_rowgroup: XeSqlPkg_columnstore_compression_delay_disqualified_rowgroup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] uint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read] sint32 compression_delay;
	[WmiDataId(13), read, Extension("WmiTime")] uint64 rowgroup_created_time;
	[WmiDataId(14), read, Extension("WmiTime")] uint64 rowgroup_closed_time;
	[WmiDataId(15), read, Extension("WmiTime")] uint64 time_of_comparison;
	[WmiDataId(16), read] sint8  compress_all_row_groups_on;
};
		
[dynamic: ToInstance, Description("Generated when a rowgroup is not compressed because it does not satisfy the compression delay condition."): Amended,
    Guid("{0C54F52B-2585-4C2C-B36C-346BD1656D95}"), locale("MS\\0x409"),
    DisplayName("columnstore_compression_delay_disqualified_rowgroup"): Amended]
class XeSqlPkg_columnstore_compression_delay_disqualified_rowgroup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_compression_delay_disqualified_rowgroup: XeSqlPkg_columnstore_compression_delay_disqualified_rowgroup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] sint64 object_id;
	[WmiDataId(9), read] uint64 index_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint64 row_count;
	[WmiDataId(12), read] sint32 compression_delay;
	[WmiDataId(13), read, Extension("WmiTime")] uint64 rowgroup_created_time;
	[WmiDataId(14), read, Extension("WmiTime")] uint64 rowgroup_closed_time;
	[WmiDataId(15), read, Extension("WmiTime")] uint64 time_of_comparison;
	[WmiDataId(16), read] sint8  compress_all_row_groups_on;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover started flushing a delete buffer."): Amended,
    Guid("{ddc4e101-3afc-4f37-b563-c01e05371897}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_begin_delete_buffer_flush"): Amended]
class XeSqlPkg_columnstore_tuple_mover_begin_delete_buffer_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_begin_delete_buffer_flush: XeSqlPkg_columnstore_tuple_mover_begin_delete_buffer_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover started flushing a delete buffer."): Amended,
    Guid("{ddc4e101-3afc-4f37-b563-c01e05371897}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_begin_delete_buffer_flush"): Amended]
class XeSqlPkg_columnstore_tuple_mover_begin_delete_buffer_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_tuple_mover_begin_delete_buffer_flush: XeSqlPkg_columnstore_tuple_mover_begin_delete_buffer_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover started flushing a delete buffer."): Amended,
    Guid("{ddc4e101-3afc-4f37-b563-c01e05371897}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_begin_delete_buffer_flush"): Amended]
class XeSqlPkg_columnstore_tuple_mover_begin_delete_buffer_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_tuple_mover_begin_delete_buffer_flush: XeSqlPkg_columnstore_tuple_mover_begin_delete_buffer_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover started flushing a delete buffer."): Amended,
    Guid("{ddc4e101-3afc-4f37-b563-c01e05371897}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_begin_delete_buffer_flush"): Amended]
class XeSqlPkg_columnstore_tuple_mover_begin_delete_buffer_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_tuple_mover_begin_delete_buffer_flush: XeSqlPkg_columnstore_tuple_mover_begin_delete_buffer_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover completed flushing a delete buffer."): Amended,
    Guid("{14735684-f14a-4095-9ae3-7c115d260ee4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_end_delete_buffer_flush"): Amended]
class XeSqlPkg_columnstore_tuple_mover_end_delete_buffer_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_end_delete_buffer_flush: XeSqlPkg_columnstore_tuple_mover_end_delete_buffer_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover completed flushing a delete buffer."): Amended,
    Guid("{14735684-f14a-4095-9ae3-7c115d260ee4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_end_delete_buffer_flush"): Amended]
class XeSqlPkg_columnstore_tuple_mover_end_delete_buffer_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_tuple_mover_end_delete_buffer_flush: XeSqlPkg_columnstore_tuple_mover_end_delete_buffer_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover completed flushing a delete buffer."): Amended,
    Guid("{14735684-f14a-4095-9ae3-7c115d260ee4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_end_delete_buffer_flush"): Amended]
class XeSqlPkg_columnstore_tuple_mover_end_delete_buffer_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_tuple_mover_end_delete_buffer_flush: XeSqlPkg_columnstore_tuple_mover_end_delete_buffer_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover completed flushing a delete buffer."): Amended,
    Guid("{14735684-f14a-4095-9ae3-7c115d260ee4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_end_delete_buffer_flush"): Amended]
class XeSqlPkg_columnstore_tuple_mover_end_delete_buffer_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_tuple_mover_end_delete_buffer_flush: XeSqlPkg_columnstore_tuple_mover_end_delete_buffer_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover swapped delete buffers."): Amended,
    Guid("{9b6f7f05-7b0d-4fd2-adb7-fd92c223c514}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffers_swapped"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffers_swapped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_delete_buffers_swapped: XeSqlPkg_columnstore_tuple_mover_delete_buffers_swapped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 open_delete_buffer_rowset_id;
	[WmiDataId(8), read] uint64 closed_delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover has acquired required locks and is ready to start truncating a delete buffer."): Amended,
    Guid("{649866ab-664e-4863-846b-2c0e578e2256}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_met_requirements_for_delete_buffer_truncate"): Amended]
class XeSqlPkg_columnstore_tuple_mover_met_requirements_for_delete_buffer_truncate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tuple_mover_met_requirements_for_delete_buffer_truncate: XeSqlPkg_columnstore_tuple_mover_met_requirements_for_delete_buffer_truncate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover has acquired required locks and is ready to start truncating a delete buffer."): Amended,
    Guid("{649866ab-664e-4863-846b-2c0e578e2256}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_met_requirements_for_delete_buffer_truncate"): Amended]
class XeSqlPkg_columnstore_tuple_mover_met_requirements_for_delete_buffer_truncate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_met_requirements_for_delete_buffer_truncate: XeSqlPkg_columnstore_tuple_mover_met_requirements_for_delete_buffer_truncate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover was not able to acquire required locks for truncating a delete buffer."): Amended,
    Guid("{2fb01ab5-31e3-424d-87b5-d28846c83dd4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met: XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover was not able to acquire required locks for truncating a delete buffer."): Amended,
    Guid("{2fb01ab5-31e3-424d-87b5-d28846c83dd4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met: XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover was not able to acquire required locks for truncating a delete buffer."): Amended,
    Guid("{2fb01ab5-31e3-424d-87b5-d28846c83dd4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met: XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover was not able to acquire required locks for truncating a delete buffer."): Amended,
    Guid("{2fb01ab5-31e3-424d-87b5-d28846c83dd4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met: XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_requirements_not_met
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover truncated delete buffer."): Amended,
    Guid("{bc1cdbe6-b2c6-4082-b609-4a5f8856ed02}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_truncated"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_delete_buffer_truncated: XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover truncated delete buffer."): Amended,
    Guid("{bc1cdbe6-b2c6-4082-b609-4a5f8856ed02}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_truncated"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_tuple_mover_delete_buffer_truncated: XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover truncate operation timed out due to an active snapshot transaction."): Amended,
    Guid("{D8D1B807-6742-4AA6-874B-089447CF70A2}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_truncate_timed_out"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_timed_out: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tuple_mover_delete_buffer_truncate_timed_out: XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_timed_out
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover truncate operation timed out due to an active snapshot transaction."): Amended,
    Guid("{D8D1B807-6742-4AA6-874B-089447CF70A2}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_truncate_timed_out"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_timed_out: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_delete_buffer_truncate_timed_out: XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_timed_out
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Columnstore tuple mover truncate operation timed out due to an active snapshot transaction."): Amended,
    Guid("{D8D1B807-6742-4AA6-874B-089447CF70A2}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_delete_buffer_truncate_timed_out"): Amended]
class XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_timed_out: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_tuple_mover_delete_buffer_truncate_timed_out: XeSqlPkg_columnstore_tuple_mover_delete_buffer_truncate_timed_out
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_hobt_id;
};
		
[dynamic: ToInstance, Description("Columnstore delete buffer flush failed."): Amended,
    Guid("{80227DF3-1B75-42C0-A5D5-537FF4134622}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_buffer_flush_failed"): Amended]
class XeSqlPkg_columnstore_delete_buffer_flush_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_delete_buffer_flush_failed: XeSqlPkg_columnstore_delete_buffer_flush_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delete_buffer_rowset_id;
};
		
[dynamic: ToInstance, Description("Columnstore delete buffer flush failed."): Amended,
    Guid("{80227DF3-1B75-42C0-A5D5-537FF4134622}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_buffer_flush_failed"): Amended]
class XeSqlPkg_columnstore_delete_buffer_flush_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_delete_buffer_flush_failed: XeSqlPkg_columnstore_delete_buffer_flush_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_rowset_id;
	[WmiDataId(9), read] uint32 error_number;
};
		
[dynamic: ToInstance, Description("Columnstore delete buffer flush failed."): Amended,
    Guid("{80227DF3-1B75-42C0-A5D5-537FF4134622}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_buffer_flush_failed"): Amended]
class XeSqlPkg_columnstore_delete_buffer_flush_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_delete_buffer_flush_failed: XeSqlPkg_columnstore_delete_buffer_flush_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint8 is_in_memory;
	[WmiDataId(8), read] uint64 delete_buffer_rowset_id;
	[WmiDataId(9), read] uint32 error_number;
};
		
[dynamic: ToInstance, Description("Occurs when X Delete Buffer Flush Lock is acquired."): Amended,
    Guid("{afb849ac-b611-42bc-982c-3818c997e538}"), locale("MS\\0x409"),
    DisplayName("columnstore_x_dbfl_acquired"): Amended]
class XeSqlPkg_columnstore_x_dbfl_acquired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_x_dbfl_acquired: XeSqlPkg_columnstore_x_dbfl_acquired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
};
		
[dynamic: ToInstance, Description("Occurs when X Delete Buffer Flush Lock is acquired."): Amended,
    Guid("{afb849ac-b611-42bc-982c-3818c997e538}"), locale("MS\\0x409"),
    DisplayName("columnstore_x_dbfl_acquired"): Amended]
class XeSqlPkg_columnstore_x_dbfl_acquired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_x_dbfl_acquired: XeSqlPkg_columnstore_x_dbfl_acquired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
};
		
[dynamic: ToInstance, Description("Occurs after every delete buffer action (swap, flush, truncate)."): Amended,
    Guid("{1abd322a-f748-45bd-b05f-e18b02df0fb6}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_buffer_flush_failpoint"): Amended]
class XeSqlPkg_columnstore_delete_buffer_flush_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_delete_buffer_flush_failpoint: XeSqlPkg_columnstore_delete_buffer_flush_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint16 action_performed;
	[WmiDataId(8), read, Pointer] object  error_code_pointer;
};
		
[dynamic: ToInstance, Description("Occurs when closed delete buffer state changes."): Amended,
    Guid("{ca9e5edc-c3cd-424f-8bec-c1c6a5fbf303}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_buffer_state_transition"): Amended]
class XeSqlPkg_columnstore_delete_buffer_state_transition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_delete_buffer_state_transition: XeSqlPkg_columnstore_delete_buffer_state_transition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string from_state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string to_state;
};
		
[dynamic: ToInstance, Description("Occurs when closed delete buffer state changes."): Amended,
    Guid("{ca9e5edc-c3cd-424f-8bec-c1c6a5fbf303}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_buffer_state_transition"): Amended]
class XeSqlPkg_columnstore_delete_buffer_state_transition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_delete_buffer_state_transition: XeSqlPkg_columnstore_delete_buffer_state_transition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint8 is_in_memory;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string from_state;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string to_state;
};
		
[dynamic: ToInstance, Description("Occurs when closed delete buffer state changes."): Amended,
    Guid("{ca9e5edc-c3cd-424f-8bec-c1c6a5fbf303}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_buffer_state_transition"): Amended]
class XeSqlPkg_columnstore_delete_buffer_state_transition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_delete_buffer_state_transition: XeSqlPkg_columnstore_delete_buffer_state_transition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint8 is_in_memory;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string from_state;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string to_state;
};
		
[dynamic: ToInstance, Description("Delete buffer can not be flushed due to existence of one or more closed rowgroups with generation ID."): Amended,
    Guid("{20288B79-5497-4AE6-B7F9-31821DC886FE}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_buffer_closed_rowgroup_with_generationid_found"): Amended]
class XeSqlPkg_columnstore_delete_buffer_closed_rowgroup_with_generationid_found: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_delete_buffer_closed_rowgroup_with_generationid_found: XeSqlPkg_columnstore_delete_buffer_closed_rowgroup_with_generationid_found
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
};
		
[dynamic: ToInstance, Description("Fired when tuple mover task wakes up."): Amended,
    Guid("{518ff101-9e4a-4f63-9e68-2e9f5b210f90}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_task_wakeup"): Amended]
class XeSqlPkg_columnstore_tuple_mover_task_wakeup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_task_wakeup: XeSqlPkg_columnstore_tuple_mover_task_wakeup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Fired just before tuple mover task goes to sleep."): Amended,
    Guid("{00cc8871-94e8-40b2-ac72-af4500f4af02}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_task_sleep"): Amended]
class XeSqlPkg_columnstore_tuple_mover_task_sleep: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_task_sleep: XeSqlPkg_columnstore_tuple_mover_task_sleep
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sleep_duration;
	[WmiDataId(6), read] uint64 compress_timestamp;
	[WmiDataId(7), read] uint64 flush_timestamp;
};
		
[dynamic: ToInstance, Description("Fired when tuple mover skips a rowset."): Amended,
    Guid("{455e7ed6-b151-404c-aca4-79fa7fb15109}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_task_skipped_rowset"): Amended]
class XeSqlPkg_columnstore_tuple_mover_task_skipped_rowset: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tuple_mover_task_skipped_rowset: XeSqlPkg_columnstore_tuple_mover_task_skipped_rowset
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read, 
				XEMapId(47),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"Rowset is being built online", 
					"Rowset is orphaned by online index build rollback", 
					"Rowset is a source for online index build", 
					"Rowset is NCCI during background tuple mover merge", 
					"Rowset is skipped by DW advanced updates" }
			] uint8 skip_reason;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups together."): Amended,
    Guid("{BE7BF2F3-D823-4BBB-95E8-4CBBCE1B1DAE}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_start"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_rowgroup_merge_start: XeSqlPkg_columnstore_rowgroup_merge_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups together."): Amended,
    Guid("{BE7BF2F3-D823-4BBB-95E8-4CBBCE1B1DAE}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_start"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_rowgroup_merge_start: XeSqlPkg_columnstore_rowgroup_merge_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups together."): Amended,
    Guid("{BE7BF2F3-D823-4BBB-95E8-4CBBCE1B1DAE}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_start"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_rowgroup_merge_start: XeSqlPkg_columnstore_rowgroup_merge_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(11), read] sint8  is_aggressive_compression;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups together."): Amended,
    Guid("{BE7BF2F3-D823-4BBB-95E8-4CBBCE1B1DAE}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_start"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_rowgroup_merge_start: XeSqlPkg_columnstore_rowgroup_merge_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups together."): Amended,
    Guid("{BE7BF2F3-D823-4BBB-95E8-4CBBCE1B1DAE}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_start"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class columnstore_rowgroup_merge_start: XeSqlPkg_columnstore_rowgroup_merge_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read] sint8  is_nci_on_cci;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups together."): Amended,
    Guid("{BE7BF2F3-D823-4BBB-95E8-4CBBCE1B1DAE}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_start"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(7)]
class columnstore_rowgroup_merge_start: XeSqlPkg_columnstore_rowgroup_merge_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read] sint8  is_nci_on_cci;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups together."): Amended,
    Guid("{BE7BF2F3-D823-4BBB-95E8-4CBBCE1B1DAE}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_start"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(8)]
class columnstore_rowgroup_merge_start: XeSqlPkg_columnstore_rowgroup_merge_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read] sint8  is_nci_on_cci;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation completed merging columnstore rowgroups together."): Amended,
    Guid("{7F2079A0-53E4-4FB2-842A-42FF5E3FB5C2}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_complete"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_rowgroup_merge_complete: XeSqlPkg_columnstore_rowgroup_merge_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 cpu_time;
	[WmiDataId(10), read] uint64 memory_required_kb;
	[WmiDataId(11), read] uint64 memory_available_kb;
	[WmiDataId(12), read] uint64 source_row_count;
	[WmiDataId(13), read] uint64 source_deleted_row_count;
	[WmiDataId(14), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(15), read] uint64 target_rowgroup_id_list_length;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string target_rowgroup_id_list;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation completed merging columnstore rowgroups together."): Amended,
    Guid("{7F2079A0-53E4-4FB2-842A-42FF5E3FB5C2}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_complete"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_rowgroup_merge_complete: XeSqlPkg_columnstore_rowgroup_merge_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint64 cpu_time;
	[WmiDataId(11), read] uint64 memory_required_kb;
	[WmiDataId(12), read] uint64 memory_available_kb;
	[WmiDataId(13), read] uint64 source_row_count;
	[WmiDataId(14), read] uint64 source_deleted_row_count;
	[WmiDataId(15), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(16), read] uint64 target_rowgroup_id_list_length;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string target_rowgroup_id_list;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation completed merging columnstore rowgroups together."): Amended,
    Guid("{7F2079A0-53E4-4FB2-842A-42FF5E3FB5C2}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_complete"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_rowgroup_merge_complete: XeSqlPkg_columnstore_rowgroup_merge_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint64 cpu_time;
	[WmiDataId(11), read] uint64 memory_required_kb;
	[WmiDataId(12), read] uint64 memory_available_kb;
	[WmiDataId(13), read] uint64 source_row_count;
	[WmiDataId(14), read] uint64 source_deleted_row_count;
	[WmiDataId(15), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(16), read] uint64 target_rowgroup_id_list_length;
	[WmiDataId(17), read] sint8  is_aggressive_compression;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string target_rowgroup_id_list;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation completed merging columnstore rowgroups together."): Amended,
    Guid("{7F2079A0-53E4-4FB2-842A-42FF5E3FB5C2}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_complete"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class columnstore_rowgroup_merge_complete: XeSqlPkg_columnstore_rowgroup_merge_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 cpu_time;
	[WmiDataId(12), read] uint64 memory_required_kb;
	[WmiDataId(13), read] uint64 memory_available_kb;
	[WmiDataId(14), read] uint64 source_row_count;
	[WmiDataId(15), read] uint64 source_deleted_row_count;
	[WmiDataId(16), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(17), read] uint64 target_rowgroup_id_list_length;
	[WmiDataId(18), read] sint8  is_aggressive_compression;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string target_rowgroup_id_list;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation completed merging columnstore rowgroups together."): Amended,
    Guid("{7F2079A0-53E4-4FB2-842A-42FF5E3FB5C2}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_complete"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(7)]
class columnstore_rowgroup_merge_complete: XeSqlPkg_columnstore_rowgroup_merge_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 cpu_time;
	[WmiDataId(12), read] uint64 memory_required_kb;
	[WmiDataId(13), read] uint64 memory_available_kb;
	[WmiDataId(14), read] uint64 source_row_count;
	[WmiDataId(15), read] uint64 source_deleted_row_count;
	[WmiDataId(16), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(17), read] uint64 target_rowgroup_id_list_length;
	[WmiDataId(18), read] sint8  is_aggressive_compression;
	[WmiDataId(19), read] sint8  is_nci_on_cci;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string target_rowgroup_id_list;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation completed merging columnstore rowgroups together."): Amended,
    Guid("{7F2079A0-53E4-4FB2-842A-42FF5E3FB5C2}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_complete"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(8)]
class columnstore_rowgroup_merge_complete: XeSqlPkg_columnstore_rowgroup_merge_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 cpu_time;
	[WmiDataId(12), read] uint64 memory_required_kb;
	[WmiDataId(13), read] uint64 memory_available_kb;
	[WmiDataId(14), read] uint64 source_row_count;
	[WmiDataId(15), read] uint64 source_deleted_row_count;
	[WmiDataId(16), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(17), read] uint64 target_rowgroup_id_list_length;
	[WmiDataId(18), read] sint8  is_aggressive_compression;
	[WmiDataId(19), read] sint8  is_nci_on_cci;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string target_rowgroup_id_list;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups but failed in the process."): Amended,
    Guid("{582349C4-280A-4AA2-A212-702DBA4F4330}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_failed"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_rowgroup_merge_failed: XeSqlPkg_columnstore_rowgroup_merge_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string fail_reason;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups but failed in the process."): Amended,
    Guid("{582349C4-280A-4AA2-A212-702DBA4F4330}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_failed"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_rowgroup_merge_failed: XeSqlPkg_columnstore_rowgroup_merge_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string fail_reason;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups but failed in the process."): Amended,
    Guid("{582349C4-280A-4AA2-A212-702DBA4F4330}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_failed"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_rowgroup_merge_failed: XeSqlPkg_columnstore_rowgroup_merge_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(11), read] sint8  is_aggressive_compression;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string fail_reason;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups but failed in the process."): Amended,
    Guid("{582349C4-280A-4AA2-A212-702DBA4F4330}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_failed"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_rowgroup_merge_failed: XeSqlPkg_columnstore_rowgroup_merge_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string fail_reason;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups but failed in the process."): Amended,
    Guid("{582349C4-280A-4AA2-A212-702DBA4F4330}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_failed"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_rowgroup_merge_failed: XeSqlPkg_columnstore_rowgroup_merge_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read] sint8  is_nci_on_cci;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string fail_reason;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups but failed in the process."): Amended,
    Guid("{582349C4-280A-4AA2-A212-702DBA4F4330}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_failed"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(6)]
class columnstore_rowgroup_merge_failed: XeSqlPkg_columnstore_rowgroup_merge_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read] sint8  is_nci_on_cci;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string fail_reason;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups and accquired all required locks."): Amended,
    Guid("{D0C79B1F-0BB7-4072-9C05-A4CAA918C5EF}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_locking_done"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_locking_done: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_rowgroup_merge_locking_done: XeSqlPkg_columnstore_rowgroup_merge_locking_done
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read] sint8  is_nci_on_cci;
	[WmiDataId(14), read] uint64 cpu_time;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups and accquired all required locks."): Amended,
    Guid("{D0C79B1F-0BB7-4072-9C05-A4CAA918C5EF}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_locking_done"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_locking_done: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_rowgroup_merge_locking_done: XeSqlPkg_columnstore_rowgroup_merge_locking_done
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read] sint8  is_nci_on_cci;
	[WmiDataId(14), read] uint64 cpu_time;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A MERGE operation started merging columnstore rowgroups and accquired all required locks."): Amended,
    Guid("{D0C79B1F-0BB7-4072-9C05-A4CAA918C5EF}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_merge_locking_done"): Amended]
class XeSqlPkg_columnstore_rowgroup_merge_locking_done: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_rowgroup_merge_locking_done: XeSqlPkg_columnstore_rowgroup_merge_locking_done
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint8 is_background_merge;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read] sint8  is_aggressive_compression;
	[WmiDataId(13), read] sint8  is_nci_on_cci;
	[WmiDataId(14), read] uint64 cpu_time;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string merge_policy;
};
		
[dynamic: ToInstance, Description("A user invoked a REORG command but based on the policy, no rowgroup qualified."): Amended,
    Guid("{1C607218-52FA-4D7C-9347-23886DD690CB}"), locale("MS\\0x409"),
    DisplayName("columnstore_no_rowgroup_qualified_for_merge"): Amended]
class XeSqlPkg_columnstore_no_rowgroup_qualified_for_merge: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_no_rowgroup_qualified_for_merge: XeSqlPkg_columnstore_no_rowgroup_qualified_for_merge
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
};
		
[dynamic: ToInstance, Description("A user invoked a REORG command but based on the policy, no rowgroup qualified."): Amended,
    Guid("{1C607218-52FA-4D7C-9347-23886DD690CB}"), locale("MS\\0x409"),
    DisplayName("columnstore_no_rowgroup_qualified_for_merge"): Amended]
class XeSqlPkg_columnstore_no_rowgroup_qualified_for_merge: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_no_rowgroup_qualified_for_merge: XeSqlPkg_columnstore_no_rowgroup_qualified_for_merge
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("A user invoked a REORG command but based on the policy, no rowgroup qualified."): Amended,
    Guid("{1C607218-52FA-4D7C-9347-23886DD690CB}"), locale("MS\\0x409"),
    DisplayName("columnstore_no_rowgroup_qualified_for_merge"): Amended]
class XeSqlPkg_columnstore_no_rowgroup_qualified_for_merge: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_no_rowgroup_qualified_for_merge: XeSqlPkg_columnstore_no_rowgroup_qualified_for_merge
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Tuple mover aggressive compression found a rowgroup to merge."): Amended,
    Guid("{1C607218-52FA-4D7C-9347-23886DD690CB}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_qualified_for_tuplemover_aggressive_merge"): Amended]
class XeSqlPkg_columnstore_rowgroup_qualified_for_tuplemover_aggressive_merge: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_rowgroup_qualified_for_tuplemover_aggressive_merge: XeSqlPkg_columnstore_rowgroup_qualified_for_tuplemover_aggressive_merge
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 rowgroup_id;
};
		
[dynamic: ToInstance, Description("The tuple mover timed out trying to acquire a lock to compress a row group."): Amended,
    Guid("{6d4a26c5-df01-421a-a0ae-eb103fabc1c7}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_exclusion_lock_timeout"): Amended]
class XeSqlPkg_columnstore_tuple_mover_exclusion_lock_timeout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tuple_mover_exclusion_lock_timeout: XeSqlPkg_columnstore_tuple_mover_exclusion_lock_timeout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 rowset_id;
	[WmiDataId(10), read] uint64 rowgroup_id;
};
		
[dynamic: ToInstance, Description("The tuple mover timed out trying to acquire a lock to compress a row group."): Amended,
    Guid("{6d4a26c5-df01-421a-a0ae-eb103fabc1c7}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_exclusion_lock_timeout"): Amended]
class XeSqlPkg_columnstore_tuple_mover_exclusion_lock_timeout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tuple_mover_exclusion_lock_timeout: XeSqlPkg_columnstore_tuple_mover_exclusion_lock_timeout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 partition_number;
	[WmiDataId(9), read] uint64 rowset_id;
	[WmiDataId(10), read] sint64 rowgroup_id;
};
		
[dynamic: ToInstance, Description("An Index Reorganize operation failed."): Amended,
    Guid("{A8176089-6132-43FE-AC57-6CA719CAD613}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_reorg_failed"): Amended]
class XeSqlPkg_columnstore_index_reorg_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_index_reorg_failed: XeSqlPkg_columnstore_index_reorg_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint8 rowgroup_state;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint32 error_number;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
};
		
[dynamic: ToInstance, Description("An Index Reorganize operation failed."): Amended,
    Guid("{A8176089-6132-43FE-AC57-6CA719CAD613}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_reorg_failed"): Amended]
class XeSqlPkg_columnstore_index_reorg_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_index_reorg_failed: XeSqlPkg_columnstore_index_reorg_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint8 rowgroup_state;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint32 error_number;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
};
		
[dynamic: ToInstance, Description("An Index Reorganize operation failed."): Amended,
    Guid("{A8176089-6132-43FE-AC57-6CA719CAD613}"), locale("MS\\0x409"),
    DisplayName("columnstore_index_reorg_failed"): Amended]
class XeSqlPkg_columnstore_index_reorg_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_index_reorg_failed: XeSqlPkg_columnstore_index_reorg_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint64 rowgroup_id;
	[WmiDataId(8), read] uint8 rowgroup_state;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read] uint32 error_number;
	[WmiDataId(11), read] uint64 source_rowgroup_id_list_length;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string source_rowgroup_id_list;
};
		
[dynamic: ToInstance, Description("Code coverage Xevent for columnstore code."): Amended,
    Guid("{015BC3DD-00C2-425E-A91F-FD302327C965}"), locale("MS\\0x409"),
    DisplayName("column_store_code_coverage"): Amended]
class XeSqlPkg_column_store_code_coverage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_code_coverage: XeSqlPkg_column_store_code_coverage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 code_point;
	[WmiDataId(6), read] real64 optional_value1;
	[WmiDataId(7), read] real64 optional_value2;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string description;
};
		
[dynamic: ToInstance, Description("A versioned scan skipped scanning the rowgroup which is too new for it."): Amended,
    Guid("{16416D42-6F7E-47B9-8F2A-EE2DDDE394E1}"), locale("MS\\0x409"),
    DisplayName("column_store_redirect_no_detour"): Amended]
class XeSqlPkg_column_store_redirect_no_detour: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_redirect_no_detour: XeSqlPkg_column_store_redirect_no_detour
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 version_timestamp;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string state;
};
		
[dynamic: ToInstance, Description("A versioned scan was detoured from a newer rowgroup to an older rowgroup."): Amended,
    Guid("{B8151171-3A02-4CE3-9CA4-CD505FA2484D}"), locale("MS\\0x409"),
    DisplayName("column_store_redirect_detour"): Amended]
class XeSqlPkg_column_store_redirect_detour: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_redirect_detour: XeSqlPkg_column_store_redirect_detour
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 skip_rowgroup_id;
	[WmiDataId(8), read] uint64 skip_rowcount;
	[WmiDataId(9), read] uint64 version_timestamp;
	[WmiDataId(10), read] uint64 detour_rowgroup_id;
	[WmiDataId(11), read] uint64 detour_rowcount;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string skip_rowgroup_state;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string detour_rowgroup_state;
};
		
[dynamic: ToInstance, Description("A versioned scan is scanning a rowgroup that has a detour."): Amended,
    Guid("{5CA1CA40-403D-412B-87E6-C0C11CCB38D9}"), locale("MS\\0x409"),
    DisplayName("column_store_redirect_skipped"): Amended]
class XeSqlPkg_column_store_redirect_skipped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_redirect_skipped: XeSqlPkg_column_store_redirect_skipped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read] uint64 version_timestamp;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string state;
};
		
[dynamic: ToInstance, Description("A compressed rowgroup was added to the scan collection."): Amended,
    Guid("{87031E6D-A453-45B9-88C8-249F96EFA4BB}"), locale("MS\\0x409"),
    DisplayName("column_store_compressed_rowgroup_scan"): Amended]
class XeSqlPkg_column_store_compressed_rowgroup_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_compressed_rowgroup_scan: XeSqlPkg_column_store_compressed_rowgroup_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string state;
};
		
[dynamic: ToInstance, Description("A delta rowgroup was added to the scan collection."): Amended,
    Guid("{a205b67c-a985-4d7f-af8c-2d7324f314cd}"), locale("MS\\0x409"),
    DisplayName("column_store_delta_rowgroup_scan"): Amended]
class XeSqlPkg_column_store_delta_rowgroup_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_delta_rowgroup_scan: XeSqlPkg_column_store_delta_rowgroup_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 row_count;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string state;
};
		
[dynamic: ToInstance, Description("A route for a rowgroup version was reset to a new timestamp."): Amended,
    Guid("{872baab6-adcf-4c55-aaf7-b8132281c807}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_route_reset"): Amended]
class XeSqlPkg_column_store_rowgroup_route_reset: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_rowgroup_route_reset: XeSqlPkg_column_store_rowgroup_route_reset
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 version_timestamp;
};
		
[dynamic: ToInstance, Description("A route for a rowgroup version was reset to a new timestamp."): Amended,
    Guid("{a7e445d8-fc7d-4eba-8852-1aa00a8d6772}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_route_add"): Amended]
class XeSqlPkg_column_store_rowgroup_route_add: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_rowgroup_route_add: XeSqlPkg_column_store_rowgroup_route_add
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 version_timestamp;
};
		
[dynamic: ToInstance, Description("A detour for a rowgroup version was reset to a new timestamp."): Amended,
    Guid("{b5e4e49b-5974-4237-99fb-0220f131e8df}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_detour_add"): Amended]
class XeSqlPkg_column_store_rowgroup_detour_add: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_rowgroup_detour_add: XeSqlPkg_column_store_rowgroup_detour_add
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 skip_rowgroup_id;
	[WmiDataId(8), read] uint64 detour_rowgroup_id;
	[WmiDataId(9), read] uint64 version_timestamp;
};
		
[dynamic: ToInstance, Description("A detour for a rowgroup version was rolled back."): Amended,
    Guid("{5d14cd83-b750-4c4e-b0b7-b991dac02bdb}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_detour_rollback"): Amended]
class XeSqlPkg_column_store_rowgroup_detour_rollback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_rowgroup_detour_rollback: XeSqlPkg_column_store_rowgroup_detour_rollback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 skip_rowgroup_id;
	[WmiDataId(8), read] uint64 detour_rowgroup_id;
	[WmiDataId(9), read] uint64 version_timestamp;
};
		
[dynamic: ToInstance, Description("A route for a rowgroup version was rolled back."): Amended,
    Guid("{23643c7d-e5b1-4221-82b9-f5608662d4d7}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_route_rollback"): Amended]
class XeSqlPkg_column_store_rowgroup_route_rollback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_rowgroup_route_rollback: XeSqlPkg_column_store_rowgroup_route_rollback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 skip_rowgroup_id;
	[WmiDataId(8), read] uint64 detour_rowgroup_id;
	[WmiDataId(9), read] uint64 version_timestamp;
};
		
[dynamic: ToInstance, Description("A route for a rowgroup version was removed for being no longer needed."): Amended,
    Guid("{96583686-0b46-4982-8eeb-17412cdabc5e}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_route_removed"): Amended]
class XeSqlPkg_column_store_rowgroup_route_removed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_rowgroup_route_removed: XeSqlPkg_column_store_rowgroup_route_removed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 version_timestamp;
};
		
[dynamic: ToInstance, Description("An attempt to lock an open deltastore for insertion."): Amended,
    Guid("{E5D26085-DB81-4BC9-B8D1-FFF1D4385AEC}"), locale("MS\\0x409"),
    DisplayName("column_store_acquire_insert_lock"): Amended]
class XeSqlPkg_column_store_acquire_insert_lock: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_acquire_insert_lock: XeSqlPkg_column_store_acquire_insert_lock
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] sint8  delta_store_isnew;
	[WmiDataId(9), read] uint64 lock_attempt;
	[WmiDataId(10), read] uint64 lock_timeout;
	[WmiDataId(11), read, 
				XEMapId(90),
				ValueMap { 
					"-10", 
					"-9", 
					"-8", 
					"-2", 
					"-3", 
					"-7", 
					"-6", 
					"0", 
					"1", 
					"-5", 
					"-1", 
					"-4" },
				Values { 
					"FIDO_MANAGER_CANCEL", 
					"FIDO_MANAGER_NOT_FOUND", 
					"FIDO_PARSING_FAILED", 
					"CANCEL", 
					"DEADLOCK", 
					"KILL_BLOCKED_BY_SYSTEM_TASK", 
					"KILL_EXISTS", 
					"OK", 
					"OKWAIT", 
					"RESULTS_IN_DISTRIBUTED_MODE", 
					"TIMEDOUT", 
					"TMABORT" }
			] uint32 lock_result;
};
		
[dynamic: ToInstance, Description("An attempt to lock an open deltastore for insertion."): Amended,
    Guid("{E5D26085-DB81-4BC9-B8D1-FFF1D4385AEC}"), locale("MS\\0x409"),
    DisplayName("column_store_acquire_insert_lock"): Amended]
class XeSqlPkg_column_store_acquire_insert_lock: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_acquire_insert_lock: XeSqlPkg_column_store_acquire_insert_lock
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 delta_store_id;
	[WmiDataId(8), read] sint8  delta_store_isnew;
	[WmiDataId(9), read] uint64 lock_attempt_timeout_count;
};
		
[dynamic: ToInstance, Description("A filter eliminated a columnstore segment during scan."): Amended,
    Guid("{40327607-1075-4408-86db-abadc0cc7e33}"), locale("MS\\0x409"),
    DisplayName("column_store_segment_eliminate"): Amended]
class XeSqlPkg_column_store_segment_eliminate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_segment_eliminate: XeSqlPkg_column_store_segment_eliminate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 transaction_id_high;
	[WmiDataId(6), read] uint32 transaction_id_low;
	[WmiDataId(7), read] uint64 hobt_id;
	[WmiDataId(8), read] uint32 rowgroup_id;
};
		
[dynamic: ToInstance, Description("A list of filters for columnstore index was pushed down to storage engine."): Amended,
    Guid("{44f06131-6c95-434e-bdc6-2da258dbf7e5}"), locale("MS\\0x409"),
    DisplayName("column_store_filters_pushdown"): Amended]
class XeSqlPkg_column_store_filters_pushdown: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_filters_pushdown: XeSqlPkg_column_store_filters_pushdown
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  filter_list_overflow;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string filter_list;
};
		
[dynamic: ToInstance, Description("A column store row group skips delete buffer check during a scan."): Amended,
    Guid("{3EE4306F-D8FF-42B4-B446-59A1F1352711}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_skip_delete_buffer"): Amended]
class XeSqlPkg_column_store_rowgroup_skip_delete_buffer: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_rowgroup_skip_delete_buffer: XeSqlPkg_column_store_rowgroup_skip_delete_buffer
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint8 is_in_memory;
	[WmiDataId(11), read] uint32 rowgroup_id;
	[WmiDataId(12), read] uint32 node_id;
	[WmiDataId(13), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Rowgroup read-ahead issued during a scan on a columnstore."): Amended,
    Guid("{9ef7a104-3db0-4a24-9083-dfd7dc6ef93a}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_readahead_issued"): Amended]
class XeSqlPkg_column_store_rowgroup_readahead_issued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_rowgroup_readahead_issued: XeSqlPkg_column_store_rowgroup_readahead_issued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rowgroup_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 accessor_id;
};
		
[dynamic: ToInstance, Description("Rowgroup read-ahead issued during a scan on a columnstore."): Amended,
    Guid("{9ef7a104-3db0-4a24-9083-dfd7dc6ef93a}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_readahead_issued"): Amended]
class XeSqlPkg_column_store_rowgroup_readahead_issued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_rowgroup_readahead_issued: XeSqlPkg_column_store_rowgroup_readahead_issued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rowgroup_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 accessor_id;
	[WmiDataId(8), read] uint64 scan_operator_outstanding_read_ahead_in_bytes;
	[WmiDataId(9), read] uint64 scan_operator_read_ahead_cap_in_bytes;
	[WmiDataId(10), read] uint64 max_bytes_read_ahead;
	[WmiDataId(11), read] uint64 actual_read_ahead_in_bytes;
};
		
[dynamic: ToInstance, Description("Rowgroup read-ahead issued during a scan on a columnstore."): Amended,
    Guid("{9ef7a104-3db0-4a24-9083-dfd7dc6ef93a}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_readahead_issued"): Amended]
class XeSqlPkg_column_store_rowgroup_readahead_issued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class column_store_rowgroup_readahead_issued: XeSqlPkg_column_store_rowgroup_readahead_issued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 rowgroup_id;
	[WmiDataId(7), read] uint64 hobt_id;
	[WmiDataId(8), read] uint64 accessor_id;
	[WmiDataId(9), read] uint64 scan_operator_outstanding_read_ahead_in_bytes;
	[WmiDataId(10), read] uint64 scan_operator_read_ahead_cap_in_bytes;
	[WmiDataId(11), read] uint64 max_bytes_read_ahead;
	[WmiDataId(12), read] uint64 actual_read_ahead_in_bytes;
};
		
[dynamic: ToInstance, Description("Rowgroup read issued during a scan on a columnstore."): Amended,
    Guid("{7a0e34e4-e016-40e7-baea-ccf6e214c849}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_read_issued"): Amended]
class XeSqlPkg_column_store_rowgroup_read_issued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_rowgroup_read_issued: XeSqlPkg_column_store_rowgroup_read_issued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rowgroup_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 accessor_id;
};
		
[dynamic: ToInstance, Description("Rowgroup read issued during a scan on a columnstore."): Amended,
    Guid("{7a0e34e4-e016-40e7-baea-ccf6e214c849}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_read_issued"): Amended]
class XeSqlPkg_column_store_rowgroup_read_issued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class column_store_rowgroup_read_issued: XeSqlPkg_column_store_rowgroup_read_issued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rowgroup_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 accessor_id;
	[WmiDataId(8), read] uint64 scan_operator_outstanding_read_ahead_in_bytes;
	[WmiDataId(9), read] uint64 scan_operator_read_ahead_cap_in_bytes;
	[WmiDataId(10), read] uint64 max_bytes_read_ahead;
};
		
[dynamic: ToInstance, Description("Rowgroup read issued during a scan on a columnstore."): Amended,
    Guid("{7a0e34e4-e016-40e7-baea-ccf6e214c849}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_read_issued"): Amended]
class XeSqlPkg_column_store_rowgroup_read_issued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class column_store_rowgroup_read_issued: XeSqlPkg_column_store_rowgroup_read_issued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 rowgroup_id;
	[WmiDataId(7), read] uint64 hobt_id;
	[WmiDataId(8), read] uint64 accessor_id;
	[WmiDataId(9), read] uint64 scan_operator_outstanding_read_ahead_in_bytes;
	[WmiDataId(10), read] uint64 scan_operator_read_ahead_cap_in_bytes;
	[WmiDataId(11), read] uint64 max_bytes_read_ahead;
};
		
[dynamic: ToInstance, Description("An expression bitmap filter was set on a rowgroup column at rowgroup compile time."): Amended,
    Guid("{699955f9-6da4-40bf-840c-68437db10fbb}"), locale("MS\\0x409"),
    DisplayName("column_store_expression_filter_bitmap_set"): Amended]
class XeSqlPkg_column_store_expression_filter_bitmap_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_expression_filter_bitmap_set: XeSqlPkg_column_store_expression_filter_bitmap_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 node_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint32 rowset_column_id;
	[WmiDataId(8), read] sint32 bitmap_size;
	[WmiDataId(9), read] sint32 bits_set;
};
		
[dynamic: ToInstance, Description("An expression bitmap filter was applied on a rowgroup column batch."): Amended,
    Guid("{3a076180-e6a9-4e1f-a173-de7d77876845}"), locale("MS\\0x409"),
    DisplayName("column_store_expression_filter_apply"): Amended]
class XeSqlPkg_column_store_expression_filter_apply: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_expression_filter_apply: XeSqlPkg_column_store_expression_filter_apply
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 node_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint32 rowgroup_id;
	[WmiDataId(8), read] uint32 rowset_column_id;
	[WmiDataId(9), read] sint32 input_rows;
	[WmiDataId(10), read] sint32 output_rows;
	[WmiDataId(11), read] sint8  is_pure;
};
		
[dynamic: ToInstance, Description("A metadata operation occurred on a columnstore rowgroup."): Amended,
    Guid("{5535ad23-a1b0-4012-9892-c090fed209fa}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_operation"): Amended]
class XeSqlPkg_columnstore_rowgroup_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_rowgroup_operation: XeSqlPkg_columnstore_rowgroup_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] uint64 hobt_id;
	[WmiDataId(8), read] uint16 transaction_id_high;
	[WmiDataId(9), read] uint32 transaction_id_low;
	[WmiDataId(10), read] uint32 rowgroup_id;
	[WmiDataId(11), read, 
				XEMapId(166),
				ValueMap { 
					"0", 
					"3", 
					"2", 
					"1" },
				Values { 
					"ACTION", 
					"LAST", 
					"REDO", 
					"UNDO" }
			] uint32 lop_type;
	[WmiDataId(12), read] uint32 rowgroup_version;
	[WmiDataId(13), read] uint64 deltastore_id;
	[WmiDataId(14), read] uint64 compressed_row_count;
	[WmiDataId(15), read] sint32 column_id;
	[WmiDataId(16), read] sint32 dictionary_id;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string rowgroup_state;
};
		
[dynamic: ToInstance, Description("A metadata operation occurred on a columnstore rowgroup."): Amended,
    Guid("{5535ad23-a1b0-4012-9892-c090fed209fa}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_operation"): Amended]
class XeSqlPkg_columnstore_rowgroup_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_rowgroup_operation: XeSqlPkg_columnstore_rowgroup_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint8 is_in_memory;
	[WmiDataId(12), read] uint16 transaction_id_high;
	[WmiDataId(13), read] uint32 transaction_id_low;
	[WmiDataId(14), read] sint32 rowgroup_id;
	[WmiDataId(15), read, 
				XEMapId(166),
				ValueMap { 
					"0", 
					"3", 
					"2", 
					"1" },
				Values { 
					"ACTION", 
					"LAST", 
					"REDO", 
					"UNDO" }
			] uint32 lop_type;
	[WmiDataId(16), read] uint32 rowgroup_version;
	[WmiDataId(17), read] uint64 deltastore_id;
	[WmiDataId(18), read] uint64 compressed_row_count;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string rowgroup_state;
};
		
[dynamic: ToInstance, Description("A metadata operation occurred on a columnstore rowgroup."): Amended,
    Guid("{5535ad23-a1b0-4012-9892-c090fed209fa}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_operation"): Amended]
class XeSqlPkg_columnstore_rowgroup_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_rowgroup_operation: XeSqlPkg_columnstore_rowgroup_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(6), read] sint32 database_id;
	[WmiDataId(7), read] sint64 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint8 is_in_memory;
	[WmiDataId(12), read] uint16 transaction_id_high;
	[WmiDataId(13), read] uint32 transaction_id_low;
	[WmiDataId(14), read] sint64 rowgroup_id;
	[WmiDataId(15), read, 
				XEMapId(166),
				ValueMap { 
					"0", 
					"3", 
					"2", 
					"1" },
				Values { 
					"ACTION", 
					"LAST", 
					"REDO", 
					"UNDO" }
			] uint32 lop_type;
	[WmiDataId(16), read] uint32 rowgroup_version;
	[WmiDataId(17), read] uint64 deltastore_id;
	[WmiDataId(18), read] uint64 compressed_row_count;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string rowgroup_state;
};
		
[dynamic: ToInstance, Description("A metadata operation occurred on a columnstore rowgroup."): Amended,
    Guid("{5535ad23-a1b0-4012-9892-c090fed209fa}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_operation"): Amended]
class XeSqlPkg_columnstore_rowgroup_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_rowgroup_operation: XeSqlPkg_columnstore_rowgroup_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(6), read] sint32 database_id;
	[WmiDataId(7), read] sint64 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint8 is_in_memory;
	[WmiDataId(12), read] uint16 transaction_id_high;
	[WmiDataId(13), read] uint32 transaction_id_low;
	[WmiDataId(14), read] sint64 rowgroup_id;
	[WmiDataId(15), read, 
				XEMapId(166),
				ValueMap { 
					"0", 
					"3", 
					"2", 
					"1" },
				Values { 
					"ACTION", 
					"LAST", 
					"REDO", 
					"UNDO" }
			] uint32 lop_type;
	[WmiDataId(16), read] uint32 rowgroup_version;
	[WmiDataId(17), read] uint64 deltastore_id;
	[WmiDataId(18), read] uint64 compressed_row_count;
	[WmiDataId(19), read] uint32 thread_id;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string rowgroup_state;
};
		
[dynamic: ToInstance, Description("A metadata operation occurred on a columnstore rowgroup."): Amended,
    Guid("{5535ad23-a1b0-4012-9892-c090fed209fa}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_operation"): Amended]
class XeSqlPkg_columnstore_rowgroup_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_rowgroup_operation: XeSqlPkg_columnstore_rowgroup_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(6), read] sint32 database_id;
	[WmiDataId(7), read] sint64 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint8 is_in_memory;
	[WmiDataId(12), read] uint16 transaction_id_high;
	[WmiDataId(13), read] uint32 transaction_id_low;
	[WmiDataId(14), read] sint64 rowgroup_id;
	[WmiDataId(15), read, 
				XEMapId(166),
				ValueMap { 
					"0", 
					"3", 
					"2", 
					"1" },
				Values { 
					"ACTION", 
					"LAST", 
					"REDO", 
					"UNDO" }
			] uint32 lop_type;
	[WmiDataId(16), read] uint32 rowgroup_version;
	[WmiDataId(17), read] uint64 deltastore_id;
	[WmiDataId(18), read] uint64 compressed_row_count;
	[WmiDataId(19), read] uint32 thread_id;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string rowgroup_state_desc;
};
		
[dynamic: ToInstance, Description("A metadata operation occurred on a columnstore column segment."): Amended,
    Guid("{70C59EFF-BE44-42A3-9E8C-B2C29153F0D1}"), locale("MS\\0x409"),
    DisplayName("columnstore_column_segment_operation"): Amended]
class XeSqlPkg_columnstore_column_segment_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_column_segment_operation: XeSqlPkg_columnstore_column_segment_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint8 is_in_memory;
	[WmiDataId(12), read] uint16 transaction_id_high;
	[WmiDataId(13), read] uint32 transaction_id_low;
	[WmiDataId(14), read] uint32 rowgroup_id;
	[WmiDataId(15), read, 
				XEMapId(166),
				ValueMap { 
					"0", 
					"3", 
					"2", 
					"1" },
				Values { 
					"ACTION", 
					"LAST", 
					"REDO", 
					"UNDO" }
			] uint32 lop_type;
	[WmiDataId(16), read] uint32 column_id;
	[WmiDataId(17), read] sint32 primary_dictionary_id;
	[WmiDataId(18), read] sint32 secondary_dictionary_id;
};
		
[dynamic: ToInstance, Description("A metadata operation occurred on a columnstore column segment."): Amended,
    Guid("{70C59EFF-BE44-42A3-9E8C-B2C29153F0D1}"), locale("MS\\0x409"),
    DisplayName("columnstore_column_segment_operation"): Amended]
class XeSqlPkg_columnstore_column_segment_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_column_segment_operation: XeSqlPkg_columnstore_column_segment_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint8 is_in_memory;
	[WmiDataId(12), read] uint16 transaction_id_high;
	[WmiDataId(13), read] uint32 transaction_id_low;
	[WmiDataId(14), read] uint32 rowgroup_id;
	[WmiDataId(15), read, 
				XEMapId(166),
				ValueMap { 
					"0", 
					"3", 
					"2", 
					"1" },
				Values { 
					"ACTION", 
					"LAST", 
					"REDO", 
					"UNDO" }
			] uint32 lop_type;
	[WmiDataId(16), read] uint32 column_id;
	[WmiDataId(17), read] sint32 primary_dictionary_id;
	[WmiDataId(18), read] sint32 secondary_dictionary_id;
	[WmiDataId(19), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("A metadata operation occurred on a columnstore column segment."): Amended,
    Guid("{70C59EFF-BE44-42A3-9E8C-B2C29153F0D1}"), locale("MS\\0x409"),
    DisplayName("columnstore_column_segment_operation"): Amended]
class XeSqlPkg_columnstore_column_segment_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_column_segment_operation: XeSqlPkg_columnstore_column_segment_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(6), read] sint32 database_id;
	[WmiDataId(7), read] sint64 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint8 is_in_memory;
	[WmiDataId(12), read] uint16 transaction_id_high;
	[WmiDataId(13), read] uint32 transaction_id_low;
	[WmiDataId(14), read] sint64 rowgroup_id;
	[WmiDataId(15), read, 
				XEMapId(166),
				ValueMap { 
					"0", 
					"3", 
					"2", 
					"1" },
				Values { 
					"ACTION", 
					"LAST", 
					"REDO", 
					"UNDO" }
			] uint32 lop_type;
	[WmiDataId(16), read] uint32 column_id;
	[WmiDataId(17), read] sint32 primary_dictionary_id;
	[WmiDataId(18), read] sint32 secondary_dictionary_id;
	[WmiDataId(19), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("A metadata operation occurred on a columnstore dictionary."): Amended,
    Guid("{E0196CBA-E4E4-4DD3-A7E1-2331F2A4097F}"), locale("MS\\0x409"),
    DisplayName("columnstore_dictionary_operation"): Amended]
class XeSqlPkg_columnstore_dictionary_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_dictionary_operation: XeSqlPkg_columnstore_dictionary_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint8 is_in_memory;
	[WmiDataId(12), read] uint16 transaction_id_high;
	[WmiDataId(13), read] uint32 transaction_id_low;
	[WmiDataId(14), read] sint32 rowgroup_id;
	[WmiDataId(15), read, 
				XEMapId(166),
				ValueMap { 
					"0", 
					"3", 
					"2", 
					"1" },
				Values { 
					"ACTION", 
					"LAST", 
					"REDO", 
					"UNDO" }
			] uint32 lop_type;
	[WmiDataId(16), read] uint32 column_id;
	[WmiDataId(17), read] sint8  is_primary_dictionary;
	[WmiDataId(18), read] uint32 dictionary_id;
};
		
[dynamic: ToInstance, Description("A metadata operation occurred on a columnstore dictionary."): Amended,
    Guid("{E0196CBA-E4E4-4DD3-A7E1-2331F2A4097F}"), locale("MS\\0x409"),
    DisplayName("columnstore_dictionary_operation"): Amended]
class XeSqlPkg_columnstore_dictionary_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_dictionary_operation: XeSqlPkg_columnstore_dictionary_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint8 is_in_memory;
	[WmiDataId(12), read] uint16 transaction_id_high;
	[WmiDataId(13), read] uint32 transaction_id_low;
	[WmiDataId(14), read] sint32 rowgroup_id;
	[WmiDataId(15), read, 
				XEMapId(166),
				ValueMap { 
					"0", 
					"3", 
					"2", 
					"1" },
				Values { 
					"ACTION", 
					"LAST", 
					"REDO", 
					"UNDO" }
			] uint32 lop_type;
	[WmiDataId(16), read] uint32 column_id;
	[WmiDataId(17), read] sint8  is_primary_dictionary;
	[WmiDataId(18), read] uint32 dictionary_id;
	[WmiDataId(19), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("A metadata operation occurred on a columnstore dictionary."): Amended,
    Guid("{E0196CBA-E4E4-4DD3-A7E1-2331F2A4097F}"), locale("MS\\0x409"),
    DisplayName("columnstore_dictionary_operation"): Amended]
class XeSqlPkg_columnstore_dictionary_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_dictionary_operation: XeSqlPkg_columnstore_dictionary_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(162),
				ValueMap { 
					"12", 
					"14", 
					"13", 
					"15", 
					"17", 
					"16", 
					"7", 
					"9", 
					"11", 
					"10", 
					"8", 
					"0", 
					"2", 
					"1", 
					"18", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_COLUMN_SEGMENT_ADD", 
					"CSI_COLUMN_SEGMENT_DELETE", 
					"CSI_COLUMN_SEGMENT_UPDATE", 
					"CSI_DICTIONARY_ADD", 
					"CSI_DICTIONARY_DELETE", 
					"CSI_DICTIONARY_UPDATE", 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_DELETE", 
					"CSI_ROWGROUP_MERGE_END", 
					"CSI_ROWGROUP_MERGE_START", 
					"CSI_ROWGROUP_UPDATE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(6), read] sint32 database_id;
	[WmiDataId(7), read] sint64 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 hobt_id;
	[WmiDataId(10), read] uint64 partition_number;
	[WmiDataId(11), read] uint8 is_in_memory;
	[WmiDataId(12), read] uint16 transaction_id_high;
	[WmiDataId(13), read] uint32 transaction_id_low;
	[WmiDataId(14), read] sint64 rowgroup_id;
	[WmiDataId(15), read, 
				XEMapId(166),
				ValueMap { 
					"0", 
					"3", 
					"2", 
					"1" },
				Values { 
					"ACTION", 
					"LAST", 
					"REDO", 
					"UNDO" }
			] uint32 lop_type;
	[WmiDataId(16), read] uint32 column_id;
	[WmiDataId(17), read] sint8  is_primary_dictionary;
	[WmiDataId(18), read] uint32 dictionary_id;
	[WmiDataId(19), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Fired at the end of bulk loads by each worker thread when there have been row groups not flushed as delta store in an attempt to minimize the reserved log space."): Amended,
    Guid("{764434B7-BABE-4018-8B03-1CB4333A262F}"), locale("MS\\0x409"),
    DisplayName("columnstore_compress_rowgroup_to_minimize_log_size"): Amended]
class XeSqlPkg_columnstore_compress_rowgroup_to_minimize_log_size: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_compress_rowgroup_to_minimize_log_size: XeSqlPkg_columnstore_compress_rowgroup_to_minimize_log_size
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 transaction_id;
	[WmiDataId(8), read] uint64 max_reserved_log_that_allows_flush_as_delta_bytes;
	[WmiDataId(9), read] uint64 log_used_bytes_when_max_reserved_log_that_allows_flush_as_delta_bytes_was_reached;
	[WmiDataId(10), read] uint64 log_used_bytes;
	[WmiDataId(11), read] sint64 log_reserved_bytes;
	[WmiDataId(12), read] uint32 max_bad_quality_row_group_count_not_flushed_as_delta;
	[WmiDataId(13), read] uint32 bad_quality_row_group_count_not_flushed_as_delta;
	[WmiDataId(14), read, 
				XEMapId(102),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"DISABLED", 
					"ENABLED", 
					"TELEMETRY_ONLY" }
			] uint8 columnstore_log_minimization_feature_state;
};
		
[dynamic: ToInstance, Description("Fired at the end of bulk loads by each worker thread when there have been row groups not flushed as delta store in an attempt to minimize the reserved log space."): Amended,
    Guid("{764434B7-BABE-4018-8B03-1CB4333A262F}"), locale("MS\\0x409"),
    DisplayName("columnstore_compress_rowgroup_to_minimize_log_size"): Amended]
class XeSqlPkg_columnstore_compress_rowgroup_to_minimize_log_size: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_compress_rowgroup_to_minimize_log_size: XeSqlPkg_columnstore_compress_rowgroup_to_minimize_log_size
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 transaction_id;
	[WmiDataId(8), read] uint64 max_reserved_log_that_allows_flush_as_delta_bytes;
	[WmiDataId(9), read] uint64 log_used_bytes_when_max_reserved_log_threshold_was_reached;
	[WmiDataId(10), read] uint64 log_used_bytes;
	[WmiDataId(11), read] sint64 log_reserved_bytes;
	[WmiDataId(12), read] uint32 max_bad_quality_row_group_count_not_flushed_as_delta;
	[WmiDataId(13), read] uint32 bad_quality_row_group_count_not_flushed_as_delta;
	[WmiDataId(14), read, 
				XEMapId(102),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"DISABLED", 
					"ENABLED", 
					"TELEMETRY_ONLY" }
			] uint8 columnstore_log_minimization_feature_state;
};
		
[dynamic: ToInstance, Description("Fired at the end of bulk loads by each worker thread when there have been row groups not flushed as delta store in an attempt to minimize the reserved log space."): Amended,
    Guid("{764434B7-BABE-4018-8B03-1CB4333A262F}"), locale("MS\\0x409"),
    DisplayName("columnstore_compress_rowgroup_to_minimize_log_size"): Amended]
class XeSqlPkg_columnstore_compress_rowgroup_to_minimize_log_size: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_compress_rowgroup_to_minimize_log_size: XeSqlPkg_columnstore_compress_rowgroup_to_minimize_log_size
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 transaction_id;
	[WmiDataId(8), read] uint64 max_reserved_log_that_allows_flush_as_delta_bytes;
	[WmiDataId(9), read] uint64 log_used_bytes_when_max_reserved_log_threshold_was_reached;
	[WmiDataId(10), read] uint64 log_used_bytes;
	[WmiDataId(11), read] sint64 log_reserved_bytes;
	[WmiDataId(12), read] uint32 max_bad_quality_row_group_count_not_flushed_as_delta;
	[WmiDataId(13), read] uint32 bad_quality_row_group_count_not_flushed_as_delta;
	[WmiDataId(14), read, 
				XEMapId(102),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"DISABLED", 
					"ENABLED", 
					"TELEMETRY_ONLY" }
			] uint8 columnstore_log_minimization_feature_state;
};
		
[dynamic: ToInstance, Description("Rowgroup ids has been enumerated during scan."): Amended,
    Guid("{C7D21547-D12E-4DB0-83CC-C54BE1B7CC6C}"), locale("MS\\0x409"),
    DisplayName("columnstore_test_rowgroup_ids_snapshot_done"): Amended]
class XeSqlPkg_columnstore_test_rowgroup_ids_snapshot_done: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_test_rowgroup_ids_snapshot_done: XeSqlPkg_columnstore_test_rowgroup_ids_snapshot_done
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint64 hobt_id;
	[WmiDataId(8), read] sint8  is_in_index_reorganize;
};
		
[dynamic: ToInstance, Description("Skip removing tombstone rowgroup as active scaner might need it"): Amended,
    Guid("{49D12AA3-F92A-48AA-B468-A5896700F9B8}"), locale("MS\\0x409"),
    DisplayName("columnstore_skip_removing_tombtsone_rowgroup"): Amended]
class XeSqlPkg_columnstore_skip_removing_tombtsone_rowgroup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_skip_removing_tombtsone_rowgroup: XeSqlPkg_columnstore_skip_removing_tombtsone_rowgroup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint64 hobt_id;
	[WmiDataId(8), read] sint32 rowgroup_id;
};
		
[dynamic: ToInstance, Description("Compute the rowset type and log mode when opening a rowset"): Amended,
    Guid("{1D2268AE-5D18-4FF1-8EBC-405CD0DF8112}"), locale("MS\\0x409"),
    DisplayName("compute_rowset_type_and_log_mode"): Amended]
class XeSqlPkg_compute_rowset_type_and_log_mode: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_rowset_type_and_log_mode: XeSqlPkg_compute_rowset_type_and_log_mode
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] sint8  is_columnstore;
	[WmiDataId(7), read] sint8  is_bulkrowset;
	[WmiDataId(8), read, 
				XEMapId(201),
				ValueMap { 
					"0", 
					"2", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Bulk", 
					"ColumnsetAdapter", 
					"ColumnsetBulk", 
					"ColumnsetLobOrphan", 
					"Regular" }
			] uint32 rowset_type;
	[WmiDataId(9), read, 
				XEMapId(202),
				ValueMap { 
					"2", 
					"4", 
					"3", 
					"0", 
					"1" },
				Values { 
					"ALLOCATIONS_ONLY", 
					"BULK", 
					"FULL", 
					"INVALID", 
					"NONE" }
			] uint32 log_mode;
};
		
[dynamic: ToInstance, Description("Failed to grab a lock in the blob container accessor API"): Amended,
    Guid("{187b10ef-f1c2-4fa9-9fc0-8fc4b29bc21c}"), locale("MS\\0x409"),
    DisplayName("blob_container_accessor_lock_failure"): Amended]
class XeSqlPkg_blob_container_accessor_lock_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class blob_container_accessor_lock_failure: XeSqlPkg_blob_container_accessor_lock_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 db_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string point_of_interest;
};
		
[dynamic: ToInstance, Description("Failed to open the table in the blob container accessor API"): Amended,
    Guid("{fe7abda9-e0ad-4708-957c-e7874d037cce}"), locale("MS\\0x409"),
    DisplayName("blob_container_accessor_open_failure"): Amended]
class XeSqlPkg_blob_container_accessor_open_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class blob_container_accessor_open_failure: XeSqlPkg_blob_container_accessor_open_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 db_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string point_of_interest;
};
		
[dynamic: ToInstance, Description("Failed to load the table into memory in the blob container accessor API"): Amended,
    Guid("{6028d678-e928-42b7-9aba-d3e21d9be4a0}"), locale("MS\\0x409"),
    DisplayName("blob_container_accessor_refresh_failure"): Amended]
class XeSqlPkg_blob_container_accessor_refresh_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class blob_container_accessor_refresh_failure: XeSqlPkg_blob_container_accessor_refresh_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 db_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string point_of_interest;
};
		
[dynamic: ToInstance, Description("Failed to create the table in the blob container accessor API"): Amended,
    Guid("{cd558976-292e-45cb-bd56-bf3aac8423b0}"), locale("MS\\0x409"),
    DisplayName("blob_container_accessor_create_failure"): Amended]
class XeSqlPkg_blob_container_accessor_create_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class blob_container_accessor_create_failure: XeSqlPkg_blob_container_accessor_create_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 db_id;
};
		
[dynamic: ToInstance, Description("Read columnstore object from unaligned SBS Cache DB was successful."): Amended,
    Guid("{413DC28E-EC87-470E-9F48-6F4A6EB37E3A}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_read_from_unaligned_sbs_cache_success"): Amended]
class XeSqlPkg_columnstore_object_read_from_unaligned_sbs_cache_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_read_from_unaligned_sbs_cache_success: XeSqlPkg_columnstore_object_read_from_unaligned_sbs_cache_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint64 object_size;
	[WmiDataId(10), read] uint64 time_read_from_cache_in_us;
	[WmiDataId(11), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint8 object_type;
	[WmiDataId(12), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Read columnstore object from unaligned SBS Cache DB was unsuccessful."): Amended,
    Guid("{f7ec9060-9189-460a-80ca-5edd2b749ccc}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_read_from_unaligned_sbs_cache_fail"): Amended]
class XeSqlPkg_columnstore_object_read_from_unaligned_sbs_cache_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_read_from_unaligned_sbs_cache_fail: XeSqlPkg_columnstore_object_read_from_unaligned_sbs_cache_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint64 object_size;
	[WmiDataId(10), read] uint32 error_code;
	[WmiDataId(11), read] uint64 time_read_from_cache_in_us;
	[WmiDataId(12), read] sint8  is_readahead;
	[WmiDataId(13), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint8 object_type;
	[WmiDataId(14), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Columnstore object was successfully write to block blobs on index build."): Amended,
    Guid("{D1447B9E-CF54-48F4-800F-26FB6BCE3C81}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_write_to_block_blobs_success"): Amended]
class XeSqlPkg_columnstore_object_write_to_block_blobs_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_object_write_to_block_blobs_success: XeSqlPkg_columnstore_object_write_to_block_blobs_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint64 duration_ms;
	[WmiDataId(10), read] uint16 container_id;
	[WmiDataId(11), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint8 object_type;
	[WmiDataId(12), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Attempted to write a chunk of columnstore object to block blobs on index build and failed."): Amended,
    Guid("{273492E7-67C2-4415-B891-88DAB8D48CDE}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_write_to_block_blobs_fail"): Amended]
class XeSqlPkg_columnstore_object_write_to_block_blobs_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_write_to_block_blobs_fail: XeSqlPkg_columnstore_object_write_to_block_blobs_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint16 container_id;
	[WmiDataId(10), read] uint64 chunk_index;
	[WmiDataId(11), read] uint64 current_size;
	[WmiDataId(12), read] uint32 error_code;
	[WmiDataId(13), read] uint64 time_write_to_block_blobs_in_us;
	[WmiDataId(14), read] uint64 time_waiting_for_latch_in_us;
	[WmiDataId(15), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint8 object_type;
	[WmiDataId(16), read, 
				XEMapId(48),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"Write", 
					"Write Immediate", 
					"Write Eventual", 
					"Write Latch Acquire" }
			] uint8 write_error_type;
	[WmiDataId(17), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Statistics about recording Block Blob ID information"): Amended,
    Guid("{1c11dc67-8b8b-402d-be43-3368dc22d7ab}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_record_blob_id"): Amended]
class XeSqlPkg_columnstore_object_record_blob_id: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_record_blob_id: XeSqlPkg_columnstore_object_record_blob_id
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 duration_ms;
	[WmiDataId(7), read] uint64 size;
	[WmiDataId(8), read, Extension("Guid")] guid fork_id;
	[WmiDataId(9), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Statistics about recording Block Blob ID information"): Amended,
    Guid("{1c11dc67-8b8b-402d-be43-3368dc22d7ab}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_record_blob_id"): Amended]
class XeSqlPkg_columnstore_object_record_blob_id: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_object_record_blob_id: XeSqlPkg_columnstore_object_record_blob_id
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 duration_ms;
	[WmiDataId(7), read] uint64 size;
	[WmiDataId(8), read] sint64 xdes_id_hash;
	[WmiDataId(9), read, Extension("Guid")] guid fork_id;
	[WmiDataId(10), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Statistics about recording Block Blob ID information"): Amended,
    Guid("{1c11dc67-8b8b-402d-be43-3368dc22d7ab}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_record_blob_id"): Amended]
class XeSqlPkg_columnstore_object_record_blob_id: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_object_record_blob_id: XeSqlPkg_columnstore_object_record_blob_id
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 duration_ms;
	[WmiDataId(7), read] uint64 size;
	[WmiDataId(8), read] sint64 xdes_id_hash;
	[WmiDataId(9), read] sint8  is_rowgroupconsolidation;
	[WmiDataId(10), read, Extension("Guid")] guid fork_id;
	[WmiDataId(11), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Info about fast string search"): Amended,
    Guid("{1c11dc67-8b8b-402d-be43-3368dc22d7ac}"), locale("MS\\0x409"),
    DisplayName("column_store_fast_string_equals"): Amended]
class XeSqlPkg_column_store_fast_string_equals: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_fast_string_equals: XeSqlPkg_column_store_fast_string_equals
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 param_id;
};
		
[dynamic: ToInstance, Description("Info about row group elimination and qualification in columnstore scan."): Amended,
    Guid("{520052d6-3d98-4dd4-a22e-b168f51a1f78}"), locale("MS\\0x409"),
    DisplayName("column_store_qualified_rowgroup_stats"): Amended]
class XeSqlPkg_column_store_qualified_rowgroup_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_qualified_rowgroup_stats: XeSqlPkg_column_store_qualified_rowgroup_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 qualified_rowgroups_count;
	[WmiDataId(9), read] uint64 eliminated_rowgroups_count;
	[WmiDataId(10), read] uint64 approx_overlap;
	[WmiDataId(11), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string ordered_column_ids;
};
		
[dynamic: ToInstance, Description("Info about row group elimination and qualification in columnstore scan."): Amended,
    Guid("{520052d6-3d98-4dd4-a22e-b168f51a1f78}"), locale("MS\\0x409"),
    DisplayName("column_store_qualified_rowgroup_stats"): Amended]
class XeSqlPkg_column_store_qualified_rowgroup_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class column_store_qualified_rowgroup_stats: XeSqlPkg_column_store_qualified_rowgroup_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] uint64 index_id;
	[WmiDataId(8), read] uint64 qualified_rowgroups_count;
	[WmiDataId(9), read] uint64 eliminated_rowgroups_count;
	[WmiDataId(10), read] uint64 approx_overlap;
	[WmiDataId(11), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string ordered_column_ids;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string qualified_rowgroup_ids;
};
		
[dynamic: ToInstance, Description("Statistics about state transitions for tiered storage buffers"): Amended,
    Guid("{26286558-0aec-449c-8929-8c2324424877}"), locale("MS\\0x409"),
    DisplayName("tiered_storage_buffer_state_transition_stats"): Amended]
class XeSqlPkg_tiered_storage_buffer_state_transition_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tiered_storage_buffer_state_transition_stats: XeSqlPkg_tiered_storage_buffer_state_transition_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(124),
				ValueMap { 
					"1", 
					"19", 
					"0", 
					"20", 
					"4", 
					"6", 
					"8", 
					"7", 
					"2", 
					"10", 
					"17", 
					"9", 
					"3", 
					"5", 
					"11", 
					"14", 
					"15", 
					"13", 
					"12", 
					"16", 
					"18" },
				Values { 
					"TSRB_Allocated", 
					"TSRB_Complete", 
					"TSRB_Constructed", 
					"TSRB_Error", 
					"TSRB_NotInSBS", 
					"TSRB_OpenBlockBlob", 
					"TSRB_ReadAheadBlockBlob", 
					"TSRB_ReadAheadRemoteBlob", 
					"TSRB_ReadAheadSBS", 
					"TSRB_ReadBlockBlob", 
					"TSRB_ReadComplete", 
					"TSRB_ReadRemoteBlob", 
					"TSRB_ReadSBS", 
					"TSRB_SkipSBS", 
					"TSRB_WriteToBlockBlob", 
					"TSRB_WriteToBlockBlobCommit", 
					"TSRB_WriteToBlockBlobComplete", 
					"TSRB_WriteToBlockBlobFlush", 
					"TSRB_WriteToBlockBlobInProgress", 
					"TSRB_WriteToSBS", 
					"TSRB_WriteToSBSComplete" }
			] uint8 prev_state;
	[WmiDataId(6), read, 
				XEMapId(124),
				ValueMap { 
					"1", 
					"19", 
					"0", 
					"20", 
					"4", 
					"6", 
					"8", 
					"7", 
					"2", 
					"10", 
					"17", 
					"9", 
					"3", 
					"5", 
					"11", 
					"14", 
					"15", 
					"13", 
					"12", 
					"16", 
					"18" },
				Values { 
					"TSRB_Allocated", 
					"TSRB_Complete", 
					"TSRB_Constructed", 
					"TSRB_Error", 
					"TSRB_NotInSBS", 
					"TSRB_OpenBlockBlob", 
					"TSRB_ReadAheadBlockBlob", 
					"TSRB_ReadAheadRemoteBlob", 
					"TSRB_ReadAheadSBS", 
					"TSRB_ReadBlockBlob", 
					"TSRB_ReadComplete", 
					"TSRB_ReadRemoteBlob", 
					"TSRB_ReadSBS", 
					"TSRB_SkipSBS", 
					"TSRB_WriteToBlockBlob", 
					"TSRB_WriteToBlockBlobCommit", 
					"TSRB_WriteToBlockBlobComplete", 
					"TSRB_WriteToBlockBlobFlush", 
					"TSRB_WriteToBlockBlobInProgress", 
					"TSRB_WriteToSBS", 
					"TSRB_WriteToSBSComplete" }
			] uint8 next_state;
	[WmiDataId(7), read] uint64 duration_ms;
};
		
[dynamic: ToInstance, Description("Statistics about assigning Block Blob ID information"): Amended,
    Guid("{fea25195-783b-4fca-8d61-c526f681dc00}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_assign_blob_id"): Amended]
class XeSqlPkg_columnstore_object_assign_blob_id: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_assign_blob_id: XeSqlPkg_columnstore_object_assign_blob_id
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint64 epoch;
	[WmiDataId(7), read] uint64 container_id;
	[WmiDataId(8), read, Extension("Guid")] guid fork_id;
	[WmiDataId(9), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Statistics about assigning Block Blob ID information"): Amended,
    Guid("{fea25195-783b-4fca-8d61-c526f681dc00}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_assign_blob_id"): Amended]
class XeSqlPkg_columnstore_object_assign_blob_id: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_object_assign_blob_id: XeSqlPkg_columnstore_object_assign_blob_id
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint64 epoch;
	[WmiDataId(7), read] uint64 container_id;
	[WmiDataId(8), read] sint64 xdes_id_hash;
	[WmiDataId(9), read, Extension("Guid")] guid fork_id;
	[WmiDataId(10), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Statistics about assigning Block Blob ID information"): Amended,
    Guid("{fea25195-783b-4fca-8d61-c526f681dc00}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_assign_blob_id"): Amended]
class XeSqlPkg_columnstore_object_assign_blob_id: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_object_assign_blob_id: XeSqlPkg_columnstore_object_assign_blob_id
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint64 epoch;
	[WmiDataId(7), read] uint64 container_id;
	[WmiDataId(8), read] sint64 xdes_id_hash;
	[WmiDataId(9), read] sint8  is_rowgroupconsolidation;
	[WmiDataId(10), read, Extension("Guid")] guid fork_id;
	[WmiDataId(11), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Statistics about updating Block Blob ID size in the catalog DB"): Amended,
    Guid("{7fbea754-5a0c-42da-a14c-a8a3a9ff6a35}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_update_size_in_catalog"): Amended]
class XeSqlPkg_columnstore_object_update_size_in_catalog: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_update_size_in_catalog: XeSqlPkg_columnstore_object_update_size_in_catalog
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] uint64 object_size;
	[WmiDataId(7), read, Extension("Guid")] guid fork_id;
	[WmiDataId(8), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Emits an event describing a catalog communication failure"): Amended,
    Guid("{F6479B3D-E5C9-4711-9B39-3F81ADEF37FC}"), locale("MS\\0x409"),
    DisplayName("dw_catalog_communication_hub_failure"): Amended]
class XeSqlPkg_dw_catalog_communication_hub_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dw_catalog_communication_hub_failure: XeSqlPkg_dw_catalog_communication_hub_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_code;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("ColumnStore object was successfully read from Azure Block Blobs"): Amended,
    Guid("{76F1A0FE-4820-499F-9F66-0758D69D2A94}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_read_from_azure_block_blob_success"): Amended]
class XeSqlPkg_columnstore_object_read_from_azure_block_blob_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_read_from_azure_block_blob_success: XeSqlPkg_columnstore_object_read_from_azure_block_blob_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint64 object_size;
	[WmiDataId(10), read] uint64 duration_ms;
	[WmiDataId(11), read] uint64 container_id;
	[WmiDataId(12), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint8 object_type;
	[WmiDataId(13), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Write columnstore object to unaligned SBS Cache DB was unsuccessful."): Amended,
    Guid("{7FABA609-36BB-431D-A474-FE36FDBA9423}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_write_to_sbs_fail"): Amended]
class XeSqlPkg_columnstore_object_write_to_sbs_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_write_to_sbs_fail: XeSqlPkg_columnstore_object_write_to_sbs_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 object_size;
	[WmiDataId(6), read] uint64 time_read_from_cache_in_us;
	[WmiDataId(7), read] uint32 error_code;
	[WmiDataId(8), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Write columnstore object to unaligned SBS Cache DB was skipped."): Amended,
    Guid("{892C94A2-11FA-4829-83AC-F12F4A5E53CF}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_write_to_sbs_skip"): Amended]
class XeSqlPkg_columnstore_object_write_to_sbs_skip: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_write_to_sbs_skip: XeSqlPkg_columnstore_object_write_to_sbs_skip
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 object_size;
	[WmiDataId(6), read] uint32 error_code;
	[WmiDataId(7), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Write columnstore object to unaligned SBS Cache DB was successful."): Amended,
    Guid("{d97962b6-423e-42cb-a6f0-f49cdb278c68}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_write_to_sbs_success"): Amended]
class XeSqlPkg_columnstore_object_write_to_sbs_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_write_to_sbs_success: XeSqlPkg_columnstore_object_write_to_sbs_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 object_size;
	[WmiDataId(6), read] uint64 time_write_to_cache_in_us;
	[WmiDataId(7), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Read columnstore object from aligned Sbs Cache failed."): Amended,
    Guid("{A83E3E32-7A17-4F9B-BC7E-F9C206FEE1F4}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_read_from_aligned_sbs_cache_fail"): Amended]
class XeSqlPkg_columnstore_object_read_from_aligned_sbs_cache_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_read_from_aligned_sbs_cache_fail: XeSqlPkg_columnstore_object_read_from_aligned_sbs_cache_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint64 object_size;
	[WmiDataId(10), read] uint32 hresult;
	[WmiDataId(11), read] sint8  is_readahead;
	[WmiDataId(12), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint8 object_type;
	[WmiDataId(13), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Read columnstore object from aligned Sbs Cache failed."): Amended,
    Guid("{96DE3507-9995-471D-9A80-C1C58FD109F5}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_read_from_aligned_sbs_cache_fail"): Amended]
class XeSqlPkg_columnstore_object_read_from_aligned_sbs_cache_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_object_read_from_aligned_sbs_cache_fail: XeSqlPkg_columnstore_object_read_from_aligned_sbs_cache_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint64 object_size;
	[WmiDataId(10), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint8 object_type;
	[WmiDataId(11), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Read columnstore object from an Aligned Sbs Cache succeeded."): Amended,
    Guid("{7EBFB1F8-A275-4E6E-BFFE-A4BC0AF24B03}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_read_from_aligned_sbs_cache_success"): Amended]
class XeSqlPkg_columnstore_object_read_from_aligned_sbs_cache_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_read_from_aligned_sbs_cache_success: XeSqlPkg_columnstore_object_read_from_aligned_sbs_cache_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint64 object_size;
	[WmiDataId(10), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint8 object_type;
	[WmiDataId(11), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("We failed a state in the tiered storage state machine."): Amended,
    Guid("{E161CF36-F853-424F-8459-A5CAEC965D40}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_state_failure"): Amended]
class XeSqlPkg_columnstore_tiered_storage_state_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tiered_storage_state_failure: XeSqlPkg_columnstore_tiered_storage_state_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 hresult;
	[WmiDataId(6), read, 
				XEMapId(124),
				ValueMap { 
					"1", 
					"19", 
					"0", 
					"20", 
					"4", 
					"6", 
					"8", 
					"7", 
					"2", 
					"10", 
					"17", 
					"9", 
					"3", 
					"5", 
					"11", 
					"14", 
					"15", 
					"13", 
					"12", 
					"16", 
					"18" },
				Values { 
					"TSRB_Allocated", 
					"TSRB_Complete", 
					"TSRB_Constructed", 
					"TSRB_Error", 
					"TSRB_NotInSBS", 
					"TSRB_OpenBlockBlob", 
					"TSRB_ReadAheadBlockBlob", 
					"TSRB_ReadAheadRemoteBlob", 
					"TSRB_ReadAheadSBS", 
					"TSRB_ReadBlockBlob", 
					"TSRB_ReadComplete", 
					"TSRB_ReadRemoteBlob", 
					"TSRB_ReadSBS", 
					"TSRB_SkipSBS", 
					"TSRB_WriteToBlockBlob", 
					"TSRB_WriteToBlockBlobCommit", 
					"TSRB_WriteToBlockBlobComplete", 
					"TSRB_WriteToBlockBlobFlush", 
					"TSRB_WriteToBlockBlobInProgress", 
					"TSRB_WriteToSBS", 
					"TSRB_WriteToSBSComplete" }
			] uint8 failed_state;
};
		
[dynamic: ToInstance, Description("We failed a state in the tiered storage state machine."): Amended,
    Guid("{FF819349-BF5B-4B32-A3BF-4EE6E2DDD56A}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_state_failure"): Amended]
class XeSqlPkg_columnstore_tiered_storage_state_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tiered_storage_state_failure: XeSqlPkg_columnstore_tiered_storage_state_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 hresult;
	[WmiDataId(6), read, 
				XEMapId(124),
				ValueMap { 
					"1", 
					"19", 
					"0", 
					"20", 
					"4", 
					"6", 
					"8", 
					"7", 
					"2", 
					"10", 
					"17", 
					"9", 
					"3", 
					"5", 
					"11", 
					"14", 
					"15", 
					"13", 
					"12", 
					"16", 
					"18" },
				Values { 
					"TSRB_Allocated", 
					"TSRB_Complete", 
					"TSRB_Constructed", 
					"TSRB_Error", 
					"TSRB_NotInSBS", 
					"TSRB_OpenBlockBlob", 
					"TSRB_ReadAheadBlockBlob", 
					"TSRB_ReadAheadRemoteBlob", 
					"TSRB_ReadAheadSBS", 
					"TSRB_ReadBlockBlob", 
					"TSRB_ReadComplete", 
					"TSRB_ReadRemoteBlob", 
					"TSRB_ReadSBS", 
					"TSRB_SkipSBS", 
					"TSRB_WriteToBlockBlob", 
					"TSRB_WriteToBlockBlobCommit", 
					"TSRB_WriteToBlockBlobComplete", 
					"TSRB_WriteToBlockBlobFlush", 
					"TSRB_WriteToBlockBlobInProgress", 
					"TSRB_WriteToSBS", 
					"TSRB_WriteToSBSComplete" }
			] uint8 failed_state;
	[WmiDataId(7), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Failed to open the SBS Files Table access needed for the Pesto Scan hot path."): Amended,
    Guid("{03ECD897-AD7C-464A-877B-6828FFAF5C62}"), locale("MS\\0x409"),
    DisplayName("open_sbs_file_access_table_failure"): Amended]
class XeSqlPkg_open_sbs_file_access_table_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class open_sbs_file_access_table_failure: XeSqlPkg_open_sbs_file_access_table_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string db_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string cache_uri;
	[WmiDataId(9), read, Extension("Guid")] guid file_guid;
};
		
[dynamic: ToInstance, Description("Failed to open the SBS Files Table access needed for the Pesto Scan hot path."): Amended,
    Guid("{8B2F3417-A88E-4961-8734-7684BDD65175}"), locale("MS\\0x409"),
    DisplayName("open_sbs_file_access_table_failure"): Amended]
class XeSqlPkg_open_sbs_file_access_table_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class open_sbs_file_access_table_failure: XeSqlPkg_open_sbs_file_access_table_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint32 failed_attempts;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string db_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string cache_uri;
	[WmiDataId(10), read, Extension("Guid")] guid file_guid;
};
		
[dynamic: ToInstance, Description("Failed to open the SBS Files Table access needed for the Pesto Scan hot path."): Amended,
    Guid("{10D4A9A2-ABEA-4F3C-A846-413428B1CDA7}"), locale("MS\\0x409"),
    DisplayName("open_sbs_file_access_table_failure"): Amended]
class XeSqlPkg_open_sbs_file_access_table_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class open_sbs_file_access_table_failure: XeSqlPkg_open_sbs_file_access_table_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint32 failed_attempts;
	[WmiDataId(8), read] sint32 error_number;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string db_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string cache_uri;
	[WmiDataId(11), read, Extension("Guid")] guid file_guid;
};
		
[dynamic: ToInstance, Description("Successfully opened the SBS Files Table access needed for the Pesto Scan hot path."): Amended,
    Guid("{32E5F66D-2C3D-4024-8B53-E183ABACD43A}"), locale("MS\\0x409"),
    DisplayName("open_sbs_file_access_table_success"): Amended]
class XeSqlPkg_open_sbs_file_access_table_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class open_sbs_file_access_table_success: XeSqlPkg_open_sbs_file_access_table_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint32 failed_attempts;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string db_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string cache_uri;
	[WmiDataId(10), read, Extension("Guid")] guid file_guid;
};
		
[dynamic: ToInstance, Description("During HobtDrop failed to drop sbs cache file by handle value."): Amended,
    Guid("{28574DA1-7058-4E41-A7FA-729254A02CA7}"), locale("MS\\0x409"),
    DisplayName("hobt_drop_sbs_file_failure"): Amended]
class XeSqlPkg_hobt_drop_sbs_file_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_drop_sbs_file_failure: XeSqlPkg_hobt_drop_sbs_file_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 hobt_id;
	[WmiDataId(6), read] uint32 error_code;
};
		
[dynamic: ToInstance, Description("Failed to read columnstore object from XStore."): Amended,
    Guid("{7E811CE7-4EE6-4E01-B554-650E30143BFC}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_read_from_azure_block_blob_failure"): Amended]
class XeSqlPkg_columnstore_object_read_from_azure_block_blob_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_read_from_azure_block_blob_failure: XeSqlPkg_columnstore_object_read_from_azure_block_blob_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint64 object_size;
	[WmiDataId(10), read] uint64 container_id;
	[WmiDataId(11), read] uint32 error_code;
	[WmiDataId(12), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint8 object_type;
	[WmiDataId(13), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Columnstore Object on disk size differs from size stored in remote blob properties."): Amended,
    Guid("{94CC460F-1BD7-4D39-AEDA-608991024054}"), locale("MS\\0x409"),
    DisplayName("columnstore_object_xstore_size_mismatch"): Amended]
class XeSqlPkg_columnstore_object_xstore_size_mismatch: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_object_xstore_size_mismatch: XeSqlPkg_columnstore_object_xstore_size_mismatch
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 object_id;
	[WmiDataId(8), read] uint64 column_id;
	[WmiDataId(9), read] uint64 object_size;
	[WmiDataId(10), read] uint64 blob_property_size;
	[WmiDataId(11), read, 
				XEMapId(123),
				ValueMap { 
					"1", 
					"5", 
					"6", 
					"7", 
					"8", 
					"2", 
					"4", 
					"0" },
				Values { 
					"COLUMN_SEGMENT", 
					"COLUMN_SEGMENT_BULKINSERT_DICTIONARY", 
					"COLUMN_SEGMENT_DELETE_BITMAP", 
					"COLUMN_SEGMENT_EXTENDED_STRING_PAGE_RANGE", 
					"COLUMN_SEGMENT_GLOBAL_STRING_DICTIONARY", 
					"COLUMN_SEGMENT_PRIMARY_DICTIONARY", 
					"COLUMN_SEGMENT_SECONDARY_DICTIONARY", 
					"UNDEFINED" }
			] uint8 object_type;
	[WmiDataId(12), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Created and opened SBS Handle in hobt creation for DW Pesto."): Amended,
    Guid("{E10E6A6D-13E4-4E91-BA57-CF504595A952}"), locale("MS\\0x409"),
    DisplayName("pesto_create_sbs_fcb_handle"): Amended]
class XeSqlPkg_pesto_create_sbs_fcb_handle: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pesto_create_sbs_fcb_handle: XeSqlPkg_pesto_create_sbs_fcb_handle
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 hobt_id;
	[WmiDataId(6), read, Pointer] object  handle;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string db_name;
};
		
[dynamic: ToInstance, Description("Close SBS Handle during hobt drop, hobt eviction or CSBlobBPool shrink because there are no more references on the handle."): Amended,
    Guid("{4FBDD11A-06CE-48D7-81F3-26B19E46E262}"), locale("MS\\0x409"),
    DisplayName("pesto_close_sbs_fcb_handle"): Amended]
class XeSqlPkg_pesto_close_sbs_fcb_handle: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pesto_close_sbs_fcb_handle: XeSqlPkg_pesto_close_sbs_fcb_handle
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 hobt_id;
	[WmiDataId(6), read, Pointer] object  handle;
};
		
[dynamic: ToInstance, Description("Failed to update the sbs blob id with new GUID during the Pesto consoliate rowgroup copy blob "): Amended,
    Guid("{4F8C8BF5-92BA-4DBD-AA91-DACF2B1A4D84}"), locale("MS\\0x409"),
    DisplayName("pesto_rename_sbs_blob_fail"): Amended]
class XeSqlPkg_pesto_rename_sbs_blob_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pesto_rename_sbs_blob_fail: XeSqlPkg_pesto_rename_sbs_blob_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_code;
	[WmiDataId(6), read, Extension("Guid")] guid old_blob_id;
	[WmiDataId(7), read, Extension("Guid")] guid new_blob_id;
};
		
[dynamic: ToInstance, Description("Copy the existing Roco file to another blob, update columnstore metadata and cache entries with new blob id"): Amended,
    Guid("{2E1EDC94-E0A9-4825-AA8C-D64AA380D15E}"), locale("MS\\0x409"),
    DisplayName("rowgroup_consolidation_copy_blob"): Amended]
class XeSqlPkg_rowgroup_consolidation_copy_blob: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rowgroup_consolidation_copy_blob: XeSqlPkg_rowgroup_consolidation_copy_blob
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 target_container_id;
	[WmiDataId(9), read] uint64 source_container_id;
	[WmiDataId(10), read, Extension("Guid")] guid source_blob_id;
	[WmiDataId(11), read, Extension("Guid")] guid target_blob_id;
};
		
[dynamic: ToInstance, Description("Flush a consolidated rowgroup blob"): Amended,
    Guid("{15E68A86-9C40-45DD-A554-146646B06EBA}"), locale("MS\\0x409"),
    DisplayName("rowgroup_consolidation_create_and_write_rowgroup_blob"): Amended]
class XeSqlPkg_rowgroup_consolidation_create_and_write_rowgroup_blob: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rowgroup_consolidation_create_and_write_rowgroup_blob: XeSqlPkg_rowgroup_consolidation_create_and_write_rowgroup_blob
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 container_id;
	[WmiDataId(9), read] uint64 columnstore_rowgroup_data_size;
	[WmiDataId(10), read] uint64 metadata_section_size;
	[WmiDataId(11), read] uint64 total_blob_size;
	[WmiDataId(12), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Append columnstore data to existing rowgroup blob"): Amended,
    Guid("{E91D554A-F8E5-4435-A024-09C650DD4048}"), locale("MS\\0x409"),
    DisplayName("rowgroup_consolidation_append_blob"): Amended]
class XeSqlPkg_rowgroup_consolidation_append_blob: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rowgroup_consolidation_append_blob: XeSqlPkg_rowgroup_consolidation_append_blob
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 container_id;
	[WmiDataId(9), read] uint64 append_start_offset;
	[WmiDataId(10), read] uint64 append_columnstore_data_size;
	[WmiDataId(11), read] uint64 new_metadata_section_size;
	[WmiDataId(12), read] uint64 new_total_blob_size;
	[WmiDataId(13), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Attempted to flush a chunk of columnstore rowgroup data to block blob and failed."): Amended,
    Guid("{A610DB19-4646-4991-BBB7-B7E8F4A92DE9}"), locale("MS\\0x409"),
    DisplayName("rowgroup_consolidation_flush_rowgroup_blob_fail"): Amended]
class XeSqlPkg_rowgroup_consolidation_flush_rowgroup_blob_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rowgroup_consolidation_flush_rowgroup_blob_fail: XeSqlPkg_rowgroup_consolidation_flush_rowgroup_blob_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] sint8  is_append;
	[WmiDataId(9), read] uint16 container_id;
	[WmiDataId(10), read] uint64 io_start_offset;
	[WmiDataId(11), read] uint64 current_size;
	[WmiDataId(12), read] uint32 error_code;
	[WmiDataId(13), read] uint64 time_write_to_block_blobs_in_us;
	[WmiDataId(14), read] uint64 time_waiting_for_latch_in_us;
	[WmiDataId(15), read, 
				XEMapId(48),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"Write", 
					"Write Immediate", 
					"Write Eventual", 
					"Write Latch Acquire" }
			] uint8 write_error_type;
	[WmiDataId(16), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Occurs when start time of the record being inserted into history table is greater than its end time."): Amended,
    Guid("{589198F5-72D7-4BFD-A1D8-A13DEC7FD2C9}"), locale("MS\\0x409"),
    DisplayName("temporal_dml_transaction_fail"): Amended]
class XeSqlPkg_temporal_dml_transaction_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_dml_transaction_fail: XeSqlPkg_temporal_dml_transaction_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
};
		
[dynamic: ToInstance, Description("Occurs when temporal ddl data consistency check fails."): Amended,
    Guid("{589198F5-72D7-4BFD-A1D8-A13DEC7FD2CA}"), locale("MS\\0x409"),
    DisplayName("temporal_ddl_data_check_fail"): Amended]
class XeSqlPkg_temporal_ddl_data_check_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class temporal_ddl_data_check_fail: XeSqlPkg_temporal_ddl_data_check_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 error_number;
};
		
[dynamic: ToInstance, Description("Collects the statistic data for cache and Azure blob storage I/O performance test."): Amended,
    Guid("{EFAE4FC8-579F-43B9-8180-2E4F39ED83C4}"), locale("MS\\0x409"),
    DisplayName("cache_and_azure_blob_io_stats"): Amended]
class XeSqlPkg_cache_and_azure_blob_io_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cache_and_azure_blob_io_stats: XeSqlPkg_cache_and_azure_blob_io_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 hobt_size_in_bytes;
	[WmiDataId(8), read] uint64 number_of_segments;
	[WmiDataId(9), read] uint64 time_read_from_disk_in_us;
	[WmiDataId(10), read] uint64 time_write_to_cache_in_us;
	[WmiDataId(11), read] uint64 time_read_from_cache_in_us;
	[WmiDataId(12), read] uint64 time_create_block_blob_in_us;
	[WmiDataId(13), read] uint64 time_read_from_block_blob_in_us;
	[WmiDataId(14), read] uint64 time_write_to_block_blob_in_us;
	[WmiDataId(15), read] uint64 time_flush_to_block_blob_in_us;
	[WmiDataId(16), read] uint64 time_close_handle_block_blob_in_us;
};
		
[dynamic: ToInstance, Description("Emits statistics related to open/creating a Block Blob in XIO"): Amended,
    Guid("{E1E89487-2958-4C87-BA88-2D818B106056}"), locale("MS\\0x409"),
    DisplayName("columnstore_xio_blob_open_stats"): Amended]
class XeSqlPkg_columnstore_xio_blob_open_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_xio_blob_open_stats: XeSqlPkg_columnstore_xio_blob_open_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 open_time_in_us;
	[WmiDataId(6), read] uint32 error_code;
	[WmiDataId(7), read] uint16 retry_count;
	[WmiDataId(8), read, 
				XEMapId(68),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"create_new", 
					"create_always", 
					"open_existing", 
					"open_always", 
					"truncate_existing" }
			] uint8 creation_disposition;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string container_url;
	[WmiDataId(10), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Emits statistics related to open/creating a Block Blob in XIO"): Amended,
    Guid("{E1E89487-2958-4C87-BA88-2D818B106056}"), locale("MS\\0x409"),
    DisplayName("columnstore_xio_blob_open_stats"): Amended]
class XeSqlPkg_columnstore_xio_blob_open_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_xio_blob_open_stats: XeSqlPkg_columnstore_xio_blob_open_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 open_time_in_us;
	[WmiDataId(6), read] uint32 error_code;
	[WmiDataId(7), read] uint16 retry_count;
	[WmiDataId(8), read, 
				XEMapId(68),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"create_new", 
					"create_always", 
					"open_existing", 
					"open_always", 
					"truncate_existing" }
			] uint8 creation_disposition;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string container_url;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string blob_name;
};
		
[dynamic: ToInstance, Description("Failed to open XStore blob."): Amended,
    Guid("{0E353AAE-B0A8-463F-9A3E-C633F09E5DCD}"), locale("MS\\0x409"),
    DisplayName("columnstore_xio_blob_open_failure"): Amended]
class XeSqlPkg_columnstore_xio_blob_open_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_xio_blob_open_failure: XeSqlPkg_columnstore_xio_blob_open_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_code;
	[WmiDataId(6), read] uint16 retry_count;
	[WmiDataId(7), read] uint16 container_id;
	[WmiDataId(8), read, 
				XEMapId(68),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"create_new", 
					"create_always", 
					"open_existing", 
					"open_always", 
					"truncate_existing" }
			] uint8 creation_disposition;
	[WmiDataId(9), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Failed to open XStore blob."): Amended,
    Guid("{0E353AAE-B0A8-463F-9A3E-C633F09E5DCD}"), locale("MS\\0x409"),
    DisplayName("columnstore_xio_blob_open_failure"): Amended]
class XeSqlPkg_columnstore_xio_blob_open_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_xio_blob_open_failure: XeSqlPkg_columnstore_xio_blob_open_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_code;
	[WmiDataId(6), read] uint16 retry_count;
	[WmiDataId(7), read] uint16 container_id;
	[WmiDataId(8), read, 
				XEMapId(68),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"create_new", 
					"create_always", 
					"open_existing", 
					"open_always", 
					"truncate_existing" }
			] uint8 creation_disposition;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string blob_name;
};
		
[dynamic: ToInstance, Description("Statistics that track the cache hit ratio per DB when DW Optimized for compute is enabled"): Amended,
    Guid("{912E14BA-B391-4EAE-96EF-608C9BEB62E5}"), locale("MS\\0x409"),
    DisplayName("tiered_storage_cache_hit_miss_stats"): Amended]
class XeSqlPkg_tiered_storage_cache_hit_miss_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tiered_storage_cache_hit_miss_stats: XeSqlPkg_tiered_storage_cache_hit_miss_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 logical_database_id;
	[WmiDataId(6), read] uint64 cache_hits;
	[WmiDataId(7), read] uint64 cache_read_in_kb;
	[WmiDataId(8), read] uint64 remote_hits;
	[WmiDataId(9), read] uint64 remote_read_in_kb;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 collection_start_time;
};
		
[dynamic: ToInstance, Description("Statistics that track the cache hit ratio per DB when DW Optimized for compute is enabled"): Amended,
    Guid("{163079A6-A66B-468E-B5C5-4A3E750802E1}"), locale("MS\\0x409"),
    DisplayName("tiered_storage_cache_hit_miss_stats"): Amended]
class XeSqlPkg_tiered_storage_cache_hit_miss_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class tiered_storage_cache_hit_miss_stats: XeSqlPkg_tiered_storage_cache_hit_miss_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 distribution_id;
	[WmiDataId(6), read] uint16 logical_database_id;
	[WmiDataId(7), read] uint64 cache_hits;
	[WmiDataId(8), read] uint64 cache_read_in_kb;
	[WmiDataId(9), read] uint64 remote_hits;
	[WmiDataId(10), read] uint64 remote_read_in_kb;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 collection_start_time;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string physical_database_name;
};
		
[dynamic: ToInstance, Description("Occurs when migration columnstore object data to Azure block blob storage starts."): Amended,
    Guid("{15A450DB-9E4A-414F-A4E6-CA6D409CF6B5}"), locale("MS\\0x409"),
    DisplayName("columnstore_migration_to_block_blob_started"): Amended]
class XeSqlPkg_columnstore_migration_to_block_blob_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_migration_to_block_blob_started: XeSqlPkg_columnstore_migration_to_block_blob_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Occurs when migration columnstore object data to Azure block blob storage finishes."): Amended,
    Guid("{1279B4CE-7E58-4D11-9605-412BFCB2A3E8}"), locale("MS\\0x409"),
    DisplayName("columnstore_migration_to_block_blob_finished"): Amended]
class XeSqlPkg_columnstore_migration_to_block_blob_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_migration_to_block_blob_finished: XeSqlPkg_columnstore_migration_to_block_blob_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Columnstore object data migration debug trace"): Amended,
    Guid("{96E539AA-4B26-4173-A480-D704D0FB985D}"), locale("MS\\0x409"),
    DisplayName("columnstore_migration_debug_trace"): Amended]
class XeSqlPkg_columnstore_migration_debug_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_migration_debug_trace: XeSqlPkg_columnstore_migration_debug_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage tde scan debug trace"): Amended,
    Guid("{BC0638EB-55A8-4FB5-847D-BA94C279D9E4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_trace_print"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_trace_print: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tiered_storage_scanner_trace_print: XeSqlPkg_columnstore_tiered_storage_scanner_trace_print
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] uint16 db_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint32 column_id;
	[WmiDataId(9), read] uint32 segment_id;
	[WmiDataId(10), read] uint32 object_type;
	[WmiDataId(11), read] uint16 container_id;
	[WmiDataId(12), read, Extension("Variant")] object blob_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string function;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage tde scan debug trace"): Amended,
    Guid("{BC0638EB-55A8-4FB5-847D-BA94C279D9E4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_trace_print"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_trace_print: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tiered_storage_scanner_trace_print: XeSqlPkg_columnstore_tiered_storage_scanner_trace_print
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read] uint32 segment_id;
	[WmiDataId(9), read] uint32 object_type;
	[WmiDataId(10), read] uint16 container_id;
	[WmiDataId(11), read, Extension("Variant")] object blob_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string function;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string dbName;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner start a segment."): Amended,
    Guid("{2C0E1A9F-56A8-49C8-B974-75B88CF59DF0}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_start_segment"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_start_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tiered_storage_scanner_start_segment: XeSqlPkg_columnstore_tiered_storage_scanner_start_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] uint16 db_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint32 column_id;
	[WmiDataId(9), read] uint32 segment_id;
	[WmiDataId(10), read] uint32 object_type;
	[WmiDataId(11), read] uint16 container_id;
	[WmiDataId(12), read, Extension("Variant")] object blob_id;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner start a segment."): Amended,
    Guid("{2C0E1A9F-56A8-49C8-B974-75B88CF59DF0}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_start_segment"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_start_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tiered_storage_scanner_start_segment: XeSqlPkg_columnstore_tiered_storage_scanner_start_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read] uint32 segment_id;
	[WmiDataId(9), read] uint32 object_type;
	[WmiDataId(10), read] uint16 container_id;
	[WmiDataId(11), read, Extension("Variant")] object blob_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string dbName;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner finishes a segment."): Amended,
    Guid("{0C1B1FFF-A1DD-4E54-9548-61FA2205DE76}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_end_segment"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_end_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tiered_storage_scanner_end_segment: XeSqlPkg_columnstore_tiered_storage_scanner_end_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] uint16 db_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint32 column_id;
	[WmiDataId(9), read] uint32 segment_id;
	[WmiDataId(10), read] uint32 object_type;
	[WmiDataId(11), read] uint16 container_id;
	[WmiDataId(12), read, Extension("Variant")] object blob_id;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner finishes a segment."): Amended,
    Guid("{0C1B1FFF-A1DD-4E54-9548-61FA2205DE76}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_end_segment"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_end_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tiered_storage_scanner_end_segment: XeSqlPkg_columnstore_tiered_storage_scanner_end_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read] uint32 segment_id;
	[WmiDataId(9), read] uint32 object_type;
	[WmiDataId(10), read] uint16 container_id;
	[WmiDataId(11), read, Extension("Variant")] object blob_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string dbName;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner start a rowgroup consolidation."): Amended,
    Guid("{795AFB7A-66CE-4436-8F49-AD873695C756}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_start_rowgroup_consolidation"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_start_rowgroup_consolidation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tiered_storage_scanner_start_rowgroup_consolidation: XeSqlPkg_columnstore_tiered_storage_scanner_start_rowgroup_consolidation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint32 rowgroup_id;
	[WmiDataId(8), read] uint32 object_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string dbName;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner ends a rowgroup consolidation."): Amended,
    Guid("{3988AF52-09EC-46D9-BAEC-820AB7F6A55E}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_end_rowgroup_consolidation"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_end_rowgroup_consolidation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tiered_storage_scanner_end_rowgroup_consolidation: XeSqlPkg_columnstore_tiered_storage_scanner_end_rowgroup_consolidation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint32 rowgroup_id;
	[WmiDataId(8), read] uint32 object_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string dbName;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage migration task finishes."): Amended,
    Guid("{16AAFB7A-E167-4359-A9E6-A44F6980CE37}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_migration_task_failed"): Amended]
class XeSqlPkg_columnstore_tiered_storage_migration_task_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tiered_storage_migration_task_failed: XeSqlPkg_columnstore_tiered_storage_migration_task_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint32 retry_count;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage migration task finishes."): Amended,
    Guid("{16AAFB7A-E167-4359-A9E6-A44F6980CE37}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_migration_task_failed"): Amended]
class XeSqlPkg_columnstore_tiered_storage_migration_task_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tiered_storage_migration_task_failed: XeSqlPkg_columnstore_tiered_storage_migration_task_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 retry_count;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dbName;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner percent completed."): Amended,
    Guid("{E024AB8E-E7E3-4A7C-A749-6AB4A1FBE8A4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_percent_complete"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_percent_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tiered_storage_scanner_percent_complete: XeSqlPkg_columnstore_tiered_storage_scanner_percent_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] uint16 db_id;
	[WmiDataId(7), read] real64 percent_complete;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner percent completed."): Amended,
    Guid("{E024AB8E-E7E3-4A7C-A749-6AB4A1FBE8A4}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_percent_complete"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_percent_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tiered_storage_scanner_percent_complete: XeSqlPkg_columnstore_tiered_storage_scanner_percent_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] real64 percent_complete;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string dbName;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner start database."): Amended,
    Guid("{6F8D47D2-0F2B-4FE5-9BF6-016E75F84A0A}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_start_database"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_start_database: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tiered_storage_scanner_start_database: XeSqlPkg_columnstore_tiered_storage_scanner_start_database
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] uint16 db_id;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner start database."): Amended,
    Guid("{6F8D47D2-0F2B-4FE5-9BF6-016E75F84A0A}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_start_database"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_start_database: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tiered_storage_scanner_start_database: XeSqlPkg_columnstore_tiered_storage_scanner_start_database
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dbName;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner finishes database."): Amended,
    Guid("{4002F1AC-98ED-4696-969B-6BDB0D5DB878}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_end_database"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_end_database: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tiered_storage_scanner_end_database: XeSqlPkg_columnstore_tiered_storage_scanner_end_database
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read] uint16 db_id;
};
		
[dynamic: ToInstance, Description("Columnstore tiered storage scanner finishes database."): Amended,
    Guid("{4002F1AC-98ED-4696-969B-6BDB0D5DB878}"), locale("MS\\0x409"),
    DisplayName("columnstore_tiered_storage_scanner_end_database"): Amended]
class XeSqlPkg_columnstore_tiered_storage_scanner_end_database: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_tiered_storage_scanner_end_database: XeSqlPkg_columnstore_tiered_storage_scanner_end_database
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 scanner_type;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dbName;
};
		
[dynamic: ToInstance, Description("Remote CS Garbage Collection Failure XEvents"): Amended,
    Guid("{09eab14f-25d0-49f4-b01b-3ad4f79dabc3}"), locale("MS\\0x409"),
    DisplayName("remote_cs_garbage_collection_failure"): Amended]
class XeSqlPkg_remote_cs_garbage_collection_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class remote_cs_garbage_collection_failure: XeSqlPkg_remote_cs_garbage_collection_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(125),
				ValueMap { 
					"2", 
					"1", 
					"3", 
					"0" },
				Values { 
					"BATCH", 
					"DB", 
					"ROW", 
					"TASK" }
			] uint8 level;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dbName;
	[WmiDataId(7), read, Extension("Guid")] guid targetLogicalDbId;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Remote CS Garbage Collection Informational XEvents"): Amended,
    Guid("{21625926-d01c-40da-b046-b89c31bd2810}"), locale("MS\\0x409"),
    DisplayName("remote_cs_garbage_collection_information"): Amended]
class XeSqlPkg_remote_cs_garbage_collection_information: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_cs_garbage_collection_information: XeSqlPkg_remote_cs_garbage_collection_information
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(125),
				ValueMap { 
					"2", 
					"1", 
					"3", 
					"0" },
				Values { 
					"BATCH", 
					"DB", 
					"ROW", 
					"TASK" }
			] uint8 level;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dbName;
	[WmiDataId(7), read, Extension("Guid")] guid targetLogicalDbId;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Remote CS Garbage Collection Batch Completion XEvents"): Amended,
    Guid("{d463f7ad-509f-48c5-9f23-bf5c46e9c39d}"), locale("MS\\0x409"),
    DisplayName("remote_cs_garbage_collection_batch_completion"): Amended]
class XeSqlPkg_remote_cs_garbage_collection_batch_completion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class remote_cs_garbage_collection_batch_completion: XeSqlPkg_remote_cs_garbage_collection_batch_completion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 numberOfEntriesProcessed;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dbName;
};
		
[dynamic: ToInstance, Description("Remote CS Garbage Collection Task Start XEvents"): Amended,
    Guid("{25d9c3c5-9557-4f47-b40b-10437eaa3e3a}"), locale("MS\\0x409"),
    DisplayName("remote_cs_garbage_collection_task_start"): Amended]
class XeSqlPkg_remote_cs_garbage_collection_task_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class remote_cs_garbage_collection_task_start: XeSqlPkg_remote_cs_garbage_collection_task_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(125),
				ValueMap { 
					"2", 
					"1", 
					"3", 
					"0" },
				Values { 
					"BATCH", 
					"DB", 
					"ROW", 
					"TASK" }
			] uint8 level;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dbName;
	[WmiDataId(7), read, Extension("Guid")] guid targetLogicalDbId;
};
		
[dynamic: ToInstance, Description("Remote CS Garbage Collection Task End XEvents"): Amended,
    Guid("{0236299a-1b44-489c-a3cf-eb5f2addff0e}"), locale("MS\\0x409"),
    DisplayName("remote_cs_garbage_collection_task_end"): Amended]
class XeSqlPkg_remote_cs_garbage_collection_task_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class remote_cs_garbage_collection_task_end: XeSqlPkg_remote_cs_garbage_collection_task_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(125),
				ValueMap { 
					"2", 
					"1", 
					"3", 
					"0" },
				Values { 
					"BATCH", 
					"DB", 
					"ROW", 
					"TASK" }
			] uint8 level;
	[WmiDataId(6), read] uint64 durationInSeconds;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string dbName;
	[WmiDataId(8), read, Extension("Guid")] guid targetLogicalDbId;
};
		
[dynamic: ToInstance, Description("Remote CS Garbage Collection Drop From Catalog XEvents"): Amended,
    Guid("{6f03fa93-cf49-4ca3-a2f1-cab82c9db115}"), locale("MS\\0x409"),
    DisplayName("remote_cs_garbage_collection_drop_from_catalog"): Amended]
class XeSqlPkg_remote_cs_garbage_collection_drop_from_catalog: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_cs_garbage_collection_drop_from_catalog: XeSqlPkg_remote_cs_garbage_collection_drop_from_catalog
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string dbName;
	[WmiDataId(6), read, Extension("Guid")] guid fork_id;
	[WmiDataId(7), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("Remote CS Garbage Collection Drop From Catalog XEvents"): Amended,
    Guid("{6f03fa93-cf49-4ca3-a2f1-cab82c9db115}"), locale("MS\\0x409"),
    DisplayName("remote_cs_garbage_collection_drop_from_catalog"): Amended]
class XeSqlPkg_remote_cs_garbage_collection_drop_from_catalog: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class remote_cs_garbage_collection_drop_from_catalog: XeSqlPkg_remote_cs_garbage_collection_drop_from_catalog
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 lock_acquire_duration_in_ms;
	[WmiDataId(6), read] uint64 lock_hold_duration_in_ms;
	[WmiDataId(7), read] uint32 error_code;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string dbName;
	[WmiDataId(9), read, Extension("Guid")] guid fork_id;
	[WmiDataId(10), read, Extension("Guid")] guid blob_id;
};
		
[dynamic: ToInstance, Description("DW Backup App Lock Begin XEvents"): Amended,
    Guid("{9ba04819-932b-4edc-9d14-b0ca05d71090}"), locale("MS\\0x409"),
    DisplayName("dw_backup_app_lock_start"): Amended]
class XeSqlPkg_dw_backup_app_lock_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dw_backup_app_lock_start: XeSqlPkg_dw_backup_app_lock_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string operation_type;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string physical_database_name;
};
		
[dynamic: ToInstance, Description("DW Backup App Lock End XEvents"): Amended,
    Guid("{4afc092d-7c09-4f61-9cc2-99dc906e3649}"), locale("MS\\0x409"),
    DisplayName("dw_backup_app_lock_end"): Amended]
class XeSqlPkg_dw_backup_app_lock_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dw_backup_app_lock_end: XeSqlPkg_dw_backup_app_lock_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 lock_acquire_duration_in_ms;
	[WmiDataId(6), read] uint64 lock_hold_duration_in_ms;
	[WmiDataId(7), read] uint32 error_code;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string operation_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string physical_database_name;
};
		
[dynamic: ToInstance, Description("Delta Migration Failure XEvents"): Amended,
    Guid("{56930D28-588D-4C2F-A226-47D2A1794F5E}"), locale("MS\\0x409"),
    DisplayName("delta_migration_failure"): Amended]
class XeSqlPkg_delta_migration_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class delta_migration_failure: XeSqlPkg_delta_migration_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(126),
				ValueMap { 
					"2", 
					"1", 
					"3", 
					"0" },
				Values { 
					"BATCH", 
					"DB", 
					"ROW", 
					"TASK" }
			] uint8 level;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dbName;
	[WmiDataId(7), read, Extension("Guid")] guid targetLogicalDbId;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Delta Migration Informational XEvents"): Amended,
    Guid("{6F88A12A-64DC-4E0F-9B1F-5BEE610FD18A}"), locale("MS\\0x409"),
    DisplayName("delta_migration_information"): Amended]
class XeSqlPkg_delta_migration_information: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class delta_migration_information: XeSqlPkg_delta_migration_information
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(126),
				ValueMap { 
					"2", 
					"1", 
					"3", 
					"0" },
				Values { 
					"BATCH", 
					"DB", 
					"ROW", 
					"TASK" }
			] uint8 level;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dbName;
	[WmiDataId(7), read, Extension("Guid")] guid targetLogicalDbId;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Delta Migration Task Start XEvents"): Amended,
    Guid("{C0DE68B1-1E31-43CA-AC35-ACA2837208F9}"), locale("MS\\0x409"),
    DisplayName("delta_migration_task_start"): Amended]
class XeSqlPkg_delta_migration_task_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class delta_migration_task_start: XeSqlPkg_delta_migration_task_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(126),
				ValueMap { 
					"2", 
					"1", 
					"3", 
					"0" },
				Values { 
					"BATCH", 
					"DB", 
					"ROW", 
					"TASK" }
			] uint8 level;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dbName;
	[WmiDataId(7), read, Extension("Guid")] guid targetLogicalDbId;
};
		
[dynamic: ToInstance, Description("Delta Migration Task End XEvents"): Amended,
    Guid("{339F3EC8-239B-4436-B0CF-BAF61E94C454}"), locale("MS\\0x409"),
    DisplayName("delta_migration_task_end"): Amended]
class XeSqlPkg_delta_migration_task_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class delta_migration_task_end: XeSqlPkg_delta_migration_task_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(126),
				ValueMap { 
					"2", 
					"1", 
					"3", 
					"0" },
				Values { 
					"BATCH", 
					"DB", 
					"ROW", 
					"TASK" }
			] uint8 level;
	[WmiDataId(6), read] uint64 durationInSeconds;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string dbName;
	[WmiDataId(8), read, Extension("Guid")] guid targetLogicalDbId;
};
		
[dynamic: ToInstance, Description("Page is being looked up"): Amended,
    Guid("{e88032c5-2f9c-453a-8eb8-b7221bf8b056}"), locale("MS\\0x409"),
    DisplayName("page_reference_tracker"): Amended]
class XeSqlPkg_page_reference_tracker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_reference_tracker: XeSqlPkg_page_reference_tracker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 partition_id;
	[WmiDataId(6), read] uint32 caller_partition_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read] uint32 object;
	[WmiDataId(10), read] uint32 buffer_id;
	[WmiDataId(11), read, 
				XEMapId(231),
				BitMap { 
					"0", 
					"16", 
					"1048576", 
					"256", 
					"131072", 
					"262144", 
					"8192", 
					"2", 
					"64", 
					"268435456", 
					"128", 
					"134217728", 
					"536870912", 
					"65536", 
					"32768", 
					"8", 
					"4", 
					"2048", 
					"4194304", 
					"8388608", 
					"33554432", 
					"16384", 
					"67108864", 
					"2097152", 
					"524288", 
					"32", 
					"1", 
					"16777216", 
					"3221225472", 
					"4096", 
					"1024", 
					"512" },
				BitValues { 
					"BSTATS_NONE", 
					"AUDITED", 
					"CHECKWRITE", 
					"CHKGEN", 
					"COPYONWRITE", 
					"COPYWRITTEN", 
					"DBREMOVED", 
					"DIRTY", 
					"DONT_IGNORE", 
					"EAGER_L2", 
					"EMERG", 
					"FAST_PROMOTE", 
					"FLAG_FOR_DISCARD", 
					"FLUSHING", 
					"FORCE_FLUSH_OR_LOG", 
					"HASHED", 
					"IO", 
					"IOERR", 
					"L2BPOOL", 
					"L2DIRTY", 
					"L2EVACIO", 
					"LAZYIO", 
					"LOG_BUFWRITE", 
					"LOGFORMATFULL", 
					"MINLOGGED", 
					"ONFREELIST", 
					"ONLRU", 
					"PFPOOL", 
					"PROTECTION", 
					"PTD", 
					"READ", 
					"SIMULATED" }
			] uint32 status;
	[WmiDataId(12), read, 
				XEMapId(22),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Read", 
					"Write" }
			] uint8 RWmode;
	[WmiDataId(13), read, 
				XEMapId(94),
				ValueMap { 
					"6", 
					"0", 
					"1", 
					"3", 
					"5", 
					"2", 
					"4" },
				Values { 
					"CLASS_COUNT", 
					"DATA_PAGE", 
					"INDEX_PAGE", 
					"MAP_PAGE", 
					"OTHER_PAGE", 
					"QE_PAGE", 
					"TEXT_PAGE" }
			] uint32 class0;
	[WmiDataId(14), read, 
				XEMapId(23),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Memory", 
					"Disk" }
			] uint8 location;
};
		
[dynamic: ToInstance, Description("Page is being looked up"): Amended,
    Guid("{e88032c5-2f9c-453a-8eb8-b7221bf8b056}"), locale("MS\\0x409"),
    DisplayName("page_reference_tracker"): Amended]
class XeSqlPkg_page_reference_tracker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class page_reference_tracker: XeSqlPkg_page_reference_tracker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 partition_id;
	[WmiDataId(6), read] uint32 caller_partition_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read] uint64 allocation_unit_id;
	[WmiDataId(10), read] uint64 buffer_id;
	[WmiDataId(11), read, 
				XEMapId(231),
				BitMap { 
					"0", 
					"16", 
					"1048576", 
					"256", 
					"131072", 
					"262144", 
					"8192", 
					"2", 
					"64", 
					"268435456", 
					"128", 
					"134217728", 
					"536870912", 
					"65536", 
					"32768", 
					"8", 
					"4", 
					"2048", 
					"4194304", 
					"8388608", 
					"33554432", 
					"16384", 
					"67108864", 
					"2097152", 
					"524288", 
					"32", 
					"1", 
					"16777216", 
					"3221225472", 
					"4096", 
					"1024", 
					"512" },
				BitValues { 
					"BSTATS_NONE", 
					"AUDITED", 
					"CHECKWRITE", 
					"CHKGEN", 
					"COPYONWRITE", 
					"COPYWRITTEN", 
					"DBREMOVED", 
					"DIRTY", 
					"DONT_IGNORE", 
					"EAGER_L2", 
					"EMERG", 
					"FAST_PROMOTE", 
					"FLAG_FOR_DISCARD", 
					"FLUSHING", 
					"FORCE_FLUSH_OR_LOG", 
					"HASHED", 
					"IO", 
					"IOERR", 
					"L2BPOOL", 
					"L2DIRTY", 
					"L2EVACIO", 
					"LAZYIO", 
					"LOG_BUFWRITE", 
					"LOGFORMATFULL", 
					"MINLOGGED", 
					"ONFREELIST", 
					"ONLRU", 
					"PFPOOL", 
					"PROTECTION", 
					"PTD", 
					"READ", 
					"SIMULATED" }
			] uint32 status;
	[WmiDataId(12), read, 
				XEMapId(22),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Read", 
					"Write" }
			] uint8 access_mode;
	[WmiDataId(13), read, 
				XEMapId(94),
				ValueMap { 
					"6", 
					"0", 
					"1", 
					"3", 
					"5", 
					"2", 
					"4" },
				Values { 
					"CLASS_COUNT", 
					"DATA_PAGE", 
					"INDEX_PAGE", 
					"MAP_PAGE", 
					"OTHER_PAGE", 
					"QE_PAGE", 
					"TEXT_PAGE" }
			] uint32 class0;
	[WmiDataId(14), read, 
				XEMapId(23),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Memory", 
					"Disk" }
			] uint8 location;
};
		
[dynamic: ToInstance, Description("Writing a log block to the log cache"): Amended,
    Guid("{744500C6-F799-47EF-95BE-92E3B14CB162}"), locale("MS\\0x409"),
    DisplayName("log_cache_write_block"): Amended]
class XeSqlPkg_log_cache_write_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_cache_write_block: XeSqlPkg_log_cache_write_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Asynchronous log write start"): Amended,
    Guid("{79568cbb-e3a8-4135-9b31-38f0c4ff022d}"), locale("MS\\0x409"),
    DisplayName("log_flush_start"): Amended]
class XeSqlPkg_log_flush_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_flush_start: XeSqlPkg_log_flush_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint32 write_size;
	[WmiDataId(9), read] uint32 rows;
	[WmiDataId(10), read] uint32 pending_writes;
	[WmiDataId(11), read] uint32 pending_bytes;
};
		
[dynamic: ToInstance, Description("Asynchronous log write start"): Amended,
    Guid("{79568cbb-e3a8-4135-9b31-38f0c4ff022d}"), locale("MS\\0x409"),
    DisplayName("log_flush_start"): Amended]
class XeSqlPkg_log_flush_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class log_flush_start: XeSqlPkg_log_flush_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint32 write_size;
	[WmiDataId(9), read] uint32 rows;
	[WmiDataId(10), read] uint32 pending_writes;
	[WmiDataId(11), read] uint32 pending_bytes;
	[WmiDataId(12), read] uint64 start_timestamp;
};
		
[dynamic: ToInstance, Description("Asynchronous log write start"): Amended,
    Guid("{79568cbb-e3a8-4135-9b31-38f0c4ff022d}"), locale("MS\\0x409"),
    DisplayName("log_flush_start"): Amended]
class XeSqlPkg_log_flush_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class log_flush_start: XeSqlPkg_log_flush_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint32 write_size;
	[WmiDataId(9), read] uint32 rows;
	[WmiDataId(10), read] uint32 pending_writes;
	[WmiDataId(11), read] uint32 pending_bytes;
	[WmiDataId(12), read] uint64 start_timestamp;
	[WmiDataId(13), read] uint32 pending_buffers;
	[WmiDataId(14), read, 
				XEMapId(89),
				ValueMap { 
					"3", 
					"5", 
					"10", 
					"8", 
					"7", 
					"4", 
					"1", 
					"9", 
					"6", 
					"0", 
					"2" },
				Values { 
					"DelayedFlush", 
					"DifferentFile", 
					"HeaderUpdate", 
					"NewFile", 
					"NoFreeMessages", 
					"NoMemBlock", 
					"NoMoreBlocks", 
					"NoMoreContiguous", 
					"PreferredSizeReached", 
					"Standalone", 
					"TooManyOutstandingWrites" }
			] sint32 write_reason;
};
		
[dynamic: ToInstance, Description("Log write complete"): Amended,
    Guid("{3f0402ef-0a07-4803-b6da-68d58ec64cc1}"), locale("MS\\0x409"),
    DisplayName("log_flush_complete"): Amended]
class XeSqlPkg_log_flush_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_flush_complete: XeSqlPkg_log_flush_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint32 write_size;
	[WmiDataId(10), read] uint32 rows;
	[WmiDataId(11), read] uint32 pending_writes;
	[WmiDataId(12), read] uint32 pending_bytes;
};
		
[dynamic: ToInstance, Description("Log write complete"): Amended,
    Guid("{3f0402ef-0a07-4803-b6da-68d58ec64cc1}"), locale("MS\\0x409"),
    DisplayName("log_flush_complete"): Amended]
class XeSqlPkg_log_flush_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class log_flush_complete: XeSqlPkg_log_flush_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint32 write_size;
	[WmiDataId(10), read] uint32 rows;
	[WmiDataId(11), read] uint32 pending_writes;
	[WmiDataId(12), read] uint32 pending_bytes;
	[WmiDataId(13), read] uint64 start_timestamp;
};
		
[dynamic: ToInstance, Description("Log write complete"): Amended,
    Guid("{3f0402ef-0a07-4803-b6da-68d58ec64cc1}"), locale("MS\\0x409"),
    DisplayName("log_flush_complete"): Amended]
class XeSqlPkg_log_flush_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class log_flush_complete: XeSqlPkg_log_flush_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint32 write_size;
	[WmiDataId(10), read] uint32 rows;
	[WmiDataId(11), read] uint32 pending_writes;
	[WmiDataId(12), read] uint32 pending_bytes;
	[WmiDataId(13), read] uint64 start_timestamp;
	[WmiDataId(14), read] uint32 pending_buffers;
};
		
[dynamic: ToInstance, Description("Log write had to retry"): Amended,
    Guid("{a78246b7-1c7d-4b3f-ab7e-6445ff6bdc5c}"), locale("MS\\0x409"),
    DisplayName("log_flush_retry"): Amended]
class XeSqlPkg_log_flush_retry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_flush_retry: XeSqlPkg_log_flush_retry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint32 write_size;
	[WmiDataId(9), read] uint32 error;
};
		
[dynamic: ToInstance, Description("Target block to redo through set"): Amended,
    Guid("{3b626063-288f-4424-8d77-4466f93f4a14}"), locale("MS\\0x409"),
    DisplayName("redo_target_set"): Amended]
class XeSqlPkg_redo_target_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_target_set: XeSqlPkg_redo_target_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Redo stop point set"): Amended,
    Guid("{f4d5d354-f796-4165-87e1-06e9db6ceabc}"), locale("MS\\0x409"),
    DisplayName("redo_stop_set"): Amended]
class XeSqlPkg_redo_stop_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_stop_set: XeSqlPkg_redo_stop_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string stop_mark;
};
		
[dynamic: ToInstance, Description("Redo stop point clear"): Amended,
    Guid("{5e436c18-9e2c-4ab2-8742-19ff95394f3f}"), locale("MS\\0x409"),
    DisplayName("redo_stop_clear"): Amended]
class XeSqlPkg_redo_stop_clear: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_stop_clear: XeSqlPkg_redo_stop_clear
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Redo thread done with work"): Amended,
    Guid("{931cc3f8-c999-417b-9fb3-8b86c0d04a17}"), locale("MS\\0x409"),
    DisplayName("redo_caught_up"): Amended]
class XeSqlPkg_redo_caught_up: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_caught_up: XeSqlPkg_redo_caught_up
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Redo thread has entered to poll for redo work"): Amended,
    Guid("{db64ce29-9679-4e4e-ab6b-6db65c687da2}"), locale("MS\\0x409"),
    DisplayName("redo_worker_entry"): Amended]
class XeSqlPkg_redo_worker_entry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_worker_entry: XeSqlPkg_redo_worker_entry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Redo thread is leaving"): Amended,
    Guid("{299a9f2c-6273-437d-832f-6726f215ee6a}"), locale("MS\\0x409"),
    DisplayName("redo_worker_exit"): Amended]
class XeSqlPkg_redo_worker_exit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_worker_exit: XeSqlPkg_redo_worker_exit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Redo on a log record"): Amended,
    Guid("{8b4dc6aa-c655-4f19-a699-0613709c31f4}"), locale("MS\\0x409"),
    DisplayName("redo_single_record"): Amended]
class XeSqlPkg_redo_single_record: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_single_record: XeSqlPkg_redo_single_record
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint32 slot_id;
	[WmiDataId(8), read] uint32 log_op_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string log_op_name;
};
		
[dynamic: ToInstance, Description("Failpoint on a log record during creation."): Amended,
    Guid("{eb5a2cc0-5895-4f6d-b2d1-dc19bf88bd73}"), locale("MS\\0x409"),
    DisplayName("failpoint_log_record"): Amended]
class XeSqlPkg_failpoint_log_record: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failpoint_log_record: XeSqlPkg_failpoint_log_record
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 log_record_type;
	[WmiDataId(7), read, Pointer] object  should_fail;
};
		
[dynamic: ToInstance, Description("Failpoint on a log record during redo."): Amended,
    Guid("{0a746392-691a-416c-8292-59c7741d9d9d}"), locale("MS\\0x409"),
    DisplayName("failpoint_log_redo_record"): Amended]
class XeSqlPkg_failpoint_log_redo_record: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failpoint_log_redo_record: XeSqlPkg_failpoint_log_redo_record
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 log_record_type;
	[WmiDataId(7), read, Pointer] object  should_fail;
};
		
[dynamic: ToInstance, Description("Failpoint on blocksize during backup with mirror."): Amended,
    Guid("{5a49326f-bf27-46d3-87e5-d7e27493fc3a}"), locale("MS\\0x409"),
    DisplayName("failpoint_backup_mirror_blocksize"): Amended]
class XeSqlPkg_failpoint_backup_mirror_blocksize: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failpoint_backup_mirror_blocksize: XeSqlPkg_failpoint_backup_mirror_blocksize
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  should_fail;
};
		
[dynamic: ToInstance, Description("Failpoint on partial quorum lsn cleared."): Amended,
    Guid("{78c15ce8-5b1c-4f44-b992-ac8cebb14bdd}"), locale("MS\\0x409"),
    DisplayName("failpoint_clear_partial_quorum_lsn"): Amended]
class XeSqlPkg_failpoint_clear_partial_quorum_lsn: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failpoint_clear_partial_quorum_lsn: XeSqlPkg_failpoint_clear_partial_quorum_lsn
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Allow customizable failures in the redopass function"): Amended,
    Guid("{9a0f8cd1-e7bd-47f2-959a-b1342eff885a}"), locale("MS\\0x409"),
    DisplayName("recovery_redo_failpoint"): Amended]
class XeSqlPkg_recovery_redo_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_redo_failpoint: XeSqlPkg_recovery_redo_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Allow customizable failures during RbIo transition to logging"): Amended,
    Guid("{fc4722d6-2677-4b0e-9531-4d593d3a0c3b}"), locale("MS\\0x409"),
    DisplayName("recovery_transition_logging_failpoint"): Amended]
class XeSqlPkg_recovery_transition_logging_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_transition_logging_failpoint: XeSqlPkg_recovery_transition_logging_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Allow customizable failures during complete recovery"): Amended,
    Guid("{a4812cb8-a1dc-4416-bf90-92b04823caed}"), locale("MS\\0x409"),
    DisplayName("complete_recovery_failpoint"): Amended]
class XeSqlPkg_complete_recovery_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class complete_recovery_failpoint: XeSqlPkg_complete_recovery_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Log Header has been changed after redoing it."): Amended,
    Guid("{4E0910DF-40E5-44AD-A0B4-64B7A227603D}"), locale("MS\\0x409"),
    DisplayName("log_header_corruption_during_redo"): Amended]
class XeSqlPkg_log_header_corruption_during_redo: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_header_corruption_during_redo: XeSqlPkg_log_header_corruption_during_redo
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint32 slot_id;
	[WmiDataId(8), read] uint32 log_op_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string log_op_name;
};
		
[dynamic: ToInstance, Description("Allow customizable failures in double flush optimization with minimal logging"): Amended,
    Guid("{ca54758c-1538-4fbc-bfcd-eae664b76a3f}"), locale("MS\\0x409"),
    DisplayName("minlog_doubleflush_failpoint"): Amended]
class XeSqlPkg_minlog_doubleflush_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class minlog_doubleflush_failpoint: XeSqlPkg_minlog_doubleflush_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 fail_location;
};
		
[dynamic: ToInstance, Description("Generate a log record"): Amended,
    Guid("{97f8878f-4674-46d6-b9c3-57176b62453a}"), locale("MS\\0x409"),
    DisplayName("log_single_record"): Amended]
class XeSqlPkg_log_single_record: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_single_record: XeSqlPkg_log_single_record
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint32 slot_id;
	[WmiDataId(8), read] sint32 used_size;
	[WmiDataId(9), read] sint64 reservation_size;
	[WmiDataId(10), read] uint32 log_op_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string log_op_name;
};
		
[dynamic: ToInstance, Description("Fires before reserving space for a log record"): Amended,
    Guid("{b7743dc0-d9aa-42ee-91d4-d36c9926e45a}"), locale("MS\\0x409"),
    DisplayName("reserve_log_space"): Amended]
class XeSqlPkg_reserve_log_space: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class reserve_log_space: XeSqlPkg_reserve_log_space
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 reserve_size;
	[WmiDataId(7), read] uint32 log_size;
	[WmiDataId(8), read] uint64 frag_count;
	[WmiDataId(9), read, Pointer] object  error_code_pointer;
};
		
[dynamic: ToInstance, Description("Aggregated statistics about log production, emitted periodically."): Amended,
    Guid("{9b49192a-6f4c-48c5-90fc-cdcfba7417b2}"), locale("MS\\0x409"),
    DisplayName("log_production_stats"): Amended]
class XeSqlPkg_log_production_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_production_stats: XeSqlPkg_log_production_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 period_ms;
	[WmiDataId(7), read] uint64 log_bytes_generated;
	[WmiDataId(8), read] uint64 log_bytes_accepted;
	[WmiDataId(9), read] uint64 log_bytes_redone;
	[WmiDataId(10), read] uint64 log_bytes_redo_time_ms;
	[WmiDataId(11), read] uint64 log_bytes_flushed;
	[WmiDataId(12), read] uint64 log_writes_completed;
	[WmiDataId(13), read] uint64 log_writes_issued;
	[WmiDataId(14), read] uint64 log_generation_stalls;
	[WmiDataId(15), read] uint64 log_generation_stall_time_ms;
	[WmiDataId(16), read] uint64 log_flush_waits;
	[WmiDataId(17), read] uint64 log_flush_wait_time_ms;
	[WmiDataId(18), read] uint64 log_rg_waits;
	[WmiDataId(19), read] uint64 log_rg_wait_time_ms;
	[WmiDataId(20), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(21), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Aggregated statistics about log production, emitted periodically."): Amended,
    Guid("{0b985128-d8aa-472d-9255-453837f44f5d}"), locale("MS\\0x409"),
    DisplayName("log_production_stats_mdm"): Amended]
class XeSqlPkg_log_production_stats_mdm: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_production_stats_mdm: XeSqlPkg_log_production_stats_mdm
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_bytes_generated;
	[WmiDataId(6), read] uint64 log_bytes_accepted;
	[WmiDataId(7), read] uint64 log_bytes_redone;
	[WmiDataId(8), read] uint64 log_bytes_redo_time_ms;
	[WmiDataId(9), read] uint64 log_bytes_flushed;
	[WmiDataId(10), read] uint64 log_writes_completed;
	[WmiDataId(11), read] uint64 log_writes_issued;
	[WmiDataId(12), read] uint64 log_generation_stalls;
	[WmiDataId(13), read] uint64 log_generation_stall_time_ms;
	[WmiDataId(14), read] uint64 log_flush_waits;
	[WmiDataId(15), read] uint64 log_flush_wait_time_ms;
	[WmiDataId(16), read] uint64 log_rg_waits;
	[WmiDataId(17), read] uint64 log_rg_wait_time_ms;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string ServerResourceId;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string ElasticPoolResourceId;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string DatabaseName;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Issues a write request to disk."): Amended,
    Guid("{cd7f27aa-2ce4-4b16-bf62-22a0a8fa08b1}"), locale("MS\\0x409"),
    DisplayName("disk_write_async"): Amended]
class XeSqlPkg_disk_write_async: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class disk_write_async: XeSqlPkg_disk_write_async
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  error_code_pointer;
	[WmiDataId(6), read] sint8  is_log_record;
	[WmiDataId(7), read, Pointer] object  file_handle;
	[WmiDataId(8), read] uint64 offset;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read] uint32 file_id;
	[WmiDataId(11), read] uint32 size;
};
		
[dynamic: ToInstance, Description("Inject a blob request failure during a request."): Amended,
    Guid("{cc669d4e-9c0f-42b8-bf6e-a5fe7491ac9b}"), locale("MS\\0x409"),
    DisplayName("xio_failure_injection"): Amended]
class XeSqlPkg_xio_failure_injection: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xio_failure_injection: XeSqlPkg_xio_failure_injection
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  error_code_pointer;
	[WmiDataId(6), read, 
				XEMapId(104),
				ValueMap { 
					"20", 
					"14", 
					"13", 
					"6", 
					"30", 
					"7", 
					"26", 
					"16", 
					"27", 
					"10", 
					"3", 
					"24", 
					"29", 
					"8", 
					"17", 
					"25", 
					"21", 
					"31", 
					"18", 
					"15", 
					"0", 
					"28", 
					"11", 
					"22", 
					"9", 
					"4", 
					"19", 
					"12", 
					"23", 
					"1", 
					"2", 
					"5" },
				Values { 
					"XIOTypeCloseHandles", 
					"XIOTypeCopyBlob", 
					"XIOTypeCopySnapshot", 
					"XIOTypeCreateFile", 
					"XIOTypeDeleteDirectory", 
					"XIOTypeDeleteFile", 
					"XIOTypeFileSplit", 
					"XIOTypeGetBlockList", 
					"XIOTypeGetContainerProperties", 
					"XIOTypeGetPageRange", 
					"XIOTypeGetProperties", 
					"XIOTypeGetShareStats", 
					"XIOTypeGetStorageProperties", 
					"XIOTypeLease", 
					"XIOTypeListBlobs", 
					"XIOTypeListHandles", 
					"XIOTypeListStatus", 
					"XIOTypeMax", 
					"XIOTypePutBlob", 
					"XIOTypePutBlockList", 
					"XIOTypeRead", 
					"XIOTypeSetAccountProperties", 
					"XIOTypeSetMetadata", 
					"XIOTypeSetMetadataNonBlocking", 
					"XIOTypeSetSeqNum", 
					"XIOTypeSetSize", 
					"XIOTypeSetStorageBlobTier", 
					"XIOTypeSnapshot", 
					"XIOTypeUpdateShareQuota", 
					"XIOTypeWrite", 
					"XIOTypeWriteMultiple", 
					"XIOTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(7), read, 
				XEMapId(112),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"BlobAccessRetryPolicy_Default", 
					"BlobAccessRetryPolicy_NoRetryOnThrottling" }
			] uint8 xio_retry_policy;
	[WmiDataId(8), read] sint32 retry_count;
	[WmiDataId(9), read, 
				XEMapId(108),
				ValueMap { 
					"16", 
					"13", 
					"9", 
					"15", 
					"10", 
					"12", 
					"11", 
					"14", 
					"0", 
					"8", 
					"7", 
					"4", 
					"2", 
					"3", 
					"5", 
					"1", 
					"6" },
				Values { 
					"NoRetry_Cancelled", 
					"NoRetry_ConnectionError", 
					"NoRetry_ExceededMaxRetries", 
					"NoRetry_ExplicitlyCancelled", 
					"NoRetry_InfiniteLeaseLost", 
					"NoRetry_NonRetriableHTTPError", 
					"NoRetry_NonRetriableStorageError", 
					"NoRetry_RetryPolicyNoRetryOnThrottling", 
					"NotDetermined", 
					"Retry_Default", 
					"Retry_DNSError", 
					"Retry_InvalidHttpAndAzureErrorCode", 
					"Retry_LMTConditionNotMet", 
					"Retry_PreconditionFailed", 
					"Retry_RetriableSSLError", 
					"Retry_RetriableStorageError", 
					"Retry_ThrottlingError" }
			] uint8 retry_reason;
	[WmiDataId(10), read, Extension("Guid")] guid request_id;
	[WmiDataId(11), read, StringTermination("NullTerminated")] string api_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string correlation_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Fires after IO flush for log records is complete."): Amended,
    Guid("{1bde4944-a679-4d4f-a2e7-d31f0e67ec69}"), locale("MS\\0x409"),
    DisplayName("log_io_complete"): Amended]
class XeSqlPkg_log_io_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_io_complete: XeSqlPkg_log_io_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read] sint8  is_read;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read, Pointer] object  file_handle;
	[WmiDataId(9), read] uint64 offset;
	[WmiDataId(10), read] uint32 database_id;
	[WmiDataId(11), read] uint16 file_id;
	[WmiDataId(12), read] uint16 filegroup_id;
	[WmiDataId(13), read] uint64 size;
	[WmiDataId(14), read, Pointer] object  error_code_pointer;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("Log record generation stall for outstanding writes to complete"): Amended,
    Guid("{20c57a0c-df39-4def-b4f8-47162bcb0908}"), locale("MS\\0x409"),
    DisplayName("log_generate_stall"): Amended]
class XeSqlPkg_log_generate_stall: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_generate_stall: XeSqlPkg_log_generate_stall
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 pending_writes;
	[WmiDataId(7), read] uint32 pending_bytes;
};
		
[dynamic: ToInstance, Description("Log record generation stall for outstanding writes to complete"): Amended,
    Guid("{20c57a0c-df39-4def-b4f8-47162bcb0908}"), locale("MS\\0x409"),
    DisplayName("log_generate_stall"): Amended]
class XeSqlPkg_log_generate_stall: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class log_generate_stall: XeSqlPkg_log_generate_stall
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 pending_writes;
	[WmiDataId(7), read] uint32 pending_bytes;
	[WmiDataId(8), read] uint32 pending_buffers;
};
		
[dynamic: ToInstance, Description("Occurs when a log block is cached into Log Pool."): Amended,
    Guid("{9ef74c4f-b72a-4df1-a584-166fcb901777}"), locale("MS\\0x409"),
    DisplayName("log_block_cache"): Amended]
class XeSqlPkg_log_block_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_block_cache: XeSqlPkg_log_block_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint16 log_block_size;
	[WmiDataId(8), read] sint8  from_disk;
	[WmiDataId(9), read] sint8  incomplete;
	[WmiDataId(10), read] sint8  is_read_ahead;
	[WmiDataId(11), read] uint64 private_consumer_id;
	[WmiDataId(12), read, Pointer] object  cache_buffer_pointer;
};
		
[dynamic: ToInstance, Description("Occurs when a log cache buffer is replaced or removed."): Amended,
    Guid("{fb0b7b3d-92a4-4c6b-85cd-9ab30b9b193b}"), locale("MS\\0x409"),
    DisplayName("log_blocks_uncache"): Amended]
class XeSqlPkg_log_blocks_uncache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_blocks_uncache: XeSqlPkg_log_blocks_uncache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 start_log_block_id;
	[WmiDataId(7), read] uint64 last_log_block_id;
	[WmiDataId(8), read] uint64 private_consumer_id;
	[WmiDataId(9), read] uint16 weight;
	[WmiDataId(10), read, Pointer] object  cache_buffer_pointer;
};
		
[dynamic: ToInstance, Description("Occurs when a log block is consumed by a LogConsumer."): Amended,
    Guid("{f2aae9c4-e781-453b-9093-89d51d52fa1a}"), locale("MS\\0x409"),
    DisplayName("log_block_consume"): Amended]
class XeSqlPkg_log_block_consume: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_block_consume: XeSqlPkg_log_block_consume
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint64 consumer_id;
	[WmiDataId(8), read] uint16 log_block_size;
};
		
[dynamic: ToInstance, Description("Occurs when the indicator on whether any LogConsumer is interested in new log to be generated changes."): Amended,
    Guid("{201a4a8c-9659-4d2f-b2d9-9da9ba25a151}"), locale("MS\\0x409"),
    DisplayName("new_log_interest_flip"): Amended]
class XeSqlPkg_new_log_interest_flip: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class new_log_interest_flip: XeSqlPkg_new_log_interest_flip
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  interest;
};
		
[dynamic: ToInstance, Description("Occurs along with a log consumer's log consumption activity during its life time."): Amended,
    Guid("{a64d14b3-fb3e-4cc9-bc79-a165a01a71e3}"), locale("MS\\0x409"),
    DisplayName("log_consumer_act"): Amended]
class XeSqlPkg_log_consumer_act: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_consumer_act: XeSqlPkg_log_consumer_act
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 consumer_id;
	[WmiDataId(7), read, 
				XEMapId(171),
				ValueMap { 
					"8", 
					"0", 
					"9", 
					"7", 
					"4", 
					"5", 
					"12", 
					"13", 
					"3", 
					"1", 
					"11", 
					"2", 
					"10", 
					"6" },
				Values { 
					"ComputedNextLogBlock", 
					"Constructed", 
					"DerefedCurrentLogBlock", 
					"GotNextBlock", 
					"HasSetFutureInterest", 
					"LockedLogBlock", 
					"LogBlocksProcessed", 
					"LogConsumerClosed", 
					"LogConsumerEndedScan", 
					"LogConsumerInited", 
					"LogConsumerReadAhead", 
					"LogConsumerStartedScan", 
					"RefedCurrentLogBlock", 
					"UnlockedLogBlock" }
			] uint32 activity_id;
};
		
[dynamic: ToInstance, Description("Occurs when a log consumer attempts to lookup a block from the log pool but fails to find it."): Amended,
    Guid("{ed8f22eb-d958-43a3-ab12-9b232c1ff486}"), locale("MS\\0x409"),
    DisplayName("log_pool_cache_miss"): Amended]
class XeSqlPkg_log_pool_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_pool_cache_miss: XeSqlPkg_log_pool_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 consumer_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint64 pool_trunc_log_block_id;
};
		
[dynamic: ToInstance, Description("Aggregated outout of log pool miss."): Amended,
    Guid("{8AFE3254-2FED-4FA7-A2B6-3CA565D5FD3F}"), locale("MS\\0x409"),
    DisplayName("log_pool_cache_miss_aggregation"): Amended]
class XeSqlPkg_log_pool_cache_miss_aggregation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_pool_cache_miss_aggregation: XeSqlPkg_log_pool_cache_miss_aggregation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 consumer_id;
	[WmiDataId(7), read] uint64 log_pool_miss_count;
	[WmiDataId(8), read] uint64 tail_log_cache_miss_count;
	[WmiDataId(9), read] uint64 total_read_count;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string next_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string pool_trunc_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string oldest_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string newest_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string eol_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when a log consumer attempts to lookup a block from the tail log cache but fails to find it."): Amended,
    Guid("{65b51496-c652-4a5c-94d6-20f68d50c18c}"), locale("MS\\0x409"),
    DisplayName("tail_log_cache_miss"): Amended]
class XeSqlPkg_tail_log_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tail_log_cache_miss: XeSqlPkg_tail_log_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 consumer_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint64 cache_trunc_log_block_id;
};
		
[dynamic: ToInstance, Description("Occurs when log pool push fails to get a free buffer and bails out."): Amended,
    Guid("{078ccb6a-7332-4e4c-83ad-ac1e1c539a93}"), locale("MS\\0x409"),
    DisplayName("log_pool_push_no_free_buffer"): Amended]
class XeSqlPkg_log_pool_push_no_free_buffer: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_pool_push_no_free_buffer: XeSqlPkg_log_pool_push_no_free_buffer
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 consumer_id;
	[WmiDataId(7), read, 
				XEMapId(85),
				ValueMap { 
					"4", 
					"0", 
					"1", 
					"5", 
					"2", 
					"6", 
					"3", 
					"7" },
				Values { 
					"LOGBLOCKBUFFERSIZE_16K", 
					"LOGBLOCKBUFFERSIZE_1K", 
					"LOGBLOCKBUFFERSIZE_2K", 
					"LOGBLOCKBUFFERSIZE_32K", 
					"LOGBLOCKBUFFERSIZE_4K", 
					"LOGBLOCKBUFFERSIZE_64K", 
					"LOGBLOCKBUFFERSIZE_8K", 
					"LOGBLOCKBUFFERSIZE_LASTENTRY" }
			] uint32 size_category;
	[WmiDataId(8), read] sint8  pushed_by_runtime;
};
		
[dynamic: ToInstance, Description("Occurs along with the persistence status of a log block in a shared cache buffer being reset to persistent"): Amended,
    Guid("{d079b8e4-1fe9-4936-befb-9367393707d3}"), locale("MS\\0x409"),
    DisplayName("log_block_persistence_reset"): Amended]
class XeSqlPkg_log_block_persistence_reset: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_block_persistence_reset: XeSqlPkg_log_block_persistence_reset
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint64 consumer_id;
};
		
[dynamic: ToInstance, Description("Occurs along with a log block in a shared cache buffer being moved within the replacement set"): Amended,
    Guid("{1345aea2-e395-411f-a2eb-1d8bfb1df199}"), locale("MS\\0x409"),
    DisplayName("log_block_move"): Amended]
class XeSqlPkg_log_block_move: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_block_move: XeSqlPkg_log_block_move
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint16 old_weight;
	[WmiDataId(8), read] uint16 new_weight;
	[WmiDataId(9), read] uint8 new_position;
};
		
[dynamic: ToInstance, Description("Occurs along with a cache buffer's reference counter being incremented or decremented."): Amended,
    Guid("{b025cdc4-3c5e-4bf5-a5ab-363b66b53954}"), locale("MS\\0x409"),
    DisplayName("log_cache_buffer_refcounter_change"): Amended]
class XeSqlPkg_log_cache_buffer_refcounter_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_cache_buffer_refcounter_change: XeSqlPkg_log_cache_buffer_refcounter_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 start_log_block_id;
	[WmiDataId(7), read] uint64 last_log_block_id;
	[WmiDataId(8), read] uint64 private_consumer_id;
	[WmiDataId(9), read] uint8 change_type;
};
		
[dynamic: ToInstance, Description("Occurs along with a tail log cache buffer's reference counter being incremented or decremented."): Amended,
    Guid("{09210011-981a-4a02-92ad-76d725afa008}"), locale("MS\\0x409"),
    DisplayName("tail_log_cache_buffer_refcounter_change"): Amended]
class XeSqlPkg_tail_log_cache_buffer_refcounter_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class tail_log_cache_buffer_refcounter_change: XeSqlPkg_tail_log_cache_buffer_refcounter_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 bsn;
	[WmiDataId(7), read] uint64 private_consumer_id;
	[WmiDataId(8), read] sint8  change_type_increment;
};
		
[dynamic: ToInstance, Description("Occurs along with a log consumer's reading a log block ahead."): Amended,
    Guid("{8ac09995-2859-4f75-a870-e1987f289cd5}"), locale("MS\\0x409"),
    DisplayName("log_consumer_read_ahead"): Amended]
class XeSqlPkg_log_consumer_read_ahead: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_consumer_read_ahead: XeSqlPkg_log_consumer_read_ahead
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 consumer_id;
	[WmiDataId(7), read] uint64 log_block_id;
};
		
[dynamic: ToInstance, Description("Occurs when log pool receives a memory status notification."): Amended,
    Guid("{187d1700-c899-4d47-b217-ee360416ae2a}"), locale("MS\\0x409"),
    DisplayName("log_pool_memory_status"): Amended]
class XeSqlPkg_log_pool_memory_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_pool_memory_status: XeSqlPkg_log_pool_memory_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(170),
				ValueMap { 
					"4", 
					"1", 
					"2", 
					"8", 
					"0" },
				Values { 
					"RESOURCE_MEM_STEADY", 
					"RESOURCE_MEMPHYSICAL_HIGH", 
					"RESOURCE_MEMPHYSICAL_LOW", 
					"RESOURCE_MEMVIRTUAL_LOW", 
					"RESOURCE_NOINFO" }
			] uint32 memory_status;
	[WmiDataId(6), read] uint64 stamp;
};
		
[dynamic: ToInstance, Description("Occurs when a disk log read is issued."): Amended,
    Guid("{13f1eb7f-2301-47fd-903f-45ca95b8f743}"), locale("MS\\0x409"),
    DisplayName("disk_log_read"): Amended]
class XeSqlPkg_disk_log_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class disk_log_read: XeSqlPkg_disk_log_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 start_log_block_id;
	[WmiDataId(7), read] sint8  is_read_ahead;
	[WmiDataId(8), read] uint64 private_consumer_id;
};
		
[dynamic: ToInstance, Description("Occurs when a disk log read is ignored."): Amended,
    Guid("{4ef4ebb1-2be8-4a7b-91bf-a4390bc6873e}"), locale("MS\\0x409"),
    DisplayName("disk_log_read_ignore"): Amended]
class XeSqlPkg_disk_log_read_ignore: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class disk_log_read_ignore: XeSqlPkg_disk_log_read_ignore
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 start_log_block_id;
	[WmiDataId(7), read] sint8  is_read_ahead;
	[WmiDataId(8), read] uint64 private_consumer_id;
};
		
[dynamic: ToInstance, Description("Occurs when a log consumer is initialized or closed."): Amended,
    Guid("{c518c77a-de42-40f6-b5e8-f34447709152}"), locale("MS\\0x409"),
    DisplayName("log_consumer_life"): Amended]
class XeSqlPkg_log_consumer_life: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_consumer_life: XeSqlPkg_log_consumer_life
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 consumer_id;
	[WmiDataId(7), read] sint8  is_alive;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string consumer_name;
};
		
[dynamic: ToInstance, Description("Occurs when the request for a lock was canceled, such as when the query requesting the lock was canceled. Use this event to monitor locks."): Amended,
    Guid("{8c797226-12f0-4dff-8f4a-acc719a619a0}"), locale("MS\\0x409"),
    DisplayName("lock_cancel"): Amended]
class XeSqlPkg_lock_cancel: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_cancel: XeSqlPkg_lock_cancel
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a request for a lock times out because another transaction holds a blocking lock on the required resource. The time-out duration is determined by the @@LOCK_TIMEOUT system function. Use this event to help troubleshoot blocking issues."): Amended,
    Guid("{f7927951-e117-4b1a-a741-c1d047b76912}"), locale("MS\\0x409"),
    DisplayName("lock_timeout"): Amended]
class XeSqlPkg_lock_timeout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_timeout: XeSqlPkg_lock_timeout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when an attempt to acquire a lock generates a deadlock. This event is raised for each participant in the deadlock."): Amended,
    Guid("{7ebe128e-fb90-4f2b-af4c-abc62336e478}"), locale("MS\\0x409"),
    DisplayName("lock_deadlock_chain"): Amended]
class XeSqlPkg_lock_deadlock_chain: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_deadlock_chain: XeSqlPkg_lock_deadlock_chain
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] uint32 deadlock_id;
	[WmiDataId(17), read] sint32 object_id;
	[WmiDataId(18), read] uint64 associated_object_id;
	[WmiDataId(19), read] sint16 session_id;
	[WmiDataId(20), read, 
				XEMapId(232),
				BitMap { 
					"65536", 
					"4", 
					"16", 
					"8", 
					"1", 
					"64", 
					"0", 
					"2", 
					"32" },
				BitValues { 
					"RESOURCE_SUBTYPE_SYNCPOINT", 
					"EXCHANGE", 
					"EXTERNAL", 
					"GENERIC", 
					"LOCK", 
					"MATRIX_PARALLEL_QUERY", 
					"NONE", 
					"THREAD", 
					"WAITFOR" }
			] uint32 resource_owner_type;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Print callstack of thread within deadlock graph."): Amended,
    Guid("{48A8E13B-D59C-4C95-955C-7315DA51AAD4}"), locale("MS\\0x409"),
    DisplayName("deadlock_callstack"): Amended]
class XeSqlPkg_deadlock_callstack: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deadlock_callstack: XeSqlPkg_deadlock_callstack
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp_id;
	[WmiDataId(6), read] uint32 blocked_count;
	[WmiDataId(7), read, Pointer] object  current_blocked;
	[WmiDataId(8), read, Pointer] object  next_blocked;
	[WmiDataId(9), read, StringTermination("NullTerminated")] string blocked_callstack_rva;
	[WmiDataId(10), read, Extension("Variant"), XEVLD("callstack")] object blocked_callstack;
};
		
[dynamic: ToInstance, Description("Occurs when a fine-grain lock is converted into a coarser-grain lock, such as when a row lock is converted into an object lock. Use this event to monitor how locks are being used on the server."): Amended,
    Guid("{cf7f0653-e16c-46b8-bdf4-5420bd5568a1}"), locale("MS\\0x409"),
    DisplayName("lock_escalation"): Amended]
class XeSqlPkg_lock_escalation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_escalation: XeSqlPkg_lock_escalation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read, 
				XEMapId(42),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Lock threshold", 
					"Memory threshold" }
			] uint8 escalation_cause;
	[WmiDataId(17), read] sint32 object_id;
	[WmiDataId(18), read] uint64 hobt_id;
	[WmiDataId(19), read] uint32 escalated_lock_count;
	[WmiDataId(20), read] uint32 hobt_lock_count;
	[WmiDataId(21), read] sint8  lock_escalation_with_lock_class;
	[WmiDataId(22), read] sint8  lock_escalation_with_update_query;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a request for a lock times out because of a blocking lock that is being held by a different resource. This event is identical to lock_timeout, but excludes cases in which the time-out value is 0, such as when lock probes are used. Time-outs with a duration of 0 do not necessarily indicate a blocking problem."): Amended,
    Guid("{f9665fa9-d19a-48dd-a34e-5f8953972a21}"), locale("MS\\0x409"),
    DisplayName("lock_timeout_greater_than_0"): Amended]
class XeSqlPkg_lock_timeout_greater_than_0: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_timeout_greater_than_0: XeSqlPkg_lock_timeout_greater_than_0
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(77),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a query uses a bitmap filter and the bitmap filter is disabled. Use this event to troubleshoot performance problems for queries with bitmap filters, and to identify queries where the bitmap filter was disabled because it is nonselective."): Amended,
    Guid("{40615cca-f45c-40de-a514-f62e62cb896e}"), locale("MS\\0x409"),
    DisplayName("bitmap_disabled_warning"): Amended]
class XeSqlPkg_bitmap_disabled_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bitmap_disabled_warning: XeSqlPkg_bitmap_disabled_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Bitmap preferred memory calculation"): Amended,
    Guid("{a9ac4fd9-3493-4274-8043-bd29e3fc74eb}"), locale("MS\\0x409"),
    DisplayName("bitmap_memory_preferred"): Amended]
class XeSqlPkg_bitmap_memory_preferred: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bitmap_memory_preferred: XeSqlPkg_bitmap_memory_preferred
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 build_rows;
	[WmiDataId(6), read] uint64 probe_rows;
	[WmiDataId(7), read] sint32 replicated_bitmaps;
	[WmiDataId(8), read] uint64 preferred_memory;
};
		
[dynamic: ToInstance, Description("Bitmap runtime trace"): Amended,
    Guid("{ce42853d-d31d-4b9d-a0c7-74bbd2971686}"), locale("MS\\0x409"),
    DisplayName("bitmap_runtime_trace"): Amended]
class XeSqlPkg_bitmap_runtime_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bitmap_runtime_trace: XeSqlPkg_bitmap_runtime_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(96),
				ValueMap { 
					"3", 
					"2", 
					"4", 
					"5", 
					"1" },
				Values { 
					"Disabled", 
					"Enabled", 
					"InRowActivated", 
					"InRowLowLevelActivated", 
					"MostSelective" }
			] sint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Occurs when a SQL Server transaction is coordinated through Microsoft Distributed Transaction Coordinator."): Amended,
    Guid("{c8841a86-613d-456e-aeb1-ce7cf00941ba}"), locale("MS\\0x409"),
    DisplayName("dtc_transaction"): Amended]
class XeSqlPkg_dtc_transaction: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dtc_transaction: XeSqlPkg_dtc_transaction
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(29),
				ValueMap { 
					"256", 
					"4096", 
					"65536", 
					"1048576" },
				Values { 
					"Read Uncommitted", 
					"Read Committed", 
					"Repeatable Read", 
					"Serializable" }
			] uint32 isolation_level;
	[WmiDataId(6), read, 
				XEMapId(32),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25" },
				Values { 
					"Get address", 
					"Propagate Transaction", 
					"Do Work", 
					"Close connection", 
					"Session has not participated in a DTC transaction", 
					"IDLE", 
					"Creating a new DTC transaction", 
					"Enlisting in a DTC transaction", 
					"DTC Transaction active", 
					"Internal commit", 
					"Internal abort", 
					"Internal asynchronous abort", 
					"Imported Transaction Active", 
					"Prepare Initialize", 
					"Preparing Transaction", 
					"Transaction is prepared", 
					"Transaction is aborting", 
					"Transaction is committing", 
					"Asynchronous Abort", 
					"Disaster Detected", 
					"Abort Drain", 
					"Asynchronous Abort Complete", 
					"TM failed while in prepared state", 
					"Recovery failed due to RMID mismatch", 
					"Recovered all in-doubt transactions", 
					"Unknown" }
			] uint8 transaction_state;
	[WmiDataId(7), read] sint64 transaction_id;
	[WmiDataId(8), read, Extension("Guid")] guid unit_of_work_id;
};
		
[dynamic: ToInstance, Description("Occurs when a SQL Server transaction is coordinated through Microsoft Distributed Transaction Coordinator."): Amended,
    Guid("{c8841a86-613d-456e-aeb1-ce7cf00941ba}"), locale("MS\\0x409"),
    DisplayName("dtc_transaction"): Amended]
class XeSqlPkg_dtc_transaction: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class dtc_transaction: XeSqlPkg_dtc_transaction
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(29),
				ValueMap { 
					"256", 
					"4096", 
					"65536", 
					"1048576" },
				Values { 
					"Read Uncommitted", 
					"Read Committed", 
					"Repeatable Read", 
					"Serializable" }
			] uint32 isolation_level;
	[WmiDataId(6), read, 
				XEMapId(32),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25" },
				Values { 
					"Get address", 
					"Propagate Transaction", 
					"Do Work", 
					"Close connection", 
					"Session has not participated in a DTC transaction", 
					"IDLE", 
					"Creating a new DTC transaction", 
					"Enlisting in a DTC transaction", 
					"DTC Transaction active", 
					"Internal commit", 
					"Internal abort", 
					"Internal asynchronous abort", 
					"Imported Transaction Active", 
					"Prepare Initialize", 
					"Preparing Transaction", 
					"Transaction is prepared", 
					"Transaction is aborting", 
					"Transaction is committing", 
					"Asynchronous Abort", 
					"Disaster Detected", 
					"Abort Drain", 
					"Asynchronous Abort Complete", 
					"TM failed while in prepared state", 
					"Recovery failed due to RMID mismatch", 
					"Recovered all in-doubt transactions", 
					"Unknown" }
			] uint8 transaction_state;
	[WmiDataId(7), read] sint64 transaction_id;
	[WmiDataId(8), read, Extension("Guid")] guid unit_of_work_id;
	[WmiDataId(9), read, Extension("Guid")] guid resource_manager_id;
};
		
[dynamic: ToInstance, Description("Occurs when a SQL Server transaction is coordinated through Microsoft Distributed Transaction Coordinator."): Amended,
    Guid("{c8841a86-613d-456e-aeb1-ce7cf00941ba}"), locale("MS\\0x409"),
    DisplayName("dtc_transaction"): Amended]
class XeSqlPkg_dtc_transaction: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class dtc_transaction: XeSqlPkg_dtc_transaction
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(29),
				ValueMap { 
					"256", 
					"4096", 
					"65536", 
					"1048576" },
				Values { 
					"Read Uncommitted", 
					"Read Committed", 
					"Repeatable Read", 
					"Serializable" }
			] uint32 isolation_level;
	[WmiDataId(6), read, 
				XEMapId(32),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25" },
				Values { 
					"Get address", 
					"Propagate Transaction", 
					"Do Work", 
					"Close connection", 
					"Session has not participated in a DTC transaction", 
					"IDLE", 
					"Creating a new DTC transaction", 
					"Enlisting in a DTC transaction", 
					"DTC Transaction active", 
					"Internal commit", 
					"Internal abort", 
					"Internal asynchronous abort", 
					"Imported Transaction Active", 
					"Prepare Initialize", 
					"Preparing Transaction", 
					"Transaction is prepared", 
					"Transaction is aborting", 
					"Transaction is committing", 
					"Asynchronous Abort", 
					"Disaster Detected", 
					"Abort Drain", 
					"Asynchronous Abort Complete", 
					"TM failed while in prepared state", 
					"Recovery failed due to RMID mismatch", 
					"Recovered all in-doubt transactions", 
					"Unknown" }
			] uint8 transaction_state;
	[WmiDataId(7), read, 
				XEMapId(33),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Unknown", 
					"MSDTC", 
					"GT" }
			] uint8 dtc_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read, Extension("Guid")] guid unit_of_work_id;
	[WmiDataId(10), read, Extension("Guid")] guid resource_manager_id;
};
		
[dynamic: ToInstance, Description("Occurs when a SQL Server distributed transaction is being recovered."): Amended,
    Guid("{bfbc929d-4ba4-478d-8559-f2f2533976fa}"), locale("MS\\0x409"),
    DisplayName("dtc_transaction_recovery"): Amended]
class XeSqlPkg_dtc_transaction_recovery: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dtc_transaction_recovery: XeSqlPkg_dtc_transaction_recovery
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(33),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Unknown", 
					"MSDTC", 
					"GT" }
			] uint8 dtc_type;
	[WmiDataId(6), read, 
				XEMapId(36),
				ValueMap { 
					"1", 
					"2", 
					"3" },
				Values { 
					"Commit", 
					"Abort", 
					"Unknown" }
			] uint8 transaction_outcome;
	[WmiDataId(7), read, 
				XEMapId(37),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"None", 
					"DTC", 
					"User", 
					"Policy", 
					"TraceFlag" }
			] uint8 transaction_outcome_source;
	[WmiDataId(8), read, Extension("Guid")] guid unit_of_work_id;
	[WmiDataId(9), read, Extension("Guid")] guid resource_manager_id;
};
		
[dynamic: ToInstance, Description("Occurs when a SQL Server XA transaction is started."): Amended,
    Guid("{da7270ea-6146-4d72-8f26-c73d34da73d0}"), locale("MS\\0x409"),
    DisplayName("xa_transaction"): Amended]
class XeSqlPkg_xa_transaction: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xa_transaction: XeSqlPkg_xa_transaction
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(34),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"JDBC", 
					"ODBC" }
			] uint8 driver;
	[WmiDataId(6), read, 
				XEMapId(35),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11" },
				Values { 
					"Start", 
					"End", 
					"Prepare", 
					"Commit", 
					"Rollback", 
					"Forget", 
					"Recover", 
					"PrepareEx", 
					"RollbackEx", 
					"ForgetEx", 
					"Init", 
					"InitEx" }
			] uint8 xa_call;
	[WmiDataId(7), read, Extension("Variant")] object xid;
	[WmiDataId(8), read, Extension("Guid")] guid unit_of_work_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("Debugging diagnostics about the marked transaction latch"): Amended,
    Guid("{60a21868-61d2-4bfa-a49b-05e7b6c6df91}"), locale("MS\\0x409"),
    DisplayName("marked_transaction_latch_trace"): Amended]
class XeSqlPkg_marked_transaction_latch_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class marked_transaction_latch_trace: XeSqlPkg_marked_transaction_latch_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 shared_count;
	[WmiDataId(6), read] uint32 marked_transactions_in_progress_count;
	[WmiDataId(7), read] uint64 timeout_ms;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string state;
};
		
[dynamic: ToInstance, Description("Occurs when global transaction is started."): Amended,
    Guid("{BE2A8EDD-87BC-43D9-9D52-E0A72B351DE9}"), locale("MS\\0x409"),
    DisplayName("global_transaction_message"): Amended]
class XeSqlPkg_global_transaction_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class global_transaction_message: XeSqlPkg_global_transaction_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(38),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30" },
				Values { 
					"Message for TM", 
					"Message for RM", 
					"Enlist", 
					"Enlisted", 
					"EnlistFailed", 
					"Prepare Request", 
					"Abort Request", 
					"Commit Request", 
					"Prepare Done", 
					"Prepare Failed", 
					"Abort Done", 
					"Commit Done", 
					"Connection Down", 
					"ReEnlist", 
					"ReEnlist Response", 
					"Send", 
					"Receive", 
					"NULL", 
					"Exception", 
					"Error", 
					"Info", 
					"Committed", 
					"Aborted", 
					"Unknown", 
					"KeepAlive", 
					"TxNotFound", 
					"Warning", 
					"Dwheartbeat Request", 
					"Dwheartbeat Response", 
					"DwShellDbProperty Request", 
					"DwShellDbProperty Response" }
			] uint8 message_direction;
	[WmiDataId(6), read, 
				XEMapId(38),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30" },
				Values { 
					"Message for TM", 
					"Message for RM", 
					"Enlist", 
					"Enlisted", 
					"EnlistFailed", 
					"Prepare Request", 
					"Abort Request", 
					"Commit Request", 
					"Prepare Done", 
					"Prepare Failed", 
					"Abort Done", 
					"Commit Done", 
					"Connection Down", 
					"ReEnlist", 
					"ReEnlist Response", 
					"Send", 
					"Receive", 
					"NULL", 
					"Exception", 
					"Error", 
					"Info", 
					"Committed", 
					"Aborted", 
					"Unknown", 
					"KeepAlive", 
					"TxNotFound", 
					"Warning", 
					"Dwheartbeat Request", 
					"Dwheartbeat Response", 
					"DwShellDbProperty Request", 
					"DwShellDbProperty Response" }
			] uint8 message_destination_type;
	[WmiDataId(7), read, 
				XEMapId(38),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30" },
				Values { 
					"Message for TM", 
					"Message for RM", 
					"Enlist", 
					"Enlisted", 
					"EnlistFailed", 
					"Prepare Request", 
					"Abort Request", 
					"Commit Request", 
					"Prepare Done", 
					"Prepare Failed", 
					"Abort Done", 
					"Commit Done", 
					"Connection Down", 
					"ReEnlist", 
					"ReEnlist Response", 
					"Send", 
					"Receive", 
					"NULL", 
					"Exception", 
					"Error", 
					"Info", 
					"Committed", 
					"Aborted", 
					"Unknown", 
					"KeepAlive", 
					"TxNotFound", 
					"Warning", 
					"Dwheartbeat Request", 
					"Dwheartbeat Response", 
					"DwShellDbProperty Request", 
					"DwShellDbProperty Response" }
			] uint8 message_type;
	[WmiDataId(8), read, 
				XEMapId(38),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30" },
				Values { 
					"Message for TM", 
					"Message for RM", 
					"Enlist", 
					"Enlisted", 
					"EnlistFailed", 
					"Prepare Request", 
					"Abort Request", 
					"Commit Request", 
					"Prepare Done", 
					"Prepare Failed", 
					"Abort Done", 
					"Commit Done", 
					"Connection Down", 
					"ReEnlist", 
					"ReEnlist Response", 
					"Send", 
					"Receive", 
					"NULL", 
					"Exception", 
					"Error", 
					"Info", 
					"Committed", 
					"Aborted", 
					"Unknown", 
					"KeepAlive", 
					"TxNotFound", 
					"Warning", 
					"Dwheartbeat Request", 
					"Dwheartbeat Response", 
					"DwShellDbProperty Request", 
					"DwShellDbProperty Response" }
			] uint8 transaction_outcome;
	[WmiDataId(9), read] sint64 source_dbid;
	[WmiDataId(10), read] sint64 destination_dbid;
	[WmiDataId(11), read] uint64 xts;
	[WmiDataId(12), read] sint64 epoch_dataloss_number;
	[WmiDataId(13), read] sint64 epoch_configuration_number;
	[WmiDataId(14), read, Extension("Guid")] guid unit_of_work_id;
	[WmiDataId(15), read, Extension("Guid")] guid source_rmid;
	[WmiDataId(16), read, Extension("Guid")] guid destination_rmid;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string destination_server;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string destination_database;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string source_physical_server;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string source_logical_server;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string lsn;
};
		
[dynamic: ToInstance, Description("Logged on the commit or abort of global transaction"): Amended,
    Guid("{CEF534B1-AD60-4CF1-9E3D-21DCD31818BA}"), locale("MS\\0x409"),
    DisplayName("global_transaction_complete"): Amended]
class XeSqlPkg_global_transaction_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class global_transaction_complete: XeSqlPkg_global_transaction_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 database_id;
	[WmiDataId(6), read, 
				XEMapId(38),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30" },
				Values { 
					"Message for TM", 
					"Message for RM", 
					"Enlist", 
					"Enlisted", 
					"EnlistFailed", 
					"Prepare Request", 
					"Abort Request", 
					"Commit Request", 
					"Prepare Done", 
					"Prepare Failed", 
					"Abort Done", 
					"Commit Done", 
					"Connection Down", 
					"ReEnlist", 
					"ReEnlist Response", 
					"Send", 
					"Receive", 
					"NULL", 
					"Exception", 
					"Error", 
					"Info", 
					"Committed", 
					"Aborted", 
					"Unknown", 
					"KeepAlive", 
					"TxNotFound", 
					"Warning", 
					"Dwheartbeat Request", 
					"Dwheartbeat Response", 
					"DwShellDbProperty Request", 
					"DwShellDbProperty Response" }
			] uint8 transaction_outcome;
	[WmiDataId(7), read] sint64 transaction_prepared;
	[WmiDataId(8), read] sint64 number_of_participants;
	[WmiDataId(9), read] sint64 phase_1_time;
	[WmiDataId(10), read] sint64 phase_2_time;
	[WmiDataId(11), read] sint64 total_transaction_time;
	[WmiDataId(12), read, Extension("Guid")] guid unit_of_work_id;
};
		
[dynamic: ToInstance, Description("Occurs when global transaction is complete."): Amended,
    Guid("{3ad7ca83-3668-493d-99ab-8d935bc28cd6}"), locale("MS\\0x409"),
    DisplayName("global_transaction_snapshot"): Amended]
class XeSqlPkg_global_transaction_snapshot: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class global_transaction_snapshot: XeSqlPkg_global_transaction_snapshot
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 database_id;
	[WmiDataId(6), read] uint64 transaction_id;
	[WmiDataId(7), read] uint64 transaction_sequence_num;
	[WmiDataId(8), read] uint64 prepare_sequence_num;
	[WmiDataId(9), read] uint64 statement_sequence_num;
	[WmiDataId(10), read] uint64 commit_sequence_num;
	[WmiDataId(11), read] sint32 is_snapshot;
	[WmiDataId(12), read] uint64 first_snapshot_sequence_num;
	[WmiDataId(13), read] sint32 max_version_chain_traversed;
	[WmiDataId(14), read] real32 average_version_chain_traversed;
	[WmiDataId(15), read] uint64 count_version_chain_traversed;
	[WmiDataId(16), read] sint32 elapsed_time_seconds;
	[WmiDataId(17), read] sint32 clocksi_wait_time_ms;
	[WmiDataId(18), read] uint64 external_xts;
	[WmiDataId(19), read] uint64 version_store_usage;
	[WmiDataId(20), read, Extension("Guid")] guid unit_of_work_id;
	[WmiDataId(21), read, Extension("Guid")] guid resource_manager_id;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string physical_server;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string logical_server;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string logical_dbname;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string physical_dbname;
};
		
[dynamic: ToInstance, Description("Occurs every time that SQL Server executes a SELECT, INSERT, UPDATE, or DELETE statement. Use this event to monitor if a query is running in parallel."): Amended,
    Guid("{e831bae6-7eb0-4c15-a25e-c77ee39f98e8}"), locale("MS\\0x409"),
    DisplayName("degree_of_parallelism"): Amended]
class XeSqlPkg_degree_of_parallelism: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class degree_of_parallelism: XeSqlPkg_degree_of_parallelism
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 dop;
	[WmiDataId(6), read, 
				XEMapId(44),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"Select", 
					"Insert", 
					"Update", 
					"Delete", 
					"Merge" }
			] uint8 statement_type;
	[WmiDataId(7), read] uint32 workspace_memory_grant_kb;
};
		
[dynamic: ToInstance, Description("Occurs when a SQL Server transaction begins, completes, rolls back or executes a savepoint. Use this event to monitor transaction behavior when troubleshooting applications, triggers or stored procedures."): Amended,
    Guid("{EAC6E752-960D-4966-B97D-CDCF6E05D786}"), locale("MS\\0x409"),
    DisplayName("sql_transaction"): Amended]
class XeSqlPkg_sql_transaction: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_transaction: XeSqlPkg_sql_transaction
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read, 
				XEMapId(30),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"Begin", 
					"Commit", 
					"Rollback", 
					"Savepoint" }
			] uint8 transaction_state;
	[WmiDataId(7), read, 
				XEMapId(31),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"System", 
					"User" }
			] uint8 transaction_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string savepoint_name;
};
		
[dynamic: ToInstance, Description("Occurs when a table or index scan starts."): Amended,
    Guid("{8b324833-6652-42cc-9bb7-466ad4b9b099}"), locale("MS\\0x409"),
    DisplayName("scan_started"): Amended]
class XeSqlPkg_scan_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class scan_started: XeSqlPkg_scan_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a table or index scan stops."): Amended,
    Guid("{e1577ad4-1430-4b05-a47b-596763814836}"), locale("MS\\0x409"),
    DisplayName("scan_stopped"): Amended]
class XeSqlPkg_scan_stopped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class scan_stopped: XeSqlPkg_scan_stopped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 logical_reads;
	[WmiDataId(10), read] uint64 physical_reads;
	[WmiDataId(11), read] uint64 page_server_reads;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a record is added to the SQL Server transaction log. This is a very high volume event that will affect the performance of the server. Therefore, you should use appropriate filtering to reduce the number of events, and only use this event for targeted troubleshooting during a short time period."): Amended,
    Guid("{F985F9B5-ADE0-4328-A70D-0A0A631B2599}"), locale("MS\\0x409"),
    DisplayName("transaction_log"): Amended]
class XeSqlPkg_transaction_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class transaction_log: XeSqlPkg_transaction_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 transaction_id;
	[WmiDataId(7), read] uint32 log_record_size;
	[WmiDataId(8), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 operation;
	[WmiDataId(9), read, 
				XEMapId(116),
				ValueMap { 
					"20", 
					"23", 
					"29", 
					"2", 
					"22", 
					"39", 
					"38", 
					"36", 
					"27", 
					"7", 
					"24", 
					"31", 
					"17", 
					"8", 
					"1", 
					"10", 
					"12", 
					"4", 
					"3", 
					"40", 
					"19", 
					"25", 
					"14", 
					"0", 
					"13", 
					"35", 
					"11", 
					"26", 
					"34", 
					"18", 
					"9", 
					"32", 
					"21", 
					"5", 
					"6", 
					"30", 
					"37", 
					"28", 
					"33" },
				Values { 
					"BOOT_PAGE", 
					"BOOT_PAGE_CKPT", 
					"BULK_OPERATION_PAGE", 
					"CLUSTERED", 
					"CTR_ABORTED", 
					"CTR_LOG_HOLDUP", 
					"CTR_NEST_ABORTED", 
					"CTR_XACT_CLEANUP", 
					"DBCC_FORMATTED", 
					"DIAGNOSTICS", 
					"DIFF_MAP", 
					"ENCRYPT_UNALLOC_PAGE", 
					"FILE_HEADER", 
					"GAM", 
					"HEAP", 
					"IAM", 
					"IDENTITY_VALUE", 
					"INDEX_INTERIOR", 
					"INDEX_LEAF", 
					"LEDGER_TRANSACTIONS", 
					"MARK_AS_GHOST", 
					"ML_MAP", 
					"NONSYS_SPLIT", 
					"NULL", 
					"OBJECT_ID", 
					"OFF_ROW_PVS", 
					"PFS", 
					"REMOVE_VERSION_INFO", 
					"RESTORE_BAD_UNALLOC_PAGE", 
					"SCHEMA_VERSION", 
					"SGAM", 
					"SORT_PAGE", 
					"SYSCONFIG_PAGE", 
					"TEXT_MIX", 
					"TEXT_TREE", 
					"TRACKED_XDES", 
					"TRY_TRANSITION_TO_NON_CTR", 
					"UNLINKED_REORG_PAGE", 
					"WORK_FILE_PAGE" }
			] uint8 context;
	[WmiDataId(10), read] uint32 replication_command;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 transaction_start_time;
	[WmiDataId(12), read] uint64 alloc_unit_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a record is added to the SQL Server transaction log. This is a very high volume event that will affect the performance of the server. Therefore, you should use appropriate filtering to reduce the number of events, and only use this event for targeted troubleshooting during a short time period."): Amended,
    Guid("{F985F9B5-ADE0-4328-A70D-0A0A631B2599}"), locale("MS\\0x409"),
    DisplayName("transaction_log"): Amended]
class XeSqlPkg_transaction_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class transaction_log: XeSqlPkg_transaction_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 transaction_id;
	[WmiDataId(7), read] uint32 log_record_size;
	[WmiDataId(8), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 operation;
	[WmiDataId(9), read, 
				XEMapId(116),
				ValueMap { 
					"20", 
					"23", 
					"29", 
					"2", 
					"22", 
					"39", 
					"38", 
					"36", 
					"27", 
					"7", 
					"24", 
					"31", 
					"17", 
					"8", 
					"1", 
					"10", 
					"12", 
					"4", 
					"3", 
					"40", 
					"19", 
					"25", 
					"14", 
					"0", 
					"13", 
					"35", 
					"11", 
					"26", 
					"34", 
					"18", 
					"9", 
					"32", 
					"21", 
					"5", 
					"6", 
					"30", 
					"37", 
					"28", 
					"33" },
				Values { 
					"BOOT_PAGE", 
					"BOOT_PAGE_CKPT", 
					"BULK_OPERATION_PAGE", 
					"CLUSTERED", 
					"CTR_ABORTED", 
					"CTR_LOG_HOLDUP", 
					"CTR_NEST_ABORTED", 
					"CTR_XACT_CLEANUP", 
					"DBCC_FORMATTED", 
					"DIAGNOSTICS", 
					"DIFF_MAP", 
					"ENCRYPT_UNALLOC_PAGE", 
					"FILE_HEADER", 
					"GAM", 
					"HEAP", 
					"IAM", 
					"IDENTITY_VALUE", 
					"INDEX_INTERIOR", 
					"INDEX_LEAF", 
					"LEDGER_TRANSACTIONS", 
					"MARK_AS_GHOST", 
					"ML_MAP", 
					"NONSYS_SPLIT", 
					"NULL", 
					"OBJECT_ID", 
					"OFF_ROW_PVS", 
					"PFS", 
					"REMOVE_VERSION_INFO", 
					"RESTORE_BAD_UNALLOC_PAGE", 
					"SCHEMA_VERSION", 
					"SGAM", 
					"SORT_PAGE", 
					"SYSCONFIG_PAGE", 
					"TEXT_MIX", 
					"TEXT_TREE", 
					"TRACKED_XDES", 
					"TRY_TRANSITION_TO_NON_CTR", 
					"UNLINKED_REORG_PAGE", 
					"WORK_FILE_PAGE" }
			] uint8 context;
	[WmiDataId(10), read] uint32 replication_command;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 transaction_start_time;
	[WmiDataId(12), read] uint64 alloc_unit_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(14), read, Extension("Guid")] guid resource_manager_id;
};
		
[dynamic: ToInstance, Description("Occurs when there is insufficient memory to process the build input of a hash join. This results in either a hash recursion when the build input is partitioned, or a hash bailout when the partitioning of the build input exceeds the maximum recursion level. Use this event together with any of the query_pre_execution_showplan or query_post_execution_showplan events to determine which operation in the generated plan is causing the hash warning."): Amended,
    Guid("{2a93ef5b-aa3f-4262-bec0-9cb529f0abfb}"), locale("MS\\0x409"),
    DisplayName("hash_warning"): Amended]
class XeSqlPkg_hash_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hash_warning: XeSqlPkg_hash_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(43),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Recursion", 
					"Bailout" }
			] uint8 hash_warning_type;
	[WmiDataId(6), read] uint32 query_operation_node_id;
	[WmiDataId(7), read] uint32 recursion_level;
};
		
[dynamic: ToInstance, Description("Occurs when there is insufficient memory to process the build input of a hash join. This results in either a hash recursion when the build input is partitioned, or a hash bailout when the partitioning of the build input exceeds the maximum recursion level. Use this event together with any of the query_pre_execution_showplan or query_post_execution_showplan events to determine which operation in the generated plan is causing the hash warning."): Amended,
    Guid("{2a93ef5b-aa3f-4262-bec0-9cb529f0abfb}"), locale("MS\\0x409"),
    DisplayName("hash_warning"): Amended]
class XeSqlPkg_hash_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class hash_warning: XeSqlPkg_hash_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(43),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Recursion", 
					"Bailout" }
			] uint8 hash_warning_type;
	[WmiDataId(6), read] uint32 query_operation_node_id;
	[WmiDataId(7), read] uint32 recursion_level;
	[WmiDataId(8), read] uint32 thread_id;
	[WmiDataId(9), read] uint32 dop;
	[WmiDataId(10), read] uint64 granted_memory_kb;
	[WmiDataId(11), read] uint64 used_memory_kb;
	[WmiDataId(12), read] uint64 workfile_physical_writes;
	[WmiDataId(13), read] uint64 worktable_physical_writes;
	[WmiDataId(14), read] uint64 actual_row_count;
};
		
[dynamic: ToInstance, Description("Occurs at the end of hash processing if there is insufficient memory to process the build input of a hash join. Use this event together with any of the query_pre_execution_showplan or query_post_execution_showplan events to determine which operation in the generated plan is causing the hash spill."): Amended,
    Guid("{089daf71-51b8-4bf2-a12d-6afcac67d06e}"), locale("MS\\0x409"),
    DisplayName("hash_spill_details"): Amended]
class XeSqlPkg_hash_spill_details: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hash_spill_details: XeSqlPkg_hash_spill_details
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint32 dop;
	[WmiDataId(8), read] uint64 granted_memory_kb;
	[WmiDataId(9), read] uint64 used_memory_kb;
	[WmiDataId(10), read] uint64 workfile_physical_reads;
	[WmiDataId(11), read] uint64 workfile_physical_read_aheads;
	[WmiDataId(12), read] uint64 workfile_physical_writes;
	[WmiDataId(13), read] uint64 worktable_physical_reads;
	[WmiDataId(14), read] uint64 worktable_physical_read_aheads;
	[WmiDataId(15), read] uint64 worktable_physical_writes;
	[WmiDataId(16), read] uint64 actual_row_count;
	[WmiDataId(17), read] uint64 reserved1;
	[WmiDataId(18), read] uint64 reserved2;
	[WmiDataId(19), read] uint64 reserved3;
	[WmiDataId(20), read] uint64 reserved4;
};
		
[dynamic: ToInstance, Description("Occurs when a T-SQL statement or stored procedure waits more than one second for a memory grant or when the initial attempt to get memory fails. Use this event in combination with events that identify waits to troubleshoot contention issues that impact performance"): Amended,
    Guid("{a0efad9f-1ef5-4382-9991-f7fc4a73577d}"), locale("MS\\0x409"),
    DisplayName("execution_warning"): Amended]
class XeSqlPkg_execution_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class execution_warning: XeSqlPkg_execution_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read, 
				XEMapId(95),
				ValueMap { 
					"2", 
					"1" },
				Values { 
					"TIMEOUT_SUBCLASS", 
					"WAIT_SUBCLASS" }
			] uint8 warning_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string server_memory_grants;
};
		
[dynamic: ToInstance, Description("Occurs when the sort operation on an executing query does not fit into memory. This event is not generated for sort operations caused by index creation, only for sort operations in a query. (For example, an Order By in a Select statement.) Use this event to identify queries that perform slowly because of the sort operation, particularly when the warning_type = 2, indicating multiple passes over the data were required to sort"): Amended,
    Guid("{1d52af22-ca17-4680-a0cc-04e9bb6a13fe}"), locale("MS\\0x409"),
    DisplayName("sort_warning"): Amended]
class XeSqlPkg_sort_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sort_warning: XeSqlPkg_sort_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(24),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Single pass", 
					"Multiple pass" }
			] uint8 sort_warning_type;
	[WmiDataId(6), read] uint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Occurs when the sort operation on an executing query does not fit into memory. This event is not generated for sort operations caused by index creation, only for sort operations in a query. (For example, an Order By in a Select statement.) Use this event to identify queries that perform slowly because of the sort operation, particularly when the warning_type = 2, indicating multiple passes over the data were required to sort"): Amended,
    Guid("{1d52af22-ca17-4680-a0cc-04e9bb6a13fe}"), locale("MS\\0x409"),
    DisplayName("sort_warning"): Amended]
class XeSqlPkg_sort_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sort_warning: XeSqlPkg_sort_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(24),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Single pass", 
					"Multiple pass" }
			] uint8 sort_warning_type;
	[WmiDataId(6), read] uint32 query_operation_node_id;
	[WmiDataId(7), read] uint32 thread_id;
	[WmiDataId(8), read] uint32 dop;
	[WmiDataId(9), read] uint64 granted_memory_kb;
	[WmiDataId(10), read] uint64 used_memory_kb;
	[WmiDataId(11), read] uint64 worktable_physical_reads;
	[WmiDataId(12), read] uint64 worktable_physical_writes;
	[WmiDataId(13), read] uint64 actual_row_count;
};
		
[dynamic: ToInstance, Description("Occurs when the batch operation to build a hash table encounters low memory condition and switches to row mode operation. Use this event to identify performance issues due to low memory condition."): Amended,
    Guid("{b1bee1e2-510f-4b4f-935e-bfe2c31badfc}"), locale("MS\\0x409"),
    DisplayName("batch_hash_table_build_bailout"): Amended]
class XeSqlPkg_batch_hash_table_build_bailout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batch_hash_table_build_bailout: XeSqlPkg_batch_hash_table_build_bailout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 node_id;
	[WmiDataId(6), read] sint64 memory_limit_kb;
};
		
[dynamic: ToInstance, Description("Occurs at the end of the randomly sampled queries providing memory grant information.(It can be used, e.g., for telemetry)"): Amended,
    Guid("{ff94ec6d-702f-4a11-ae23-6e28ef81a690}"), locale("MS\\0x409"),
    DisplayName("query_memory_grant_info_sampling"): Amended]
class XeSqlPkg_query_memory_grant_info_sampling: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_grant_info_sampling: XeSqlPkg_query_memory_grant_info_sampling
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 required_memory;
	[WmiDataId(6), read] sint64 desired_memory;
	[WmiDataId(7), read] sint64 requested_memory;
	[WmiDataId(8), read] sint64 granted_memory;
	[WmiDataId(9), read] sint64 max_used_memory;
};
		
[dynamic: ToInstance, Description("Occurs when a query tries to get more memory grant during execution. Failure to get this additional memory grant may cause the query slowdown."): Amended,
    Guid("{065241ee-6e9e-4044-a00e-9c9e2e527b8b}"), locale("MS\\0x409"),
    DisplayName("additional_memory_grant"): Amended]
class XeSqlPkg_additional_memory_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class additional_memory_grant: XeSqlPkg_additional_memory_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 requested_memory_kb;
	[WmiDataId(6), read] sint64 granted_memory_kb;
	[WmiDataId(7), read] uint32 resource_pool_id;
};
		
[dynamic: ToInstance, Description("Occurs when the server memory usage increases or decreases by more than either 1 megabyte (MB) or 5% of the maximum server memory, whichever is larger. Use this event to identify periods of increased memory usage on the server."): Amended,
    Guid("{db00668b-8f86-4d4e-8273-2ccf2233e729}"), locale("MS\\0x409"),
    DisplayName("server_memory_change"): Amended]
class XeSqlPkg_server_memory_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class server_memory_change: XeSqlPkg_server_memory_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(26),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Server Memory Increased", 
					"Server Memory Decreased" }
			] uint8 memory_change;
	[WmiDataId(6), read] uint32 new_memory_size_mb;
};
		
[dynamic: ToInstance, Description("Occurs when any of the data or log files for a database changes size. Use this event to monitor changes to the size of database files."): Amended,
    Guid("{43b6dde6-c1e5-4db5-b537-1ecdf1a625b2}"), locale("MS\\0x409"),
    DisplayName("database_file_size_change"): Amended]
class XeSqlPkg_database_file_size_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_file_size_change: XeSqlPkg_database_file_size_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read, 
				XEMapId(27),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Data file", 
					"Log file" }
			] uint8 file_type;
	[WmiDataId(9), read] sint8  is_automatic;
	[WmiDataId(10), read] uint64 total_size_kb;
	[WmiDataId(11), read] sint64 size_change_kb;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string file_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when any of the data or log files for a database is about to grow."): Amended,
    Guid("{a6ee0ff1-84db-4a86-ae8d-b6e7fd90c0b1}"), locale("MS\\0x409"),
    DisplayName("database_file_growing"): Amended]
class XeSqlPkg_database_file_growing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_file_growing: XeSqlPkg_database_file_growing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read, 
				XEMapId(27),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Data file", 
					"Log file" }
			] uint8 file_type;
	[WmiDataId(8), read] sint8  is_automatic;
	[WmiDataId(9), read] uint64 total_size_kb;
	[WmiDataId(10), read] sint64 size_change_kb;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when the memory communication buffers for a query with multiple Parallelism operators become full, resulting in one of the operators writing to TempDB. If this happens multiple times in a single query plan the query performance is impacted. Use this event in conjunction with any of the *_showplan events to determine which operation in the generated plan is causing the exchange spill using the node_id field"): Amended,
    Guid("{9b753fe3-3ee6-46ea-98f9-a586417e071f}"), locale("MS\\0x409"),
    DisplayName("exchange_spill"): Amended]
class XeSqlPkg_exchange_spill: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class exchange_spill: XeSqlPkg_exchange_spill
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
};
		
[dynamic: ToInstance, Description("Occurs when the memory communication buffers for a query with multiple Parallelism operators become full, resulting in one of the operators writing to TempDB. If this happens multiple times in a single query plan the query performance is impacted. Use this event in conjunction with any of the *_showplan events to determine which operation in the generated plan is causing the exchange spill using the node_id field"): Amended,
    Guid("{9b753fe3-3ee6-46ea-98f9-a586417e071f}"), locale("MS\\0x409"),
    DisplayName("exchange_spill"): Amended]
class XeSqlPkg_exchange_spill: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class exchange_spill: XeSqlPkg_exchange_spill
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(7), read] uint32 thread_id;
	[WmiDataId(8), read] uint64 worktable_physical_writes;
};
		
[dynamic: ToInstance, Description("Occurs when a task has been blocked longer than the time that is specified by the sp_configure blocked process threshold setting. This event is not triggered by system tasks or by tasks that are waiting for non-deadlock-detectable resources. Use this event to troubleshoot blocked processes. (By default, blocked process reports are not generated.)"): Amended,
    Guid("{ac07082f-7a0a-4e85-9fd7-600b64bc7d93}"), locale("MS\\0x409"),
    DisplayName("blocked_process_report"): Amended]
class XeSqlPkg_blocked_process_report: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class blocked_process_report: XeSqlPkg_blocked_process_report
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] sint16 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 lock_mode;
	[WmiDataId(10), read] sint64 transaction_id;
	[WmiDataId(11), read, 
				XEMapId(232),
				BitMap { 
					"65536", 
					"4", 
					"16", 
					"8", 
					"1", 
					"64", 
					"0", 
					"2", 
					"32" },
				BitValues { 
					"RESOURCE_SUBTYPE_SYNCPOINT", 
					"EXCHANGE", 
					"EXTERNAL", 
					"GENERIC", 
					"LOCK", 
					"MATRIX_PARALLEL_QUERY", 
					"NONE", 
					"THREAD", 
					"WAITFOR" }
			] uint32 resource_owner_type;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string blocked_process;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a task has been blocked longer than the time that is specified by the sp_configure blocked process threshold setting. This event is not triggered by system tasks or by tasks that are waiting for non-deadlock-detectable resources. Use this event to troubleshoot blocked processes. Filter out sensitive information."): Amended,
    Guid("{8b667818-74bf-48bf-ae91-1554362509ea}"), locale("MS\\0x409"),
    DisplayName("blocked_process_report_filtered"): Amended]
class XeSqlPkg_blocked_process_report_filtered: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class blocked_process_report_filtered: XeSqlPkg_blocked_process_report_filtered
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] sint16 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 lock_mode;
	[WmiDataId(10), read] sint64 transaction_id;
	[WmiDataId(11), read, 
				XEMapId(232),
				BitMap { 
					"65536", 
					"4", 
					"16", 
					"8", 
					"1", 
					"64", 
					"0", 
					"2", 
					"32" },
				BitValues { 
					"RESOURCE_SUBTYPE_SYNCPOINT", 
					"EXCHANGE", 
					"EXTERNAL", 
					"GENERIC", 
					"LOCK", 
					"MATRIX_PARALLEL_QUERY", 
					"NONE", 
					"THREAD", 
					"WAITFOR" }
			] uint32 resource_owner_type;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string blocked_process_filtered;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when the state of a database mirror has changed. Use this event to monitor the condition of a database mirror."): Amended,
    Guid("{df604481-ed79-4590-9f7c-cd9f8874675f}"), locale("MS\\0x409"),
    DisplayName("database_mirroring_state_change"): Amended]
class XeSqlPkg_database_mirroring_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_mirroring_state_change: XeSqlPkg_database_mirroring_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(117),
				ValueMap { 
					"8", 
					"9", 
					"7", 
					"10", 
					"14", 
					"0", 
					"13", 
					"5", 
					"12", 
					"11", 
					"6", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"AutomaticFailover", 
					"Disabled", 
					"ManualFailover", 
					"NoQuorum", 
					"NotificationCount", 
					"NullNotification", 
					"PrimaryCatchingUp", 
					"PrimaryDied", 
					"PrimaryRunningExposed", 
					"SecondaryCatchingUp", 
					"SecondaryDied", 
					"ShippingAsPrimary", 
					"ShippingAsPrimaryNoWitness", 
					"ShippingAsSecondary", 
					"ShippingAsSecondaryNoWitness" }
			] uint8 new_state;
	[WmiDataId(6), read, 
				XEMapId(117),
				ValueMap { 
					"8", 
					"9", 
					"7", 
					"10", 
					"14", 
					"0", 
					"13", 
					"5", 
					"12", 
					"11", 
					"6", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"AutomaticFailover", 
					"Disabled", 
					"ManualFailover", 
					"NoQuorum", 
					"NotificationCount", 
					"NullNotification", 
					"PrimaryCatchingUp", 
					"PrimaryDied", 
					"PrimaryRunningExposed", 
					"SecondaryCatchingUp", 
					"SecondaryDied", 
					"ShippingAsPrimary", 
					"ShippingAsPrimaryNoWitness", 
					"ShippingAsSecondary", 
					"ShippingAsSecondaryNoWitness" }
			] uint8 prior_state;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string state_change_desc;
};
		
[dynamic: ToInstance, Description("Occurs during an online index build process to indicate the progress of the build operation. Each stage of an online index build operation generates an event. Use this event to monitor online index builds."): Amended,
    Guid("{bfcb6b84-b925-4293-9da7-ebeb01d0cfad}"), locale("MS\\0x409"),
    DisplayName("progress_report_online_index_operation"): Amended]
class XeSqlPkg_progress_report_online_index_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class progress_report_online_index_operation: XeSqlPkg_progress_report_online_index_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(40),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10" },
				Values { 
					"Start", 
					"Stage 1 execution begin", 
					"Stage 1 execution end", 
					"Stage 2 execution begin", 
					"Stage 2 execution end", 
					"Inserted row count", 
					"Done", 
					"Query failed", 
					"Deleted row", 
					"Error" }
			] uint8 build_stage;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 duration;
	[WmiDataId(10), read] uint64 rows_inserted;
	[WmiDataId(11), read] uint64 parallel_process_thread_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs during an online index build process to indicate the progress of the build operation. Each stage of an online index build operation generates an event. Use this event to monitor online index builds."): Amended,
    Guid("{bfcb6b84-b925-4293-9da7-ebeb01d0cfad}"), locale("MS\\0x409"),
    DisplayName("progress_report_online_index_operation"): Amended]
class XeSqlPkg_progress_report_online_index_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class progress_report_online_index_operation: XeSqlPkg_progress_report_online_index_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(40),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10" },
				Values { 
					"Start", 
					"Stage 1 execution begin", 
					"Stage 1 execution end", 
					"Stage 2 execution begin", 
					"Stage 2 execution end", 
					"Inserted row count", 
					"Done", 
					"Query failed", 
					"Deleted row", 
					"Error" }
			] uint8 build_stage;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 partition_number;
	[WmiDataId(10), read] uint64 partition_id;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 rows_inserted;
	[WmiDataId(13), read] uint64 parallel_process_thread_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs during an online index build process to indicate the progress of the build operation. Each stage of an online index build operation generates an event. Use this event to monitor online index builds."): Amended,
    Guid("{bfcb6b84-b925-4293-9da7-ebeb01d0cfad}"), locale("MS\\0x409"),
    DisplayName("progress_report_online_index_operation"): Amended]
class XeSqlPkg_progress_report_online_index_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class progress_report_online_index_operation: XeSqlPkg_progress_report_online_index_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(40),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10" },
				Values { 
					"Start", 
					"Stage 1 execution begin", 
					"Stage 1 execution end", 
					"Stage 2 execution begin", 
					"Stage 2 execution end", 
					"Inserted row count", 
					"Done", 
					"Query failed", 
					"Deleted row", 
					"Error" }
			] uint8 build_stage;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 partition_number;
	[WmiDataId(10), read] uint64 partition_id;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 rows_inserted;
	[WmiDataId(13), read] uint64 rows_inserted_batch;
	[WmiDataId(14), read] uint64 parallel_process_thread_id;
	[WmiDataId(15), read] sint32 error_number;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs during an online index build process when something happens with a row during index population. This event is used for test purposes only."): Amended,
    Guid("{be854a36-0771-45df-bad2-407351d647eb}"), locale("MS\\0x409"),
    DisplayName("online_index_operation_row_event_test_point"): Amended]
class XeSqlPkg_online_index_operation_row_event_test_point: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class online_index_operation_row_event_test_point: XeSqlPkg_online_index_operation_row_event_test_point
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(41),
				ValueMap { 
					"1", 
					"2", 
					"3" },
				Values { 
					"Non-optimized insert in mapping index successful", 
					"Non-optimized insert in build successful", 
					"Non-optimized update mapping index successful" }
			] uint8 row_event;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 partition_number;
	[WmiDataId(10), read] uint64 partition_id;
	[WmiDataId(11), read] uint64 rows_inserted;
};
		
[dynamic: ToInstance, Description("Trace output column values of each row on each query plan operator"): Amended,
    Guid("{5f0ca64d-6f2d-4b9e-9149-b20bb3102bd3}"), locale("MS\\0x409"),
    DisplayName("query_trace_column_values"): Amended]
class XeSqlPkg_query_trace_column_values: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_trace_column_values: XeSqlPkg_query_trace_column_values
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 node_id;
	[WmiDataId(6), read] uint64 exec_id;
	[WmiDataId(7), read] uint64 row_id;
	[WmiDataId(8), read] uint64 row_number;
	[WmiDataId(9), read] uint32 column_id;
	[WmiDataId(10), read] uint32 thread_id;
	[WmiDataId(11), read] uint64 query_hash;
	[WmiDataId(12), read] uint64 query_plan_hash;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string column_value;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string node_name;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string column_name;
};
		
[dynamic: ToInstance, Description("Trace output column values of each row on each query plan operator"): Amended,
    Guid("{5f0ca64d-6f2d-4b9e-9149-b20bb3102bd3}"), locale("MS\\0x409"),
    DisplayName("query_trace_column_values"): Amended]
class XeSqlPkg_query_trace_column_values: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_trace_column_values: XeSqlPkg_query_trace_column_values
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 node_id;
	[WmiDataId(6), read] uint64 exec_id;
	[WmiDataId(7), read] uint64 row_id;
	[WmiDataId(8), read] uint64 row_number;
	[WmiDataId(9), read] uint32 column_id;
	[WmiDataId(10), read] uint32 thread_id;
	[WmiDataId(11), read] uint64 query_hash;
	[WmiDataId(12), read] sint64 query_hash_signed;
	[WmiDataId(13), read] uint64 query_plan_hash;
	[WmiDataId(14), read] sint64 query_plan_hash_signed;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string column_value;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string node_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string column_name;
};
		
[dynamic: ToInstance, Description("Trace output column values of each row on each query plan operator"): Amended,
    Guid("{5f0ca64d-6f2d-4b9e-9149-b20bb3102bd3}"), locale("MS\\0x409"),
    DisplayName("query_trace_column_values"): Amended]
class XeSqlPkg_query_trace_column_values: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class query_trace_column_values: XeSqlPkg_query_trace_column_values
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 node_id;
	[WmiDataId(6), read] uint64 exec_id;
	[WmiDataId(7), read] uint64 row_id;
	[WmiDataId(8), read] uint64 row_number;
	[WmiDataId(9), read] uint32 column_id;
	[WmiDataId(10), read] uint32 thread_id;
	[WmiDataId(11), read] uint64 query_hash;
	[WmiDataId(12), read] sint64 query_hash_signed;
	[WmiDataId(13), read] uint64 query_plan_hash;
	[WmiDataId(14), read] sint64 query_plan_hash_signed;
	[WmiDataId(15), read] sint8  is_fake;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string column_value;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string node_name;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string column_name;
};
		
[dynamic: ToInstance, Description("Search blob trace for the problem blob handle lifetime"): Amended,
    Guid("{7edacf07-e2ce-40b3-aee4-901f8da5bbaf}"), locale("MS\\0x409"),
    DisplayName("blob_trace_backtrack"): Amended]
class XeSqlPkg_blob_trace_backtrack: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class blob_trace_backtrack: XeSqlPkg_blob_trace_backtrack
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 record_id;
	[WmiDataId(6), read] uint64 record_time;
	[WmiDataId(7), read] uint32 blob_session_id;
	[WmiDataId(8), read, Pointer] object  factory_address;
	[WmiDataId(9), read, Pointer] object  task_address;
	[WmiDataId(10), read] uint32 factory_state;
	[WmiDataId(11), read] uint32 content_id;
	[WmiDataId(12), read] sint64 blob_handle;
	[WmiDataId(13), read] sint64 blob_handle_last;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string blob_event;
	[WmiDataId(15), read, StringTermination("NullTerminated")] string blob_callstack;
};
		
[dynamic: ToInstance, Description("Occurs when a query is blocking other queries while waiting for memory grant"): Amended,
    Guid("{dd27c5cc-70af-4906-8e31-3b03ed1743f8}"), locale("MS\\0x409"),
    DisplayName("query_memory_grant_blocking"): Amended]
class XeSqlPkg_query_memory_grant_blocking: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_grant_blocking: XeSqlPkg_query_memory_grant_blocking
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 blocking_session_id;
	[WmiDataId(6), read] uint64 blocking_query_hash;
	[WmiDataId(7), read] uint64 blocking_query_plan_hash;
	[WmiDataId(8), read, Extension("WmiTime")] uint64 request_time;
	[WmiDataId(9), read] uint64 wait_time_sec;
	[WmiDataId(10), read] uint64 requested_memory_kb;
	[WmiDataId(11), read] uint64 required_memory_kb;
	[WmiDataId(12), read] uint64 ideal_memory_kb;
	[WmiDataId(13), read] uint32 dop;
	[WmiDataId(14), read] real64 query_cost;
	[WmiDataId(15), read] uint32 timeout_sec;
	[WmiDataId(16), read] uint32 group_id;
	[WmiDataId(17), read] uint32 pool_id;
	[WmiDataId(18), read] uint32 total_waiter_count;
	[WmiDataId(19), read] uint64 total_grantee_count;
	[WmiDataId(20), read] uint64 total_max_memory_kb;
	[WmiDataId(21), read] uint64 total_available_memory_kb;
	[WmiDataId(22), read] uint64 total_granted_memory_kb;
	[WmiDataId(23), read] uint64 max_query_memory_kb;
	[WmiDataId(24), read, Extension("Variant")] object blocking_sql_handle;
	[WmiDataId(25), read, Extension("Variant")] object blocking_plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs at the end of query processing for queries with memory grant over 5MB to let users know about memory grant inaccuracies"): Amended,
    Guid("{9666d450-1355-469d-a214-99139f13469a}"), locale("MS\\0x409"),
    DisplayName("query_memory_grant_usage"): Amended]
class XeSqlPkg_query_memory_grant_usage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_grant_usage: XeSqlPkg_query_memory_grant_usage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 ideal_memory_kb;
	[WmiDataId(6), read] uint64 granted_memory_kb;
	[WmiDataId(7), read] uint64 used_memory_kb;
	[WmiDataId(8), read] uint32 usage_percent;
	[WmiDataId(9), read] uint32 dop;
	[WmiDataId(10), read] uint32 granted_percent;
};
		
[dynamic: ToInstance, Description("Occurs when a query is entering a wait queue for memory grant"): Amended,
    Guid("{b385b1c5-ae64-4235-9827-636c4d804669}"), locale("MS\\0x409"),
    DisplayName("query_memory_grant_wait_begin"): Amended]
class XeSqlPkg_query_memory_grant_wait_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_grant_wait_begin: XeSqlPkg_query_memory_grant_wait_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 query_hash;
	[WmiDataId(6), read] sint64 query_hash_signed;
	[WmiDataId(7), read] uint64 query_plan_hash;
	[WmiDataId(8), read] sint64 query_plan_hash_signed;
	[WmiDataId(9), read] uint64 wait_id;
	[WmiDataId(10), read] uint64 requested_memory_kb;
	[WmiDataId(11), read] uint64 required_memory_kb;
	[WmiDataId(12), read] uint64 ideal_memory_kb;
	[WmiDataId(13), read] uint64 timeout_sec;
	[WmiDataId(14), read] sint8  is_big_query;
	[WmiDataId(15), read] uint32 group_id;
	[WmiDataId(16), read] uint32 pool_id;
	[WmiDataId(17), read] uint32 total_waiter_count;
	[WmiDataId(18), read] uint32 total_grantee_count;
	[WmiDataId(19), read] uint64 total_available_memory_kb;
	[WmiDataId(20), read] uint64 total_granted_memory_kb;
	[WmiDataId(21), read, Extension("Variant")] object sql_handle;
	[WmiDataId(22), read, Extension("Variant")] object plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a query is entering a wait queue for memory grant"): Amended,
    Guid("{b385b1c5-ae64-4235-9827-636c4d804669}"), locale("MS\\0x409"),
    DisplayName("query_memory_grant_wait_begin"): Amended]
class XeSqlPkg_query_memory_grant_wait_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_memory_grant_wait_begin: XeSqlPkg_query_memory_grant_wait_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 query_hash;
	[WmiDataId(6), read] sint64 query_hash_signed;
	[WmiDataId(7), read] uint64 query_plan_hash;
	[WmiDataId(8), read] sint64 query_plan_hash_signed;
	[WmiDataId(9), read] uint64 wait_id;
	[WmiDataId(10), read] uint64 requested_memory_kb;
	[WmiDataId(11), read] uint64 required_memory_kb;
	[WmiDataId(12), read] uint64 ideal_memory_kb;
	[WmiDataId(13), read] uint64 timeout_sec;
	[WmiDataId(14), read] sint8  is_big_query;
	[WmiDataId(15), read] uint32 group_id;
	[WmiDataId(16), read] uint32 pool_id;
	[WmiDataId(17), read] uint32 total_waiter_count;
	[WmiDataId(18), read] uint32 total_grantee_count;
	[WmiDataId(19), read] uint64 total_available_memory_kb;
	[WmiDataId(20), read] uint64 total_granted_memory_kb;
	[WmiDataId(21), read] sint8  is_columnstore_build;
	[WmiDataId(22), read] sint8  is_columnstore_bulk_insert;
	[WmiDataId(23), read] uint64 adjusted_timeout_sec;
	[WmiDataId(24), read, Extension("Variant")] object sql_handle;
	[WmiDataId(25), read, Extension("Variant")] object plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a query is exiting a wait queue for memory grant"): Amended,
    Guid("{eca5cebf-5756-4e90-a721-83c1e785a8fd}"), locale("MS\\0x409"),
    DisplayName("query_memory_grant_wait_end"): Amended]
class XeSqlPkg_query_memory_grant_wait_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_grant_wait_end: XeSqlPkg_query_memory_grant_wait_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 query_hash;
	[WmiDataId(6), read] sint64 query_hash_signed;
	[WmiDataId(7), read] uint64 query_plan_hash;
	[WmiDataId(8), read] sint64 query_plan_hash_signed;
	[WmiDataId(9), read] uint64 wait_id;
	[WmiDataId(10), read] uint64 requested_memory_kb;
	[WmiDataId(11), read] uint64 required_memory_kb;
	[WmiDataId(12), read] uint64 ideal_memory_kb;
	[WmiDataId(13), read] uint64 timeout_sec;
	[WmiDataId(14), read] sint8  is_big_query;
	[WmiDataId(15), read] uint64 wait_time_sec;
	[WmiDataId(16), read, 
				XEMapId(198),
				ValueMap { 
					"2", 
					"3", 
					"5", 
					"6", 
					"0", 
					"4", 
					"1" },
				Values { 
					"QUERY_EXIT_CANCELLED", 
					"QUERY_EXIT_DEADLOCK", 
					"QUERY_EXIT_GRANTED", 
					"QUERY_EXIT_GRANTED_REQUIRED_ONLY", 
					"QUERY_EXIT_NOT_TRIED", 
					"QUERY_EXIT_OTHER_ERROR", 
					"QUERY_EXIT_TIMEDOUT" }
			] uint32 exit_cause;
	[WmiDataId(17), read] uint64 granted_memory_kb;
	[WmiDataId(18), read] uint32 group_id;
	[WmiDataId(19), read] uint32 pool_id;
	[WmiDataId(20), read] uint32 total_waiter_count;
	[WmiDataId(21), read] uint32 total_grantee_count;
	[WmiDataId(22), read] uint64 total_available_memory_kb;
	[WmiDataId(23), read] uint64 total_granted_memory_kb;
	[WmiDataId(24), read, Extension("Variant")] object sql_handle;
	[WmiDataId(25), read, Extension("Variant")] object plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a query is exiting a wait queue for memory grant"): Amended,
    Guid("{eca5cebf-5756-4e90-a721-83c1e785a8fd}"), locale("MS\\0x409"),
    DisplayName("query_memory_grant_wait_end"): Amended]
class XeSqlPkg_query_memory_grant_wait_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_memory_grant_wait_end: XeSqlPkg_query_memory_grant_wait_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 query_hash;
	[WmiDataId(6), read] sint64 query_hash_signed;
	[WmiDataId(7), read] uint64 query_plan_hash;
	[WmiDataId(8), read] sint64 query_plan_hash_signed;
	[WmiDataId(9), read] uint64 wait_id;
	[WmiDataId(10), read] uint64 requested_memory_kb;
	[WmiDataId(11), read] uint64 required_memory_kb;
	[WmiDataId(12), read] uint64 ideal_memory_kb;
	[WmiDataId(13), read] uint64 timeout_sec;
	[WmiDataId(14), read] sint8  is_big_query;
	[WmiDataId(15), read] uint64 wait_time_sec;
	[WmiDataId(16), read, 
				XEMapId(198),
				ValueMap { 
					"2", 
					"3", 
					"5", 
					"6", 
					"0", 
					"4", 
					"1" },
				Values { 
					"QUERY_EXIT_CANCELLED", 
					"QUERY_EXIT_DEADLOCK", 
					"QUERY_EXIT_GRANTED", 
					"QUERY_EXIT_GRANTED_REQUIRED_ONLY", 
					"QUERY_EXIT_NOT_TRIED", 
					"QUERY_EXIT_OTHER_ERROR", 
					"QUERY_EXIT_TIMEDOUT" }
			] uint32 exit_cause;
	[WmiDataId(17), read] uint64 granted_memory_kb;
	[WmiDataId(18), read] uint32 group_id;
	[WmiDataId(19), read] uint32 pool_id;
	[WmiDataId(20), read] uint32 total_waiter_count;
	[WmiDataId(21), read] uint32 total_grantee_count;
	[WmiDataId(22), read] uint64 total_available_memory_kb;
	[WmiDataId(23), read] uint64 total_granted_memory_kb;
	[WmiDataId(24), read] sint8  is_columnstore_build;
	[WmiDataId(25), read] sint8  is_columnstore_bulk_insert;
	[WmiDataId(26), read] uint64 adjusted_timeout_sec;
	[WmiDataId(27), read, Extension("Variant")] object sql_handle;
	[WmiDataId(28), read, Extension("Variant")] object plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a query is exiting a wait queue for memory grant"): Amended,
    Guid("{eca5cebf-5756-4e90-a721-83c1e785a8fd}"), locale("MS\\0x409"),
    DisplayName("query_memory_grant_wait_end"): Amended]
class XeSqlPkg_query_memory_grant_wait_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class query_memory_grant_wait_end: XeSqlPkg_query_memory_grant_wait_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 query_hash;
	[WmiDataId(6), read] sint64 query_hash_signed;
	[WmiDataId(7), read] uint64 query_plan_hash;
	[WmiDataId(8), read] sint64 query_plan_hash_signed;
	[WmiDataId(9), read] uint64 wait_id;
	[WmiDataId(10), read] uint64 requested_memory_kb;
	[WmiDataId(11), read] uint64 required_memory_kb;
	[WmiDataId(12), read] uint64 ideal_memory_kb;
	[WmiDataId(13), read] uint64 timeout_sec;
	[WmiDataId(14), read] sint8  is_big_query;
	[WmiDataId(15), read] uint64 wait_time_sec;
	[WmiDataId(16), read, 
				XEMapId(198),
				ValueMap { 
					"2", 
					"3", 
					"5", 
					"6", 
					"0", 
					"4", 
					"1" },
				Values { 
					"QUERY_EXIT_CANCELLED", 
					"QUERY_EXIT_DEADLOCK", 
					"QUERY_EXIT_GRANTED", 
					"QUERY_EXIT_GRANTED_REQUIRED_ONLY", 
					"QUERY_EXIT_NOT_TRIED", 
					"QUERY_EXIT_OTHER_ERROR", 
					"QUERY_EXIT_TIMEDOUT" }
			] uint32 exit_cause;
	[WmiDataId(17), read] uint64 granted_memory_kb;
	[WmiDataId(18), read] uint32 group_id;
	[WmiDataId(19), read] uint32 pool_id;
	[WmiDataId(20), read] uint32 total_waiter_count;
	[WmiDataId(21), read] uint32 total_grantee_count;
	[WmiDataId(22), read] uint64 total_available_memory_kb;
	[WmiDataId(23), read] uint64 total_granted_memory_kb;
	[WmiDataId(24), read] sint8  is_columnstore_build;
	[WmiDataId(25), read] sint8  is_columnstore_bulk_insert;
	[WmiDataId(26), read] uint64 adjusted_timeout_sec;
	[WmiDataId(27), read] sint8  has_columnstore_bulk_insert_retried_with_normal_timeout;
	[WmiDataId(28), read, Extension("Variant")] object sql_handle;
	[WmiDataId(29), read, Extension("Variant")] object plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs at every 5 minute intervals for each resource governor resource pool"): Amended,
    Guid("{f3e7f7ff-53c0-472c-9892-84d6b9b64b3f}"), locale("MS\\0x409"),
    DisplayName("query_memory_grant_resource_semaphores"): Amended]
class XeSqlPkg_query_memory_grant_resource_semaphores: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_grant_resource_semaphores: XeSqlPkg_query_memory_grant_resource_semaphores
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 pool_id;
	[WmiDataId(6), read] uint64 target_memory_kb;
	[WmiDataId(7), read] uint64 max_target_memory_kb;
	[WmiDataId(8), read] uint64 total_memory_kb;
	[WmiDataId(9), read] uint64 available_memory_kb;
	[WmiDataId(10), read] uint64 granted_memory_kb;
	[WmiDataId(11), read] uint64 used_memory_kb;
	[WmiDataId(12), read] uint32 grantee_count;
	[WmiDataId(13), read] uint32 waiter_count;
	[WmiDataId(14), read] uint64 timeout_error_count;
	[WmiDataId(15), read] uint64 forced_grant_count;
};
		
[dynamic: ToInstance, Description("Occurs at every 5 minute intervals for each query with memory grant"): Amended,
    Guid("{2f62cd23-b6fa-4835-8c7c-0a7fbdbc614e}"), locale("MS\\0x409"),
    DisplayName("query_memory_grants"): Amended]
class XeSqlPkg_query_memory_grants: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_grants: XeSqlPkg_query_memory_grants
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 data_id;
	[WmiDataId(6), read] sint32 session_id;
	[WmiDataId(7), read] sint32 request_id;
	[WmiDataId(8), read] sint32 scheduler_id;
	[WmiDataId(9), read] sint32 dop;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 request_time;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 grant_time;
	[WmiDataId(12), read] uint64 requested_memory_kb;
	[WmiDataId(13), read] uint64 granted_memory_kb;
	[WmiDataId(14), read] uint64 required_memory_kb;
	[WmiDataId(15), read] uint64 ideal_memory_kb;
	[WmiDataId(16), read] uint64 used_memory_kb;
	[WmiDataId(17), read] uint64 max_used_memory_kb;
	[WmiDataId(18), read] real64 query_cost;
	[WmiDataId(19), read] uint32 timeout_sec;
	[WmiDataId(20), read] sint32 queue_id;
	[WmiDataId(21), read] sint32 wait_order;
	[WmiDataId(22), read] sint8  is_next_candidate;
	[WmiDataId(23), read] uint64 wait_time_ms;
	[WmiDataId(24), read] uint32 group_id;
	[WmiDataId(25), read] uint32 pool_id;
	[WmiDataId(26), read] sint32 reserved_worker_count;
	[WmiDataId(27), read] sint32 used_worker_count;
	[WmiDataId(28), read] sint32 max_used_worker_count;
	[WmiDataId(29), read] uint64 reserved_node_bitmap;
	[WmiDataId(30), read, Extension("Variant")] object sql_handle;
	[WmiDataId(31), read, Extension("Variant")] object plan_handle;
};
		
[dynamic: ToInstance, Description("Occurs when a page is added to the suspect_pages table in the msdb database. This event is issued asynchronously from the insertion of a corresponding page into the suspect_pages table. Therefore, a job that is listening to this event may not find the correlating suspect_pages entry immediately."): Amended,
    Guid("{47f601cd-ac21-4ce0-a8b4-9436aa7ab5cd}"), locale("MS\\0x409"),
    DisplayName("database_suspect_data_page"): Amended]
class XeSqlPkg_database_suspect_data_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_suspect_data_page: XeSqlPkg_database_suspect_data_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, 
				XEMapId(97),
				ValueMap { 
					"2", 
					"7", 
					"6", 
					"8", 
					"0", 
					"1", 
					"5", 
					"4", 
					"3" },
				Values { 
					"BAD_CHECKSUM", 
					"DEALLOCATED", 
					"FORMATTED", 
					"ILLEGAL_HIGH", 
					"ILLEGAL_LOW", 
					"IO_ERROR", 
					"REPAIRED", 
					"RESTORED", 
					"TORN_PAGE" }
			] uint8 page_error;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when Resource Governor detects that a query has exceeded the CPU threshold that is specified for REQUEST_MAX_CPU_TIME_SEC. The detection interval is five seconds. The event is guaranteed to detect the queries that exceed the threshold by at least five seconds. If a query exceeds the threshold by less than five seconds, the detection might be missed, depending on the timing of the query and the time of the last detection sweep."): Amended,
    Guid("{bf253c2c-2eaa-4b02-b101-5e11d7d25b45}"), locale("MS\\0x409"),
    DisplayName("cpu_threshold_exceeded"): Amended]
class XeSqlPkg_cpu_threshold_exceeded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cpu_threshold_exceeded: XeSqlPkg_cpu_threshold_exceeded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_time;
	[WmiDataId(6), read] sint16 session_id;
	[WmiDataId(7), read] uint32 group_id;
};
		
[dynamic: ToInstance, Description("Process an invalidate cache log record"): Amended,
    Guid("{411CA545-DFFD-4408-8D2F-C1074FFE6636}"), locale("MS\\0x409"),
    DisplayName("process_invalidate_cache_logrec"): Amended]
class XeSqlPkg_process_invalidate_cache_logrec: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class process_invalidate_cache_logrec: XeSqlPkg_process_invalidate_cache_logrec
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 cache_type;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string keys;
};
		
[dynamic: ToInstance, Description("Remove database cache"): Amended,
    Guid("{894B5454-9285-406A-B825-9675C0420047}"), locale("MS\\0x409"),
    DisplayName("remove_database_cache"): Amended]
class XeSqlPkg_remove_database_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remove_database_cache: XeSqlPkg_remove_database_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Page allocated"): Amended,
    Guid("{29c4a861-b98d-4c5b-9bef-ab3f35f8fbf5}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_page_allocated"): Amended]
class XeSqlPkg_buffer_pool_page_allocated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_page_allocated: XeSqlPkg_buffer_pool_page_allocated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  worker_address;
	[WmiDataId(6), read] uint64 number_pages;
	[WmiDataId(7), read] uint64 page_size;
	[WmiDataId(8), read] uint64 page_location;
	[WmiDataId(9), read, 
				XEMapId(121),
				ValueMap { 
					"2", 
					"3", 
					"5", 
					"0", 
					"4", 
					"1" },
				Values { 
					"EMERGENCY", 
					"LARGEPAGE", 
					"LAST", 
					"NONE", 
					"RESERVATION", 
					"SINGLE" }
			] uint32 allocator_type;
	[WmiDataId(10), read] uint32 numa_node_id;
	[WmiDataId(11), read, 
				XEMapId(233),
				BitMap { 
					"1", 
					"16", 
					"4", 
					"64", 
					"32", 
					"0", 
					"8", 
					"2" },
				BitValues { 
					"ColdBuffer", 
					"DecommitPage", 
					"ForShortTermUse", 
					"IsMapped", 
					"L2DiskIo", 
					"NoStealOption", 
					"NoZeroing", 
					"PartOfReservation" }
			] uint32 steal_options;
	[WmiDataId(12), read] uint32 pool_id;
};
		
[dynamic: ToInstance, Description("Page freed"): Amended,
    Guid("{4c0968d6-535b-453e-bef4-80332559b0d6}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_page_freed"): Amended]
class XeSqlPkg_buffer_pool_page_freed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_page_freed: XeSqlPkg_buffer_pool_page_freed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  worker_address;
	[WmiDataId(6), read] uint64 number_pages;
	[WmiDataId(7), read] uint64 page_size;
	[WmiDataId(8), read] uint64 page_location;
	[WmiDataId(9), read] uint32 numa_node_id;
	[WmiDataId(10), read, 
				XEMapId(233),
				BitMap { 
					"1", 
					"16", 
					"4", 
					"64", 
					"32", 
					"0", 
					"8", 
					"2" },
				BitValues { 
					"ColdBuffer", 
					"DecommitPage", 
					"ForShortTermUse", 
					"IsMapped", 
					"L2DiskIo", 
					"NoStealOption", 
					"NoZeroing", 
					"PartOfReservation" }
			] uint32 steal_options;
};
		
[dynamic: ToInstance, Description("Occurs when new extents are allocated during index building. Use this event to indentify how extents are used by an index."): Amended,
    Guid("{72833EED-0E7A-4248-87AF-EBCD6C8D57BE}"), locale("MS\\0x409"),
    DisplayName("index_build_extents_allocation"): Amended]
class XeSqlPkg_index_build_extents_allocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class index_build_extents_allocation: XeSqlPkg_index_build_extents_allocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_internal_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint32 extents_number;
	[WmiDataId(8), read] uint32 breaks_number;
	[WmiDataId(9), read] uint32 first_extent_id;
};
		
[dynamic: ToInstance, Description("Pre-allocating new cache range for a Sequence object.See system view sys.sequences for more details."): Amended,
    Guid("{9ce55442-0d75-4355-922d-0eec384825dd}"), locale("MS\\0x409"),
    DisplayName("metadata_persist_last_value_for_sequence"): Amended]
class XeSqlPkg_metadata_persist_last_value_for_sequence: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_persist_last_value_for_sequence: XeSqlPkg_metadata_persist_last_value_for_sequence
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 sequence_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string persisted_value;
};
		
[dynamic: ToInstance, Description("Pre-allocating new cache range for the identity column."): Amended,
    Guid("{e3dfd8c7-9eaf-4086-9a20-ceb8743aefe7}"), locale("MS\\0x409"),
    DisplayName("metadata_persist_last_value_for_identity_column"): Amended]
class XeSqlPkg_metadata_persist_last_value_for_identity_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_persist_last_value_for_identity_column: XeSqlPkg_metadata_persist_last_value_for_identity_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 table_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string persisted_value;
};
		
[dynamic: ToInstance, Description("The SEQUENCE_LATCH_TIMEOUT failpoint happened."): Amended,
    Guid("{02265941-b4d0-4390-9173-91596cc32da1}"), locale("MS\\0x409"),
    DisplayName("metadata_sequence_latch_timeout_failpoint"): Amended]
class XeSqlPkg_metadata_sequence_latch_timeout_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_sequence_latch_timeout_failpoint: XeSqlPkg_metadata_sequence_latch_timeout_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Occurs when the extent activation cache has reached its max size and we have to go into overflow mechanism."): Amended,
    Guid("{681CD116-629D-4708-A6B1-AA73937A62A7}"), locale("MS\\0x409"),
    DisplayName("extent_activation_cache_overflow"): Amended]
class XeSqlPkg_extent_activation_cache_overflow: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class extent_activation_cache_overflow: XeSqlPkg_extent_activation_cache_overflow
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 cache_max_count;
	[WmiDataId(6), read] uint32 current_overflow_count;
};
		
[dynamic: ToInstance, Description("XEvent used for testing purpose in allocation of page during physical and logical page swapping for index reorganize"): Amended,
    Guid("{80AA009E-A759-49EE-B8EB-7AC4F1B0980B}"), locale("MS\\0x409"),
    DisplayName("index_reorg_page_allocation_xevent"): Amended]
class XeSqlPkg_index_reorg_page_allocation_xevent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class index_reorg_page_allocation_xevent: XeSqlPkg_index_reorg_page_allocation_xevent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read, Pointer] object  raise_error;
};
		
[dynamic: ToInstance, Description("Occurs immediately before QVM context is serialized and shipped, and immediately after it is received and deserialized. Use this to get a dump of shipped/received QVM context data."): Amended,
    Guid("{e98b6c20-9bbd-42e1-817b-b0dad3de3538}"), locale("MS\\0x409"),
    DisplayName("queryvm_context_shipping"): Amended]
class XeSqlPkg_queryvm_context_shipping: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class queryvm_context_shipping: XeSqlPkg_queryvm_context_shipping
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(55),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint8 dump_point;
	[WmiDataId(6), read] sint32 remote_exchange_node_id;
	[WmiDataId(7), read] sint16 remote_exchange_thread_id;
	[WmiDataId(8), read] uint64 connect_brick_id;
	[WmiDataId(9), read] uint64 query_id;
	[WmiDataId(10), read] uint64 context_sessionid;
	[WmiDataId(11), read] uint64 context_sessiontoken;
	[WmiDataId(12), read] uint64 context_brickgenerationid;
	[WmiDataId(13), read] sint8  context_issysadmin;
	[WmiDataId(14), read] sint8  context_isdac;
	[WmiDataId(15), read] sint16 context_dbcompatlevel;
	[WmiDataId(16), read] sint64 context_schidprocpcp;
	[WmiDataId(17), read] sint64 context_objidprocpcp;
	[WmiDataId(18), read] sint64 context_dbidprocpcp;
	[WmiDataId(19), read, Pointer] object  context_dbso;
	[WmiDataId(20), read] uint32 context_dbso_useropt1;
	[WmiDataId(21), read] uint32 context_dbso_useropt2;
	[WmiDataId(22), read] uint32 context_dbso_useropt1setmask;
	[WmiDataId(23), read] sint64 context_dbso_idtinsert_objid;
	[WmiDataId(24), read] sint8  context_dbso_idtinsert_state;
	[WmiDataId(25), read] uint16 context_dbso_idtinsert_dbid;
	[WmiDataId(26), read] sint64 context_dbso_rowcnt;
	[WmiDataId(27), read] sint64 context_dbso_statlist;
	[WmiDataId(28), read] sint64 context_dbso_textsize;
	[WmiDataId(29), read] sint64 context_dbso_offsets;
	[WmiDataId(30), read] uint64 context_dbso_locktimeout;
	[WmiDataId(31), read] uint64 context_dbso_querygov;
	[WmiDataId(32), read] sint64 context_dbso_dtfmt;
	[WmiDataId(33), read] sint64 context_dbso_daydatefirst;
	[WmiDataId(34), read] sint64 context_dbso_ddlckpri;
	[WmiDataId(35), read] sint64 context_dbso_isolvl;
	[WmiDataId(36), read] sint64 context_dbso_fipsflag;
	[WmiDataId(37), read] sint16 context_dbso_langid;
};
		
[dynamic: ToInstance, Description("Occurs immediately before QVM context is serialized and written back, and immediately after it is received and deserialized. Use this to get a snapshot of writeback QVM context data."): Amended,
    Guid("{f28b1522-fcbe-449e-967e-feeb2cc6c009}"), locale("MS\\0x409"),
    DisplayName("queryvm_context_writeback"): Amended]
class XeSqlPkg_queryvm_context_writeback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class queryvm_context_writeback: XeSqlPkg_queryvm_context_writeback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(55),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint8 dump_point;
	[WmiDataId(6), read] sint32 remote_exchange_node_id;
	[WmiDataId(7), read] sint16 remote_exchange_thread_id;
	[WmiDataId(8), read] uint64 connect_brick_id;
	[WmiDataId(9), read] uint64 query_id;
	[WmiDataId(10), read] sint64 context_newidt;
	[WmiDataId(11), read] sint64 context_lasterror;
};
		
[dynamic: ToInstance, Description("Occurs whenever some context that fits in Int64 is accessed from within QVM."): Amended,
    Guid("{ebb1fb89-644a-4e1b-b129-d5f300f692a6}"), locale("MS\\0x409"),
    DisplayName("queryvm_context_access_int64"): Amended]
class XeSqlPkg_queryvm_context_access_int64: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class queryvm_context_access_int64: XeSqlPkg_queryvm_context_access_int64
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 remote_exchange_node_id;
	[WmiDataId(6), read] sint16 remote_exchange_thread_id;
	[WmiDataId(7), read] uint64 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
	[WmiDataId(9), read, 
				XEMapId(57),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9" },
				Values { 
					"DbAndSetOpts", 
					"SessionId", 
					"IsSysAdmin", 
					"IsDac", 
					"DbCompatLevel", 
					"SchidProcPcp", 
					"ObjidProcPcp", 
					"DbidProcPcp", 
					"RetStat", 
					"LastError" }
			] uint8 context_accessed_name;
	[WmiDataId(10), read] sint64 context_accessed_value;
};
		
[dynamic: ToInstance, Description("Occurs whenever CDbAndSetOpts is accessed from within QVM."): Amended,
    Guid("{11486fbd-a345-45c4-8f2d-4d4a313d5f70}"), locale("MS\\0x409"),
    DisplayName("queryvm_context_access_cdbandsetopts"): Amended]
class XeSqlPkg_queryvm_context_access_cdbandsetopts: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class queryvm_context_access_cdbandsetopts: XeSqlPkg_queryvm_context_access_cdbandsetopts
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 remote_exchange_node_id;
	[WmiDataId(6), read] sint16 remote_exchange_thread_id;
	[WmiDataId(7), read] uint64 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
	[WmiDataId(9), read, 
				XEMapId(57),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9" },
				Values { 
					"DbAndSetOpts", 
					"SessionId", 
					"IsSysAdmin", 
					"IsDac", 
					"DbCompatLevel", 
					"SchidProcPcp", 
					"ObjidProcPcp", 
					"DbidProcPcp", 
					"RetStat", 
					"LastError" }
			] uint8 context_accessed_name;
	[WmiDataId(10), read, Pointer] object  context_dbso;
	[WmiDataId(11), read] uint32 context_dbso_useropt1;
	[WmiDataId(12), read] uint32 context_dbso_useropt2;
	[WmiDataId(13), read] uint32 context_dbso_useropt1setmask;
	[WmiDataId(14), read] sint64 context_dbso_idtinsert_objid;
	[WmiDataId(15), read] sint8  context_dbso_idtinsert_state;
	[WmiDataId(16), read] uint16 context_dbso_idtinsert_dbid;
	[WmiDataId(17), read] sint64 context_dbso_rowcnt;
	[WmiDataId(18), read] sint64 context_dbso_statlist;
	[WmiDataId(19), read] sint64 context_dbso_textsize;
	[WmiDataId(20), read] sint64 context_dbso_offsets;
	[WmiDataId(21), read] uint64 context_dbso_locktimeout;
	[WmiDataId(22), read] uint64 context_dbso_querygov;
	[WmiDataId(23), read] sint64 context_dbso_dtfmt;
	[WmiDataId(24), read] sint64 context_dbso_daydatefirst;
	[WmiDataId(25), read] sint64 context_dbso_ddlckpri;
	[WmiDataId(26), read] sint64 context_dbso_isolvl;
	[WmiDataId(27), read] sint64 context_dbso_fipsflag;
	[WmiDataId(28), read] sint16 context_dbso_langid;
};
		
[dynamic: ToInstance, Description("ThreadCache node was successfully checked out."): Amended,
    Guid("{088c0665-1a55-4d56-96ed-44b5f711c8ad}"), locale("MS\\0x409"),
    DisplayName("thread_cache_cache_event"): Amended]
class XeSqlPkg_thread_cache_cache_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class thread_cache_cache_event: XeSqlPkg_thread_cache_cache_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  session_match;
	[WmiDataId(6), read] sint8  cpu_match;
	[WmiDataId(7), read] uint64 last_session_id;
	[WmiDataId(8), read] uint16 node_status;
};
		
[dynamic: ToInstance, Description("Occurs when an expression is not natively supported in batch processing mode and a wrapper of row-by-row evaluation is used."): Amended,
    Guid("{ac22d90e-c9fb-485f-b597-b70de87fd5e0}"), locale("MS\\0x409"),
    DisplayName("expression_compile_stop_batch_processing"): Amended]
class XeSqlPkg_expression_compile_stop_batch_processing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class expression_compile_stop_batch_processing: XeSqlPkg_expression_compile_stop_batch_processing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Returns a set of counters associated with the Process performance object. The event occurs once every 15 seconds for both the SQL Server and SQL Agent processes."): Amended,
    Guid("{D4B15C2A-61A8-43C7-AD1F-DAD6867191AF}"), locale("MS\\0x409"),
    DisplayName("perfobject_process"): Amended]
class XeSqlPkg_perfobject_process: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class perfobject_process: XeSqlPkg_perfobject_process
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 percent_privileged_time;
	[WmiDataId(6), read] uint64 percent_processor_time;
	[WmiDataId(7), read] uint64 percent_user_time;
	[WmiDataId(8), read] uint64 virtual_bytes;
	[WmiDataId(9), read] uint64 virtual_bytes_peak;
	[WmiDataId(10), read] uint64 working_set;
	[WmiDataId(11), read] uint64 working_set_private;
	[WmiDataId(12), read] uint64 working_set_peak;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string instance_name;
};
		
[dynamic: ToInstance, Description("Returns a set of counters associated with the System performance object. The event occurs once every 15 seconds."): Amended,
    Guid("{CA7C68E2-B99A-4D85-82C3-1F8CF0222D5F}"), locale("MS\\0x409"),
    DisplayName("perfobject_system"): Amended]
class XeSqlPkg_perfobject_system: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class perfobject_system: XeSqlPkg_perfobject_system
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 percent_registry_quota_in_use;
	[WmiDataId(6), read] uint64 alignment_fixups_per_second;
	[WmiDataId(7), read] uint64 context_switches_per_second;
	[WmiDataId(8), read] uint64 exception_dispatches_per_second;
	[WmiDataId(9), read] uint64 file_control_bytes_per_second;
	[WmiDataId(10), read] uint64 file_control_operations_per_second;
	[WmiDataId(11), read] uint64 file_data_operations_per_second;
	[WmiDataId(12), read] uint64 file_read_bytes_per_second;
	[WmiDataId(13), read] uint64 file_read_operations_per_second;
	[WmiDataId(14), read] uint64 file_write_bytes_per_second;
	[WmiDataId(15), read] uint64 file_write_operations_per_second;
	[WmiDataId(16), read] uint64 floating_emulations_per_second;
	[WmiDataId(17), read] uint64 processes;
	[WmiDataId(18), read] uint64 processor_queue_length;
	[WmiDataId(19), read] uint64 system_calls_per_second;
	[WmiDataId(20), read] uint64 system_up_time;
	[WmiDataId(21), read] uint64 threads;
};
		
[dynamic: ToInstance, Description("Returns a set of counters associated with the Logical Disk performance object. The event occurs once every 15 seconds for each hard or fixed disk drive."): Amended,
    Guid("{3E1FA98F-891B-46FE-84C4-3A4313329F73}"), locale("MS\\0x409"),
    DisplayName("perfobject_logicaldisk"): Amended]
class XeSqlPkg_perfobject_logicaldisk: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class perfobject_logicaldisk: XeSqlPkg_perfobject_logicaldisk
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 percent_disk_read_time;
	[WmiDataId(6), read] uint64 percent_disk_time;
	[WmiDataId(7), read] uint64 percent_disk_write_time;
	[WmiDataId(8), read] uint64 percent_free_space;
	[WmiDataId(9), read] uint64 percent_idle_time;
	[WmiDataId(10), read] uint64 average_disk_bytes_per_read;
	[WmiDataId(11), read] uint64 average_disk_bytes_per_transfer;
	[WmiDataId(12), read] uint64 average_disk_bytes_per_write;
	[WmiDataId(13), read] uint64 average_disk_queue_length;
	[WmiDataId(14), read] uint64 average_disk_read_queue_length;
	[WmiDataId(15), read] uint64 average_disk_seconds_per_read;
	[WmiDataId(16), read] uint64 average_disk_seconds_per_transfer;
	[WmiDataId(17), read] uint64 average_disk_seconds_per_write;
	[WmiDataId(18), read] uint64 average_disk_write_queue_length;
	[WmiDataId(19), read] uint64 current_disk_queue_length;
	[WmiDataId(20), read] uint64 disk_bytes_per_second;
	[WmiDataId(21), read] uint64 disk_read_bytes_per_second;
	[WmiDataId(22), read] uint64 disk_reads_per_second;
	[WmiDataId(23), read] uint64 disk_transfers_per_second;
	[WmiDataId(24), read] uint64 disk_write_bytes_per_second;
	[WmiDataId(25), read] uint64 disk_writes_per_second;
	[WmiDataId(26), read] uint64 free_megabytes;
	[WmiDataId(27), read] uint64 split_io_per_second;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string instance_name;
};
		
[dynamic: ToInstance, Description("Returns a set of counters associated with the Processor performance object. The event occurs once every 15 seconds for each processor in the system."): Amended,
    Guid("{6800FCD7-959E-48A2-9BFF-FBAACF601728}"), locale("MS\\0x409"),
    DisplayName("perfobject_processor"): Amended]
class XeSqlPkg_perfobject_processor: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class perfobject_processor: XeSqlPkg_perfobject_processor
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 percent_c1_time;
	[WmiDataId(6), read] uint64 percent_c2_time;
	[WmiDataId(7), read] uint64 percent_c3_time;
	[WmiDataId(8), read] uint64 percent_dpc_time;
	[WmiDataId(9), read] uint64 percent_idle_time;
	[WmiDataId(10), read] uint64 percent_interrupt_time;
	[WmiDataId(11), read] uint64 percent_maximum_frequency;
	[WmiDataId(12), read] uint64 percent_priority_time;
	[WmiDataId(13), read] uint64 percent_privileged_time;
	[WmiDataId(14), read] uint64 percent_processor_time;
	[WmiDataId(15), read] uint64 percent_user_time;
	[WmiDataId(16), read] uint64 c1_transitions_per_second;
	[WmiDataId(17), read] uint64 c2_transitions_per_second;
	[WmiDataId(18), read] uint64 c3_transitions_per_second;
	[WmiDataId(19), read] uint64 dpc_rate;
	[WmiDataId(20), read] uint64 dpcs_queued_per_second;
	[WmiDataId(21), read] uint64 interrupts_per_second;
	[WmiDataId(22), read] uint64 parking_status;
	[WmiDataId(23), read] uint64 processor_frequency;
	[WmiDataId(24), read] uint64 processor_state_flags;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string instance_name;
};
		
[dynamic: ToInstance, Description("Occurs when an operator outputs significantly more rows than estimated by the Query Optimizer. Use this event to identify queries that may be using sub-optimal plans due to cardinality estimate inaccuracy. Using this event can have a significant performance overhead so it should only be used when troubleshooting or monitoring specific problems for brief periods of time."): Amended,
    Guid("{2D02FF8C-3E15-46EA-8838-893568EC8863}"), locale("MS\\0x409"),
    DisplayName("inaccurate_cardinality_estimate"): Amended]
class XeSqlPkg_inaccurate_cardinality_estimate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class inaccurate_cardinality_estimate: XeSqlPkg_inaccurate_cardinality_estimate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 node_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint64 estimated_rows;
	[WmiDataId(8), read] uint64 actual_rows;
	[WmiDataId(9), read] uint32 fire_count;
};
		
[dynamic: ToInstance, Description("Occurs when the smaller of the estimated or actual cardinality of an iterator is at least 1 million rows and if the estimated and actual cardinality differ by at least 1 order of magnitude."): Amended,
    Guid("{98ad02f5-0ea2-4587-a35d-dda86ebb1338}"), locale("MS\\0x409"),
    DisplayName("large_cardinality_misestimate"): Amended]
class XeSqlPkg_large_cardinality_misestimate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class large_cardinality_misestimate: XeSqlPkg_large_cardinality_misestimate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 node_id;
	[WmiDataId(6), read] uint64 estimated_rows;
	[WmiDataId(7), read, 
				XEMapId(66),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Row", 
					"Batch" }
			] uint32 actual_execution_mode;
	[WmiDataId(8), read] uint64 actual_rows;
};
		
[dynamic: ToInstance, Description("Occurs when a spool is opened."): Amended,
    Guid("{a9070c09-e2db-49eb-922e-9a5974332248}"), locale("MS\\0x409"),
    DisplayName("query_execution_spool_open"): Amended]
class XeSqlPkg_query_execution_spool_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_spool_open: XeSqlPkg_query_execution_spool_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] sint8  is_primary;
	[WmiDataId(7), read] sint8  is_hybrid;
	[WmiDataId(8), read] sint8  is_segment;
	[WmiDataId(9), read] sint8  is_multiparent;
	[WmiDataId(10), read] sint8  is_eager;
	[WmiDataId(11), read] sint8  is_stack;
	[WmiDataId(12), read] sint8  keep_workfile_around;
	[WmiDataId(13), read] sint8  is_index_on_the_fly;
	[WmiDataId(14), read] sint8  is_index_cache;
	[WmiDataId(15), read] sint8  has_one_row_optimization;
	[WmiDataId(16), read] sint8  support_large_objects;
	[WmiDataId(17), read] sint8  prefetch_large_objects;
	[WmiDataId(18), read] sint8  is_top_one;
	[WmiDataId(19), read] sint8  is_parallel;
};
		
[dynamic: ToInstance, Description("Occurs when a secondary spool is opened before primary for the first time or after a rebind."): Amended,
    Guid("{194a5a42-7f4a-4115-a3a2-d72625a98955}"), locale("MS\\0x409"),
    DisplayName("query_execution_spool_secondary_open_before_primary"): Amended]
class XeSqlPkg_query_execution_spool_secondary_open_before_primary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_spool_secondary_open_before_primary: XeSqlPkg_query_execution_spool_secondary_open_before_primary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 secondary_spool_query_operation_node_id;
	[WmiDataId(6), read] uint32 primary_spool_query_operation_node_id;
	[WmiDataId(7), read] sint8  primary_spool_never_opened;
};
		
[dynamic: ToInstance, Description("RPC thread cache Session Context generated for shipping."): Amended,
    Guid("{d39b0d21-feaf-4acd-8e6e-81eefbb2eac3}"), locale("MS\\0x409"),
    DisplayName("thread_cache_context_shipping"): Amended]
class XeSqlPkg_thread_cache_context_shipping: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class thread_cache_context_shipping: XeSqlPkg_thread_cache_context_shipping
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(56),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Full", 
					"Partial" }
			] uint8 shipped_type;
	[WmiDataId(6), read] uint64 last_session_id;
};
		
[dynamic: ToInstance, Description("Remote context is being initialized for thread cache."): Amended,
    Guid("{e13a7b97-8856-4c48-8cab-aeece98d3c3b}"), locale("MS\\0x409"),
    DisplayName("thread_cache_remote_context_setup"): Amended]
class XeSqlPkg_thread_cache_remote_context_setup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class thread_cache_remote_context_setup: XeSqlPkg_thread_cache_remote_context_setup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(56),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Full", 
					"Partial" }
			] uint8 setup_type;
	[WmiDataId(6), read] uint64 last_session_id;
};
		
[dynamic: ToInstance, Description("Occurs when a Window Spool operator uses on-disk work table."): Amended,
    Guid("{8502D00B-FE2F-4257-BCE6-626F996F0DF7}"), locale("MS\\0x409"),
    DisplayName("window_spool_ondisk_warning"): Amended]
class XeSqlPkg_window_spool_ondisk_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class window_spool_ondisk_warning: XeSqlPkg_window_spool_ondisk_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Occurs when batch hash join uses separate hash column in hash table."): Amended,
    Guid("{10edb158-6321-4adb-9481-927d29c087e7}"), locale("MS\\0x409"),
    DisplayName("batch_hash_join_separate_hash_column"): Amended]
class XeSqlPkg_batch_hash_join_separate_hash_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batch_hash_join_separate_hash_column: XeSqlPkg_batch_hash_join_separate_hash_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 node_id;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup has started for online index build with LOBs."): Amended,
    Guid("{5301411e-9655-428f-a639-dbe08c7c4d32}"), locale("MS\\0x409"),
    DisplayName("oiblob_cleanup_begin"): Amended]
class XeSqlPkg_oiblob_cleanup_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oiblob_cleanup_begin: XeSqlPkg_oiblob_cleanup_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 owner_rowset;
	[WmiDataId(7), read] uint64 tracking_table_rowset;
	[WmiDataId(8), read] uint64 secondary_rowset;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup has started for online index build with LOBs."): Amended,
    Guid("{5301411e-9655-428f-a639-dbe08c7c4d32}"), locale("MS\\0x409"),
    DisplayName("oiblob_cleanup_begin"): Amended]
class XeSqlPkg_oiblob_cleanup_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class oiblob_cleanup_begin: XeSqlPkg_oiblob_cleanup_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 owner_rowset;
	[WmiDataId(7), read] uint64 tracking_table_rowset;
	[WmiDataId(8), read] uint64 secondary_rowset;
	[WmiDataId(9), read] sint8  is_ctr_transaction;
	[WmiDataId(10), read] sint8  use_parentXdes;
	[WmiDataId(11), read] sint8  use_subXact;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup for a single batch has started for online index build with LOBs."): Amended,
    Guid("{9595E400-2995-47BE-8A88-C717D224D52D}"), locale("MS\\0x409"),
    DisplayName("oiblob_cleanup_begin_batch"): Amended]
class XeSqlPkg_oiblob_cleanup_begin_batch: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oiblob_cleanup_begin_batch: XeSqlPkg_oiblob_cleanup_begin_batch
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 owner_rowset;
	[WmiDataId(7), read] uint64 tracking_table_rowset;
	[WmiDataId(8), read] uint64 secondary_rowset;
	[WmiDataId(9), read] sint8  is_ctr_transaction;
	[WmiDataId(10), read] sint8  use_parentXdes;
	[WmiDataId(11), read] sint8  use_subXact;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup has finished for online index build with LOBs."): Amended,
    Guid("{076263b5-d451-4a8c-837d-3be4430f101a}"), locale("MS\\0x409"),
    DisplayName("oiblob_cleanup_end"): Amended]
class XeSqlPkg_oiblob_cleanup_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oiblob_cleanup_end: XeSqlPkg_oiblob_cleanup_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 owner_rowset;
	[WmiDataId(7), read] uint64 tracking_table_rowset;
	[WmiDataId(8), read] uint64 secondary_rowset;
	[WmiDataId(9), read, 
				XEMapId(54),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"4" },
				Values { 
					"Cleanup lock acquire failed", 
					"Cleanup data mismatch", 
					"Cleanup batch complete", 
					"Cleanup finished" }
			] uint32 cleanup_result;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup has finished for online index build with LOBs."): Amended,
    Guid("{076263b5-d451-4a8c-837d-3be4430f101a}"), locale("MS\\0x409"),
    DisplayName("oiblob_cleanup_end"): Amended]
class XeSqlPkg_oiblob_cleanup_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class oiblob_cleanup_end: XeSqlPkg_oiblob_cleanup_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 owner_rowset;
	[WmiDataId(7), read] uint64 tracking_table_rowset;
	[WmiDataId(8), read] uint64 secondary_rowset;
	[WmiDataId(9), read, 
				XEMapId(54),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"4" },
				Values { 
					"Cleanup lock acquire failed", 
					"Cleanup data mismatch", 
					"Cleanup batch complete", 
					"Cleanup finished" }
			] uint32 cleanup_result;
	[WmiDataId(10), read] sint8  is_ctr_transaction;
	[WmiDataId(11), read] sint8  use_parentXdes;
	[WmiDataId(12), read] sint8  use_subXact;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup for a single batch has finished for online index build with LOBs."): Amended,
    Guid("{6B857D41-B850-4D1E-AF1A-8A3DC45614B2}"), locale("MS\\0x409"),
    DisplayName("oiblob_cleanup_end_batch"): Amended]
class XeSqlPkg_oiblob_cleanup_end_batch: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oiblob_cleanup_end_batch: XeSqlPkg_oiblob_cleanup_end_batch
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 owner_rowset;
	[WmiDataId(7), read] uint64 tracking_table_rowset;
	[WmiDataId(8), read] uint64 secondary_rowset;
	[WmiDataId(9), read] sint8  is_ctr_transaction;
	[WmiDataId(10), read] sint8  use_parentXdes;
	[WmiDataId(11), read] sint8  use_subXact;
};
		
[dynamic: ToInstance, Description("Occurs when reclaim space for dropped LOB columns has started."): Amended,
    Guid("{803DAC42-65A4-4FF9-9558-0CF5CDFD4F42}"), locale("MS\\0x409"),
    DisplayName("reclaim_dropped_column_space_begin"): Amended]
class XeSqlPkg_reclaim_dropped_column_space_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class reclaim_dropped_column_space_begin: XeSqlPkg_reclaim_dropped_column_space_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 HoBt_rowset_ID;
	[WmiDataId(7), read] sint8  is_ctr_transaction;
	[WmiDataId(8), read] uint64 build_mode;
};
		
[dynamic: ToInstance, Description("Occurs when reclaim space for dropped LOB columns has finished."): Amended,
    Guid("{51790FBD-4133-463D-A8D1-9180BC1D1157}"), locale("MS\\0x409"),
    DisplayName("reclaim_dropped_column_space_end"): Amended]
class XeSqlPkg_reclaim_dropped_column_space_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class reclaim_dropped_column_space_end: XeSqlPkg_reclaim_dropped_column_space_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 HoBt_rowset_ID;
	[WmiDataId(7), read] sint8  is_ctr_transaction;
	[WmiDataId(8), read] uint64 build_mode;
};
		
[dynamic: ToInstance, Description("Bad memory detected by the operating system"): Amended,
    Guid("{5ab1467a-d800-4739-bc3f-d681d974c3dc}"), locale("MS\\0x409"),
    DisplayName("bad_memory_detected"): Amended]
class XeSqlPkg_bad_memory_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bad_memory_detected: XeSqlPkg_bad_memory_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 bad_page_count;
};
		
[dynamic: ToInstance, Description("Database page with bad memory detected by the operating system"): Amended,
    Guid("{8a1a5ec8-082f-4e03-95f7-60913fba0824}"), locale("MS\\0x409"),
    DisplayName("bad_memory_fixed"): Amended]
class XeSqlPkg_bad_memory_fixed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bad_memory_fixed: XeSqlPkg_bad_memory_fixed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read, Pointer] object  page_address;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read] sint8  dirty_page;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs just before deleting all the extended recovery forks."): Amended,
    Guid("{7fe74b94-0f71-485c-9fbe-21b542078b95}"), locale("MS\\0x409"),
    DisplayName("hadr_xrf_deleteAllXrf_beforeEntry"): Amended]
class XeSqlPkg_hadr_xrf_deleteAllXrf_beforeEntry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_xrf_deleteAllXrf_beforeEntry: XeSqlPkg_hadr_xrf_deleteAllXrf_beforeEntry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Occurs just before deleting the recovery LSN in the metadata."): Amended,
    Guid("{65fdc0d5-814e-4186-a614-3eced3adb0d6}"), locale("MS\\0x409"),
    DisplayName("hadr_xrf_deleteRecLsn_beforeEntry"): Amended]
class XeSqlPkg_hadr_xrf_deleteRecLsn_beforeEntry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_xrf_deleteRecLsn_beforeEntry: XeSqlPkg_hadr_xrf_deleteRecLsn_beforeEntry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Occurs during updating secondary's recovery forks stack. After deleting extra entries in the secondary stack but before copying new entries from primary."): Amended,
    Guid("{dd97a250-d51c-4e3b-8029-12c3985eb954}"), locale("MS\\0x409"),
    DisplayName("hadr_xrf_updateXrf_partialUpdate"): Amended]
class XeSqlPkg_hadr_xrf_updateXrf_partialUpdate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_xrf_updateXrf_partialUpdate: XeSqlPkg_hadr_xrf_updateXrf_partialUpdate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Occurs during updating secondary's recovery forks stack. After updating the stack but before saving the recovery LSN in the metadata."): Amended,
    Guid("{091626a6-130f-4785-b5b2-2428f3fdf866}"), locale("MS\\0x409"),
    DisplayName("hadr_xrf_updateXrf_before_recoveryLsn_update"): Amended]
class XeSqlPkg_hadr_xrf_updateXrf_before_recoveryLsn_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_xrf_updateXrf_before_recoveryLsn_update: XeSqlPkg_hadr_xrf_updateXrf_before_recoveryLsn_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Occurs after deleting secondary's stack entries but before copying primary's entries."): Amended,
    Guid("{24d5939c-b548-49b2-a588-b5f01b0883ce}"), locale("MS\\0x409"),
    DisplayName("hadr_xrf_copyXrf_partialCopy"): Amended]
class XeSqlPkg_hadr_xrf_copyXrf_partialCopy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_xrf_copyXrf_partialCopy: XeSqlPkg_hadr_xrf_copyXrf_partialCopy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Reports an error thrown during remote stretch operation"): Amended,
    Guid("{15bf045a-5e2e-4be2-90c2-847a694a6ae0}"), locale("MS\\0x409"),
    DisplayName("stretch_remote_error"): Amended]
class XeSqlPkg_stretch_remote_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_remote_error: XeSqlPkg_stretch_remote_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_number;
	[WmiDataId(6), read] sint32 error_state;
	[WmiDataId(7), read] sint32 stretch_operation_id;
};
		
[dynamic: ToInstance, Description("Reports operator counts in queries against stretched tables"): Amended,
    Guid("{3963C3B4-23FA-4223-AAF8-1CD61BE2DA13}"), locale("MS\\0x409"),
    DisplayName("stretch_query_telemetry"): Amended]
class XeSqlPkg_stretch_query_telemetry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stretch_query_telemetry: XeSqlPkg_stretch_query_telemetry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 loop_joins;
	[WmiDataId(6), read] uint16 hash_joins;
	[WmiDataId(7), read] uint16 merge_joins;
	[WmiDataId(8), read] uint16 not_stretched_tables;
	[WmiDataId(9), read] uint16 stretched_tables;
	[WmiDataId(10), read] uint16 stretch_remote_tables;
	[WmiDataId(11), read] uint16 aggregates;
	[WmiDataId(12), read] sint16 query_type;
	[WmiDataId(13), read] uint32 elapsed_time;
};
		
[dynamic: ToInstance, Description("Occurs when buffer pool initialization fails."): Amended,
    Guid("{4FB7007B-BBE0-4989-93B0-94E690BF38DF}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_extension_initialization_failure"): Amended]
class XeSqlPkg_buffer_pool_extension_initialization_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_extension_initialization_failure: XeSqlPkg_buffer_pool_extension_initialization_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 state;
	[WmiDataId(6), read] sint32 error_number;
	[WmiDataId(7), read] sint32 error_major;
	[WmiDataId(8), read] sint32 error_minor;
};
		
[dynamic: ToInstance, Description("Page or contiguous set of pages evicted into the buffer pool extension cache."): Amended,
    Guid("{FF6E3632-B7CA-4ABB-873F-3BF0FB14DAFC}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_extension_pages_written"): Amended]
class XeSqlPkg_buffer_pool_extension_pages_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_extension_pages_written: XeSqlPkg_buffer_pool_extension_pages_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 number_pages;
	[WmiDataId(6), read] uint16 first_page_file_id;
	[WmiDataId(7), read] uint32 first_page_id;
	[WmiDataId(8), read] uint64 page_file_offset;
	[WmiDataId(9), read] uint16 numa_node_id;
	[WmiDataId(10), read] uint16 caller;
	[WmiDataId(11), read] uint32 l2bpoolpendingio;
	[WmiDataId(12), read] sint32 dbId;
	[WmiDataId(13), read] sint32 pUse2;
	[WmiDataId(14), read] sint32 cutOffL1;
	[WmiDataId(15), read] sint32 cutOffL2;
	[WmiDataId(16), read] sint32 simCutOff;
	[WmiDataId(17), read] sint32 minCutOff;
	[WmiDataId(18), read] sint32 cBufHashed;
	[WmiDataId(19), read] sint32 cBufWithoutPage;
	[WmiDataId(20), read] sint32 cBufSimulated;
	[WmiDataId(21), read] sint8  keepL2Pages;
	[WmiDataId(22), read] sint32 cL2Size;
	[WmiDataId(23), read] uint64 poolsWithPressure;
	[WmiDataId(24), read] sint8  shrinkSpecificDbs;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string group;
};
		
[dynamic: ToInstance, Description("Page is read from the buffer pool extension cache."): Amended,
    Guid("{7DCFB25F-7B89-4727-9F4D-7FE9A87A0861}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_extension_pages_read"): Amended]
class XeSqlPkg_buffer_pool_extension_pages_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_extension_pages_read: XeSqlPkg_buffer_pool_extension_pages_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 number_pages;
	[WmiDataId(6), read] uint16 first_page_file_id;
	[WmiDataId(7), read] uint32 first_page_id;
	[WmiDataId(8), read] uint64 page_file_offset;
	[WmiDataId(9), read] uint16 numa_node_id;
	[WmiDataId(10), read] uint16 caller;
	[WmiDataId(11), read] sint32 pUse2;
	[WmiDataId(12), read] uint32 l2bpoolpendingio;
	[WmiDataId(13), read] sint32 cutOffL1;
	[WmiDataId(14), read] sint32 cutOffL2;
	[WmiDataId(15), read] sint32 simCutOff;
	[WmiDataId(16), read] sint32 minCutOff;
	[WmiDataId(17), read] sint32 cBufHashed;
	[WmiDataId(18), read] sint32 cBufWithoutPage;
	[WmiDataId(19), read] sint32 cBufSimulated;
	[WmiDataId(20), read] sint8  keepL2Pages;
	[WmiDataId(21), read] sint32 cL2Size;
	[WmiDataId(22), read] uint64 poolsWithPressure;
	[WmiDataId(23), read] sint8  shrinkSpecificDbs;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string group;
};
		
[dynamic: ToInstance, Description("Page is evicted from the buffer pool extension cache."): Amended,
    Guid("{166EB22D-BE79-4F49-A496-888EB6DE4751}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_extension_pages_evicted"): Amended]
class XeSqlPkg_buffer_pool_extension_pages_evicted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_extension_pages_evicted: XeSqlPkg_buffer_pool_extension_pages_evicted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 number_pages;
	[WmiDataId(6), read] uint16 first_page_file_id;
	[WmiDataId(7), read] uint32 first_page_id;
	[WmiDataId(8), read] uint64 page_file_offset;
	[WmiDataId(9), read] uint16 numa_node_id;
	[WmiDataId(10), read] uint16 caller;
	[WmiDataId(11), read] uint32 l2bpoolpendingio;
	[WmiDataId(12), read] sint32 dbId;
	[WmiDataId(13), read] sint32 pUse2;
	[WmiDataId(14), read] sint32 cutOffL1;
	[WmiDataId(15), read] sint32 cutOffL2;
	[WmiDataId(16), read] sint32 simCutOff;
	[WmiDataId(17), read] sint32 minCutOff;
	[WmiDataId(18), read] sint32 cBufHashed;
	[WmiDataId(19), read] sint32 cBufWithoutPage;
	[WmiDataId(20), read] sint32 cBufSimulated;
	[WmiDataId(21), read] sint8  keepL2Pages;
	[WmiDataId(22), read] sint32 cL2Size;
	[WmiDataId(23), read] uint64 poolsWithPressure;
	[WmiDataId(24), read] sint8  shrinkSpecificDbs;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string group;
};
		
[dynamic: ToInstance, Description("Lazywriter and/or worker clock has wrapped the BUF array and thresholds are re-calculated."): Amended,
    Guid("{C8D70433-CEC8-404D-9085-645037EF95B8}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_eviction_thresholds_recalculated"): Amended]
class XeSqlPkg_buffer_pool_eviction_thresholds_recalculated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_eviction_thresholds_recalculated: XeSqlPkg_buffer_pool_eviction_thresholds_recalculated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 numa_node_id;
	[WmiDataId(6), read] uint16 warm_threshold;
	[WmiDataId(7), read] uint16 cold_threshold;
	[WmiDataId(8), read] uint64 number_evictions_to_bpool_extension;
	[WmiDataId(9), read] uint64 number_evictions_from_bpool;
	[WmiDataId(10), read] uint32 PagesUnassigned;
	[WmiDataId(11), read] uint32 PagesStolenOrFree;
	[WmiDataId(12), read] uint32 PagesHot;
	[WmiDataId(13), read] uint32 PagesNotOnLRU;
	[WmiDataId(14), read] uint32 PagesUsedOnce;
	[WmiDataId(15), read] uint32 PagesSpilled;
	[WmiDataId(16), read] uint32 PagesBusyIo;
	[WmiDataId(17), read] uint32 PagesAllocationRequest;
	[WmiDataId(18), read] uint32 PagesSimulated;
	[WmiDataId(19), read] sint32 cutOffL1;
	[WmiDataId(20), read] sint32 cutOffL2;
	[WmiDataId(21), read] sint32 simCutOff;
	[WmiDataId(22), read] sint32 minCutOff;
	[WmiDataId(23), read] sint32 cBufHashed;
	[WmiDataId(24), read] sint32 cBufWithoutPage;
	[WmiDataId(25), read] sint32 cBufSimulated;
	[WmiDataId(26), read] uint16 caller;
	[WmiDataId(27), read] uint64 cBufAlloc;
	[WmiDataId(28), read] uint64 cbL2BPoolSize;
	[WmiDataId(29), read] sint8  keepL2Pages;
	[WmiDataId(30), read] sint32 cL2Size;
	[WmiDataId(31), read] uint64 poolsWithPressure;
	[WmiDataId(32), read] sint8  shrinkSpecificDbs;
};
		
[dynamic: ToInstance, Description("thresholds are re-calculated."): Amended,
    Guid("{e51d6e6f-5955-439f-ae69-ffce184301ec}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_determine_lru_cutoffs"): Amended]
class XeSqlPkg_buffer_pool_determine_lru_cutoffs: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_determine_lru_cutoffs: XeSqlPkg_buffer_pool_determine_lru_cutoffs
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 numa_node_id;
	[WmiDataId(6), read] sint32 topL1Sample;
	[WmiDataId(7), read] sint32 topL2Sample;
	[WmiDataId(8), read] sint32 choice1;
	[WmiDataId(9), read] sint32 choice2;
	[WmiDataId(10), read] sint32 cutOffL1;
	[WmiDataId(11), read] sint32 cutOffL2;
	[WmiDataId(12), read] sint32 simCutOff;
	[WmiDataId(13), read] sint32 minCutOff;
	[WmiDataId(14), read] sint32 cBufHashed;
	[WmiDataId(15), read] sint32 cBufWithoutPage;
	[WmiDataId(16), read] sint32 cBufSimulated;
	[WmiDataId(17), read] uint16 caller;
	[WmiDataId(18), read] uint64 cBufAlloc;
	[WmiDataId(19), read] uint64 cbL2BPoolSize;
	[WmiDataId(20), read] sint8  keepL2Pages;
	[WmiDataId(21), read] sint32 cL2Size;
	[WmiDataId(22), read] uint64 poolsWithPressure;
	[WmiDataId(23), read] sint8  shrinkSpecificDbs;
};
		
[dynamic: ToInstance, Description("Fired when Buffer Pool scan starts."): Amended,
    Guid("{ed85bc73-cb02-40f8-9fb8-4584c468a90c}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_scan_start"): Amended]
class XeSqlPkg_buffer_pool_scan_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_scan_start: XeSqlPkg_buffer_pool_scan_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 ideal_parallel_tasks;
	[WmiDataId(7), read] uint32 parallel_tasks;
	[WmiDataId(8), read] uint64 total_buffers;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string command;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string operation;
};
		
[dynamic: ToInstance, Description("Fired when Buffer Pool scan completes taking longer than the threshold (1 second)."): Amended,
    Guid("{2b80a549-d677-42a1-926a-358a13ab168e}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_scan_complete"): Amended]
class XeSqlPkg_buffer_pool_scan_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_scan_complete: XeSqlPkg_buffer_pool_scan_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 elapsed_time_ms;
	[WmiDataId(7), read] uint64 elapsed_time_sec;
	[WmiDataId(8), read] uint64 wait_time_ms;
	[WmiDataId(9), read] uint32 context_switches;
	[WmiDataId(10), read] uint32 parallel_tasks;
	[WmiDataId(11), read] uint64 scanned_buffers;
	[WmiDataId(12), read] uint64 total_iterated_buffers;
	[WmiDataId(13), read] uint32 error_number;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string command;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string operation;
};
		
[dynamic: ToInstance, Description("Fired when Buffer Pool scan parallel task starts."): Amended,
    Guid("{d57636a0-01e2-48d1-bd3c-fc180b5a032f}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_scan_task_start"): Amended]
class XeSqlPkg_buffer_pool_scan_task_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_scan_task_start: XeSqlPkg_buffer_pool_scan_task_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 node_id;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  task_address;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string operation;
};
		
[dynamic: ToInstance, Description("Fired when Buffer Pool scan parallel task completes."): Amended,
    Guid("{1a57f662-4d5d-4bb7-aa2a-2275af86c7aa}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_scan_task_complete"): Amended]
class XeSqlPkg_buffer_pool_scan_task_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_scan_task_complete: XeSqlPkg_buffer_pool_scan_task_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 node_id;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  task_address;
	[WmiDataId(9), read] uint32 batch_size;
	[WmiDataId(10), read] uint64 batch_count;
	[WmiDataId(11), read] uint64 total_iterated_buffers;
	[WmiDataId(12), read] uint64 scanned_buffers;
	[WmiDataId(13), read] uint64 elapsed_time_ms;
	[WmiDataId(14), read] uint64 wait_time_ms;
	[WmiDataId(15), read] uint32 context_switches;
	[WmiDataId(16), read] uint32 error_number;
	[WmiDataId(17), read] sint8  is_cancelled;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string operation;
};
		
[dynamic: ToInstance, Description("Fired when Buffer Pool scan parallel task encounters an error."): Amended,
    Guid("{0e2f6e13-9d78-4e52-ad53-f22154cbce2b}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_scan_task_error"): Amended]
class XeSqlPkg_buffer_pool_scan_task_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_scan_task_error: XeSqlPkg_buffer_pool_scan_task_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 node_id;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  task_address;
	[WmiDataId(9), read] uint32 error_number;
	[WmiDataId(10), read] uint32 error_state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string operation;
};
		
[dynamic: ToInstance, Description("Buffer Pool Scan Statistics."): Amended,
    Guid("{c9f5f4ed-a6cf-46d2-9752-ea2de8cf947f}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_scan_stats"): Amended]
class XeSqlPkg_buffer_pool_scan_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_scan_stats: XeSqlPkg_buffer_pool_scan_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("WmiTime")] uint64 collection_start_time;
	[WmiDataId(6), read] uint64 total_scan_requests;
	[WmiDataId(7), read] uint64 total_parallel_scan_requests;
	[WmiDataId(8), read] uint64 total_serial_scan_requests;
	[WmiDataId(9), read] uint64 total_restrained_scan_requests;
	[WmiDataId(10), read] uint32 current_parallel_scan_requests;
	[WmiDataId(11), read] uint32 current_parallel_task_count;
	[WmiDataId(12), read] uint32 current_serial_scan_requests;
	[WmiDataId(13), read] uint32 max_parallel_task_count;
	[WmiDataId(14), read] uint64 total_buffers;
};
		
[dynamic: ToInstance, Description("Fired when Buffer Pool starts flushing dirty buffers."): Amended,
    Guid("{752778e4-8145-4edf-bf8f-783f5f822a40}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_flush_cache_start"): Amended]
class XeSqlPkg_buffer_pool_flush_cache_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_flush_cache_start: XeSqlPkg_buffer_pool_flush_cache_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] real64 checkpoint_rate_mb;
	[WmiDataId(7), read] real64 checkpoint_rate_iops;
	[WmiDataId(8), read] uint32 max_page_limit;
	[WmiDataId(9), read] uint32 initial_page_limit;
	[WmiDataId(10), read] uint32 max_write_latency_ms;
	[WmiDataId(11), read] uint32 target_recovery_time_sec;
	[WmiDataId(12), read] uint64 total_buffers;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string io_throttle_scheme;
};
		
[dynamic: ToInstance, Description("Fired when Buffer Pool flushes all dirty buffers."): Amended,
    Guid("{3cef50e6-4900-4b97-a0f5-c33c02ac7f73}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_flush_cache"): Amended]
class XeSqlPkg_buffer_pool_flush_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_flush_cache: XeSqlPkg_buffer_pool_flush_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 elapsed_time_ms;
	[WmiDataId(7), read] uint64 wait_time_ms;
	[WmiDataId(8), read] uint64 total_writes;
	[WmiDataId(9), read] uint64 pages_written;
	[WmiDataId(10), read] real64 average_throughput_per_second;
	[WmiDataId(11), read] real64 average_writes_per_second;
	[WmiDataId(12), read] real64 checkpoint_rate_mb;
	[WmiDataId(13), read] real64 checkpoint_rate_iops;
	[WmiDataId(14), read] sint8  is_long_checkpoint;
	[WmiDataId(15), read] uint32 max_page_limit;
	[WmiDataId(16), read] uint32 io_saturation;
	[WmiDataId(17), read] uint32 io_throttle_stalls;
	[WmiDataId(18), read] uint64 io_throttle_stall_ms;
	[WmiDataId(19), read] uint32 context_switches;
	[WmiDataId(20), read] uint32 parallel_tasks;
	[WmiDataId(21), read] uint64 scanned_buffers;
	[WmiDataId(22), read] uint64 total_iterated_buffers;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string io_throttle_scheme;
};
		
[dynamic: ToInstance, Description("Fire when Buffer Pool throttles flushing dirty pages. This event is fired very frequently when IO throttling is occurring."): Amended,
    Guid("{1a791cdc-6248-4df1-8b15-13a0f5694930}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_flush_io_throttle"): Amended]
class XeSqlPkg_buffer_pool_flush_io_throttle: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_flush_io_throttle: XeSqlPkg_buffer_pool_flush_io_throttle
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 outstanding_pages;
	[WmiDataId(7), read] uint32 page_limit;
	[WmiDataId(8), read] uint32 delay_ms;
	[WmiDataId(9), read] uint32 io_saturation;
	[WmiDataId(10), read] uint32 io_throttle_stalls;
	[WmiDataId(11), read] uint64 io_throttle_stall_ms;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string io_throttle_scheme;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string operation;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string reason;
};
		
[dynamic: ToInstance, Description("Fired when Buffer Pool is flushing dirty pages. This event reports the status of IO throttling."): Amended,
    Guid("{a054258a-1963-49e0-93ed-7e3c9e0b0d1a}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_flush_io_throttle_status"): Amended]
class XeSqlPkg_buffer_pool_flush_io_throttle_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_flush_io_throttle_status: XeSqlPkg_buffer_pool_flush_io_throttle_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 elapsed_time_ms;
	[WmiDataId(7), read] uint32 percent_complete;
	[WmiDataId(8), read] uint64 total_writes;
	[WmiDataId(9), read] uint64 pages_written;
	[WmiDataId(10), read] uint32 delta_writes;
	[WmiDataId(11), read] uint32 delta_average_latency_ms;
	[WmiDataId(12), read] uint32 old_page_limit;
	[WmiDataId(13), read] uint32 page_limit;
	[WmiDataId(14), read] uint32 io_saturation;
	[WmiDataId(15), read] uint32 io_throttle_stalls;
	[WmiDataId(16), read] uint64 io_throttle_stall_ms;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string io_throttle_scheme;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string operation;
};
		
[dynamic: ToInstance, Description("Fired at the beginning of an API call by a host callback; used by test to inject failure into the API."): Amended,
    Guid("{a43d5906-ee80-4a37-a9ad-a60accf45a74}"), locale("MS\\0x409"),
    DisplayName("hekaton_api_failure_injection"): Amended]
class XeSqlPkg_hekaton_api_failure_injection: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hekaton_api_failure_injection: XeSqlPkg_hekaton_api_failure_injection
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(60),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"HkTransactionCreateSavePoint", 
					"HkTransactionRollbackToSavePoint", 
					"SaveErrorForCatchBlock" }
			] uint8 api_id;
	[WmiDataId(6), read, Pointer] object  result;
};
		
[dynamic: ToInstance, Description("Used by tests to inject failures into HkCs migration algorithm."): Amended,
    Guid("{e0702697-bfd9-4995-9f69-3bab05c792a2}"), locale("MS\\0x409"),
    DisplayName("hkcs_migration_failure_injection"): Amended]
class XeSqlPkg_hkcs_migration_failure_injection: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hkcs_migration_failure_injection: XeSqlPkg_hkcs_migration_failure_injection
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(61),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70" },
				Values { 
					"vStage1_MigratedRowElt_Alloc", 
					"vStage1_Row_Array_Alloc", 
					"vPreMigration_SetupHkTls", 
					"vStage1_CtxtAlloc", 
					"vStage1_CtxtInit", 
					"vStage1_TxAlloc", 
					"vStage1_FindTable", 
					"vStage1_FindDRT", 
					"vStage1_ErrorAlloc", 
					"vTxPrepare", 
					"vStage1_FindDictTable", 
					"vStage1_FindSegTable", 
					"vStage1_GenDictId", 
					"vStage1_CIBInit", 
					"vStage1_GenRowGroupId", 
					"vStage1_StartScan", 
					"vStage1_CursorGetNext", 
					"vStage1_EndIndexBuild", 
					"vStage1_PrepareForStorage", 
					"vStage2_DRTRowAlloc", 
					"vStage2_DRTRowInsert", 
					"vStage3_TxAlloc", 
					"vStage3_DRTCursorAlloc", 
					"vStage3_DRTGetFirst", 
					"vStage3_DRTDelete", 
					"vStage3_RowAlloc", 
					"vStage3_Update", 
					"vStage3_DRTRowAlloc", 
					"vStage3_DRTInsert", 
					"vStage1_MakeDictionaryEntry", 
					"vPreMigration", 
					"vPostMigration", 
					"vDb_Metadata", 
					"vDb_MigrationParamAlloc", 
					"vDb_TaskEnqueue", 
					"vTopLevel_Metadata", 
					"vTopLevel_UseDb", 
					"vStage1_MakeRGEntries", 
					"vStage1_Compression", 
					"vStage1_SegmentInsert", 
					"vRGCStage2_RGInfoDelete", 
					"vStage1_DictionaryInsert", 
					"vStage1_AllocRowGroupInfo", 
					"vStage1_MakeSegmentEntry", 
					"vDb_RGCleanupEvalPolicy", 
					"vDb_RGCleanupParamAlloc", 
					"vPreRGCleanup_SetupHkTls", 
					"vPreRGCleanup", 
					"vStage1_FindRGInfoTable", 
					"vRGCStage1_ReadTxAlloc", 
					"vRGCStage1_CleanupTxAlloc", 
					"vRGCStage1_PKCursorAlloc", 
					"vRGCStage1_PKCursorGetFirst", 
					"vRGCStage1_RowAlloc", 
					"vRGCStage1_Update", 
					"vRGCStage1_DRTRowAlloc", 
					"vRGCStage1_DRTRowInsert", 
					"vRGCStage1_ScanCompressedStore", 
					"vRGCStage2_CleanupTxAlloc", 
					"vRGCStage2_DRTCursorAlloc", 
					"vRGCStage2_DRTCursorGet", 
					"vRGCStage2_DRTDelete", 
					"vRGCStage2_SegCursorAlloc", 
					"vRGCStage2_SegCursorGet", 
					"vRGCStage2_SegDelete", 
					"vRGCStage2_DictCursorAlloc", 
					"vRGCStage2_DictCursorGet", 
					"vRGCStage2_DictDelete", 
					"vRGCStage2_SegDictCursorAlloc", 
					"vRGCStage2_SegDictCursorGet", 
					"vMigrationStarted" }
			] uint8 site_id;
	[WmiDataId(6), read, Pointer] object  result;
};
		
[dynamic: ToInstance, Description("Occurs when a dictionary has been created and an entry has been added to the dictionaries table."): Amended,
    Guid("{382540e3-72c8-48e7-b974-06e5dc4d4351}"), locale("MS\\0x409"),
    DisplayName("columnstore_create_dictionary"): Amended]
class XeSqlPkg_columnstore_create_dictionary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_create_dictionary: XeSqlPkg_columnstore_create_dictionary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 column_id;
	[WmiDataId(6), read] uint32 last_id;
	[WmiDataId(7), read] uint8 compression;
	[WmiDataId(8), read] uint8 version;
	[WmiDataId(9), read] uint32 dictionary_id;
	[WmiDataId(10), read] uint8 dictionary_type;
	[WmiDataId(11), read] uint16 dictionary_flags;
	[WmiDataId(12), read] uint32 num_entries;
	[WmiDataId(13), read] uint32 database_id;
	[WmiDataId(14), read] uint32 partition_id;
	[WmiDataId(15), read] sint32 table_id;
	[WmiDataId(16), read] uint64 transaction_id;
	[WmiDataId(17), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when a dictionary has been created and an entry has been added to the dictionaries table."): Amended,
    Guid("{382540e3-72c8-48e7-b974-06e5dc4d4351}"), locale("MS\\0x409"),
    DisplayName("columnstore_create_dictionary"): Amended]
class XeSqlPkg_columnstore_create_dictionary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_create_dictionary: XeSqlPkg_columnstore_create_dictionary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 column_id;
	[WmiDataId(6), read] uint32 last_id;
	[WmiDataId(7), read] uint8 compression;
	[WmiDataId(8), read] uint8 version;
	[WmiDataId(9), read] uint32 dictionary_id;
	[WmiDataId(10), read] uint8 dictionary_type;
	[WmiDataId(11), read] uint16 dictionary_flags;
	[WmiDataId(12), read] uint32 num_entries;
	[WmiDataId(13), read] uint32 database_id;
	[WmiDataId(14), read] uint32 partition_id;
	[WmiDataId(15), read] sint32 table_id;
	[WmiDataId(16), read] uint64 transaction_id;
	[WmiDataId(17), read] uint8 is_in_memory;
	[WmiDataId(18), read] uint64 uncompressed_size;
};
		
[dynamic: ToInstance, Description("Occurs when a dictionary has been created and an entry has been added to the dictionaries table."): Amended,
    Guid("{382540e3-72c8-48e7-b974-06e5dc4d4351}"), locale("MS\\0x409"),
    DisplayName("columnstore_create_dictionary"): Amended]
class XeSqlPkg_columnstore_create_dictionary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_create_dictionary: XeSqlPkg_columnstore_create_dictionary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 column_id;
	[WmiDataId(6), read] uint32 last_id;
	[WmiDataId(7), read] uint8 compression;
	[WmiDataId(8), read] uint8 version;
	[WmiDataId(9), read] uint32 dictionary_id;
	[WmiDataId(10), read] uint8 dictionary_type;
	[WmiDataId(11), read] uint16 dictionary_flags;
	[WmiDataId(12), read] uint32 num_entries;
	[WmiDataId(13), read] uint32 database_id;
	[WmiDataId(14), read] uint32 partition_id;
	[WmiDataId(15), read] sint32 table_id;
	[WmiDataId(16), read] uint64 transaction_id;
	[WmiDataId(17), read] uint8 is_in_memory;
	[WmiDataId(18), read] uint64 uncompressed_size;
	[WmiDataId(19), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Occurs when a dictionary has been created and an entry has been added to the dictionaries table."): Amended,
    Guid("{382540e3-72c8-48e7-b974-06e5dc4d4351}"), locale("MS\\0x409"),
    DisplayName("columnstore_create_dictionary"): Amended]
class XeSqlPkg_columnstore_create_dictionary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(5)]
class columnstore_create_dictionary: XeSqlPkg_columnstore_create_dictionary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 column_id;
	[WmiDataId(6), read] uint32 last_id;
	[WmiDataId(7), read] uint8 compression;
	[WmiDataId(8), read] uint8 version;
	[WmiDataId(9), read] uint32 dictionary_id;
	[WmiDataId(10), read] uint8 dictionary_type;
	[WmiDataId(11), read] uint16 dictionary_flags;
	[WmiDataId(12), read] uint32 num_entries;
	[WmiDataId(13), read] sint32 database_id;
	[WmiDataId(14), read] uint32 partition_id;
	[WmiDataId(15), read] sint64 table_id;
	[WmiDataId(16), read] uint64 transaction_id;
	[WmiDataId(17), read] uint8 is_in_memory;
	[WmiDataId(18), read] uint64 uncompressed_size;
	[WmiDataId(19), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Occurs when a segment has been created and an entry has been added to the segments table."): Amended,
    Guid("{2b77c83e-a817-4ba8-8835-97d778dd5570}"), locale("MS\\0x409"),
    DisplayName("columnstore_create_segment"): Amended]
class XeSqlPkg_columnstore_create_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_create_segment: XeSqlPkg_columnstore_create_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rowgroup_id;
	[WmiDataId(6), read] uint32 column_id;
	[WmiDataId(7), read] sint64 base_id;
	[WmiDataId(8), read] uint8 compression;
	[WmiDataId(9), read] uint8 encoding_type;
	[WmiDataId(10), read] uint32 has_nulls;
	[WmiDataId(11), read] real64 magnitude;
	[WmiDataId(12), read] sint64 max_data_id;
	[WmiDataId(13), read] sint64 min_data_id;
	[WmiDataId(14), read] uint32 max_serialized_pages;
	[WmiDataId(15), read] sint64 null_value;
	[WmiDataId(16), read] uint16 page_count;
	[WmiDataId(17), read] uint32 primary_dictionary_id;
	[WmiDataId(18), read] uint32 row_count;
	[WmiDataId(19), read] uint32 secondary_dictionary_id;
	[WmiDataId(20), read] uint8 version;
	[WmiDataId(21), read] uint32 database_id;
	[WmiDataId(22), read] uint32 partition_id;
	[WmiDataId(23), read] sint32 table_id;
	[WmiDataId(24), read] uint64 transaction_id;
	[WmiDataId(25), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when a rowgroup has been cleaned up and the corresponding entry has been removed from the row group info table."): Amended,
    Guid("{8bf7ac9b-c0a5-4e9b-a9a3-58c9b579ba5d}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_cleanup"): Amended]
class XeSqlPkg_columnstore_rowgroup_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_rowgroup_cleanup: XeSqlPkg_columnstore_rowgroup_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rowgroup_id;
	[WmiDataId(6), read] sint32 table_id;
	[WmiDataId(7), read] uint64 transaction_id;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when a rowgroup has been cleaned up and the corresponding entry has been removed from the row group info table."): Amended,
    Guid("{8bf7ac9b-c0a5-4e9b-a9a3-58c9b579ba5d}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_cleanup"): Amended]
class XeSqlPkg_columnstore_rowgroup_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_rowgroup_cleanup: XeSqlPkg_columnstore_rowgroup_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rowgroup_id;
	[WmiDataId(6), read] sint64 table_id;
	[WmiDataId(7), read] uint64 transaction_id;
	[WmiDataId(8), read] sint32 database_id;
	[WmiDataId(9), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when a rowgroup has been cleaned up and the corresponding entry has been removed from the row group info table."): Amended,
    Guid("{8bf7ac9b-c0a5-4e9b-a9a3-58c9b579ba5d}"), locale("MS\\0x409"),
    DisplayName("columnstore_rowgroup_cleanup"): Amended]
class XeSqlPkg_columnstore_rowgroup_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_rowgroup_cleanup: XeSqlPkg_columnstore_rowgroup_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 rowgroup_id;
	[WmiDataId(6), read] sint64 table_id;
	[WmiDataId(7), read] uint64 transaction_id;
	[WmiDataId(8), read] sint32 database_id;
	[WmiDataId(9), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when a dictionary has been removed and the corresponding entry has been removed from the dictionaries table."): Amended,
    Guid("{1df673ad-6f88-4970-8458-f3b02b9f19cf}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_dictionary"): Amended]
class XeSqlPkg_columnstore_delete_dictionary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_delete_dictionary: XeSqlPkg_columnstore_delete_dictionary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 table_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read] uint32 dictionary_id;
	[WmiDataId(9), read] uint64 transaction_id;
	[WmiDataId(10), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when a dictionary has been removed and the corresponding entry has been removed from the dictionaries table."): Amended,
    Guid("{1df673ad-6f88-4970-8458-f3b02b9f19cf}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_dictionary"): Amended]
class XeSqlPkg_columnstore_delete_dictionary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_delete_dictionary: XeSqlPkg_columnstore_delete_dictionary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 table_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read] uint32 dictionary_id;
	[WmiDataId(9), read] uint64 transaction_id;
	[WmiDataId(10), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when a dictionary has been removed and the corresponding entry has been removed from the dictionaries table."): Amended,
    Guid("{1df673ad-6f88-4970-8458-f3b02b9f19cf}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_dictionary"): Amended]
class XeSqlPkg_columnstore_delete_dictionary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class columnstore_delete_dictionary: XeSqlPkg_columnstore_delete_dictionary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 table_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read] uint32 dictionary_id;
	[WmiDataId(9), read] uint64 transaction_id;
	[WmiDataId(10), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when a segment has been removed and the corresponding entry has been removed from the segments table."): Amended,
    Guid("{316eb3fc-e07a-48a4-86d4-5390980149c2}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_segment"): Amended]
class XeSqlPkg_columnstore_delete_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_delete_segment: XeSqlPkg_columnstore_delete_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 table_id;
	[WmiDataId(7), read] uint32 column_id;
	[WmiDataId(8), read] uint32 rowgroup_id;
	[WmiDataId(9), read] uint64 transaction_id;
	[WmiDataId(10), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when a segment has been removed and the corresponding entry has been removed from the segments table."): Amended,
    Guid("{316eb3fc-e07a-48a4-86d4-5390980149c2}"), locale("MS\\0x409"),
    DisplayName("columnstore_delete_segment"): Amended]
class XeSqlPkg_columnstore_delete_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_delete_segment: XeSqlPkg_columnstore_delete_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 table_id;
	[WmiDataId(7), read] sint64 column_id;
	[WmiDataId(8), read] sint64 rowgroup_id;
	[WmiDataId(9), read] uint64 transaction_id;
	[WmiDataId(10), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when 'prepareCallback' has been called for a data migration transaction, and the transaction has successfully committed."): Amended,
    Guid("{97c5d882-0838-4c2f-adb0-b729385b78ca}"), locale("MS\\0x409"),
    DisplayName("columnstore_migration_commit"): Amended]
class XeSqlPkg_columnstore_migration_commit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_migration_commit: XeSqlPkg_columnstore_migration_commit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 transaction_id;
	[WmiDataId(6), read] uint8 result;
	[WmiDataId(7), read] uint8 state;
	[WmiDataId(8), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when 'prepareCallback' has been called for a data migration transaction, and the transaction has successfully committed."): Amended,
    Guid("{97c5d882-0838-4c2f-adb0-b729385b78ca}"), locale("MS\\0x409"),
    DisplayName("columnstore_migration_commit"): Amended]
class XeSqlPkg_columnstore_migration_commit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class columnstore_migration_commit: XeSqlPkg_columnstore_migration_commit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 transaction_id;
	[WmiDataId(6), read] uint8 result;
	[WmiDataId(7), read] uint32 state;
	[WmiDataId(8), read] uint8 is_in_memory;
};
		
[dynamic: ToInstance, Description("Occurs when an exception occurs during processing for a columnstore operation."): Amended,
    Guid("{3a945152-e776-461e-84ef-f9b7f5977e26}"), locale("MS\\0x409"),
    DisplayName("columnstore_log_exception"): Amended]
class XeSqlPkg_columnstore_log_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_log_exception: XeSqlPkg_columnstore_log_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 error;
	[WmiDataId(7), read] uint32 severity;
	[WmiDataId(8), read] uint32 state;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string prefix;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Occurs when an exception occurs during processing for a columnstore operation."): Amended,
    Guid("{3a945152-e776-461e-84ef-f9b7f5977e26}"), locale("MS\\0x409"),
    DisplayName("columnstore_log_exception"): Amended]
class XeSqlPkg_columnstore_log_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_log_exception: XeSqlPkg_columnstore_log_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] uint32 error;
	[WmiDataId(7), read] uint32 severity;
	[WmiDataId(8), read] uint32 state;
	[WmiDataId(9), read] uint8 is_in_memory;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string prefix;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Occurs when update statement is executed."): Amended,
    Guid("{56E5BE63-53C1-4CC5-A35D-F09B4EDF042C}"), locale("MS\\0x409"),
    DisplayName("table_update_code_path"): Amended]
class XeSqlPkg_table_update_code_path: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class table_update_code_path: XeSqlPkg_table_update_code_path
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
	[WmiDataId(7), read] sint8  unique_index_key_update;
};
		
[dynamic: ToInstance, Description("A test hook event, to report Hekaton search key data to test code."): Amended,
    Guid("{dbf5cb6a-b166-4784-9ae1-cd6d34e483ba}"), locale("MS\\0x409"),
    DisplayName("hekaton_search_key_event"): Amended]
class XeSqlPkg_hekaton_search_key_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hekaton_search_key_event: XeSqlPkg_hekaton_search_key_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Variant")] object key_data;
};
		
[dynamic: ToInstance, Description("Metadata is preallocating object IDs"): Amended,
    Guid("{9ef230d7-7d2d-4f00-8690-da7b3f3fb695}"), locale("MS\\0x409"),
    DisplayName("metadata_preallocate_object_id"): Amended]
class XeSqlPkg_metadata_preallocate_object_id: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_preallocate_object_id: XeSqlPkg_metadata_preallocate_object_id
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint8 stage;
	[WmiDataId(6), read] sint32 in_memory_next;
	[WmiDataId(7), read] sint32 on_disk_next;
	[WmiDataId(8), read] sint32 generated_next;
};
		
[dynamic: ToInstance, Description("Indicates that page allocations for the database are allowed."): Amended,
    Guid("{5D91E692-5C11-47A9-89B4-35BD732D420A}"), locale("MS\\0x409"),
    DisplayName("xtp_db_page_allocation_allowed"): Amended]
class XeSqlPkg_xtp_db_page_allocation_allowed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xtp_db_page_allocation_allowed: XeSqlPkg_xtp_db_page_allocation_allowed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_pool_id;
	[WmiDataId(7), read] uint64 max_memory_kb;
	[WmiDataId(8), read] sint64 xtp_memory_broker_target_allocations;
	[WmiDataId(9), read] sint64 xtp_memory_broker_allocations;
	[WmiDataId(10), read] sint64 xtp_memory_broker_overall_memory;
	[WmiDataId(11), read] sint8  system_physical_memory_high;
	[WmiDataId(12), read] sint8  system_physical_memory_low;
	[WmiDataId(13), read] sint8  process_physical_memory_low;
	[WmiDataId(14), read] sint8  system_virtual_memory_low;
	[WmiDataId(15), read] sint8  is_media_recovery;
	[WmiDataId(16), read, 
				XEMapId(172),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 database_state;
};
		
[dynamic: ToInstance, Description("Indicates that page allocations for the database are disallowed due to memory pressure."): Amended,
    Guid("{BD3ECDF2-0516-45C3-AEEA-5B9CCFEAB682}"), locale("MS\\0x409"),
    DisplayName("xtp_db_page_allocation_disallowed"): Amended]
class XeSqlPkg_xtp_db_page_allocation_disallowed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xtp_db_page_allocation_disallowed: XeSqlPkg_xtp_db_page_allocation_disallowed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_pool_id;
	[WmiDataId(7), read] uint64 max_memory_kb;
	[WmiDataId(8), read] sint64 xtp_memory_broker_target_allocations;
	[WmiDataId(9), read] sint64 xtp_memory_broker_allocations;
	[WmiDataId(10), read] sint64 xtp_memory_broker_overall_memory;
	[WmiDataId(11), read] sint8  system_physical_memory_high;
	[WmiDataId(12), read] sint8  system_physical_memory_low;
	[WmiDataId(13), read] sint8  process_physical_memory_low;
	[WmiDataId(14), read] sint8  system_virtual_memory_low;
	[WmiDataId(15), read] uint32 grace_period;
	[WmiDataId(16), read] sint8  is_media_recovery;
	[WmiDataId(17), read, 
				XEMapId(172),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 database_state;
};
		
[dynamic: ToInstance, Description("Indicates that the state of page allocations for the database is changed, from allowed to disallowed or vice versa."): Amended,
    Guid("{57fb1d21-f088-493b-95e5-f5ee0e93ab29}"), locale("MS\\0x409"),
    DisplayName("xtp_db_page_allocation_state_change"): Amended]
class XeSqlPkg_xtp_db_page_allocation_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_db_page_allocation_state_change: XeSqlPkg_xtp_db_page_allocation_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_pool_id;
	[WmiDataId(7), read] sint8  new_allowed;
	[WmiDataId(8), read] sint64 pool_max_memory_kb;
	[WmiDataId(9), read] sint64 pool_target_memory_kb;
	[WmiDataId(10), read] sint64 xtp_memory_broker_live_allocations_kb;
	[WmiDataId(11), read] sint64 xtp_memory_broker_overall_kb;
	[WmiDataId(12), read] sint64 xtp_memory_broker_target_kb;
	[WmiDataId(13), read] sint8  is_media_recovery;
	[WmiDataId(14), read, 
				XEMapId(172),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 database_state;
	[WmiDataId(15), read, 
				XEMapId(170),
				ValueMap { 
					"4", 
					"1", 
					"2", 
					"8", 
					"0" },
				Values { 
					"RESOURCE_MEM_STEADY", 
					"RESOURCE_MEMPHYSICAL_HIGH", 
					"RESOURCE_MEMPHYSICAL_LOW", 
					"RESOURCE_MEMVIRTUAL_LOW", 
					"RESOURCE_NOINFO" }
			] uint32 notification;
};
		
[dynamic: ToInstance, Description("Fired by XTP offline checkpoint when the checkpoint thread begins."): Amended,
    Guid("{37771FBC-95BE-4D70-9F69-9C91FEFB3765}"), locale("MS\\0x409"),
    DisplayName("xtp_offline_checkpoint_scan_start"): Amended]
class XeSqlPkg_xtp_offline_checkpoint_scan_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_offline_checkpoint_scan_start: XeSqlPkg_xtp_offline_checkpoint_scan_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string start_lsn;
};
		
[dynamic: ToInstance, Description("Fired by checkpoint controller thread whenever it is started."): Amended,
    Guid("{9DFDDA0E-BFF4-488C-9D6C-D177A7712578}"), locale("MS\\0x409"),
    DisplayName("xtp_checkpoint_controller_start_scan"): Amended]
class XeSqlPkg_xtp_checkpoint_controller_start_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_checkpoint_controller_start_scan: XeSqlPkg_xtp_checkpoint_controller_start_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string start_lsn;
};
		
[dynamic: ToInstance, Description("Fired by XTP offline checkpoint before it process each host log record."): Amended,
    Guid("{AD6FAB05-5E00-4EE1-A942-7FCA9DEB52F0}"), locale("MS\\0x409"),
    DisplayName("xtp_offline_checkpoint_before_log_record"): Amended]
class XeSqlPkg_xtp_offline_checkpoint_before_log_record: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_offline_checkpoint_before_log_record: XeSqlPkg_xtp_offline_checkpoint_before_log_record
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 log_operation;
	[WmiDataId(7), read] sint8  is_passive_state;
	[WmiDataId(8), read] sint8  state_log;
	[WmiDataId(9), read, Pointer] object  log_record;
	[WmiDataId(10), read, Pointer] object  error_code_pointer;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
};
		
[dynamic: ToInstance, Description("Fired by XTP offline checkpoint before it hardens the complete checkpoint information into the boot page."): Amended,
    Guid("{E3849831-BD1F-4597-9636-6E719F486B2D}"), locale("MS\\0x409"),
    DisplayName("xtp_offline_checkpoint_before_harden_complete"): Amended]
class XeSqlPkg_xtp_offline_checkpoint_before_harden_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_offline_checkpoint_before_harden_complete: XeSqlPkg_xtp_offline_checkpoint_before_harden_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_passive_state;
	[WmiDataId(7), read, Pointer] object  error_code_pointer;
	[WmiDataId(8), read] uint64 checkpoint_ts;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string recovery_lsn;
};
		
[dynamic: ToInstance, Description("Fired before hekaton columnstore's post checkpoint load starts scanning compressed columnstore and rebuilding tail heap and secondary indexes."): Amended,
    Guid("{dbe79854-fec9-451f-a5b1-482ddf003fd2}"), locale("MS\\0x409"),
    DisplayName("xtp_post_checkpoint_load"): Amended]
class XeSqlPkg_xtp_post_checkpoint_load: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_post_checkpoint_load: XeSqlPkg_xtp_post_checkpoint_load
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 thread_count_scan_columnstore;
	[WmiDataId(8), read] uint32 thread_count_rebuild_tail_heap_and_secondary_indexes;
};
		
[dynamic: ToInstance, Description("Fired by XTP close thread after it updates the boot page."): Amended,
    Guid("{96E82F60-B741-4856-9659-0BD6F55DD9E7}"), locale("MS\\0x409"),
    DisplayName("xtp_close_harden_checkpoint"): Amended]
class XeSqlPkg_xtp_close_harden_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_close_harden_checkpoint: XeSqlPkg_xtp_close_harden_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  bootstrap_adjustment;
	[WmiDataId(7), read] uint64 old_root_file_watermark;
	[WmiDataId(8), read] uint64 new_root_file_watermark;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string old_recovery_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string new_recovery_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string old_truncation_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string new_truncation_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string start_of_log;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string backup_lsn;
	[WmiDataId(15), read, Extension("Guid")] guid old_root_file;
	[WmiDataId(16), read, Extension("Guid")] guid new_root_file;
};
		
[dynamic: ToInstance, Description("Fired by XTP close thread after it updates the boot page."): Amended,
    Guid("{B08C6FA5-6B6F-4AEB-946B-39EFCD34D747}"), locale("MS\\0x409"),
    DisplayName("xtp_close_harden_checkpoint"): Amended]
class XeSqlPkg_xtp_close_harden_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xtp_close_harden_checkpoint: XeSqlPkg_xtp_close_harden_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  bootstrap_adjustment;
	[WmiDataId(7), read] sint8  is_secondary;
	[WmiDataId(8), read] uint64 old_root_file_watermark;
	[WmiDataId(9), read] uint64 new_root_file_watermark;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string old_recovery_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string new_recovery_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string old_truncation_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string new_truncation_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string start_of_log;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string backup_lsn;
	[WmiDataId(16), read, Extension("Guid")] guid old_root_file;
	[WmiDataId(17), read, Extension("Guid")] guid new_root_file;
};
		
[dynamic: ToInstance, Description("Indicates whether the Hekaton checkpoint controller thread has started or not"): Amended,
    Guid("{681B3074-7008-48B9-955A-F0E56BA67286}"), locale("MS\\0x409"),
    DisplayName("xtp_controller_thread_status"): Amended]
class XeSqlPkg_xtp_controller_thread_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_controller_thread_status: XeSqlPkg_xtp_controller_thread_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_controller_started;
	[WmiDataId(7), read] sint8  is_secondary;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string recovery_lsn;
};
		
[dynamic: ToInstance, Description("Indicates that a new file was created by storage interface."): Amended,
    Guid("{A13C83F0-B490-422B-B84D-E1E0648E6A37}"), locale("MS\\0x409"),
    DisplayName("xtp_stgif_file_created"): Amended]
class XeSqlPkg_xtp_stgif_file_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_stgif_file_created: XeSqlPkg_xtp_stgif_file_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(186),
				ValueMap { 
					"2", 
					"3", 
					"1", 
					"4", 
					"0" },
				Values { 
					"hkftData", 
					"hkftDelta", 
					"hkftFirst", 
					"hkftLargeData", 
					"hkftUnknown" }
			] uint32 file_type;
	[WmiDataId(7), read, Extension("Guid")] guid file_id;
};
		
[dynamic: ToInstance, Description("Indicates that a file was deleted by storage interface."): Amended,
    Guid("{3994BE13-1F0E-42BC-AA11-8227262CFBBE}"), locale("MS\\0x409"),
    DisplayName("xtp_stgif_file_deleted"): Amended]
class XeSqlPkg_xtp_stgif_file_deleted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_stgif_file_deleted: XeSqlPkg_xtp_stgif_file_deleted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(186),
				ValueMap { 
					"2", 
					"3", 
					"1", 
					"4", 
					"0" },
				Values { 
					"hkftData", 
					"hkftDelta", 
					"hkftFirst", 
					"hkftLargeData", 
					"hkftUnknown" }
			] uint32 file_type;
	[WmiDataId(7), read, Extension("Guid")] guid file_id;
};
		
[dynamic: ToInstance, Description("Indicates that a file was reused, moved from free-list to active-list."): Amended,
    Guid("{E1492DFD-8B26-49CA-B432-0E7B77585E8B}"), locale("MS\\0x409"),
    DisplayName("xtp_stgif_file_reused"): Amended]
class XeSqlPkg_xtp_stgif_file_reused: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_stgif_file_reused: XeSqlPkg_xtp_stgif_file_reused
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(186),
				ValueMap { 
					"2", 
					"3", 
					"1", 
					"4", 
					"0" },
				Values { 
					"hkftData", 
					"hkftDelta", 
					"hkftFirst", 
					"hkftLargeData", 
					"hkftUnknown" }
			] uint32 file_type;
	[WmiDataId(7), read, Extension("Guid")] guid file_id;
};
		
[dynamic: ToInstance, Description("Indicates that a new container was added to storage interface."): Amended,
    Guid("{17B7011D-338F-40AA-91E4-1EDA00B7C5BC}"), locale("MS\\0x409"),
    DisplayName("xtp_stgif_container_added"): Amended]
class XeSqlPkg_xtp_stgif_container_added: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_stgif_container_added: XeSqlPkg_xtp_stgif_container_added
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string container_path;
};
		
[dynamic: ToInstance, Description("Indicates that a new container was added to storage interface."): Amended,
    Guid("{265BF354-EE8D-48A7-BA76-FC82896D94BA}"), locale("MS\\0x409"),
    DisplayName("xtp_stgif_container_added"): Amended]
class XeSqlPkg_xtp_stgif_container_added: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xtp_stgif_container_added: XeSqlPkg_xtp_stgif_container_added
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string container_path;
	[WmiDataId(7), read, Extension("Guid")] guid file_guid;
};
		
[dynamic: ToInstance, Description("Indicates that a new container was added to storage interface."): Amended,
    Guid("{CC76DC03-9D08-4B12-AD63-C8F62E779081}"), locale("MS\\0x409"),
    DisplayName("xtp_stgif_container_deleted"): Amended]
class XeSqlPkg_xtp_stgif_container_deleted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_stgif_container_deleted: XeSqlPkg_xtp_stgif_container_deleted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string container_path;
};
		
[dynamic: ToInstance, Description("Indicates that a new container was added to storage interface."): Amended,
    Guid("{4BCB77B4-4B3B-481E-8F0C-6C91F5A4B46A}"), locale("MS\\0x409"),
    DisplayName("xtp_stgif_container_deleted"): Amended]
class XeSqlPkg_xtp_stgif_container_deleted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xtp_stgif_container_deleted: XeSqlPkg_xtp_stgif_container_deleted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string container_path;
	[WmiDataId(7), read, Extension("Guid")] guid file_guid;
};
		
[dynamic: ToInstance, Description("Fired by XTP offline checkpoint when the checkpoint thread stops."): Amended,
    Guid("{8CF13970-27C1-4DDD-BF27-9473BC2255C2}"), locale("MS\\0x409"),
    DisplayName("xtp_offline_checkpoint_scan_stop"): Amended]
class XeSqlPkg_xtp_offline_checkpoint_scan_stop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_offline_checkpoint_scan_stop: XeSqlPkg_xtp_offline_checkpoint_scan_stop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Occurs at start of log recovery of XTP table."): Amended,
    Guid("{6e5e242b-3f68-435e-ae7f-1590a4e83ea0}"), locale("MS\\0x409"),
    DisplayName("xtp_recover_table"): Amended]
class XeSqlPkg_xtp_recover_table: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_recover_table: XeSqlPkg_xtp_recover_table
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs at completion of log recovery of XTP table."): Amended,
    Guid("{516b9134-6f7c-4bc0-9c82-4d60c0d2e58a}"), locale("MS\\0x409"),
    DisplayName("xtp_recover_done"): Amended]
class XeSqlPkg_xtp_recover_done: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_recover_done: XeSqlPkg_xtp_recover_done
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs on every BFC row update or insert."): Amended,
    Guid("{0FCDB812-7E42-4484-B91C-D07C20CCD307}"), locale("MS\\0x409"),
    DisplayName("xtp_offline_checkpoint_bfc_update"): Amended]
class XeSqlPkg_xtp_offline_checkpoint_bfc_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_offline_checkpoint_bfc_update: XeSqlPkg_xtp_offline_checkpoint_bfc_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, Pointer] object  error_code_pointer;
	[WmiDataId(7), read, Extension("Guid")] guid file_id;
};
		
[dynamic: ToInstance, Description("Indicates that the hkTrimLsn on bootpage was updated while in DeleteOnlyMode."): Amended,
    Guid("{D9D60EE1-E1A5-43E7-9B0E-313ADA6129A3}"), locale("MS\\0x409"),
    DisplayName("xtp_db_delete_only_mode_updatedhktrimlsn"): Amended]
class XeSqlPkg_xtp_db_delete_only_mode_updatedhktrimlsn: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_db_delete_only_mode_updatedhktrimlsn: XeSqlPkg_xtp_db_delete_only_mode_updatedhktrimlsn
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string old_hk_trim_lsn;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string new_hk_trim_lsn;
};
		
[dynamic: ToInstance, Description("Fired after hk undeployment is triggered by UpdateSlo on Sterling."): Amended,
    Guid("{77DEC6A0-99DD-4B47-B927-5054D014EE3B}"), locale("MS\\0x409"),
    DisplayName("xtp_database_undeployed"): Amended]
class XeSqlPkg_xtp_database_undeployed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_database_undeployed: XeSqlPkg_xtp_database_undeployed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(199),
				ValueMap { 
					"2", 
					"0", 
					"4", 
					"3", 
					"1" },
				Values { 
					"InitialCkpt", 
					"Invalid", 
					"Last", 
					"SwitchToInactiveUndeploy", 
					"Version" }
			] uint32 deploy_stage;
	[WmiDataId(7), read] sint8  is_secondary;
};
		
[dynamic: ToInstance, Description("Fired after hk object creation state is updated during UpdateSlo on Sterling."): Amended,
    Guid("{1555D43F-AB30-430C-8276-4667BD1B8BDE}"), locale("MS\\0x409"),
    DisplayName("xtp_object_creation_allowed"): Amended]
class XeSqlPkg_xtp_object_creation_allowed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_object_creation_allowed: XeSqlPkg_xtp_object_creation_allowed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  creation_enabled;
};
		
[dynamic: ToInstance, Description("Fired after serialized recovery of a hekaton db is invoked."): Amended,
    Guid("{246429F3-5CD0-4682-8038-2264E1ECA222}"), locale("MS\\0x409"),
    DisplayName("xtp_db_recovery"): Amended]
class XeSqlPkg_xtp_db_recovery: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_db_recovery: XeSqlPkg_xtp_db_recovery
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  pre_recovery;
	[WmiDataId(7), read] sint8  serial_recovery;
	[WmiDataId(8), read] sint32 outcome;
};
		
[dynamic: ToInstance, Description("Indicates the XTP open existing database progress."): Amended,
    Guid("{dc90715d-452f-46db-9374-786918dfeaaf}"), locale("MS\\0x409"),
    DisplayName("xtp_open_existing_database"): Amended]
class XeSqlPkg_xtp_open_existing_database: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class xtp_open_existing_database: XeSqlPkg_xtp_open_existing_database
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(227),
				ValueMap { 
					"3", 
					"2", 
					"1", 
					"4" },
				Values { 
					"hkopexdbHkRtCreateOrInitDatabase", 
					"hkopexdbHKSystemInitialized", 
					"hkopexdbInitializedDBAllocator", 
					"hkopexdbOpenExistingHkDatabase" }
			] uint32 phase;
	[WmiDataId(7), read] sint32 hresult;
};
		
[dynamic: ToInstance, Description("Log scan during crash recovery"): Amended,
    Guid("{1370A704-4F31-4A3C-969B-A117D0F4DF68}"), locale("MS\\0x409"),
    DisplayName("compute_secondary_redo_start"): Amended]
class XeSqlPkg_compute_secondary_redo_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_secondary_redo_start: XeSqlPkg_compute_secondary_redo_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 start_block;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string last_redone_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{16b29a8f-0e7e-4345-aa6f-784f880fd264}"), locale("MS\\0x409"),
    DisplayName("compute_forwarder_data_loss_stats"): Amended]
class XeSqlPkg_compute_forwarder_data_loss_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_forwarder_data_loss_stats: XeSqlPkg_compute_forwarder_data_loss_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 current_bsn;
	[WmiDataId(7), read] uint64 next_block;
	[WmiDataId(8), read] sint64 replication_lag_in_secs;
	[WmiDataId(9), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{b352e239-610a-4be2-9144-e57ccb580b93}"), locale("MS\\0x409"),
    DisplayName("rbio_redo_log_progress"): Amended]
class XeSqlPkg_rbio_redo_log_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbio_redo_log_progress: XeSqlPkg_rbio_redo_log_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_compute;
	[WmiDataId(7), read] uint64 current_bsn;
	[WmiDataId(8), read] uint16 foreign_file_id;
	[WmiDataId(9), read] uint64 start_page_id;
	[WmiDataId(10), read] uint64 end_page_id;
	[WmiDataId(11), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Results for validating that the EndofLog from secondary compute, matches the EoL of the LZ."): Amended,
    Guid("{2b710f84-d9f5-48a6-b9a8-f02e55289788}"), locale("MS\\0x409"),
    DisplayName("rbio_eol_verification"): Amended]
class XeSqlPkg_rbio_eol_verification: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbio_eol_verification: XeSqlPkg_rbio_eol_verification
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 last_valid_block;
	[WmiDataId(6), read] uint64 first_invalid_block;
	[WmiDataId(7), read] uint64 read_offset;
	[WmiDataId(8), read] uint32 block_size;
	[WmiDataId(9), read] uint32 result;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("XEvent used for testing purposes to generate the proper synchronization for RbIo dbs."): Amended,
    Guid("{bb1d9ab2-1f3e-4482-8ce3-9161a210bbbd}"), locale("MS\\0x409"),
    DisplayName("rbio_test_sync"): Amended]
class XeSqlPkg_rbio_test_sync: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbio_test_sync: XeSqlPkg_rbio_test_sync
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 state;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{32f81259-ff8e-4bbd-b191-64211efe388f}"), locale("MS\\0x409"),
    DisplayName("read_xlog_block_stats"): Amended]
class XeSqlPkg_read_xlog_block_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class read_xlog_block_stats: XeSqlPkg_read_xlog_block_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_compute;
	[WmiDataId(6), read] uint64 reads_from_broker;
	[WmiDataId(7), read] uint64 reads_from_pool;
	[WmiDataId(8), read] uint64 reads_from_lz;
	[WmiDataId(9), read] uint64 reads_from_lc;
	[WmiDataId(10), read] uint64 reads_from_lt;
	[WmiDataId(11), read] uint64 returned_from_eol_pool;
	[WmiDataId(12), read] uint64 bytes_read;
	[WmiDataId(13), read, 
				XEMapId(18),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"PreRecovery", 
					"Analysis", 
					"Redo", 
					"Undo", 
					"Complete", 
					"PostRecovery" }
			] uint8 recovery_phase;
	[WmiDataId(14), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(15), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Request to transition to primary"): Amended,
    Guid("{7C015350-3314-491A-95B1-26B01500E733}"), locale("MS\\0x409"),
    DisplayName("compute_request_transition_to_primary"): Amended]
class XeSqlPkg_compute_request_transition_to_primary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_request_transition_to_primary: XeSqlPkg_compute_request_transition_to_primary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 current_bsn;
	[WmiDataId(7), read] uint64 next_block;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Counter indicating how long server is disconnected from xlog"): Amended,
    Guid("{1FC05365-4F12-4CD5-8104-C3B2DEC06DBE}"), locale("MS\\0x409"),
    DisplayName("xlog_read_block_timeout"): Amended]
class XeSqlPkg_xlog_read_block_timeout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xlog_read_block_timeout: XeSqlPkg_xlog_read_block_timeout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 bsn;
	[WmiDataId(6), read] sint8  request_for_eol;
	[WmiDataId(7), read] uint64 extra_hint_bsn_inclusive;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint64 timeout;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Xlog Cached iterator"): Amended,
    Guid("{c5d82f66-bb16-4ea2-945e-a52b1dcfc252}"), locale("MS\\0x409"),
    DisplayName("xlog_client_id"): Amended]
class XeSqlPkg_xlog_client_id: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xlog_client_id: XeSqlPkg_xlog_client_id
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(203),
				ValueMap { 
					"3", 
					"4", 
					"2", 
					"6", 
					"5", 
					"1", 
					"0" },
				Values { 
					"XLogClientRbIoFcbAsyncReadInternal", 
					"XLogClientRbIoFsReadFile", 
					"XLogClientRbioInitLocalPages", 
					"XLogClientRUFinalAvailabilityNotice", 
					"XLogClientRUInit", 
					"XLogClientSQLServerLogMgrXLogReader", 
					"XLogClientXLogIterForward" }
			] uint32 call_site;
	[WmiDataId(6), read, Extension("Guid")] guid client_id;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("End of log returned from xlog"): Amended,
    Guid("{4CFCC295-200E-4C55-AD00-C0982E1FBBD3}"), locale("MS\\0x409"),
    DisplayName("compute_secondary_consumed_all_log"): Amended]
class XeSqlPkg_compute_secondary_consumed_all_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_secondary_consumed_all_log: XeSqlPkg_compute_secondary_consumed_all_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 end_of_log_bsn;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Secondary compute requested end of log"): Amended,
    Guid("{A9841452-6F99-455A-8384-40149994049E}"), locale("MS\\0x409"),
    DisplayName("compute_secondary_request_eol"): Amended]
class XeSqlPkg_compute_secondary_request_eol: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_secondary_request_eol: XeSqlPkg_compute_secondary_request_eol
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 end_of_log_bsn;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Processed log block"): Amended,
    Guid("{FF3B7F09-F49B-44C7-B455-9285AFAB0DA4}"), locale("MS\\0x409"),
    DisplayName("compute_secondary_accepted_log_progress"): Amended]
class XeSqlPkg_compute_secondary_accepted_log_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_secondary_accepted_log_progress: XeSqlPkg_compute_secondary_accepted_log_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 block_id;
	[WmiDataId(7), read] uint64 current_bsn;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{028C8EE4-36D3-44C3-9858-C15DF4034634}"), locale("MS\\0x409"),
    DisplayName("compute_secondary_accept_vlf"): Amended]
class XeSqlPkg_compute_secondary_accept_vlf: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_secondary_accept_vlf: XeSqlPkg_compute_secondary_accept_vlf
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 vlf_id;
	[WmiDataId(7), read] uint64 sector_id;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{B3026008-ABE7-47E8-A2EE-482E76456C8F}"), locale("MS\\0x409"),
    DisplayName("compute_secondary_permanent_fault"): Amended]
class XeSqlPkg_compute_secondary_permanent_fault: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_secondary_permanent_fault: XeSqlPkg_compute_secondary_permanent_fault
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 referenceBsn;
	[WmiDataId(7), read] uint64 checkptBsn;
	[WmiDataId(8), read] uint64 broker_max;
	[WmiDataId(9), read] uint64 evaluation_threshold;
	[WmiDataId(10), read] uint64 fault_report_threshold;
	[WmiDataId(11), read] sint8  reported_permanent_fault;
	[WmiDataId(12), read] uint64 error_state;
	[WmiDataId(13), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(14), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("When a query gets a page from the future, it waits for redo to catchup."): Amended,
    Guid("{e7165fed-f895-455c-ba38-92dfde21bac3}"), locale("MS\\0x409"),
    DisplayName("compute_readable_secondary_wait_for_redo"): Amended]
class XeSqlPkg_compute_readable_secondary_wait_for_redo: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_readable_secondary_wait_for_redo: XeSqlPkg_compute_readable_secondary_wait_for_redo
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint8  is_system_task;
	[WmiDataId(8), read, 
				XEMapId(79),
				ValueMap { 
					"2", 
					"3", 
					"4", 
					"1", 
					"0" },
				Values { 
					"Aborted", 
					"AbortedWithDeadlock", 
					"AbortedWithTimedoutDeadlock", 
					"Sucessful", 
					"Unknown" }
			] uint8 outcome;
	[WmiDataId(9), read] uint64 duration;
	[WmiDataId(10), read] uint8 sleep_duration_bucket_00;
	[WmiDataId(11), read] uint8 sleep_duration_bucket_01;
	[WmiDataId(12), read] uint8 sleep_duration_bucket_02;
	[WmiDataId(13), read] uint8 sleep_duration_bucket_03;
	[WmiDataId(14), read] uint8 sleep_duration_bucket_04;
	[WmiDataId(15), read] uint8 sleep_duration_bucket_05;
	[WmiDataId(16), read] uint8 sleep_duration_bucket_06;
	[WmiDataId(17), read] uint64 catch_up_distance_bytes;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string initial_lsn;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string target_lsn;
	[WmiDataId(21), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(22), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string wait_for_redo_location;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string wait_for_redo_page_type;
};
		
[dynamic: ToInstance, Description("When a query gets a page from the future, it waits for redo to catchup. Emitted without predicates"): Amended,
    Guid("{8db2ac09-9d57-4b41-913b-a0d46ede8520}"), locale("MS\\0x409"),
    DisplayName("compute_readable_secondary_wait_for_redo_for_debugging"): Amended]
class XeSqlPkg_compute_readable_secondary_wait_for_redo_for_debugging: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_readable_secondary_wait_for_redo_for_debugging: XeSqlPkg_compute_readable_secondary_wait_for_redo_for_debugging
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] sint8  is_system_task;
	[WmiDataId(8), read, 
				XEMapId(79),
				ValueMap { 
					"2", 
					"3", 
					"4", 
					"1", 
					"0" },
				Values { 
					"Aborted", 
					"AbortedWithDeadlock", 
					"AbortedWithTimedoutDeadlock", 
					"Sucessful", 
					"Unknown" }
			] uint8 outcome;
	[WmiDataId(9), read] uint64 duration;
	[WmiDataId(10), read] uint8 sleep_duration_bucket_00;
	[WmiDataId(11), read] uint8 sleep_duration_bucket_01;
	[WmiDataId(12), read] uint8 sleep_duration_bucket_02;
	[WmiDataId(13), read] uint8 sleep_duration_bucket_03;
	[WmiDataId(14), read] uint8 sleep_duration_bucket_04;
	[WmiDataId(15), read] uint8 sleep_duration_bucket_05;
	[WmiDataId(16), read] uint8 sleep_duration_bucket_06;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string initial_lsn;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string target_lsn;
	[WmiDataId(20), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(21), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string wait_for_redo_location;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string wait_for_redo_page_type;
};
		
[dynamic: ToInstance, Description("In every 5 minutes interval,stats data of waitforlsn is emitted"): Amended,
    Guid("{77e90750-f9a2-4b3f-bf49-c323d061176f}"), locale("MS\\0x409"),
    DisplayName("wait_for_redo_lsn_to_catchup_stats"): Amended]
class XeSqlPkg_wait_for_redo_lsn_to_catchup_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wait_for_redo_lsn_to_catchup_stats: XeSqlPkg_wait_for_redo_lsn_to_catchup_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 bucket_range;
	[WmiDataId(7), read] uint32 bucket_hits;
	[WmiDataId(8), read] uint64 avg_distance;
	[WmiDataId(9), read] uint64 max_distance;
	[WmiDataId(10), read] uint64 min_distance;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("In every 2 hours interval,stats data of BTree re-traversal count is emitted"): Amended,
    Guid("{15043f4b-22de-49d7-b88e-831fd8d46719}"), locale("MS\\0x409"),
    DisplayName("btree_retraversal_count"): Amended]
class XeSqlPkg_btree_retraversal_count: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class btree_retraversal_count: XeSqlPkg_btree_retraversal_count
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 future_page_from_page_server;
	[WmiDataId(7), read] uint64 parent_page_with_pending_lsns;
	[WmiDataId(8), read] uint64 page_split_due_to_sys_tran;
	[WmiDataId(9), read] uint64 avoided_retraversal_sysxact;
	[WmiDataId(10), read] uint64 avoided_retraversal_future_page;
	[WmiDataId(11), read] uint32 btree_readsec_telemetry_location;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("In every 5 minutes interval,stats data of RedoPageType and RedoLocation is emitted"): Amended,
    Guid("{9c6f4c50-ab0d-453e-8c07-1b8dd2ad53b8}"), locale("MS\\0x409"),
    DisplayName("wait_for_redo_lsn_to_catchup_pagestats"): Amended]
class XeSqlPkg_wait_for_redo_lsn_to_catchup_pagestats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wait_for_redo_lsn_to_catchup_pagestats: XeSqlPkg_wait_for_redo_lsn_to_catchup_pagestats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 bucket_hits_00;
	[WmiDataId(7), read] uint64 bucket_hits_01;
	[WmiDataId(8), read] uint64 bucket_hits_02;
	[WmiDataId(9), read] uint64 bucket_hits_03;
	[WmiDataId(10), read] uint64 bucket_hits_04;
	[WmiDataId(11), read] uint64 bucket_hits_05;
	[WmiDataId(12), read] uint64 bucket_hits_06;
	[WmiDataId(13), read] uint64 bucket_hits_07;
	[WmiDataId(14), read] uint64 bucket_hits_08;
	[WmiDataId(15), read] uint64 bucket_hits_09;
	[WmiDataId(16), read] uint64 bucket_hits_10;
	[WmiDataId(17), read] uint64 bucket_hits_11;
	[WmiDataId(18), read] uint64 bucket_hits_12;
	[WmiDataId(19), read] uint64 bucket_hits_13;
	[WmiDataId(20), read] uint64 bucket_hits_14;
	[WmiDataId(21), read] uint64 bucket_hits_15;
	[WmiDataId(22), read] uint64 bucket_hits_16;
	[WmiDataId(23), read] uint64 bucket_hits_17;
	[WmiDataId(24), read] uint64 bucket_hits_18;
	[WmiDataId(25), read] uint64 bucket_hits_19;
	[WmiDataId(26), read] uint64 bucket_hits_20;
	[WmiDataId(27), read] uint64 bucket_hits_21;
	[WmiDataId(28), read] uint64 bucket_hits_22;
	[WmiDataId(29), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(30), read, StringTermination("NullTerminated"), Format("w")] string wait_for_redo_location;
	[WmiDataId(31), read, StringTermination("NullTerminated"), Format("w")] string wait_for_redo_page_type;
};
		
[dynamic: ToInstance, Description("RbIo caught an unexpected exception."): Amended,
    Guid("{0F4638F8-0C9F-48C9-8858-D012B1F15481}"), locale("MS\\0x409"),
    DisplayName("xlog_reader_exception"): Amended]
class XeSqlPkg_xlog_reader_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xlog_reader_exception: XeSqlPkg_xlog_reader_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 error_number;
	[WmiDataId(7), read] sint32 severity;
	[WmiDataId(8), read] sint32 state;
	[WmiDataId(9), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string physical_db_name;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{a0b1c27f-01f5-468e-bd8b-3c3d7573792a}"), locale("MS\\0x409"),
    DisplayName("first_foreign_redo_lsn"): Amended]
class XeSqlPkg_first_foreign_redo_lsn: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class first_foreign_redo_lsn: XeSqlPkg_first_foreign_redo_lsn
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 foreign_file_id;
	[WmiDataId(7), read] uint64 start_page_id;
	[WmiDataId(8), read] uint64 end_page_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string lsn;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string physical_db_name;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{5f7e0c09-510a-4dae-b23f-f6e5777e07da}"), locale("MS\\0x409"),
    DisplayName("foreign_redo_hash"): Amended]
class XeSqlPkg_foreign_redo_hash: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class foreign_redo_hash: XeSqlPkg_foreign_redo_hash
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 start_bsn_id;
	[WmiDataId(7), read] uint64 end_bsn_id;
	[WmiDataId(8), read] uint32 log_rec_hash;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(10), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid physical_db_id;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{0567b698-5afd-4ec0-8c04-0ad920b61998}"), locale("MS\\0x409"),
    DisplayName("foreign_redo_old_bsn_corruption"): Amended]
class XeSqlPkg_foreign_redo_old_bsn_corruption: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class foreign_redo_old_bsn_corruption: XeSqlPkg_foreign_redo_old_bsn_corruption
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 start_bsn_id;
	[WmiDataId(7), read] uint64 end_bsn_id;
	[WmiDataId(8), read] uint32 log_rec_hash;
	[WmiDataId(9), read] uint64 prev_bsn_id;
	[WmiDataId(10), read] uint64 old_bsn_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(13), read, Extension("Guid")] guid physical_db_id;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{249672a2-bb6f-4eaf-8e00-50c89272c113}"), locale("MS\\0x409"),
    DisplayName("compute_analysis_info"): Amended]
class XeSqlPkg_compute_analysis_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_analysis_info: XeSqlPkg_compute_analysis_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 vlf_count;
	[WmiDataId(7), read] uint64 vlf_size_in_mb;
	[WmiDataId(8), read] uint32 first_vlf_id;
	[WmiDataId(9), read] uint64 end_of_log_bsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string analysis_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string end_of_log_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(14), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(15), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Checkpoint of the foreign file has begun"): Amended,
    Guid("{1938dda6-ee6c-420b-a6c7-64fd4f0d30ad}"), locale("MS\\0x409"),
    DisplayName("foreign_checkpoint_begin"): Amended]
class XeSqlPkg_foreign_checkpoint_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class foreign_checkpoint_begin: XeSqlPkg_foreign_checkpoint_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 foreign_file_id;
	[WmiDataId(7), read] uint64 start_page_id;
	[WmiDataId(8), read] uint64 end_page_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string foreign_redo_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(11), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Checkpoint of the foreign file has ended"): Amended,
    Guid("{a29c7859-08ba-42f1-b48f-7914d0b0c85d}"), locale("MS\\0x409"),
    DisplayName("foreign_checkpoint_end"): Amended]
class XeSqlPkg_foreign_checkpoint_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class foreign_checkpoint_end: XeSqlPkg_foreign_checkpoint_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 foreign_file_id;
	[WmiDataId(7), read] uint64 start_page_id;
	[WmiDataId(8), read] uint64 end_page_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string persisted_foreign_redo_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(11), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Indicates whether the initial VLF Header read by the XLogIterForward was delayed until the actual iteration started."): Amended,
    Guid("{023620ce-5952-4f59-8a11-02a1d8a3f648}"), locale("MS\\0x409"),
    DisplayName("foreign_skip_fetching_vlfheader"): Amended]
class XeSqlPkg_foreign_skip_fetching_vlfheader: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class foreign_skip_fetching_vlfheader: XeSqlPkg_foreign_skip_fetching_vlfheader
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 foreign_file_id;
	[WmiDataId(7), read] uint64 scan_start_bsn;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(9), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Indicates the fact that fetching a VLF header failed."): Amended,
    Guid("{845e7783-c231-4642-bcfb-eb91c88fe739}"), locale("MS\\0x409"),
    DisplayName("foreign_failure_fetching_vlfheader"): Amended]
class XeSqlPkg_foreign_failure_fetching_vlfheader: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class foreign_failure_fetching_vlfheader: XeSqlPkg_foreign_failure_fetching_vlfheader
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 foreign_file_id;
	[WmiDataId(7), read] uint64 vlf_header_bsn;
	[WmiDataId(8), read] uint32 attempt_number;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Tracks the progress of the page server catch up during an encryption scan."): Amended,
    Guid("{D19BCD1E-86A6-498D-8872-EC4A2A6DD704}"), locale("MS\\0x409"),
    DisplayName("foreign_tde_completion_progress"): Amended]
class XeSqlPkg_foreign_tde_completion_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class foreign_tde_completion_progress: XeSqlPkg_foreign_tde_completion_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 foreign_file_id;
	[WmiDataId(7), read] uint32 start_page_id;
	[WmiDataId(8), read] uint32 end_page_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string encryption_scan_completion_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string page_server_checkpoint_lsn;
	[WmiDataId(11), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Indicates that the request to the log leasing service for the same vlf is skipped"): Amended,
    Guid("{6d5903e9-cfe9-4a83-b033-e0dd6d00b0c7}"), locale("MS\\0x409"),
    DisplayName("log_lease_skip_same_vlf"): Amended]
class XeSqlPkg_log_lease_skip_same_vlf: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_lease_skip_same_vlf: XeSqlPkg_log_lease_skip_same_vlf
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 vlf_id;
	[WmiDataId(6), read] uint64 duration_in_min;
	[WmiDataId(7), read] uint16 database_id;
	[WmiDataId(8), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string log_lease_consumer_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string lease_request_reason;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{8de97be1-3d60-409d-9ab6-92da38e09c4d}"), locale("MS\\0x409"),
    DisplayName("log_replay_stats"): Amended]
class XeSqlPkg_log_replay_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_replay_stats: XeSqlPkg_log_replay_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_compute;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint16 foreign_file_id;
	[WmiDataId(8), read] uint32 redo_stall_time_count;
	[WmiDataId(9), read] uint64 xlogreader_stall_time_count;
	[WmiDataId(10), read] uint64 xlogreader_redo_catchup_time_count;
	[WmiDataId(11), read] uint32 redo_read_time_count;
	[WmiDataId(12), read] uint32 redo_active_time_count;
	[WmiDataId(13), read] uint32 evaluate_foreigncheckpoint_count;
	[WmiDataId(14), read] uint32 remap_page_id_count;
	[WmiDataId(15), read] uint32 analyze_record_count;
	[WmiDataId(16), read] uint32 log_record_count;
	[WmiDataId(17), read] uint64 redo_maximum_stall_time;
	[WmiDataId(18), read] uint64 xlogreader_maximum_stall_time;
	[WmiDataId(19), read] uint64 xlogreader_redo_catchup_maximum_stall_time;
	[WmiDataId(20), read] uint64 redo_maximum_read_time;
	[WmiDataId(21), read] uint64 redo_maximum_active_time;
	[WmiDataId(22), read] uint64 redo_thread_stall_time;
	[WmiDataId(23), read] uint64 redo_thread_read_time;
	[WmiDataId(24), read] uint64 redo_thread_active_time;
	[WmiDataId(25), read] uint64 xlogreader_stall_time;
	[WmiDataId(26), read] uint64 xlogreader_redo_catchup_time;
	[WmiDataId(27), read] uint64 xlogreader_read_time;
	[WmiDataId(28), read] uint64 xlogreader_active_time;
	[WmiDataId(29), read] uint64 evaluate_foreigncheckpoint_time;
	[WmiDataId(30), read] uint64 remap_page_id_time;
	[WmiDataId(31), read] uint64 analyze_record_time;
	[WmiDataId(32), read] uint64 log_record_time;
	[WmiDataId(33), read, StringTermination("NullTerminated"), Format("w")] string pages_stats;
	[WmiDataId(34), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(35), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(36), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(37), read, StringTermination("NullTerminated"), Format("w")] string physical_db_name;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{8de97be1-3d60-409d-9ab6-92da38e09c4d}"), locale("MS\\0x409"),
    DisplayName("log_replay_stats"): Amended]
class XeSqlPkg_log_replay_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class log_replay_stats: XeSqlPkg_log_replay_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_compute;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint16 foreign_file_id;
	[WmiDataId(8), read] uint64 start_page_id;
	[WmiDataId(9), read] uint64 end_page_id;
	[WmiDataId(10), read] uint32 redo_stall_time_count;
	[WmiDataId(11), read] uint64 xlogreader_stall_time_count;
	[WmiDataId(12), read] uint64 xlogreader_redo_catchup_time_count;
	[WmiDataId(13), read] uint32 redo_read_time_count;
	[WmiDataId(14), read] uint32 redo_active_time_count;
	[WmiDataId(15), read] uint32 evaluate_foreigncheckpoint_count;
	[WmiDataId(16), read] uint32 remap_page_id_count;
	[WmiDataId(17), read] uint32 analyze_record_count;
	[WmiDataId(18), read] uint32 log_record_count;
	[WmiDataId(19), read] uint64 redo_maximum_stall_time;
	[WmiDataId(20), read] uint64 xlogreader_maximum_stall_time;
	[WmiDataId(21), read] uint64 xlogreader_redo_catchup_maximum_stall_time;
	[WmiDataId(22), read] uint64 redo_maximum_read_time;
	[WmiDataId(23), read] uint64 redo_maximum_active_time;
	[WmiDataId(24), read] uint64 redo_thread_stall_time;
	[WmiDataId(25), read] uint64 redo_thread_read_time;
	[WmiDataId(26), read] uint64 redo_thread_active_time;
	[WmiDataId(27), read] uint64 xlogreader_stall_time;
	[WmiDataId(28), read] uint64 xlogreader_redo_catchup_time;
	[WmiDataId(29), read] uint64 xlogreader_read_time;
	[WmiDataId(30), read] uint64 xlogreader_active_time;
	[WmiDataId(31), read] uint64 xlogreader_create_page_server_time;
	[WmiDataId(32), read] uint64 xlogreader_wait_for_page_server_time;
	[WmiDataId(33), read] uint64 replica_rebuild_evaluation_time;
	[WmiDataId(34), read] uint64 evaluate_foreigncheckpoint_time;
	[WmiDataId(35), read] uint64 remap_page_id_time;
	[WmiDataId(36), read] uint64 analyze_record_time;
	[WmiDataId(37), read] uint64 log_wait_for_flush_time_count;
	[WmiDataId(38), read] uint64 log_wait_for_flush_maximum_time;
	[WmiDataId(39), read] uint64 log_wait_for_flush_time;
	[WmiDataId(40), read] uint64 log_record_time;
	[WmiDataId(41), read] uint64 user_remote_requests;
	[WmiDataId(42), read] uint64 user_remote_page_reads;
	[WmiDataId(43), read, StringTermination("NullTerminated"), Format("w")] string pages_stats;
	[WmiDataId(44), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(45), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(46), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(47), read, StringTermination("NullTerminated"), Format("w")] string physical_db_name;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{fdeb6e36-07bc-45a2-a9cb-fbc6d5426142}"), locale("MS\\0x409"),
    DisplayName("log_redo_stats"): Amended]
class XeSqlPkg_log_redo_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_redo_stats: XeSqlPkg_log_redo_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 log_op;
	[WmiDataId(7), read] uint32 redone_count;
	[WmiDataId(8), read] uint64 redone_total_us;
	[WmiDataId(9), read] uint64 max_time_us;
	[WmiDataId(10), read] uint64 min_time_us;
	[WmiDataId(11), read] uint64 page_fix_total_us;
	[WmiDataId(12), read] uint64 max_page_fix_time_us;
	[WmiDataId(13), read] uint64 max_redo_page_id;
	[WmiDataId(14), read] uint64 max_fix_time_page_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string max_lsn;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string min_lsn;
};
		
[dynamic: ToInstance, Description("Print failover info stored in log block header during LC flush"): Amended,
    Guid("{51fa6fd2-4ccb-4190-aeff-07c857c63214}"), locale("MS\\0x409"),
    DisplayName("log_block_header_failover_info"): Amended]
class XeSqlPkg_log_block_header_failover_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_block_header_failover_info: XeSqlPkg_log_block_header_failover_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 node_id;
	[WmiDataId(6), read] uint8 failover_signature;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string eol_lsn;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string failover_logblock_timestamp;
};
		
[dynamic: ToInstance, Description("Start of waiting for MoveUp redo to complete in order to accept a new Vlf"): Amended,
    Guid("{5098480d-a3ef-485d-b89d-74a68ece9d25}"), locale("MS\\0x409"),
    DisplayName("compute_secondary_begin_wait_for_catchup"): Amended]
class XeSqlPkg_compute_secondary_begin_wait_for_catchup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_secondary_begin_wait_for_catchup: XeSqlPkg_compute_secondary_begin_wait_for_catchup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 redo_queue_bytes;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string last_redone_lsn;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string last_received_lsn;
};
		
[dynamic: ToInstance, Description("When waiting for move up redo completes, and a new Vlf can be accepted."): Amended,
    Guid("{2633bf7d-8c54-4d7e-95fb-24fb40af5658}"), locale("MS\\0x409"),
    DisplayName("compute_secondary_end_wait_for_catchup"): Amended]
class XeSqlPkg_compute_secondary_end_wait_for_catchup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_secondary_end_wait_for_catchup: XeSqlPkg_compute_secondary_end_wait_for_catchup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 total_elapsed_time_sec;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string last_redone_lsn;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string last_received_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when VLDB stamp end of log lsn after create file "): Amended,
    Guid("{b99575d3-15aa-4501-b16a-7d19f881cf2b}"), locale("MS\\0x409"),
    DisplayName("stamp_end_of_log"): Amended]
class XeSqlPkg_stamp_end_of_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stamp_end_of_log: XeSqlPkg_stamp_end_of_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string physical_database_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string safe_lsn;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{d9a1661d-67a8-41fb-b1f7-1fe3799ab3b4}"), locale("MS\\0x409"),
    DisplayName("rbio_read_future_page"): Amended]
class XeSqlPkg_rbio_read_future_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbio_read_future_page: XeSqlPkg_rbio_read_future_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, 
				XEMapId(78),
				ValueMap { 
					"13", 
					"20", 
					"1", 
					"18", 
					"16", 
					"100", 
					"101", 
					"21", 
					"15", 
					"8", 
					"10", 
					"2", 
					"17", 
					"11", 
					"9", 
					"7", 
					"14", 
					"3", 
					"4", 
					"102", 
					"255", 
					"19", 
					"5", 
					"6" },
				Values { 
					"BOOT_PAGE", 
					"BULK_OPERATION_PAGE", 
					"DATA_PAGE", 
					"DBCC_FORMATTED_PAGE", 
					"DIFF_MAP_PAGE", 
					"DUMP_HEADER_PAGE", 
					"DUMP_TRAILER_PAGE", 
					"ENCRYPT_UNALLOC_PAGE", 
					"FILEHEADER_PAGE", 
					"GAM_PAGE", 
					"IAM_PAGE", 
					"INDEX_PAGE", 
					"ML_MAP_PAGE", 
					"PFS_PAGE", 
					"SGAM_PAGE", 
					"SORT_PAGE", 
					"SYSCONFIG_PAGE", 
					"TEXT_MIX_PAGE", 
					"TEXT_TREE_PAGE", 
					"UNDOFILE_HEADER_PAGE", 
					"UNKNOWN_PAGE", 
					"UNLINKED_REORG_PAGE", 
					"UNUSED_1", 
					"WF_PAGE" }
			] uint8 requested_page_type;
	[WmiDataId(9), read, 
				XEMapId(78),
				ValueMap { 
					"13", 
					"20", 
					"1", 
					"18", 
					"16", 
					"100", 
					"101", 
					"21", 
					"15", 
					"8", 
					"10", 
					"2", 
					"17", 
					"11", 
					"9", 
					"7", 
					"14", 
					"3", 
					"4", 
					"102", 
					"255", 
					"19", 
					"5", 
					"6" },
				Values { 
					"BOOT_PAGE", 
					"BULK_OPERATION_PAGE", 
					"DATA_PAGE", 
					"DBCC_FORMATTED_PAGE", 
					"DIFF_MAP_PAGE", 
					"DUMP_HEADER_PAGE", 
					"DUMP_TRAILER_PAGE", 
					"ENCRYPT_UNALLOC_PAGE", 
					"FILEHEADER_PAGE", 
					"GAM_PAGE", 
					"IAM_PAGE", 
					"INDEX_PAGE", 
					"ML_MAP_PAGE", 
					"PFS_PAGE", 
					"SGAM_PAGE", 
					"SORT_PAGE", 
					"SYSCONFIG_PAGE", 
					"TEXT_MIX_PAGE", 
					"TEXT_TREE_PAGE", 
					"UNDOFILE_HEADER_PAGE", 
					"UNKNOWN_PAGE", 
					"UNLINKED_REORG_PAGE", 
					"UNUSED_1", 
					"WF_PAGE" }
			] uint8 current_page_type;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string page_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string end_of_log_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{d9a1661d-67a8-41fb-b1f7-1fe3799ab3b4}"), locale("MS\\0x409"),
    DisplayName("rbio_read_future_page"): Amended]
class XeSqlPkg_rbio_read_future_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class rbio_read_future_page: XeSqlPkg_rbio_read_future_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, 
				XEMapId(78),
				ValueMap { 
					"13", 
					"20", 
					"1", 
					"18", 
					"16", 
					"100", 
					"101", 
					"21", 
					"15", 
					"8", 
					"10", 
					"2", 
					"17", 
					"11", 
					"9", 
					"7", 
					"14", 
					"3", 
					"4", 
					"102", 
					"255", 
					"19", 
					"5", 
					"6" },
				Values { 
					"BOOT_PAGE", 
					"BULK_OPERATION_PAGE", 
					"DATA_PAGE", 
					"DBCC_FORMATTED_PAGE", 
					"DIFF_MAP_PAGE", 
					"DUMP_HEADER_PAGE", 
					"DUMP_TRAILER_PAGE", 
					"ENCRYPT_UNALLOC_PAGE", 
					"FILEHEADER_PAGE", 
					"GAM_PAGE", 
					"IAM_PAGE", 
					"INDEX_PAGE", 
					"ML_MAP_PAGE", 
					"PFS_PAGE", 
					"SGAM_PAGE", 
					"SORT_PAGE", 
					"SYSCONFIG_PAGE", 
					"TEXT_MIX_PAGE", 
					"TEXT_TREE_PAGE", 
					"UNDOFILE_HEADER_PAGE", 
					"UNKNOWN_PAGE", 
					"UNLINKED_REORG_PAGE", 
					"UNUSED_1", 
					"WF_PAGE" }
			] uint8 requested_page_type;
	[WmiDataId(9), read, 
				XEMapId(78),
				ValueMap { 
					"13", 
					"20", 
					"1", 
					"18", 
					"16", 
					"100", 
					"101", 
					"21", 
					"15", 
					"8", 
					"10", 
					"2", 
					"17", 
					"11", 
					"9", 
					"7", 
					"14", 
					"3", 
					"4", 
					"102", 
					"255", 
					"19", 
					"5", 
					"6" },
				Values { 
					"BOOT_PAGE", 
					"BULK_OPERATION_PAGE", 
					"DATA_PAGE", 
					"DBCC_FORMATTED_PAGE", 
					"DIFF_MAP_PAGE", 
					"DUMP_HEADER_PAGE", 
					"DUMP_TRAILER_PAGE", 
					"ENCRYPT_UNALLOC_PAGE", 
					"FILEHEADER_PAGE", 
					"GAM_PAGE", 
					"IAM_PAGE", 
					"INDEX_PAGE", 
					"ML_MAP_PAGE", 
					"PFS_PAGE", 
					"SGAM_PAGE", 
					"SORT_PAGE", 
					"SYSCONFIG_PAGE", 
					"TEXT_MIX_PAGE", 
					"TEXT_TREE_PAGE", 
					"UNDOFILE_HEADER_PAGE", 
					"UNKNOWN_PAGE", 
					"UNLINKED_REORG_PAGE", 
					"UNUSED_1", 
					"WF_PAGE" }
			] uint8 current_page_type;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string page_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string last_redone_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Occurs when VLDB fetches the remote file header and bootpage and stamps it to the local file."): Amended,
    Guid("{46c5437e-115b-4981-a917-f80491e2926e}"), locale("MS\\0x409"),
    DisplayName("rbio_init_local_pages"): Amended]
class XeSqlPkg_rbio_init_local_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbio_init_local_pages: XeSqlPkg_rbio_init_local_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string physical_database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a file is being added to the database right before generating the corresponding log record."): Amended,
    Guid("{e0592441-c502-4866-b057-366fd56010ca}"), locale("MS\\0x409"),
    DisplayName("add_file_in_database"): Amended]
class XeSqlPkg_add_file_in_database: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class add_file_in_database: XeSqlPkg_add_file_in_database
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("Fired when a page from covering RBPEX is to be dirtied during foreign redo."): Amended,
    Guid("{3ab96416-2904-45fe-9b2e-3373005f87cf}"), locale("MS\\0x409"),
    DisplayName("foreign_redo_rbpex_page_dirtied"): Amended]
class XeSqlPkg_foreign_redo_rbpex_page_dirtied: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class foreign_redo_rbpex_page_dirtied: XeSqlPkg_foreign_redo_rbpex_page_dirtied
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string page_lsn;
};
		
[dynamic: ToInstance, Description("Fired when a snapshot is created for page server seeding."): Amended,
    Guid("{72e4303b-514c-48ab-95f5-d3fb323ba1d5}"), locale("MS\\0x409"),
    DisplayName("rbpex_seeding_snapshot_created"): Amended]
class XeSqlPkg_rbpex_seeding_snapshot_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_seeding_snapshot_created: XeSqlPkg_rbpex_seeding_snapshot_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Fired before attempting to retry segment copy operation from snapshot during rbpex seeding."): Amended,
    Guid("{7176fd8c-fa2c-4140-973e-9918719c5a82}"), locale("MS\\0x409"),
    DisplayName("rbpex_seeding_segment_copy_retry"): Amended]
class XeSqlPkg_rbpex_seeding_segment_copy_retry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_seeding_segment_copy_retry: XeSqlPkg_rbpex_seeding_segment_copy_retry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 retry_count;
	[WmiDataId(8), read] uint32 max_retry_count;
};
		
[dynamic: ToInstance, Description("Fired before attempting to retry segment catchup operation from blob during rbpex seeding."): Amended,
    Guid("{95ef8d3f-80c5-472a-bc58-917c1bbd5ed8}"), locale("MS\\0x409"),
    DisplayName("rbpex_seeding_catchup_retry"): Amended]
class XeSqlPkg_rbpex_seeding_catchup_retry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_seeding_catchup_retry: XeSqlPkg_rbpex_seeding_catchup_retry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 retry_count;
	[WmiDataId(8), read] uint32 max_retry_count;
};
		
[dynamic: ToInstance, Description("Event to force copy pages failure during RBPEX seeding."): Amended,
    Guid("{d28699cc-ad62-4ad4-9462-ba7ba7d8883b}"), locale("MS\\0x409"),
    DisplayName("rbpex_force_copy_pages_failure"): Amended]
class XeSqlPkg_rbpex_force_copy_pages_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_force_copy_pages_failure: XeSqlPkg_rbpex_force_copy_pages_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] sint8  peer;
	[WmiDataId(8), read] uint64 first_page_offset;
	[WmiDataId(9), read, Pointer] object  error_code_pointer;
};
		
[dynamic: ToInstance, Description("Event to report start of seed thread."): Amended,
    Guid("{58a41ed9-d5f7-404e-bdf7-282a1c661b24}"), locale("MS\\0x409"),
    DisplayName("rbpex_seed_thread_start"): Amended]
class XeSqlPkg_rbpex_seed_thread_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_seed_thread_start: XeSqlPkg_rbpex_seed_thread_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] sint8  peer;
};
		
[dynamic: ToInstance, Description("Event to report dirty pages being copied during seeding."): Amended,
    Guid("{2286d3cf-a7d2-4a4b-9e3d-c20aebcda074}"), locale("MS\\0x409"),
    DisplayName("rbpex_seg_seed_copy_page"): Amended]
class XeSqlPkg_rbpex_seg_seed_copy_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_seg_seed_copy_page: XeSqlPkg_rbpex_seg_seed_copy_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] sint8  peer;
	[WmiDataId(8), read] uint64 first_page_offset;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{08c7ac04-950a-4531-9a77-3ade292189ca}"), locale("MS\\0x409"),
    DisplayName("rbpex_single_page_io_latency_bucket"): Amended]
class XeSqlPkg_rbpex_single_page_io_latency_bucket: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_single_page_io_latency_bucket: XeSqlPkg_rbpex_single_page_io_latency_bucket
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read, 
				XEMapId(75),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"RbpeFCB", 
					"DataFCB" }
			] uint8 fcb_type;
	[WmiDataId(8), read] uint64 latency_bucket_us;
	[WmiDataId(9), read] uint64 latency_hits_total;
	[WmiDataId(10), read] uint64 latency_hits_00;
	[WmiDataId(11), read] uint64 latency_hits_01;
	[WmiDataId(12), read] uint64 latency_hits_02;
	[WmiDataId(13), read] uint64 latency_hits_03;
	[WmiDataId(14), read] uint64 latency_hits_04;
	[WmiDataId(15), read] uint64 latency_hits_05;
	[WmiDataId(16), read] uint64 latency_hits_06;
	[WmiDataId(17), read] uint64 latency_hits_07;
	[WmiDataId(18), read] uint64 latency_hits_08;
	[WmiDataId(19), read] uint64 latency_hits_09;
	[WmiDataId(20), read] uint64 latency_hits_10;
	[WmiDataId(21), read] uint64 latency_hits_11;
	[WmiDataId(22), read] uint64 latency_hits_12;
	[WmiDataId(23), read] uint64 latency_hits_13;
	[WmiDataId(24), read] uint64 latency_hits_14;
	[WmiDataId(25), read] uint64 latency_hits_15;
	[WmiDataId(26), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(27), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{d594c139-4719-4bd1-827f-91041425ef41}"), locale("MS\\0x409"),
    DisplayName("rbpex_compute_zone_hotness"): Amended]
class XeSqlPkg_rbpex_compute_zone_hotness: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_compute_zone_hotness: XeSqlPkg_rbpex_compute_zone_hotness
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 zone_id;
	[WmiDataId(6), read] uint64 zone_read_count;
	[WmiDataId(7), read] uint64 total_zones;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{43b257a3-25f6-4d67-a182-43b887ba11ae}"), locale("MS\\0x409"),
    DisplayName("call_management_service_to_create_page_server"): Amended]
class XeSqlPkg_call_management_service_to_create_page_server: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class call_management_service_to_create_page_server: XeSqlPkg_call_management_service_to_create_page_server
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read, Pointer] object  is_file_created;
	[WmiDataId(8), read, Pointer] object  is_request_sent;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{11bdf009-8ad8-4c6f-b757-1e3faf2dd4a7}"), locale("MS\\0x409"),
    DisplayName("apply_file_add_before_fixup_binding_id"): Amended]
class XeSqlPkg_apply_file_add_before_fixup_binding_id: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class apply_file_add_before_fixup_binding_id: XeSqlPkg_apply_file_add_before_fixup_binding_id
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("Indicates that a012 new primary compute has received the list of hot pages it requested from a page server."): Amended,
    Guid("{a50c054b-0d2c-4566-bb22-d1feafd2f263}"), locale("MS\\0x409"),
    DisplayName("hotpageaggregator_page_list_receive_succeeded"): Amended]
class XeSqlPkg_hotpageaggregator_page_list_receive_succeeded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hotpageaggregator_page_list_receive_succeeded: XeSqlPkg_hotpageaggregator_page_list_receive_succeeded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 page_count;
	[WmiDataId(6), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string page_db_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Indicates that a new primary compute has NOT received the list of hot pages it requested from a page server."): Amended,
    Guid("{48c6e3cd-4af7-47fd-b4b8-a0ea2ef6d4f3}"), locale("MS\\0x409"),
    DisplayName("hotpageaggregator_page_list_receive_failed"): Amended]
class XeSqlPkg_hotpageaggregator_page_list_receive_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hotpageaggregator_page_list_receive_failed: XeSqlPkg_hotpageaggregator_page_list_receive_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 hresult;
	[WmiDataId(6), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string page_db_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Indicates that aggregating hit counts into the snapshot bucket at given position in the bucket list started."): Amended,
    Guid("{FAD51FB7-21C4-4C23-9350-B492319D8791}"), locale("MS\\0x409"),
    DisplayName("hotpagetracker_bucket_aggregation_started"): Amended]
class XeSqlPkg_hotpagetracker_bucket_aggregation_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hotpagetracker_bucket_aggregation_started: XeSqlPkg_hotpagetracker_bucket_aggregation_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 bucket_position;
	[WmiDataId(6), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Indicates that aggregating hit counts into the snapshot bucket at given position in the bucket list ended."): Amended,
    Guid("{CAC40AB7-341F-405F-8280-082192E992EB}"), locale("MS\\0x409"),
    DisplayName("hotpagetracker_bucket_aggregation_ended"): Amended]
class XeSqlPkg_hotpagetracker_bucket_aggregation_ended: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hotpagetracker_bucket_aggregation_ended: XeSqlPkg_hotpagetracker_bucket_aggregation_ended
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 bucket_position;
	[WmiDataId(6), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Indicates that the new primary compute has received the list of hot pages it requested from a page server."): Amended,
    Guid("{f0f3832f-e981-4b0c-a95a-143d01af3d20}"), locale("MS\\0x409"),
    DisplayName("hotpagetracker_page_list_receive_succeeded"): Amended]
class XeSqlPkg_hotpagetracker_page_list_receive_succeeded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hotpagetracker_page_list_receive_succeeded: XeSqlPkg_hotpagetracker_page_list_receive_succeeded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 page_count;
	[WmiDataId(6), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string page_db_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Indicates that the new primary compute has NOT received the list of hot pages it requested from a page server."): Amended,
    Guid("{F201BDD8-DB92-4FB9-9CD9-D9A479BD2648}"), locale("MS\\0x409"),
    DisplayName("hotpagetracker_page_list_receive_failed"): Amended]
class XeSqlPkg_hotpagetracker_page_list_receive_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hotpagetracker_page_list_receive_failed: XeSqlPkg_hotpagetracker_page_list_receive_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 hresult;
	[WmiDataId(6), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string page_db_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Indicates that the new primary compute has queued all the hot pages to seed onto its RBPEX for a given file."): Amended,
    Guid("{303CCBF0-639A-4EF9-872B-E04BE0F301BE}"), locale("MS\\0x409"),
    DisplayName("hotpagetracker_pageseed_queued"): Amended]
class XeSqlPkg_hotpagetracker_pageseed_queued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hotpagetracker_pageseed_queued: XeSqlPkg_hotpagetracker_pageseed_queued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 page_count;
	[WmiDataId(6), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Indicates that the new primary compute has failed to queue all the hot pages to seed onto its RBPEX for a given file."): Amended,
    Guid("{2218CDC3-5A53-4C03-A322-79A51C0FF587}"), locale("MS\\0x409"),
    DisplayName("hotpagetracker_pageseed_failed"): Amended]
class XeSqlPkg_hotpagetracker_pageseed_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hotpagetracker_pageseed_failed: XeSqlPkg_hotpagetracker_pageseed_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 page_count;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] uint32 hresult;
	[WmiDataId(8), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("A page that the new primary compute will seed into its RBPEX for a given file."): Amended,
    Guid("{9375ef5c-2650-4b59-b35f-d0c8caa39da0}"), locale("MS\\0x409"),
    DisplayName("hotpagetracker_pageseed_candidate"): Amended]
class XeSqlPkg_hotpagetracker_pageseed_candidate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hotpagetracker_pageseed_candidate: XeSqlPkg_hotpagetracker_pageseed_candidate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 page_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Indicates that the foreign log apply thread is suspended with a trace flag."): Amended,
    Guid("{a379100c-5292-4b41-98ec-ad87c8ee10ca}"), locale("MS\\0x409"),
    DisplayName("foreign_log_apply_suspended"): Amended]
class XeSqlPkg_foreign_log_apply_suspended: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class foreign_log_apply_suspended: XeSqlPkg_foreign_log_apply_suspended
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Indicates that the source has been tagged and destination created."): Amended,
    Guid("{5D863839-7E49-413B-B27B-2FD3780539EC}"), locale("MS\\0x409"),
    DisplayName("xtp_xstore_copyfile_src_and_dest_created"): Amended]
class XeSqlPkg_xtp_xstore_copyfile_src_and_dest_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_xstore_copyfile_src_and_dest_created: XeSqlPkg_xtp_xstore_copyfile_src_and_dest_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string source_file;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string destination_file;
};
		
[dynamic: ToInstance, Description("Indicates that copy data between source and destination is about to start."): Amended,
    Guid("{1D165680-4EBE-481B-8EFA-32D745F8A99A}"), locale("MS\\0x409"),
    DisplayName("xtp_xstore_copyfile_before_copy_start"): Amended]
class XeSqlPkg_xtp_xstore_copyfile_before_copy_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_xstore_copyfile_before_copy_start: XeSqlPkg_xtp_xstore_copyfile_before_copy_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string source_file;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string destination_file;
};
		
[dynamic: ToInstance, Description("Indicates that data copy from source to destination is complete."): Amended,
    Guid("{8011E10E-451D-473E-8075-E867B8FFF528}"), locale("MS\\0x409"),
    DisplayName("xtp_xstore_copyfile_after_copy_complete"): Amended]
class XeSqlPkg_xtp_xstore_copyfile_after_copy_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_xstore_copyfile_after_copy_complete: XeSqlPkg_xtp_xstore_copyfile_after_copy_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string source_file;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string destination_file;
};
		
[dynamic: ToInstance, Description("Indicates that destination file tag was cleared."): Amended,
    Guid("{A18DDB1A-C8DA-4340-A0D9-1DBF91890961}"), locale("MS\\0x409"),
    DisplayName("xtp_xstore_copyfile_dest_tag_cleared"): Amended]
class XeSqlPkg_xtp_xstore_copyfile_dest_tag_cleared: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_xstore_copyfile_dest_tag_cleared: XeSqlPkg_xtp_xstore_copyfile_dest_tag_cleared
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string source_file;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string destination_file;
};
		
[dynamic: ToInstance, Description("Indicates that source file tag was set to 'Delete'"): Amended,
    Guid("{E3B88F49-7441-4FA1-BAD3-B781B90165BD}"), locale("MS\\0x409"),
    DisplayName("xtp_xstore_copyfile_before_src_delete"): Amended]
class XeSqlPkg_xtp_xstore_copyfile_before_src_delete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_xstore_copyfile_before_src_delete: XeSqlPkg_xtp_xstore_copyfile_before_src_delete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string source_file;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string destination_file;
};
		
[dynamic: ToInstance, Description("Fired by backup thread for every hekaton file that is included in the full/differential backup."): Amended,
    Guid("{DD5E7D58-15D4-4928-8C2E-A0E1D5B65861}"), locale("MS\\0x409"),
    DisplayName("xtp_backup_hk_file"): Amended]
class XeSqlPkg_xtp_backup_hk_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_backup_hk_file: XeSqlPkg_xtp_backup_hk_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 max_bsn;
	[WmiDataId(7), read] sint8  processed;
	[WmiDataId(8), read, 
				XEMapId(186),
				ValueMap { 
					"2", 
					"3", 
					"1", 
					"4", 
					"0" },
				Values { 
					"hkftData", 
					"hkftDelta", 
					"hkftFirst", 
					"hkftLargeData", 
					"hkftUnknown" }
			] uint32 file_type;
	[WmiDataId(9), read, Extension("Guid")] guid file_id;
};
		
[dynamic: ToInstance, Description("Fired for every hekaton file that is being restored."): Amended,
    Guid("{9DFC4109-D0D8-4381-AB9E-35CCF5D9581C}"), locale("MS\\0x409"),
    DisplayName("xtp_restore_hk_file_io_issued"): Amended]
class XeSqlPkg_xtp_restore_hk_file_io_issued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_restore_hk_file_io_issued: XeSqlPkg_xtp_restore_hk_file_io_issued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, Extension("Guid")] guid file_id;
};
		
[dynamic: ToInstance, Description("Fired if non-zero GlobalHkMemCap is detected while publishing resource_pool_stats."): Amended,
    Guid("{3D7142EE-F335-4E10-A864-35F35D4E9A6F}"), locale("MS\\0x409"),
    DisplayName("xtp_nonzero_globalmemcap_in_resourcepoolstats"): Amended]
class XeSqlPkg_xtp_nonzero_globalmemcap_in_resourcepoolstats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_nonzero_globalmemcap_in_resourcepoolstats: XeSqlPkg_xtp_nonzero_globalmemcap_in_resourcepoolstats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 global_hk_mem_cap;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string server_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string resource_pool_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string min_perdb_dtu_limit;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string min_perdb_vcore_limit;
};
		
[dynamic: ToInstance, Description("A lock request is being processed by the lock manager and we need to report its priority"): Amended,
    Guid("{54ade838-1ab4-48ea-a470-db3f8b552421}"), locale("MS\\0x409"),
    DisplayName("lock_request_priority"): Amended]
class XeSqlPkg_lock_request_priority: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_request_priority: XeSqlPkg_lock_request_priority
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(8), read] sint8  is_kill_request;
	[WmiDataId(9), read] sint8  is_low_priority_request;
	[WmiDataId(10), read] uint32 request_timeout;
};
		
[dynamic: ToInstance, Description("A process is killed by an ABORT = BLOCKERS DDL statement"): Amended,
    Guid("{0422cac1-a878-46b3-86a9-c9e37d99d1b4}"), locale("MS\\0x409"),
    DisplayName("process_killed_by_abort_blockers"): Amended]
class XeSqlPkg_process_killed_by_abort_blockers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class process_killed_by_abort_blockers: XeSqlPkg_process_killed_by_abort_blockers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 killed_process_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("The priority state of a lock request"): Amended,
    Guid("{38dee9f2-2d59-47cd-9dc6-2fb46e110e12}"), locale("MS\\0x409"),
    DisplayName("lock_request_priority_state"): Amended]
class XeSqlPkg_lock_request_priority_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_request_priority_state: XeSqlPkg_lock_request_priority_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(64),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"Low Priority Period Started", 
					"Low Priority Period Expired", 
					"Normal Priority", 
					"Abort Blockers", 
					"Abort Self" }
			] uint8 state;
	[WmiDataId(8), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
};
		
[dynamic: ToInstance, Description("A DDL statement was executed using the WAIT_AT_LOW_PRIORITY options"): Amended,
    Guid("{f86f2578-6443-40f6-b686-7448eb5d16ce}"), locale("MS\\0x409"),
    DisplayName("ddl_with_wait_at_low_priority"): Amended]
class XeSqlPkg_ddl_with_wait_at_low_priority: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ddl_with_wait_at_low_priority: XeSqlPkg_ddl_with_wait_at_low_priority
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(63),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"ALTER TABLE REBUILD", 
					"ALTER TABLE SWITCH", 
					"ALTER INDEX REBUILD" }
			] uint8 type;
	[WmiDataId(6), read] uint32 max_duration;
	[WmiDataId(7), read, 
				XEMapId(62),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"NONE", 
					"BLOCKERS", 
					"SELF" }
			] uint8 abort_after_wait;
	[WmiDataId(8), read] sint32 host_process_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read] sint32 object_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string host_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string target_object_name;
};
		
[dynamic: ToInstance, Description("Occurs when SQL Server fails to store dirty entries in Query Store on database shutdown."): Amended,
    Guid("{ff3cf2d2-e9a6-46b4-857b-8a5d060696dd}"), locale("MS\\0x409"),
    DisplayName("query_store_persist_on_shutdown_failed"): Amended]
class XeSqlPkg_query_store_persist_on_shutdown_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_persist_on_shutdown_failed: XeSqlPkg_query_store_persist_on_shutdown_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Occurs when log consolidation cleans up single defunct tenant."): Amended,
    Guid("{CEDB5E0F-044D-4157-B105-769B29C02D95}"), locale("MS\\0x409"),
    DisplayName("logconsolidation_defunct_cleanup_complete"): Amended]
class XeSqlPkg_logconsolidation_defunct_cleanup_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logconsolidation_defunct_cleanup_complete: XeSqlPkg_logconsolidation_defunct_cleanup_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 tenant_id;
	[WmiDataId(6), read] uint32 rows_deleted;
};
		
[dynamic: ToInstance, Description("Occurs when log consolidation begins one move-log-to-data task, but before any sectors are moved."): Amended,
    Guid("{1E66918C-680B-4219-B56B-3D3F8ADA7247}"), locale("MS\\0x409"),
    DisplayName("logconsolidation_sectors_moving_to_data"): Amended]
class XeSqlPkg_logconsolidation_sectors_moving_to_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logconsolidation_sectors_moving_to_data: XeSqlPkg_logconsolidation_sectors_moving_to_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when log consolidation completes one move-log-to-data task."): Amended,
    Guid("{E29D9B01-D88D-4A8C-81E6-DEB09DC9BD3B}"), locale("MS\\0x409"),
    DisplayName("logconsolidation_sectors_moved_to_data"): Amended]
class XeSqlPkg_logconsolidation_sectors_moved_to_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logconsolidation_sectors_moved_to_data: XeSqlPkg_logconsolidation_sectors_moved_to_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 sectors_moved;
	[WmiDataId(6), read] uint32 sectors_cleared;
};
		
[dynamic: ToInstance, Description("Spills to tempdb, which were caused by any query. Only fires off when spills exceeds (predefined threshold * MaxTempdbDbMaxSizeinMB)"): Amended,
    Guid("{8b0da836-d2a8-455a-b7c0-c9e1d8936e76}"), locale("MS\\0x409"),
    DisplayName("spills_to_tempdb"): Amended]
class XeSqlPkg_spills_to_tempdb: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class spills_to_tempdb: XeSqlPkg_spills_to_tempdb
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 stmt_type;
	[WmiDataId(6), read] uint64 max_query_memory_pages;
	[WmiDataId(7), read] uint64 max_tempdb_space_used_pages;
	[WmiDataId(8), read] uint64 max_tempdb_space_used_percentage;
};
		
[dynamic: ToInstance, Description("Occurs each time when hash join spills some data to disk in batch processing."): Amended,
    Guid("{5e524410-5006-439f-b89c-44e76da0bf3f}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_hash_join_spilled"): Amended]
class XeSqlPkg_query_execution_batch_hash_join_spilled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_hash_join_spilled: XeSqlPkg_query_execution_batch_hash_join_spilled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 spilling_level;
	[WmiDataId(7), read] uint32 spilled_partitions_percent;
	[WmiDataId(8), read] uint64 build_side_spilled_data_size;
	[WmiDataId(9), read] uint64 build_side_in_memory_data_size;
	[WmiDataId(10), read] uint64 probe_side_spilled_data_size;
};
		
[dynamic: ToInstance, Description("Occurs each time when hash join reverses build and probe side while processing data spilled to disk."): Amended,
    Guid("{95bebc9c-2ac8-4d06-b238-ad4e4654842f}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_hash_children_reversed"): Amended]
class XeSqlPkg_query_execution_batch_hash_children_reversed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_hash_children_reversed: XeSqlPkg_query_execution_batch_hash_children_reversed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 spilling_level;
};
		
[dynamic: ToInstance, Description("Occurs at the end of batch hash aggregation."): Amended,
    Guid("{996268c2-53d2-4d57-9554-24b9094e3651}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_hash_aggregation_finished"): Amended]
class XeSqlPkg_query_execution_batch_hash_aggregation_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_hash_aggregation_finished: XeSqlPkg_query_execution_batch_hash_aggregation_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint64 pure_group_by_columns_rows_number;
	[WmiDataId(7), read] sint64 max_allocated_deep_data_size;
	[WmiDataId(8), read] sint64 garbage_collected_deep_data_size;
	[WmiDataId(9), read] sint64 max_allocated_hash_table_data_size;
	[WmiDataId(10), read] sint32 cpu_cycles_per_row;
	[WmiDataId(11), read] sint8  local_aggregation_used;
	[WmiDataId(12), read] sint64 spilled_data_size;
	[WmiDataId(13), read] sint32 spilled_hard_partitions_number;
	[WmiDataId(14), read] sint64 spilled_rows_number;
	[WmiDataId(15), read] sint64 soft_partitions_number;
	[WmiDataId(16), read] sint8  fast_comparison_used;
	[WmiDataId(17), read] sint32 fast_aggregation_columns_number;
};
		
[dynamic: ToInstance, Description("Occurs at the end of batch hash aggregation."): Amended,
    Guid("{996268c2-53d2-4d57-9554-24b9094e3651}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_hash_aggregation_finished"): Amended]
class XeSqlPkg_query_execution_batch_hash_aggregation_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class query_execution_batch_hash_aggregation_finished: XeSqlPkg_query_execution_batch_hash_aggregation_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint64 pure_group_by_columns_rows_number;
	[WmiDataId(7), read] sint64 max_allocated_deep_data_size;
	[WmiDataId(8), read] sint64 garbage_collected_deep_data_size;
	[WmiDataId(9), read] sint64 max_allocated_hash_table_data_size;
	[WmiDataId(10), read] uint64 final_hash_table_size;
	[WmiDataId(11), read] real64 final_hash_table_fill_rate;
	[WmiDataId(12), read] sint32 cpu_cycles_per_row;
	[WmiDataId(13), read] sint8  local_aggregation_used;
	[WmiDataId(14), read] sint64 spilled_data_size;
	[WmiDataId(15), read] sint32 spilled_hard_partitions_number;
	[WmiDataId(16), read] sint64 spilled_rows_number;
	[WmiDataId(17), read] sint64 soft_partitions_number;
	[WmiDataId(18), read] sint8  fast_comparison_used;
	[WmiDataId(19), read] sint32 fast_aggregation_columns_number;
};
		
[dynamic: ToInstance, Description("Occurs when batch operator runs out of granted memory and initiates spilling to disk of another partition of in-memory data."): Amended,
    Guid("{0d5a7b7e-2684-41c4-901a-c54db08d0e55}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_spill_started"): Amended]
class XeSqlPkg_query_execution_batch_spill_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_spill_started: XeSqlPkg_query_execution_batch_spill_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 spilling_level;
	[WmiDataId(7), read] sint32 spilled_partitions_number;
	[WmiDataId(8), read] sint32 partitions_number;
};
		
[dynamic: ToInstance, Description("Occurs when a global string dictionary is used in hash join or hash aggregate."): Amended,
    Guid("{02B6D7FB-A588-46EE-A932-5F4CD73E21E3}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_global_string_dictionary"): Amended]
class XeSqlPkg_query_execution_batch_global_string_dictionary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_global_string_dictionary: XeSqlPkg_query_execution_batch_global_string_dictionary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint32 table_id;
	[WmiDataId(7), read] sint32 query_operator_node_id;
	[WmiDataId(8), read] sint8  is_dictionary_used;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string key_column_ids;
};
		
[dynamic: ToInstance, Description("Occurs when batch mode hash join reaches a syncpoint."): Amended,
    Guid("{38E199B6-5CE7-490C-8F91-B7CC3869F6B0}"), locale("MS\\0x409"),
    DisplayName("query_execution_wait_syncpoint"): Amended]
class XeSqlPkg_query_execution_wait_syncpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_wait_syncpoint: XeSqlPkg_query_execution_wait_syncpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] sint8  start_wait;
	[WmiDataId(8), read] uint64 sync_timestamp;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string wait_type;
};
		
[dynamic: ToInstance, Description("Fired when a file handle we're trying to delete is in use and we don't expect it to be. The typical response is dumping all the handles in the system via SysInternals HANDLE.EXE"): Amended,
    Guid("{DF0D99BE-58C2-4420-9877-09B05CB44DBC}"), locale("MS\\0x409"),
    DisplayName("file_handle_in_use"): Amended]
class XeSqlPkg_file_handle_in_use: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_handle_in_use: XeSqlPkg_file_handle_in_use
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 win32error;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string file_name;
};
		
[dynamic: ToInstance, Description("Occurs when a sql transaction is committed with single phase commit."): Amended,
    Guid("{ea9b3b62-a546-4268-9732-b173f66458f0}"), locale("MS\\0x409"),
    DisplayName("sql_transaction_commit_single_phase"): Amended]
class XeSqlPkg_sql_transaction_commit_single_phase: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_transaction_commit_single_phase: XeSqlPkg_sql_transaction_commit_single_phase
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 transaction_id;
	[WmiDataId(7), read] sint8  is_delayed_durable;
};
		
[dynamic: ToInstance, Description("Occurs periodically, aggregating all occasions an rpc call is started. "): Amended,
    Guid("{3C504899-AA99-4C69-8E2B-5F2258FB0934}"), locale("MS\\0x409"),
    DisplayName("rpc_starting_aggregate"): Amended]
class XeSqlPkg_rpc_starting_aggregate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rpc_starting_aggregate: XeSqlPkg_rpc_starting_aggregate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 total;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string app_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string tablegroup_name;
	[WmiDataId(8), read, Extension("Variant")] object low_key;
};
		
[dynamic: ToInstance, Description("Occurs periodically, aggregating all occasions a sql batch is started."): Amended,
    Guid("{CA3974E7-5865-4CF5-8AE3-FA398C4A756E}"), locale("MS\\0x409"),
    DisplayName("sql_batch_starting_aggregate"): Amended]
class XeSqlPkg_sql_batch_starting_aggregate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_batch_starting_aggregate: XeSqlPkg_sql_batch_starting_aggregate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 total;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string app_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string tablegroup_name;
	[WmiDataId(8), read, Extension("Variant")] object low_key;
};
		
[dynamic: ToInstance, Description("Occurs periodically, aggregating all occasions an rpc call is started. "): Amended,
    Guid("{1DFE34E7-BB5D-498E-B2E3-C316ECFC6D36}"), locale("MS\\0x409"),
    DisplayName("rpc_starting_aggregate_xdb"): Amended]
class XeSqlPkg_rpc_starting_aggregate_xdb: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rpc_starting_aggregate_xdb: XeSqlPkg_rpc_starting_aggregate_xdb
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 total;
	[WmiDataId(6), read] sint64 fabric_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid hadr_replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid hadr_partition_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string db_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string replica_name;
};
		
[dynamic: ToInstance, Description("Occurs periodically, aggregating all occasions a sql batch is started."): Amended,
    Guid("{12CC1134-7F0F-4D13-B021-BD93D13D474A}"), locale("MS\\0x409"),
    DisplayName("sql_batch_starting_aggregate_xdb"): Amended]
class XeSqlPkg_sql_batch_starting_aggregate_xdb: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_batch_starting_aggregate_xdb: XeSqlPkg_sql_batch_starting_aggregate_xdb
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 total;
	[WmiDataId(6), read] sint64 fabric_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid hadr_replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid hadr_partition_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string db_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string replica_name;
};
		
[dynamic: ToInstance, Description("Online Alter Column stage reporting"): Amended,
    Guid("{cfff7c8b-8944-445f-b55a-b67bc60ca7e1}"), locale("MS\\0x409"),
    DisplayName("online_alter_column_stage"): Amended]
class XeSqlPkg_online_alter_column_stage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class online_alter_column_stage: XeSqlPkg_online_alter_column_stage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint8 stage;
};
		
[dynamic: ToInstance, Description("Occurs on the completion of a startup dependency in the SQL Server startup sequence"): Amended,
    Guid("{148a01f9-89ef-4c7b-b839-f6abf58d0cfc}"), locale("MS\\0x409"),
    DisplayName("startup_dependency_completed"): Amended]
class XeSqlPkg_startup_dependency_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class startup_dependency_completed: XeSqlPkg_startup_dependency_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string component;
};
		
[dynamic: ToInstance, Description("Record the spill file read/write information for batch mode sort"): Amended,
    Guid("{6A18FA3F-58E2-43B5-B1D4-31BC4BE2316B}"), locale("MS\\0x409"),
    DisplayName("batchmode_sort_spill_file"): Amended]
class XeSqlPkg_batchmode_sort_spill_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batchmode_sort_spill_file: XeSqlPkg_batchmode_sort_spill_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_io_mode;
	[WmiDataId(6), read] uint32 query_dop;
	[WmiDataId(7), read] uint16 spill_stage;
	[WmiDataId(8), read] uint16 node_id;
	[WmiDataId(9), read] uint32 thread_id;
	[WmiDataId(10), read] uint64 query_id;
	[WmiDataId(11), read] uint64 row_file_id;
	[WmiDataId(12), read] uint64 deepdata_file_id;
	[WmiDataId(13), read] uint64 start_row_id;
	[WmiDataId(14), read] uint64 row_counts;
	[WmiDataId(15), read] uint64 deepdata_size_in_pages;
};
		
[dynamic: ToInstance, Description("Record batch mode sort status"): Amended,
    Guid("{9E64ED4F-C506-4DC3-921C-88DC292ED83A}"), locale("MS\\0x409"),
    DisplayName("batchmode_sort_status"): Amended]
class XeSqlPkg_batchmode_sort_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batchmode_sort_status: XeSqlPkg_batchmode_sort_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_dop;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint64 query_id;
	[WmiDataId(8), read] uint64 time_stamp;
	[WmiDataId(9), read] uint64 status;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string description;
};
		
[dynamic: ToInstance, Description("Record when batch-mode TopN sort reverts to full sort"): Amended,
    Guid("{F8CB9243-4833-4E9C-8CD7-E59C0C34456F}"), locale("MS\\0x409"),
    DisplayName("batchmode_topn_sort_fullsort"): Amended]
class XeSqlPkg_batchmode_topn_sort_fullsort: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batchmode_topn_sort_fullsort: XeSqlPkg_batchmode_topn_sort_fullsort
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 node_id;
	[WmiDataId(6), read] uint64 num_rows;
	[WmiDataId(7), read] real64 input_card;
	[WmiDataId(8), read] sint8  is_offset;
	[WmiDataId(9), read] sint8  is_forced;
};
		
[dynamic: ToInstance, Description("Fired before batch mode sort starts to process spilled data."): Amended,
    Guid("{00cc8871-94e8-40b2-ac72-af4500f4af02}"), locale("MS\\0x409"),
    DisplayName("batchmode_sort_before_process_spilled_data"): Amended]
class XeSqlPkg_batchmode_sort_before_process_spilled_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batchmode_sort_before_process_spilled_data: XeSqlPkg_batchmode_sort_before_process_spilled_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Fired before batch mode workfile starts transfering extents between different threads."): Amended,
    Guid("{F0F82A64-1ED3-41BA-B7DE-FD52086DF8A5}"), locale("MS\\0x409"),
    DisplayName("batchmode_workfile_transfer_extents_between_different_threads"): Amended]
class XeSqlPkg_batchmode_workfile_transfer_extents_between_different_threads: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batchmode_workfile_transfer_extents_between_different_threads: XeSqlPkg_batchmode_workfile_transfer_extents_between_different_threads
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Fired when batch mode iterators reports spilling to memory grant feedback"): Amended,
    Guid("{649778F9-F8FE-45A0-8EFD-0984C09C4D4A}"), locale("MS\\0x409"),
    DisplayName("spilling_report_to_memory_grant_feedback"): Amended]
class XeSqlPkg_spilling_report_to_memory_grant_feedback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class spilling_report_to_memory_grant_feedback: XeSqlPkg_spilling_report_to_memory_grant_feedback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 node_id;
	[WmiDataId(6), read] uint64 spilled_data_size;
};
		
[dynamic: ToInstance, Description("Occurs when memory grant is updated by feedback. "): Amended,
    Guid("{0715B19C-1C0B-48AF-8783-2F67531DDD7F}"), locale("MS\\0x409"),
    DisplayName("memory_grant_updated_by_feedback"): Amended]
class XeSqlPkg_memory_grant_updated_by_feedback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_grant_updated_by_feedback: XeSqlPkg_memory_grant_updated_by_feedback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 ideal_additional_memory_before_kb;
	[WmiDataId(6), read] uint64 ideal_additional_memory_after_kb;
	[WmiDataId(7), read] uint32 history_current_execution_count;
	[WmiDataId(8), read] uint32 history_update_count;
};
		
[dynamic: ToInstance, Description("Occurs when memory grant is updated by feedback. "): Amended,
    Guid("{0715B19C-1C0B-48AF-8783-2F67531DDD7F}"), locale("MS\\0x409"),
    DisplayName("memory_grant_updated_by_feedback"): Amended]
class XeSqlPkg_memory_grant_updated_by_feedback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class memory_grant_updated_by_feedback: XeSqlPkg_memory_grant_updated_by_feedback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 current_execution_count;
	[WmiDataId(6), read] uint64 adjustment_count;
	[WmiDataId(7), read] uint64 ideal_additional_memory_before_kb;
	[WmiDataId(8), read] uint64 ideal_additional_memory_after_kb;
	[WmiDataId(9), read] uint32 history_current_execution_count;
	[WmiDataId(10), read] uint32 history_update_count;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string memory_summary_by_operator_kb;
};
		
[dynamic: ToInstance, Description("Occurs when memory grant is updated by feedback. "): Amended,
    Guid("{0715B19C-1C0B-48AF-8783-2F67531DDD7F}"), locale("MS\\0x409"),
    DisplayName("memory_grant_updated_by_feedback"): Amended]
class XeSqlPkg_memory_grant_updated_by_feedback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class memory_grant_updated_by_feedback: XeSqlPkg_memory_grant_updated_by_feedback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 current_execution_count;
	[WmiDataId(6), read] uint64 adjustment_count;
	[WmiDataId(7), read] uint64 ideal_additional_memory_before_kb;
	[WmiDataId(8), read] uint64 ideal_additional_memory_after_kb;
	[WmiDataId(9), read] uint32 history_current_execution_count;
	[WmiDataId(10), read] uint32 history_update_count;
	[WmiDataId(11), read] uint32 failed_concurrent_update_count;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string memory_summary_by_operator_kb;
};
		
[dynamic: ToInstance, Description("Occurs when memory grant is updated by feedback. "): Amended,
    Guid("{0715B19C-1C0B-48AF-8783-2F67531DDD7F}"), locale("MS\\0x409"),
    DisplayName("memory_grant_updated_by_feedback"): Amended]
class XeSqlPkg_memory_grant_updated_by_feedback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class memory_grant_updated_by_feedback: XeSqlPkg_memory_grant_updated_by_feedback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 current_execution_count;
	[WmiDataId(6), read] uint64 adjustment_count;
	[WmiDataId(7), read] uint64 ideal_additional_memory_before_kb;
	[WmiDataId(8), read] uint64 ideal_additional_memory_after_kb;
	[WmiDataId(9), read] uint32 history_current_execution_count;
	[WmiDataId(10), read] uint32 history_update_count;
	[WmiDataId(11), read] uint32 failed_concurrent_update_count;
	[WmiDataId(12), read] sint8  is_persisted_feedback_used;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string memory_summary_by_operator_kb;
};
		
[dynamic: ToInstance, Description("Occurs when memory grant feedback loop is disabled "): Amended,
    Guid("{A7D3D18A-7AFC-4525-9D2B-B980C593C4E1}"), locale("MS\\0x409"),
    DisplayName("memory_grant_feedback_loop_disabled"): Amended]
class XeSqlPkg_memory_grant_feedback_loop_disabled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_grant_feedback_loop_disabled: XeSqlPkg_memory_grant_feedback_loop_disabled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 total_execution_count;
	[WmiDataId(6), read] uint32 total_update_count;
};
		
[dynamic: ToInstance, Description("Occurs at intervals when percentile grant is enabled"): Amended,
    Guid("{CF765B72-D231-4EC2-8A31-B64376BE343E}"), locale("MS\\0x409"),
    DisplayName("memory_grant_feedback_percentile_grant"): Amended]
class XeSqlPkg_memory_grant_feedback_percentile_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_grant_feedback_percentile_grant: XeSqlPkg_memory_grant_feedback_percentile_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 current_interval;
	[WmiDataId(6), read] uint32 spill_count_pg;
	[WmiDataId(7), read] uint32 spill_count_lug;
	[WmiDataId(8), read] uint32 overestimate_count_pg;
	[WmiDataId(9), read] uint32 overestimate_count_lug;
	[WmiDataId(10), read] uint64 spill_error_pg_kb;
	[WmiDataId(11), read] uint64 spill_error_lug_kb;
	[WmiDataId(12), read] uint64 overestimate_error_pg_kb;
	[WmiDataId(13), read] uint64 overestimate_error_lug_kb;
	[WmiDataId(14), read] uint64 memory_usage_avg_kb;
	[WmiDataId(15), read] uint64 memory_usage_standard_deviation_kb;
};
		
[dynamic: ToInstance, Description("Occurs when memory grant feedback is persisted to QDS. "): Amended,
    Guid("{a9b2787f-77eb-4862-afbb-afda2842d9ea}"), locale("MS\\0x409"),
    DisplayName("memory_grant_feedback_persistence_update"): Amended]
class XeSqlPkg_memory_grant_feedback_persistence_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_grant_feedback_persistence_update: XeSqlPkg_memory_grant_feedback_persistence_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 current_execution_count;
	[WmiDataId(6), read] uint64 persisted_additional_memory_before_kb;
	[WmiDataId(7), read] uint64 persisted_additional_memory_after_kb;
};
		
[dynamic: ToInstance, Description("Occurs when persisted memory grant feedback can not be used due to inconsistency with current plan."): Amended,
    Guid("{A03E2A30-7632-423E-A8A5-9D33C5F7527D}"), locale("MS\\0x409"),
    DisplayName("memory_grant_feedback_persistence_invalid"): Amended]
class XeSqlPkg_memory_grant_feedback_persistence_invalid: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_grant_feedback_persistence_invalid: XeSqlPkg_memory_grant_feedback_persistence_invalid
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Variant")] object feedback;
	[WmiDataId(6), read, Extension("Variant")] object node_ids;
};
		
[dynamic: ToInstance, Description("Occurs when a query using at least one adaptive join is executed."): Amended,
    Guid("{ede249f3-67c1-41ac-9261-a10ab504bf5d}"), locale("MS\\0x409"),
    DisplayName("adaptive_join_query"): Amended]
class XeSqlPkg_adaptive_join_query: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class adaptive_join_query: XeSqlPkg_adaptive_join_query
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when a batch mode scan is performed on a rowstore table."): Amended,
    Guid("{7705d8a6-e022-4b25-a3e6-26f755dcdf1d}"), locale("MS\\0x409"),
    DisplayName("batch_mode_scan_on_rowstores"): Amended]
class XeSqlPkg_batch_mode_scan_on_rowstores: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batch_mode_scan_on_rowstores: XeSqlPkg_batch_mode_scan_on_rowstores
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read] sint8  is_batch_population_pushed;
};
		
[dynamic: ToInstance, Description("Occurs when a batch mode scan is performed on deltastores."): Amended,
    Guid("{e9c571f4-25b0-477a-9ad1-eb887a8d6f09}"), locale("MS\\0x409"),
    DisplayName("batch_mode_scan_on_deltastores"): Amended]
class XeSqlPkg_batch_mode_scan_on_deltastores: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batch_mode_scan_on_deltastores: XeSqlPkg_batch_mode_scan_on_deltastores
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 db_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 partition_number;
	[WmiDataId(10), read] uint32 rowgroup_id;
	[WmiDataId(11), read] uint32 node_id;
	[WmiDataId(12), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Database TDE Encryption Scan"): Amended,
    Guid("{894048c0-694c-11e4-9803-0800200c9a66}"), locale("MS\\0x409"),
    DisplayName("database_tde_encryption_scan_duration"): Amended]
class XeSqlPkg_database_tde_encryption_scan_duration: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_tde_encryption_scan_duration: XeSqlPkg_database_tde_encryption_scan_duration
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(65),
				ValueMap { 
					"1", 
					"2", 
					"3" },
				Values { 
					"ENCRYPTION SCAN", 
					"DECRYPTION SCAN", 
					"UNKNOWN" }
			] uint8 statement_type;
	[WmiDataId(6), read] uint64 duration;
};
		
[dynamic: ToInstance, Description("Query using RLS"): Amended,
    Guid("{d27376bd-1719-48d4-9a60-95371146dfe3}"), locale("MS\\0x409"),
    DisplayName("rls_query_count"): Amended]
class XeSqlPkg_rls_query_count: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rls_query_count: XeSqlPkg_rls_query_count
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 message;
};
		
[dynamic: ToInstance, Description("Query using Always Encrypted"): Amended,
    Guid("{9dc67280-1f94-43b8-940f-653a51a92ced}"), locale("MS\\0x409"),
    DisplayName("always_encrypted_query_count"): Amended]
class XeSqlPkg_always_encrypted_query_count: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class always_encrypted_query_count: XeSqlPkg_always_encrypted_query_count
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 message;
};
		
[dynamic: ToInstance, Description("Occurs when too much non-grant memory is used in query execution. "): Amended,
    Guid("{417EE439-094C-45AD-A4C3-D38C849AF873}"), locale("MS\\0x409"),
    DisplayName("excessive_non_grant_memory_used"): Amended]
class XeSqlPkg_excessive_non_grant_memory_used: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class excessive_non_grant_memory_used: XeSqlPkg_excessive_non_grant_memory_used
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 non_grant_memory_used_kb;
	[WmiDataId(6), read] uint64 bp_workfile_memory_kb;
	[WmiDataId(7), read] sint8  is_plan_cache_store;
};
		
[dynamic: ToInstance, Description("Occurs when too much non-grant memory is used in query execution. "): Amended,
    Guid("{c0e4087d-8400-4489-aa28-bf6abdd01567}"), locale("MS\\0x409"),
    DisplayName("excessive_non_grant_memory_used"): Amended]
class XeSqlPkg_excessive_non_grant_memory_used: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class excessive_non_grant_memory_used: XeSqlPkg_excessive_non_grant_memory_used
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 non_grant_memory_used_kb;
	[WmiDataId(6), read] uint64 bp_workfile_memory_kb;
	[WmiDataId(7), read] sint8  is_plan_cache_store;
	[WmiDataId(8), read] uint64 total_workfiles;
	[WmiDataId(9), read] uint64 reused_workfiles;
	[WmiDataId(10), read] uint64 total_pages;
	[WmiDataId(11), read] uint64 thread_count;
};
		
[dynamic: ToInstance, Description("A concurrent DML during Resumable Index Build should mark the record as ghost"): Amended,
    Guid("{55bb514b-3310-402f-9630-b562e4b984c1}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_is_ghost_rec"): Amended]
class XeSqlPkg_resumable_index_build_is_ghost_rec: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_is_ghost_rec: XeSqlPkg_resumable_index_build_is_ghost_rec
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_ghost_rec;
};
		
[dynamic: ToInstance, Description("Inserts over ghost records are blocked by the Index Builder for Resumable Index Build"): Amended,
    Guid("{f7f16dc6-f5e9-4652-8914-f04c5fa218d2}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_ghost_recs"): Amended]
class XeSqlPkg_resumable_index_build_ghost_recs: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_ghost_recs: XeSqlPkg_resumable_index_build_ghost_recs
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 ghost_rec_count_before_insert;
	[WmiDataId(6), read] sint32 ghost_rec_count_after_insert;
};
		
[dynamic: ToInstance, Description("Tracks state transitions in the anti-matter state machine of resumable index build"): Amended,
    Guid("{ab94127f-ae88-4bfc-8938-f617faef901b}"), locale("MS\\0x409"),
    DisplayName("resumable_index_build_antimatter_transition"): Amended]
class XeSqlPkg_resumable_index_build_antimatter_transition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_build_antimatter_transition: XeSqlPkg_resumable_index_build_antimatter_transition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(67),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7" },
				Values { 
					"EmptyToAntimatterGhost", 
					"EmptyToNormalRow", 
					"AntimatterGhostToAntimatter", 
					"AntimatterGhostToAntimatterGhost", 
					"AntimatterToAntimatterGhost", 
					"NormalRowToAntimatterGhost", 
					"NormalRowToNormalRow" }
			] uint8 state_transition_id;
	[WmiDataId(6), read] uint64 rowset_id;
};
		
[dynamic: ToInstance, Description("Source Rowset in Resumable Index Build With LOB"): Amended,
    Guid("{ab51914d-7355-442e-b666-5603054f15bc}"), locale("MS\\0x409"),
    DisplayName("source_rowset_in_roib_with_lob"): Amended]
class XeSqlPkg_source_rowset_in_roib_with_lob: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class source_rowset_in_roib_with_lob: XeSqlPkg_source_rowset_in_roib_with_lob
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] sint8  is_source_rowset_resumable_with_lob;
};
		
[dynamic: ToInstance, Description("Source Rowset in Resumable Index Build"): Amended,
    Guid("{bbea389a-b87a-4b6f-bae6-d15d34fddad2}"), locale("MS\\0x409"),
    DisplayName("source_rowset_in_roib"): Amended]
class XeSqlPkg_source_rowset_in_roib: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class source_rowset_in_roib: XeSqlPkg_source_rowset_in_roib
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] sint8  is_source_rowset_resumable;
	[WmiDataId(7), read] sint8  is_value_changing;
};
		
[dynamic: ToInstance, Description("Resumable Index Build In Create"): Amended,
    Guid("{0c016934-2d1b-4073-98e0-bfe77a2035f3}"), locale("MS\\0x409"),
    DisplayName("index_in_resumable_create"): Amended]
class XeSqlPkg_index_in_resumable_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class index_in_resumable_create: XeSqlPkg_index_in_resumable_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] sint8  is_in_resumable_index_create;
};
		
[dynamic: ToInstance, Description("This xevent is fired during failovers to get stats to see how many batches are killed before and after opportunistic failover is enabled"): Amended,
    Guid("{2FBD2660-26EF-4A76-B233-AEAF0D2744D8}"), locale("MS\\0x409"),
    DisplayName("opportunistic_failover_batch_stats"): Amended]
class XeSqlPkg_opportunistic_failover_batch_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class opportunistic_failover_batch_stats: XeSqlPkg_opportunistic_failover_batch_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_opportunistic_failover_enabled;
	[WmiDataId(7), read] uint64 total_batches_affected_before_op_failover;
	[WmiDataId(8), read] uint64 total_batches_affected_after_op_failover;
	[WmiDataId(9), read] uint64 time_spent_waiting_in_ms;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string server_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string service_level_objective;
};
		
[dynamic: ToInstance, Description("Tracks the occurence of stale pages"): Amended,
    Guid("{6E9A8AD0-2E27-4E05-8F80-762EC5160D2B}"), locale("MS\\0x409"),
    DisplayName("stale_page_occurrence"): Amended]
class XeSqlPkg_stale_page_occurrence: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stale_page_occurrence: XeSqlPkg_stale_page_occurrence
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint64 total_stale_pages;
	[WmiDataId(9), read] uint32 returned_LSN_seq_no;
	[WmiDataId(10), read] uint32 returned_LSN_block_offset;
	[WmiDataId(11), read] uint32 returned_LSN_slot_id;
	[WmiDataId(12), read] uint32 last_written_LSN_seq_no;
	[WmiDataId(13), read] uint32 last_written_LSN_block_offset;
	[WmiDataId(14), read] uint32 last_written_LSN_slot_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string database_type;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(17), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(18), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Tracks the repair of stale pages in RBPEX"): Amended,
    Guid("{8A0CA14E-E161-4D21-A44A-15628578B3D9}"), locale("MS\\0x409"),
    DisplayName("stale_page_rbpex_repair"): Amended]
class XeSqlPkg_stale_page_rbpex_repair: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stale_page_rbpex_repair: XeSqlPkg_stale_page_rbpex_repair
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] sint32 hresult_errorcode;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_type;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(11), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Tracks the repair of stale pages via redoing foreign logs in Page Server"): Amended,
    Guid("{C97BF822-C78B-4DB1-BEA0-F112B7230DD1}"), locale("MS\\0x409"),
    DisplayName("stale_page_foreign_log_redo"): Amended]
class XeSqlPkg_stale_page_foreign_log_redo: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class stale_page_foreign_log_redo: XeSqlPkg_stale_page_foreign_log_redo
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Gives information about the state of the bucket table in writepagerecorder."): Amended,
    Guid("{1CF72DA8-6D62-443A-A864-932CE85B93EF}"), locale("MS\\0x409"),
    DisplayName("wpr_bucket_info"): Amended]
class XeSqlPkg_wpr_bucket_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wpr_bucket_info: XeSqlPkg_wpr_bucket_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 add_lsn_bucket_miss;
	[WmiDataId(7), read] uint64 check_lsn_bucket_miss;
	[WmiDataId(8), read] uint64 bucket_swaps;
	[WmiDataId(9), read] uint64 hash_table_size;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_type;
};
		
[dynamic: ToInstance, Description("Tracks invalidating rbpex page after detecting a hardware error on the page."): Amended,
    Guid("{D127F3BF-7FC1-450C-AAFB-498EAEAE5396}"), locale("MS\\0x409"),
    DisplayName("hardware_error_rbpex_invalidate_page"): Amended]
class XeSqlPkg_hardware_error_rbpex_invalidate_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hardware_error_rbpex_invalidate_page: XeSqlPkg_hardware_error_rbpex_invalidate_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] sint8  triggered_by_specproc;
};
		
[dynamic: ToInstance, Description("Injects a hardware error for a page in rbpex during a read from tests"): Amended,
    Guid("{57E0D3C7-DA62-4DFB-853B-92EF29CC3C7A}"), locale("MS\\0x409"),
    DisplayName("hardware_error_injection_for_rbpex_reads"): Amended]
class XeSqlPkg_hardware_error_injection_for_rbpex_reads: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hardware_error_injection_for_rbpex_reads: XeSqlPkg_hardware_error_injection_for_rbpex_reads
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  error_code_pointer;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Tracks the repair of pages in covering RBPEX"): Amended,
    Guid("{919C5F9B-5128-4E44-9B05-7BF7854406EC}"), locale("MS\\0x409"),
    DisplayName("page_covering_rbpex_repair"): Amended]
class XeSqlPkg_page_covering_rbpex_repair: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_covering_rbpex_repair: XeSqlPkg_page_covering_rbpex_repair
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] sint32 hresult_errorcode;
};
		
[dynamic: ToInstance, Description("Occurs when the resumable index has been paused for a long time."): Amended,
    Guid("{0c9be76d-14ec-47cf-8f52-a9793117bf44}"), locale("MS\\0x409"),
    DisplayName("resumable_index_alert_overdue_pause"): Amended]
class XeSqlPkg_resumable_index_alert_overdue_pause: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_alert_overdue_pause: XeSqlPkg_resumable_index_alert_overdue_pause
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 index_id;
	[WmiDataId(8), read] real32 paused_hours;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string index_name;
};
		
[dynamic: ToInstance, Description("Occurs when the resumable index has been paused for longer than the auto abort threshold."): Amended,
    Guid("{70b5367b-6627-4655-bc18-9b0fe9cee643}"), locale("MS\\0x409"),
    DisplayName("resumable_index_auto_abort"): Amended]
class XeSqlPkg_resumable_index_auto_abort: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resumable_index_auto_abort: XeSqlPkg_resumable_index_auto_abort
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] sint32 index_id;
	[WmiDataId(8), read] real32 paused_minutes;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string index_name;
};
		
[dynamic: ToInstance, Description("Occurs when memory spilled through work files exceed the threshold of 100 GB."): Amended,
    Guid("{a239b479-c466-45bd-a973-0a015cd33415}"), locale("MS\\0x409"),
    DisplayName("excessive_memory_spilled_to_workfiles"): Amended]
class XeSqlPkg_excessive_memory_spilled_to_workfiles: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class excessive_memory_spilled_to_workfiles: XeSqlPkg_excessive_memory_spilled_to_workfiles
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 memory_spilled_kb;
};
		
[dynamic: ToInstance, Description("Elapsed Execution Time Monitor Registration Count"): Amended,
    Guid("{886cdc1f-c8c3-4e89-a62a-a28568b57343}"), locale("MS\\0x409"),
    DisplayName("elapsed_execution_time_monitor"): Amended]
class XeSqlPkg_elapsed_execution_time_monitor: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class elapsed_execution_time_monitor: XeSqlPkg_elapsed_execution_time_monitor
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 registered_task_count;
};
		
[dynamic: ToInstance, Description("Verbose trace for persistent version store."): Amended,
    Guid("{67C045D7-7F5B-432C-9806-A55AD2CABD6A}"), locale("MS\\0x409"),
    DisplayName("pvs_trace"): Amended]
class XeSqlPkg_pvs_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pvs_trace: XeSqlPkg_pvs_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string trace_message;
};
		
[dynamic: ToInstance, Description("Verbose trace for add record in persistent version store."): Amended,
    Guid("{cfc9ca74-6e2c-447c-a28a-7105e1f64fea}"), locale("MS\\0x409"),
    DisplayName("pvs_add_record"): Amended]
class XeSqlPkg_pvs_add_record: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pvs_add_record: XeSqlPkg_pvs_add_record
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Verbose trace for get record in persistent version store."): Amended,
    Guid("{44976932-0374-4b2e-aec2-39c8de8e02f3}"), locale("MS\\0x409"),
    DisplayName("pvs_get_record"): Amended]
class XeSqlPkg_pvs_get_record: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pvs_get_record: XeSqlPkg_pvs_get_record
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Verbose trace for PVS page allocation."): Amended,
    Guid("{b80d65a7-077f-493c-b9b1-d9a5605f91f2}"), locale("MS\\0x409"),
    DisplayName("pvs_page_allocated"): Amended]
class XeSqlPkg_pvs_page_allocated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pvs_page_allocated: XeSqlPkg_pvs_page_allocated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("Verbose trace for cache allocation for persistent version store."): Amended,
    Guid("{d9b8f6fe-c5ae-45d7-aed3-d1e4f53036dd}"), locale("MS\\0x409"),
    DisplayName("pvs_cache_allocated"): Amended]
class XeSqlPkg_pvs_cache_allocated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pvs_cache_allocated: XeSqlPkg_pvs_cache_allocated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Verbose trace for cache de-allocation for persistent version store."): Amended,
    Guid("{092a28cf-0671-477b-83c7-e9bfb8f2e364}"), locale("MS\\0x409"),
    DisplayName("pvs_cache_deallocated"): Amended]
class XeSqlPkg_pvs_cache_deallocated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class pvs_cache_deallocated: XeSqlPkg_pvs_cache_deallocated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Emitted if redo sees an inconsistency due to ConcurrentPFSUpdates while redoing PFS pages."): Amended,
    Guid("{f86cf5dd-e212-43cd-9b95-5f38da44d45d}"), locale("MS\\0x409"),
    DisplayName("redo_pfs_page_lsn_inconsistency"): Amended]
class XeSqlPkg_redo_pfs_page_lsn_inconsistency: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_pfs_page_lsn_inconsistency: XeSqlPkg_redo_pfs_page_lsn_inconsistency
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string redo_lsn;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string page_lsn;
};
		
[dynamic: ToInstance, Description("Occurs once the global temporary object row is successfully persisted to the stable storage."): Amended,
    Guid("{ad46354c-28ee-4215-9f92-6d0f440c216f}"), locale("MS\\0x409"),
    DisplayName("metadata_db_scoped_global_temp_objects_created_count"): Amended]
class XeSqlPkg_metadata_db_scoped_global_temp_objects_created_count: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_db_scoped_global_temp_objects_created_count: XeSqlPkg_metadata_db_scoped_global_temp_objects_created_count
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_scoped_global_temp_objects_created_count;
};
		
[dynamic: ToInstance, Description("Occurs once the local temporary object row is successfully persisted to the stable storage."): Amended,
    Guid("{4b559b95-72e9-425e-938c-9904b0152217}"), locale("MS\\0x409"),
    DisplayName("metadata_db_scoped_local_temp_objects_created_count"): Amended]
class XeSqlPkg_metadata_db_scoped_local_temp_objects_created_count: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_db_scoped_local_temp_objects_created_count: XeSqlPkg_metadata_db_scoped_local_temp_objects_created_count
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_scoped_local_temp_objects_created_count;
};
		
[dynamic: ToInstance, Description("Information about partition sort"): Amended,
    Guid("{021ecbe8-c189-4ad5-b892-e13d90eadc45}"), locale("MS\\0x409"),
    DisplayName("partition_sort_info"): Amended]
class XeSqlPkg_partition_sort_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class partition_sort_info: XeSqlPkg_partition_sort_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 rows_processed_per_run;
	[WmiDataId(6), read] sint64 total_rows_processed;
	[WmiDataId(7), read] sint64 total_runs;
	[WmiDataId(8), read] sint64 total_granted_memory_kb;
	[WmiDataId(9), read] uint32 dop;
	[WmiDataId(10), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Information about partition sort"): Amended,
    Guid("{021ecbe8-c189-4ad5-b892-e13d90eadc45}"), locale("MS\\0x409"),
    DisplayName("partition_sort_info"): Amended]
class XeSqlPkg_partition_sort_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class partition_sort_info: XeSqlPkg_partition_sort_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 rows_processed_per_run;
	[WmiDataId(6), read] sint64 total_rows_processed;
	[WmiDataId(7), read] sint64 total_runs;
	[WmiDataId(8), read] sint64 total_granted_memory_kb;
	[WmiDataId(9), read] uint32 dop;
	[WmiDataId(10), read] uint32 thread_id;
	[WmiDataId(11), read] sint32 operation_type;
	[WmiDataId(12), read] uint64 total_duration_ms;
};
		
[dynamic: ToInstance, Description("Information about partition sort"): Amended,
    Guid("{021ecbe8-c189-4ad5-b892-e13d90eadc45}"), locale("MS\\0x409"),
    DisplayName("partition_sort_info"): Amended]
class XeSqlPkg_partition_sort_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class partition_sort_info: XeSqlPkg_partition_sort_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 rows_processed_per_run;
	[WmiDataId(6), read] sint64 total_rows_processed;
	[WmiDataId(7), read] sint64 total_runs;
	[WmiDataId(8), read] sint64 total_granted_memory_kb;
	[WmiDataId(9), read] uint32 dop;
	[WmiDataId(10), read] uint32 thread_id;
	[WmiDataId(11), read] sint32 sort_operation_type;
	[WmiDataId(12), read] uint64 total_duration_ms;
};
		
[dynamic: ToInstance, Description("Builtin Execution Time Breakdown"): Amended,
    Guid("{08664e88-5d4d-4740-a8e1-dd58a56fbd71}"), locale("MS\\0x409"),
    DisplayName("predict_function_completed"): Amended]
class XeSqlPkg_predict_function_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class predict_function_completed: XeSqlPkg_predict_function_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 total_columns;
	[WmiDataId(6), read] uint64 total_rows;
	[WmiDataId(7), read] uint32 model_size;
	[WmiDataId(8), read] uint64 model_load_time;
	[WmiDataId(9), read] uint64 scoring_duration_time;
	[WmiDataId(10), read] uint64 model_look_up_time;
};
		
[dynamic: ToInstance, Description("Occurs when a model is retrieved from the PREDICT function model cache. Use this event along with other predict_model_cache_* events to troubleshoot issues caused by the PREDICT function model cache."): Amended,
    Guid("{55bffaad-3540-4f14-8acd-c6a2407a343a}"), locale("MS\\0x409"),
    DisplayName("predict_model_cache_hit"): Amended]
class XeSqlPkg_predict_model_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class predict_model_cache_hit: XeSqlPkg_predict_model_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 model_cache_address;
};
		
[dynamic: ToInstance, Description("Occurs when a model is insert into the PREDICT function model cache. Use this event along with other predict_model_cache_* events to troubleshoot issues caused by the PREDICT function model cache."): Amended,
    Guid("{0363d8b3-0e63-42df-8d28-2136aab47032}"), locale("MS\\0x409"),
    DisplayName("predict_model_cache_insert"): Amended]
class XeSqlPkg_predict_model_cache_insert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class predict_model_cache_insert: XeSqlPkg_predict_model_cache_insert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 model_cache_address;
};
		
[dynamic: ToInstance, Description("Occurs when a model is not found in the PREDICT function model cache. Frequent occurrences of this event could indicate that SQL Server needs more memory. Use this event along with other predict_model_cache_* events to troubleshoot issues caused by the PREDICT function model cache."): Amended,
    Guid("{e8e5860e-48ba-43ff-9abd-3e667eefe8b9}"), locale("MS\\0x409"),
    DisplayName("predict_model_cache_miss"): Amended]
class XeSqlPkg_predict_model_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class predict_model_cache_miss: XeSqlPkg_predict_model_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when a model is removed from model cache for PREDICT function. Use this event along with other predict_model_cache_* events to troubleshoot issues caused by the PREDICT function model cache."): Amended,
    Guid("{02e70a76-d88a-4a7d-bd73-d1c79c626af9}"), locale("MS\\0x409"),
    DisplayName("predict_model_cache_remove"): Amended]
class XeSqlPkg_predict_model_cache_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class predict_model_cache_remove: XeSqlPkg_predict_model_cache_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("PREDICT error"): Amended,
    Guid("{a9ee3e52-eb8e-47ad-bb30-4eb7021fe8bf}"), locale("MS\\0x409"),
    DisplayName("predict_error"): Amended]
class XeSqlPkg_predict_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class predict_error: XeSqlPkg_predict_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_location;
	[WmiDataId(6), read] uint32 error_code;
	[WmiDataId(7), read, StringTermination("NullTerminated")] string source_file;
	[WmiDataId(8), read, StringTermination("NullTerminated")] string message;
};
		
[dynamic: ToInstance, Description("ONNX log message"): Amended,
    Guid("{1d5b636a-a075-4e84-a2da-1326b82d8bd5}"), locale("MS\\0x409"),
    DisplayName("predict_onnx_log"): Amended]
class XeSqlPkg_predict_onnx_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class predict_onnx_log: XeSqlPkg_predict_onnx_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 severity;
	[WmiDataId(6), read, StringTermination("NullTerminated")] string category;
	[WmiDataId(7), read, StringTermination("NullTerminated")] string logid;
	[WmiDataId(8), read, StringTermination("NullTerminated")] string location;
	[WmiDataId(9), read, StringTermination("NullTerminated")] string message;
};
		
[dynamic: ToInstance, Description("Publishes consolidated stats collected during external endpoint invocation"): Amended,
    Guid("{b0a4e418-4631-4ac8-bd05-5354fee47290}"), locale("MS\\0x409"),
    DisplayName("external_runtime_execution_stats"): Amended]
class XeSqlPkg_external_runtime_execution_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_runtime_execution_stats: XeSqlPkg_external_runtime_execution_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 http_response_time_min;
	[WmiDataId(6), read] uint64 http_response_time_max;
	[WmiDataId(7), read] uint64 http_response_time_sum;
	[WmiDataId(8), read] uint64 request_payload_size_min;
	[WmiDataId(9), read] uint64 request_payload_size_max;
	[WmiDataId(10), read] uint64 request_payload_size_sum;
	[WmiDataId(11), read] uint64 request_count_min;
	[WmiDataId(12), read] uint64 request_count_max;
	[WmiDataId(13), read] uint64 request_count_sum;
	[WmiDataId(14), read] uint64 response_payload_size_min;
	[WmiDataId(15), read] uint64 response_payload_size_max;
	[WmiDataId(16), read] uint64 response_payload_size_sum;
	[WmiDataId(17), read] uint64 payload_serialization_time_min;
	[WmiDataId(18), read] uint64 payload_serialization_time_max;
	[WmiDataId(19), read] uint64 payload_serialization_time_sum;
	[WmiDataId(20), read] uint64 payload_deserialization_time_min;
	[WmiDataId(21), read] uint64 payload_deserialization_time_max;
	[WmiDataId(22), read] uint64 payload_deserialization_time_sum;
	[WmiDataId(23), read] uint64 output_buffer_alloc_time_min;
	[WmiDataId(24), read] uint64 output_buffer_alloc_time_max;
	[WmiDataId(25), read] uint64 output_buffer_alloc_time_sum;
	[WmiDataId(26), read] uint64 rows_per_batch_min;
	[WmiDataId(27), read] uint64 rows_per_batch_max;
	[WmiDataId(28), read] uint64 rows_per_batch_sum;
	[WmiDataId(29), read] sint64 endpoint_status_code;
};
		
[dynamic: ToInstance, Description("Update of the foreign redo LSN in the foreign file header"): Amended,
    Guid("{0e3c67da-e188-4460-a725-b017f3b1713e}"), locale("MS\\0x409"),
    DisplayName("persist_foreign_redo_lsn"): Amended]
class XeSqlPkg_persist_foreign_redo_lsn: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class persist_foreign_redo_lsn: XeSqlPkg_persist_foreign_redo_lsn
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string foreign_redo_lsn;
};
		
[dynamic: ToInstance, Description("RBPEX deferred the file growth operation."): Amended,
    Guid("{f4bf78f0-093a-451f-bd19-4d95f1aa54d6}"), locale("MS\\0x409"),
    DisplayName("rbpex_deferred_file_growth"): Amended]
class XeSqlPkg_rbpex_deferred_file_growth: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_deferred_file_growth: XeSqlPkg_rbpex_deferred_file_growth
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 previous_size;
	[WmiDataId(8), read] uint32 new_size;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string log_rec_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(11), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("RBPEX performed the deferred file growth operation."): Amended,
    Guid("{747b0e21-768f-4db5-a27e-a7cdab7a3089}"), locale("MS\\0x409"),
    DisplayName("rbpex_applied_file_growth"): Amended]
class XeSqlPkg_rbpex_applied_file_growth: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_applied_file_growth: XeSqlPkg_rbpex_applied_file_growth
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 previous_size;
	[WmiDataId(8), read] uint32 new_size;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string log_rec_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(11), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Occurs when asynchronous segment allocation of covering RBPEX has started."): Amended,
    Guid("{90cfae44-7186-4eb5-bbda-4bb5821bb09e}"), locale("MS\\0x409"),
    DisplayName("rbpex_segment_allocating_started"): Amended]
class XeSqlPkg_rbpex_segment_allocating_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_segment_allocating_started: XeSqlPkg_rbpex_segment_allocating_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("Occurs when asynchronous segment allocation of covering RBPEX has completed."): Amended,
    Guid("{abf62c0b-0a36-469f-93ae-da278fc03496}"), locale("MS\\0x409"),
    DisplayName("rbpex_segment_allocating_completed"): Amended]
class XeSqlPkg_rbpex_segment_allocating_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_segment_allocating_completed: XeSqlPkg_rbpex_segment_allocating_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] sint32 error_code;
};
		
[dynamic: ToInstance, Description("Occurs when asynchronous segment allocation of covering RBPEX has failed."): Amended,
    Guid("{b2eeaf03-f58c-4ed6-a7c5-d844f17332e2}"), locale("MS\\0x409"),
    DisplayName("rbpex_segment_allocating_failed"): Amended]
class XeSqlPkg_rbpex_segment_allocating_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_segment_allocating_failed: XeSqlPkg_rbpex_segment_allocating_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] sint32 error_code;
};
		
[dynamic: ToInstance, Description("Occurs when asynchronous seeding of covering RBPEX has started."): Amended,
    Guid("{a0a15de2-2470-4034-b75a-f40edd34db6a}"), locale("MS\\0x409"),
    DisplayName("rbpex_seeding_started"): Amended]
class XeSqlPkg_rbpex_seeding_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_seeding_started: XeSqlPkg_rbpex_seeding_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(9), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Occurs when asynchronous seeding of covering RBPEX has completed."): Amended,
    Guid("{393590e3-7283-4309-8164-0b60d05cb52a}"), locale("MS\\0x409"),
    DisplayName("rbpex_seeding_completed"): Amended]
class XeSqlPkg_rbpex_seeding_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_seeding_completed: XeSqlPkg_rbpex_seeding_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] sint32 error_code;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Occurs when asynchronous seeding of covering RBPEX has failed."): Amended,
    Guid("{929cb44d-3c64-46d4-9456-0c47591d305f}"), locale("MS\\0x409"),
    DisplayName("rbpex_seeding_failed"): Amended]
class XeSqlPkg_rbpex_seeding_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_seeding_failed: XeSqlPkg_rbpex_seeding_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] sint32 error_code;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Occurs when an RBPEX segment has transitioned to the covering state."): Amended,
    Guid("{583af0b3-ffe2-4ddf-8a15-8c39fff2099f}"), locale("MS\\0x409"),
    DisplayName("rbpex_segment_seeded"): Amended]
class XeSqlPkg_rbpex_segment_seeded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class rbpex_segment_seeded: XeSqlPkg_rbpex_segment_seeded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 source_segment_index;
	[WmiDataId(8), read] uint64 rbpex_segment_index;
	[WmiDataId(9), read] sint8  used_peer;
	[WmiDataId(10), read] uint64 seeding_time_ms;
};
		
[dynamic: ToInstance, Description("RBPEX successfully added the entry for a failed remote I/O."): Amended,
    Guid("{8d333e77-29f7-4163-bdf1-764dfb4aa6d4}"), locale("MS\\0x409"),
    DisplayName("rbpex_remote_failed_io_entry_added"): Amended]
class XeSqlPkg_rbpex_remote_failed_io_entry_added: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_remote_failed_io_entry_added: XeSqlPkg_rbpex_remote_failed_io_entry_added
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string page_lsn;
};
		
[dynamic: ToInstance, Description("RBPEX successfully wrote a prior failed I/O back to the data file."): Amended,
    Guid("{10599873-e51f-4900-bd6c-c019063ccb92}"), locale("MS\\0x409"),
    DisplayName("rbpex_writeback_failed_io_succeeded"): Amended]
class XeSqlPkg_rbpex_writeback_failed_io_succeeded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_writeback_failed_io_succeeded: XeSqlPkg_rbpex_writeback_failed_io_succeeded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] sint8  clean_page;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string page_entry_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when RBPEX is going to write a new page, the invalidation can produce a failure invalidation or a successful invalidation."): Amended,
    Guid("{e057b957-4228-4e1a-b419-0efbc9926f0c}"), locale("MS\\0x409"),
    DisplayName("rbpex_invalidate_page"): Amended]
class XeSqlPkg_rbpex_invalidate_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_invalidate_page: XeSqlPkg_rbpex_invalidate_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint32 old_page_state;
	[WmiDataId(9), read] uint32 new_page_state;
	[WmiDataId(10), read] sint8  can_issue_write;
	[WmiDataId(11), read] sint8  skip_page_write;
	[WmiDataId(12), read] sint8  reclaimed_page;
	[WmiDataId(13), read] sint8  old_row_deleted;
	[WmiDataId(14), read] uint64 rbpex_offset;
	[WmiDataId(15), read] uint64 rbpex_new_offset;
	[WmiDataId(16), read] uint32 segment_page_count;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string old_page_lsn;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string new_page_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when RBPEX is going to write a new page in the lru refresh."): Amended,
    Guid("{c0a85a9e-bcdd-44f5-bc0f-925836d12c45}"), locale("MS\\0x409"),
    DisplayName("rbpex_on_lru_page_write"): Amended]
class XeSqlPkg_rbpex_on_lru_page_write: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_on_lru_page_write: XeSqlPkg_rbpex_on_lru_page_write
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint64 rbpex_offset;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string new_page_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string operation;
};
		
[dynamic: ToInstance, Description("Occurs when all IO for a master IO completes including all RBPEX IOs."): Amended,
    Guid("{d0865798-a270-433b-b96c-55082ff26a41}"), locale("MS\\0x409"),
    DisplayName("rbpex_on_write_completion"): Amended]
class XeSqlPkg_rbpex_on_write_completion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_on_write_completion: XeSqlPkg_rbpex_on_write_completion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint32 old_page_state;
	[WmiDataId(9), read] sint8  is_stale;
	[WmiDataId(10), read] sint8  io_successful;
	[WmiDataId(11), read] uint64 rbpex_offset;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string new_page_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when a RBPEX write IO for Lru Refresh completes."): Amended,
    Guid("{11299873-e51f-4900-bd6c-c019063ccb92}"), locale("MS\\0x409"),
    DisplayName("rbpex_on_lru_write_completion"): Amended]
class XeSqlPkg_rbpex_on_lru_write_completion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_on_lru_write_completion: XeSqlPkg_rbpex_on_lru_write_completion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint32 old_page_state;
	[WmiDataId(9), read] sint8  is_stale;
	[WmiDataId(10), read] sint8  io_successful;
	[WmiDataId(11), read] uint64 rbpex_offset;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string new_page_lsn;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{2b09821f-99df-4351-be94-26787532435c}"), locale("MS\\0x409"),
    DisplayName("rbpex_eviction_run_profile"): Amended]
class XeSqlPkg_rbpex_eviction_run_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_eviction_run_profile: XeSqlPkg_rbpex_eviction_run_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 total_pages_scanned_for_eviction;
	[WmiDataId(6), read] uint64 total_pages_evicted;
	[WmiDataId(7), read] uint64 sample_phase_runtime_ms;
	[WmiDataId(8), read] uint64 sample_phase_runtime_us;
	[WmiDataId(9), read] uint64 eviction_phase_runtime_ms;
	[WmiDataId(10), read] uint64 eviction_routine_runtime_ms;
	[WmiDataId(11), read] real32 eviction_scan_hit_rate;
	[WmiDataId(12), read] uint32 segment_occupancy_bucket_00;
	[WmiDataId(13), read] uint32 segment_occupancy_bucket_01;
	[WmiDataId(14), read] uint32 segment_occupancy_bucket_02;
	[WmiDataId(15), read] uint32 segment_occupancy_bucket_03;
	[WmiDataId(16), read] uint32 segment_occupancy_bucket_04;
	[WmiDataId(17), read] uint32 segment_occupancy_bucket_05;
	[WmiDataId(18), read] uint32 segment_occupancy_bucket_06;
	[WmiDataId(19), read] uint32 segment_occupancy_bucket_07;
	[WmiDataId(20), read] uint32 segment_occupancy_bucket_max;
	[WmiDataId(21), read] uint32 total_segments;
	[WmiDataId(22), read] uint64 total_pages;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string sampling_strategy;
};
		
[dynamic: ToInstance, Description("Occurs when a page having an entry in the RBPEX exclusion map is read."): Amended,
    Guid("{7bc03dbe-fe67-4da3-9221-9167d757c077}"), locale("MS\\0x409"),
    DisplayName("rbpex_exclusion_map_page_read"): Amended]
class XeSqlPkg_rbpex_exclusion_map_page_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_exclusion_map_page_read: XeSqlPkg_rbpex_exclusion_map_page_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint64 rbpex_offset;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string exclusion_map_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string page_lsn;
};
		
[dynamic: ToInstance, Description("RBPEX deferred remote I/O due to pending file growth."): Amended,
    Guid("{1c1205ff-b9bd-43c5-abb7-269684b2a41b}"), locale("MS\\0x409"),
    DisplayName("rbpex_deferring_remote_io"): Amended]
class XeSqlPkg_rbpex_deferring_remote_io: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_deferring_remote_io: XeSqlPkg_rbpex_deferring_remote_io
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 file_offset;
	[WmiDataId(8), read] uint32 io_size;
};
		
[dynamic: ToInstance, Description("Occurs when RBPEX/WB checks if file growth can be deferred"): Amended,
    Guid("{1c68c470-c305-4c88-b6f1-1fa17133da75}"), locale("MS\\0x409"),
    DisplayName("rbpex_is_file_growth_supported"): Amended]
class XeSqlPkg_rbpex_is_file_growth_supported: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_is_file_growth_supported: XeSqlPkg_rbpex_is_file_growth_supported
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 striped_start_page;
	[WmiDataId(8), read] uint32 striped_end_page;
	[WmiDataId(9), read] uint64 current_file_size;
	[WmiDataId(10), read] uint64 new_file_size;
	[WmiDataId(11), read] sint8  file_growth_supported;
	[WmiDataId(12), read] sint32 hresult_errorcode;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(14), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(15), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("This xevent is fired when rbpex write behind checkpoint handle physical file growth."): Amended,
    Guid("{3BA26145-3C64-49B1-BA91-96754FC66A09}"), locale("MS\\0x409"),
    DisplayName("wb_checkpoint_report_file_size"): Amended]
class XeSqlPkg_wb_checkpoint_report_file_size: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wb_checkpoint_report_file_size: XeSqlPkg_wb_checkpoint_report_file_size
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 current_file_size;
	[WmiDataId(8), read] uint64 new_file_size;
};
		
[dynamic: ToInstance, Description("This xevent is fired when rbpex write behind checkpoint abort deferred physical file growth."): Amended,
    Guid("{32197F6A-BEE3-458E-B229-BD216309BB46}"), locale("MS\\0x409"),
    DisplayName("wb_checkpoint_skip_file_growth"): Amended]
class XeSqlPkg_wb_checkpoint_skip_file_growth: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wb_checkpoint_skip_file_growth: XeSqlPkg_wb_checkpoint_skip_file_growth
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 current_file_size;
	[WmiDataId(8), read] uint64 new_file_size;
};
		
[dynamic: ToInstance, Description("Monitors progress of write behind checkpoint."): Amended,
    Guid("{5e76ff77-0728-462d-8a2a-27cac250afd4}"), locale("MS\\0x409"),
    DisplayName("wb_checkpoint_progress"): Amended]
class XeSqlPkg_wb_checkpoint_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wb_checkpoint_progress: XeSqlPkg_wb_checkpoint_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 current_file_size;
	[WmiDataId(8), read] uint64 previous_file_size;
	[WmiDataId(9), read] uint64 checkpoint_id;
	[WmiDataId(10), read] uint32 segment_exhausted;
	[WmiDataId(11), read] uint32 stream_exhausted;
	[WmiDataId(12), read] uint32 pages_modified_segment_end_found;
	[WmiDataId(13), read] uint32 full_page_stride_scanned;
	[WmiDataId(14), read] uint32 no_page_stream_stalled;
	[WmiDataId(15), read] uint64 page_modified_found;
	[WmiDataId(16), read] uint64 total_write_io_count;
	[WmiDataId(17), read] uint64 modified_io_bytes;
	[WmiDataId(18), read] uint64 total_io_bytes;
	[WmiDataId(19), read] uint64 total_locked_bytes;
	[WmiDataId(20), read] uint64 total_read_io_count;
	[WmiDataId(21), read] uint64 total_cancelled_write_io_count;
	[WmiDataId(22), read] uint64 checkpoint_error_count;
	[WmiDataId(23), read] uint64 checkpoint_retries_after_stream_empty;
	[WmiDataId(24), read] uint32 checkpoint_wait_failure_count;
	[WmiDataId(25), read] uint32 checkpoint_progress_stalled_count;
	[WmiDataId(26), read] uint32 checkpoint_skipped;
	[WmiDataId(27), read] uint32 checkpoint_stream_empty;
	[WmiDataId(28), read] uint32 checkpoint_read_io_error;
	[WmiDataId(29), read] uint32 checkpoint_write_io_error;
	[WmiDataId(30), read] uint32 checkpoint_retry_read_io_error;
	[WmiDataId(31), read] uint32 checkpoint_retry_read_io_success;
	[WmiDataId(32), read] uint32 checkpoint_retry_latch_error;
	[WmiDataId(33), read] uint32 checkpoint_retry_latch_success;
	[WmiDataId(34), read] uint32 checkpoint_retry_buffer_pool_read;
	[WmiDataId(35), read] uint32 total_cancelled_retry_io_count;
	[WmiDataId(36), read] uint32 total_cancelled_failed_io_count;
	[WmiDataId(37), read] uint32 modified_pages_zero_count;
	[WmiDataId(38), read] uint32 checkpoint_task_aborted_count;
	[WmiDataId(39), read] uint32 checkpoint_fault_inject_count;
	[WmiDataId(40), read] uint32 first_page_in_io;
	[WmiDataId(41), read] uint32 checkpoint_indoubt_read_io_error_count;
	[WmiDataId(42), read] uint32 checkpoint_failed_read_io_error_count;
	[WmiDataId(43), read] uint32 checkpoint_checksum_read_io_error_count;
	[WmiDataId(44), read] uint32 checkpoint_page_id_io_error_count;
	[WmiDataId(45), read] uint32 failed_io_count;
	[WmiDataId(46), read] uint32 has_deferred_file_growth;
	[WmiDataId(47), read] uint32 segment_beyond_local_file_size;
	[WmiDataId(48), read] uint32 first_dirty_page_beyond_local_file_size;
	[WmiDataId(49), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(50), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(51), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(52), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(53), read, StringTermination("NullTerminated"), Format("w")] string foreign_file_path;
};
		
[dynamic: ToInstance, Description("Logs failed ios during WB checkpoint."): Amended,
    Guid("{9d7b0c9c-da97-48c4-a367-df6542957732}"), locale("MS\\0x409"),
    DisplayName("wb_checkpoint_failed_ios"): Amended]
class XeSqlPkg_wb_checkpoint_failed_ios: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wb_checkpoint_failed_ios: XeSqlPkg_wb_checkpoint_failed_ios
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 checkpoint_id;
	[WmiDataId(7), read] uint64 read_from;
	[WmiDataId(8), read] uint64 write_to;
	[WmiDataId(9), read] uint64 io_size_in_bytes;
	[WmiDataId(10), read] uint64 modified_pages_lower_bits;
	[WmiDataId(11), read] uint64 modified_pages_upper_bits;
	[WmiDataId(12), read] uint32 count_modified_pages_in_io;
	[WmiDataId(13), read] uint32 total_retries;
	[WmiDataId(14), read] uint32 failed_reads_count;
	[WmiDataId(15), read] uint32 page_index;
	[WmiDataId(16), read] uint32 failed_read_page_index;
	[WmiDataId(17), read] uint32 read_io;
	[WmiDataId(18), read] uint32 retry_failed;
};
		
[dynamic: ToInstance, Description("Traces foreign log state for write behind checkpoint progress."): Amended,
    Guid("{ce1f62e3-c511-4e52-ba27-77a16bc62fcf}"), locale("MS\\0x409"),
    DisplayName("wb_checkpoint_metadata"): Amended]
class XeSqlPkg_wb_checkpoint_metadata: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wb_checkpoint_metadata: XeSqlPkg_wb_checkpoint_metadata
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read] uint64 applied_bsn;
	[WmiDataId(7), read] uint64 oldest_bsn;
	[WmiDataId(8), read] uint32 file_size;
	[WmiDataId(9), read, 
				XEMapId(224),
				ValueMap { 
					"2", 
					"0", 
					"1" },
				Values { 
					"WbMdStateLast", 
					"WbMdStateLocal", 
					"WbMdStateRemote" }
			] uint32 metadata_state;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string callfunction;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string callsite;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string applied_lsn_str;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string oldest_lsn_str;
};
		
[dynamic: ToInstance, Description("Monitors info determining write behind throttling."): Amended,
    Guid("{6773f8a6-91b3-4f1e-b284-bcf6ed8abd72}"), locale("MS\\0x409"),
    DisplayName("wb_throttle_info"): Amended]
class XeSqlPkg_wb_throttle_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wb_throttle_info: XeSqlPkg_wb_throttle_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 current_foreign_apply_bsn;
	[WmiDataId(8), read] uint64 local_state_bsn;
	[WmiDataId(9), read] uint64 remote_ckpt_bsn;
	[WmiDataId(10), read] uint64 current_dirty_pages_map_to_bsn;
	[WmiDataId(11), read] uint64 ckpt_bsn_to_report;
	[WmiDataId(12), read] uint64 ckpt_calculated_bsn_to_report;
	[WmiDataId(13), read] uint64 current_total_dirty_pages;
	[WmiDataId(14), read] real64 bsns_per_dirty_pages_mapping;
	[WmiDataId(15), read, 
				XEMapId(28),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"NoReason", 
					"CheckpointStuck", 
					"AccumulatedDirtyPages" }
			] uint8 throttle_potential_reason;
};
		
[dynamic: ToInstance, Description("Write behind recovery stats."): Amended,
    Guid("{fcad1916-610e-4d35-85f4-605394b11fb1}"), locale("MS\\0x409"),
    DisplayName("wb_recovery_progress"): Amended]
class XeSqlPkg_wb_recovery_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wb_recovery_progress: XeSqlPkg_wb_recovery_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 foreign_file_id;
	[WmiDataId(7), read] uint64 start_page_id;
	[WmiDataId(8), read] uint64 end_page_id;
	[WmiDataId(9), read] uint64 local_file_size;
	[WmiDataId(10), read] uint64 remote_file_size;
	[WmiDataId(11), read] uint64 log_bytes_consumed;
	[WmiDataId(12), read] uint64 pages_found_count;
	[WmiDataId(13), read] uint64 current_bsn;
	[WmiDataId(14), read] uint64 local_state_bsn;
	[WmiDataId(15), read] uint64 remote_state_bsn;
	[WmiDataId(16), read] uint64 reads_from_broker;
	[WmiDataId(17), read] uint64 reads_from_lz;
	[WmiDataId(18), read] uint64 reads_from_lc;
	[WmiDataId(19), read] uint64 reads_from_lt;
	[WmiDataId(20), read] uint64 bytes_read;
	[WmiDataId(21), read] uint64 returned_from_eol_pool;
	[WmiDataId(22), read] sint8  is_recovery_skipped;
	[WmiDataId(23), read] sint8  is_recovery_in_progress;
	[WmiDataId(24), read] sint32 hresult;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string local_state_lsn;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string remote_state_lsn;
	[WmiDataId(28), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(29), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("XEvent used for testing purposes"): Amended,
    Guid("{0DEAD3AB-E6AF-4A0D-9D1E-EF98DA4DADCF}"), locale("MS\\0x409"),
    DisplayName("wb_recovery_read_log_failure_injection"): Amended]
class XeSqlPkg_wb_recovery_read_log_failure_injection: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wb_recovery_read_log_failure_injection: XeSqlPkg_wb_recovery_read_log_failure_injection
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 current_bsn;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("Rbpex parallel seeding timing info."): Amended,
    Guid("{86ac7663-dbe3-433d-86fa-4a9c2ece8ec0}"), locale("MS\\0x409"),
    DisplayName("rbpex_parallel_seeding_timing"): Amended]
class XeSqlPkg_rbpex_parallel_seeding_timing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_parallel_seeding_timing: XeSqlPkg_rbpex_parallel_seeding_timing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 segment_count;
	[WmiDataId(8), read] uint64 seeding_time_ms;
	[WmiDataId(9), read] uint32 seeding_concurrency;
};
		
[dynamic: ToInstance, Description("Rbpex Physical shrink not allowed to proceed"): Amended,
    Guid("{bc509052-85a9-4b28-abf5-98fcde62a490}"), locale("MS\\0x409"),
    DisplayName("rbpex_physical_shrink"): Amended]
class XeSqlPkg_rbpex_physical_shrink: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_physical_shrink: XeSqlPkg_rbpex_physical_shrink
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 shrink_id;
	[WmiDataId(6), read] uint64 start_offset;
	[WmiDataId(7), read] uint64 time_taken_millisec;
	[WmiDataId(8), read] uint32 bytes_to_shrink;
	[WmiDataId(9), read] sint32 hresult;
	[WmiDataId(10), read] sint8  is_asynchronous;
};
		
[dynamic: ToInstance, Description("Tracks rbpex grow when utilization exceeds threshold."): Amended,
    Guid("{503a5a5c-e4d0-4bf2-a983-ac224853f4b9}"), locale("MS\\0x409"),
    DisplayName("rbpex_incremental_grow"): Amended]
class XeSqlPkg_rbpex_incremental_grow: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_incremental_grow: XeSqlPkg_rbpex_incremental_grow
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 from_size_in_pages;
	[WmiDataId(6), read] uint64 grow_size_pages;
	[WmiDataId(7), read] uint32 free_page_locator_count;
	[WmiDataId(8), read] uint32 free_segment_locator_count;
};
		
[dynamic: ToInstance, Description("Rbpex physical growth succeeded"): Amended,
    Guid("{8d153597-ec1c-4405-bf0a-05d1f92f6a3e}"), locale("MS\\0x409"),
    DisplayName("rbpex_physical_grow"): Amended]
class XeSqlPkg_rbpex_physical_grow: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_physical_grow: XeSqlPkg_rbpex_physical_grow
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
	[WmiDataId(6), read] uint32 bytes_grown;
	[WmiDataId(7), read] uint64 time_taken_millisec;
	[WmiDataId(8), read] uint64 start_offset;
};
		
[dynamic: ToInstance, Description("Tracks current RBPEX size and what extra buffer we are reporting as IDSU."): Amended,
    Guid("{0ac8d451-b7aa-4f9f-9df5-ebb07d1f9f02}"), locale("MS\\0x409"),
    DisplayName("rbpex_additional_size_reported_to_fabric"): Amended]
class XeSqlPkg_rbpex_additional_size_reported_to_fabric: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_additional_size_reported_to_fabric: XeSqlPkg_rbpex_additional_size_reported_to_fabric
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rbpex_size_on_disk_mb;
	[WmiDataId(6), read] uint32 additional_buffer_reported_mb;
};
		
[dynamic: ToInstance, Description("RBPEX grow has been failing continuously and now we are reporting max RBPEX file size as part of IDSU."): Amended,
    Guid("{ed8ec81f-53ec-41b0-9ccd-07cdb53dae51}"), locale("MS\\0x409"),
    DisplayName("rbpex_grow_fail_reporting_max_size"): Amended]
class XeSqlPkg_rbpex_grow_fail_reporting_max_size: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_grow_fail_reporting_max_size: XeSqlPkg_rbpex_grow_fail_reporting_max_size
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rbpex_size_reporting_mb;
	[WmiDataId(6), read] uint32 rbpex_size_on_disk_mb;
	[WmiDataId(7), read] uint64 grow_failing_since_sec;
};
		
[dynamic: ToInstance, Description("Rbpex shrink assertions errors"): Amended,
    Guid("{bebdea8d-5c77-44e7-ac78-fae921e7c11f}"), locale("MS\\0x409"),
    DisplayName("rbpex_shrinkmgr_shrink_assert_error"): Amended]
class XeSqlPkg_rbpex_shrinkmgr_shrink_assert_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_shrinkmgr_shrink_assert_error: XeSqlPkg_rbpex_shrinkmgr_shrink_assert_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_state;
	[WmiDataId(6), read] uint32 extra_state;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string caller_function;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{d2a1bb74-9c70-4977-9632-d5728ba9da83}"), locale("MS\\0x409"),
    DisplayName("rbpex_shrinkmgr_shrink_started"): Amended]
class XeSqlPkg_rbpex_shrinkmgr_shrink_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_shrinkmgr_shrink_started: XeSqlPkg_rbpex_shrinkmgr_shrink_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 current_size_mb;
	[WmiDataId(6), read] uint32 target_size_mb;
	[WmiDataId(7), read] uint32 num_zones_to_reclaim;
	[WmiDataId(8), read] uint32 num_zones_skipped_due_to_segment_inuse;
	[WmiDataId(9), read] uint64 timeout_seconds;
	[WmiDataId(10), read] sint8  physical_shrink_enabled;
	[WmiDataId(11), read] uint32 shrink_id;
};
		
[dynamic: ToInstance, Description("Rbpex shrink info."): Amended,
    Guid("{47318408-69a5-4b7f-b123-12f3d1083218}"), locale("MS\\0x409"),
    DisplayName("rbpex_shrinkmgr_shrink"): Amended]
class XeSqlPkg_rbpex_shrinkmgr_shrink: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_shrinkmgr_shrink: XeSqlPkg_rbpex_shrinkmgr_shrink
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 shrink_id;
	[WmiDataId(6), read] uint32 completion_status;
	[WmiDataId(7), read] uint32 execution_status;
	[WmiDataId(8), read] uint32 time_taken_in_sec;
	[WmiDataId(9), read] uint32 failed_alloc_reclaim_or_delete;
	[WmiDataId(10), read] uint32 failed_get_hk_row_delete_page;
	[WmiDataId(11), read] uint32 failed_get_hk_row_reclaim_page;
	[WmiDataId(12), read] uint32 failed_reclaim_or_delete_page;
	[WmiDataId(13), read] uint32 failed_reclaim_tx;
	[WmiDataId(14), read] uint32 failed_reclaim_or_delete_tx;
	[WmiDataId(15), read] uint32 failed_row_alloc_reclaim_page;
	[WmiDataId(16), read] uint32 failed_commit;
	[WmiDataId(17), read] uint32 failed_lazy_commit;
	[WmiDataId(18), read] uint32 failed_to_alloc_driver_mem;
	[WmiDataId(19), read] uint32 failed_to_enqueue_task;
	[WmiDataId(20), read] uint32 failed_workitem_found;
	[WmiDataId(21), read] uint32 fault_injection_count;
	[WmiDataId(22), read] uint32 failed_delete_workitem_found;
	[WmiDataId(23), read] uint32 in_flight_invalidated_due_to_reclaim_count;
	[WmiDataId(24), read] uint32 mismatched_offset_reclaim_count;
	[WmiDataId(25), read] uint32 mismatched_offset_delete_count;
	[WmiDataId(26), read] uint32 num_txns_to_process;
	[WmiDataId(27), read] uint32 num_work_items;
	[WmiDataId(28), read] uint32 num_finished_work_items;
	[WmiDataId(29), read] uint32 marked_for_reclaim_count;
	[WmiDataId(30), read] uint32 marked_as_reclaim_leftover_count;
	[WmiDataId(31), read] uint32 pages_deleted_count;
	[WmiDataId(32), read] uint32 page_operation_incomplete;
	[WmiDataId(33), read] uint32 post_wk_ex_retries_queue_count;
	[WmiDataId(34), read] uint32 post_wk_delete_queue_count;
	[WmiDataId(35), read] uint32 post_wk_error_count;
	[WmiDataId(36), read] uint32 reclaim_page_update_row_failed_count;
	[WmiDataId(37), read] uint32 successful_commit;
	[WmiDataId(38), read] uint32 successful_lazy_commit;
	[WmiDataId(39), read] uint32 shrink_cancelled;
	[WmiDataId(40), read] uint32 tx_reclaim_successful_count;
	[WmiDataId(41), read] uint32 tx_reclaim_failed_count;
	[WmiDataId(42), read] uint32 tx_delete_failed_count;
	[WmiDataId(43), read] uint32 tx_delete_successful_count;
	[WmiDataId(44), read] uint32 tx_ex_retries_successful_count;
	[WmiDataId(45), read] uint32 tx_ex_retries_failed_count;
	[WmiDataId(46), read] uint32 tx_delete_row_not_found_count;
	[WmiDataId(47), read] uint32 tx_reclaim_row_not_found_count;
	[WmiDataId(48), read] uint32 tx_delete_waiton_lru_write_completion;
	[WmiDataId(49), read] uint32 tx_delete_waiton_write_completion;
	[WmiDataId(50), read] uint32 task_aborted_process_shrink;
	[WmiDataId(51), read] uint32 tx_delete_wrong_state_found;
	[WmiDataId(52), read] uint32 write_invalidated_due_to_reclaim_count;
	[WmiDataId(53), read] uint32 wk_ex_retries_queue_count;
	[WmiDataId(54), read] uint32 wk_delete_queue_count;
	[WmiDataId(55), read] uint32 sparse_size_mb;
	[WmiDataId(56), read] uint32 num_zones_to_reclaim;
	[WmiDataId(57), read] uint32 num_zones_logically_reclaimed;
	[WmiDataId(58), read] uint32 num_zones_physically_reclaimed;
	[WmiDataId(59), read] uint32 time_waiting_for_gc_in_ms;
	[WmiDataId(60), read] uint32 num_retries_locator_release;
	[WmiDataId(61), read] uint32 failed_workitem_on_locator_release;
	[WmiDataId(62), read] uint32 shrink_cancelled_due_rbpex_draining;
};
		
[dynamic: ToInstance, Description("Records RBPEX growth activity."): Amended,
    Guid("{e42cc807-de45-4be7-a853-6ee18fae51f4}"), locale("MS\\0x409"),
    DisplayName("rbpex_shrinkmgr_grow"): Amended]
class XeSqlPkg_rbpex_shrinkmgr_grow: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_shrinkmgr_grow: XeSqlPkg_rbpex_shrinkmgr_grow
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 from_size_in_pages;
	[WmiDataId(6), read] uint32 to_size_in_pages;
	[WmiDataId(7), read] uint32 free_page_locator_count;
	[WmiDataId(8), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 free_shrink_page_locator_count;
	[WmiDataId(9), read] sint64 sparse_size_mb;
};
		
[dynamic: ToInstance, Description("Xevent used to pause NonCoveredRbpexSegmentModeHost::GetFreeSegmentLocator once we get a free segment locator from zone."): Amended,
    Guid("{0f294305-d614-425f-9222-d457fad5d15e}"), locale("MS\\0x409"),
    DisplayName("rbpex_get_free_segment_locator_found"): Amended]
class XeSqlPkg_rbpex_get_free_segment_locator_found: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_get_free_segment_locator_found: XeSqlPkg_rbpex_get_free_segment_locator_found
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 zone_offset;
	[WmiDataId(6), read] uint64 segment_offset;
};
		
[dynamic: ToInstance, Description("Xevent indicating that we set the m_shrinkMoveToZoneListInProgress flag in RbpexShrinkMgr::NotifyShrink"): Amended,
    Guid("{40a6438c-5d43-4c9f-bf30-9c9c60c0ad97}"), locale("MS\\0x409"),
    DisplayName("rbpex_notify_shrink_flag_set"): Amended]
class XeSqlPkg_rbpex_notify_shrink_flag_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_notify_shrink_flag_set: XeSqlPkg_rbpex_notify_shrink_flag_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 shrink_target;
};
		
[dynamic: ToInstance, Description("Records RBPEX peer seed activity."): Amended,
    Guid("{DDEEE77C-D05A-4819-97EA-783847402724}"), locale("MS\\0x409"),
    DisplayName("rbpex_peer_seed"): Amended]
class XeSqlPkg_rbpex_peer_seed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_peer_seed: XeSqlPkg_rbpex_peer_seed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 source_segment_index;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string shared_phase_min_lsn;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string ex_phase_min_lsn;
};
		
[dynamic: ToInstance, Description("Occurs during rbpex max file size test."): Amended,
    Guid("{6CD6A221-F3A8-4CB6-830D-5BCC164BC980}"), locale("MS\\0x409"),
    DisplayName("rbpex_max_file_size_test"): Amended]
class XeSqlPkg_rbpex_max_file_size_test: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_max_file_size_test: XeSqlPkg_rbpex_max_file_size_test
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 max_file_size;
	[WmiDataId(8), read] uint64 rbpex_size;
	[WmiDataId(9), read] uint64 rbpex_segment_size;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that database is added to deferred list for Always Encrypted."): Amended,
    Guid("{5b057424-453b-434b-9279-b01e4a49de85}"), locale("MS\\0x409"),
    DisplayName("ae_deferred_databases_add"): Amended]
class XeSqlPkg_ae_deferred_databases_add: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ae_deferred_databases_add: XeSqlPkg_ae_deferred_databases_add
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that database is removed from deferred list for Always Encrypted."): Amended,
    Guid("{63e54492-a1a6-483b-bb40-db20ffadbc41}"), locale("MS\\0x409"),
    DisplayName("ae_deferred_databases_remove"): Amended]
class XeSqlPkg_ae_deferred_databases_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ae_deferred_databases_remove: XeSqlPkg_ae_deferred_databases_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Occurs every time a log record is redone."): Amended,
    Guid("{74783e5e-af36-4c11-bf7b-91594073ca9b}"), locale("MS\\0x409"),
    DisplayName("log_record_redo"): Amended]
class XeSqlPkg_log_record_redo: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_record_redo: XeSqlPkg_log_record_redo
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 transaction_id_high;
	[WmiDataId(7), read] uint32 transaction_id_low;
	[WmiDataId(8), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 operation;
	[WmiDataId(9), read] sint8  from_sLog;
};
		
[dynamic: ToInstance, Description("Occurs every time a log record is undone."): Amended,
    Guid("{52690759-70e4-475a-a524-f3dd806cb951}"), locale("MS\\0x409"),
    DisplayName("log_record_undo"): Amended]
class XeSqlPkg_log_record_undo: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_record_undo: XeSqlPkg_log_record_undo
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 transaction_id_high;
	[WmiDataId(7), read] uint32 transaction_id_low;
	[WmiDataId(8), read, 
				XEMapId(88),
				ValueMap { 
					"130", 
					"241", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"225", 
					"224", 
					"223", 
					"244", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"245", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"147", 
					"145", 
					"230", 
					"232", 
					"231", 
					"233", 
					"234", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"243", 
					"220", 
					"124", 
					"200", 
					"206", 
					"126", 
					"123", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"242", 
					"125", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_AUDIT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_DBMP_INVALIDATION", 
					"LOP_CSI_DELETE_BUFFER", 
					"LOP_CSI_ROWGROUP", 
					"LOP_CTR_NEST_ABORT", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_EE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_CONTAINER_SIZE_DELTA", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HK_DEPLOYED", 
					"LOP_HK_UNDEPLOYED", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_PREPARE_REMOTE_FILE", 
					"LOP_RANGE_INSERT", 
					"LOP_RECONFIGURE", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_RESET_VERSION_INFO", 
					"LOP_REVERT_ROW", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_SLOG_CKPT", 
					"LOP_STRIP_VERSION_INFO", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 operation;
	[WmiDataId(9), read] sint8  from_sLog;
};
		
[dynamic: ToInstance, Description("XEvent used for testing purposes to generate the proper synchronization."): Amended,
    Guid("{eece605f-93bc-4be0-bc18-33d053ecc9d7}"), locale("MS\\0x409"),
    DisplayName("adr_synchronization_xevent"): Amended]
class XeSqlPkg_adr_synchronization_xevent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class adr_synchronization_xevent: XeSqlPkg_adr_synchronization_xevent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 state;
};
		
[dynamic: ToInstance, Description("The state at which we currently are during a ADR allocation."): Amended,
    Guid("{8f8e353a-66e4-4eed-9139-0f72c5d7c797}"), locale("MS\\0x409"),
    DisplayName("adr_allocation_state"): Amended]
class XeSqlPkg_adr_allocation_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class adr_allocation_state: XeSqlPkg_adr_allocation_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(70),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"LobFastAllocator", 
					"CompactSpaceAllocator", 
					"AppendOnlySpaceAllocator", 
					"BulkSpaceAllocator", 
					"CBulkAllocator", 
					"CBulkAllocatorOnline" }
			] uint8 allocator_type;
	[WmiDataId(7), read, 
				XEMapId(69),
				ValueMap { 
					"1", 
					"2", 
					"3" },
				Values { 
					"InternalXactBeforeCommit", 
					"InternalXactAfterCommit", 
					"AfterEndOfOperation" }
			] uint8 allocation_state;
	[WmiDataId(8), read] sint8  is_minimally_logged;
};
		
[dynamic: ToInstance, Description("XEvent used for testing purposes to signal a page allocation for SORT."): Amended,
    Guid("{b2e44ac7-c9e9-4b66-8873-f20410f6bb46}"), locale("MS\\0x409"),
    DisplayName("adr_sort_page_allocation"): Amended]
class XeSqlPkg_adr_sort_page_allocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class adr_sort_page_allocation: XeSqlPkg_adr_sort_page_allocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("XEvent fired when computing locking isolation level."): Amended,
    Guid("{CD66DA04-AAA5-466F-BF64-04977BDFF7C4}"), locale("MS\\0x409"),
    DisplayName("compute_locking_isolation_level"): Amended]
class XeSqlPkg_compute_locking_isolation_level: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_locking_isolation_level: XeSqlPkg_compute_locking_isolation_level
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("XEvent that indicates a change in the deffered transction map for Constant Time Recovery."): Amended,
    Guid("{cfb17b00-4091-4dbd-98db-1efbc0cd32ab}"), locale("MS\\0x409"),
    DisplayName("adr_deferred_transaction_change"): Amended]
class XeSqlPkg_adr_deferred_transaction_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class adr_deferred_transaction_change: XeSqlPkg_adr_deferred_transaction_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  is_marked;
	[WmiDataId(7), read] uint64 total_count;
};
		
[dynamic: ToInstance, Description("XEvent used for testing synchronization in Socrates QP."): Amended,
    Guid("{f620830e-ea19-4974-89e8-39118a8421e8}"), locale("MS\\0x409"),
    DisplayName("socratesqp_synchronization_xevent"): Amended]
class XeSqlPkg_socratesqp_synchronization_xevent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class socratesqp_synchronization_xevent: XeSqlPkg_socratesqp_synchronization_xevent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Track resource usage and caps"): Amended,
    Guid("{a51ee92b-e513-4496-a6b0-ad39b2c0d01f}"), locale("MS\\0x409"),
    DisplayName("job_object_ring_buffer_stats"): Amended]
class XeSqlPkg_job_object_ring_buffer_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class job_object_ring_buffer_stats: XeSqlPkg_job_object_ring_buffer_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 process_id;
	[WmiDataId(6), read] uint32 cpu_load_cap;
	[WmiDataId(7), read] uint64 memory_load_cap_mb;
	[WmiDataId(8), read] uint64 working_set_load_cap_mb;
	[WmiDataId(9), read] real64 cpu_load;
	[WmiDataId(10), read] real64 cpu_load_peak;
	[WmiDataId(11), read] uint32 allocated_cpus;
	[WmiDataId(12), read] uint64 memory_load_mb;
	[WmiDataId(13), read] uint64 peak_memory_load_mb;
	[WmiDataId(14), read] uint64 iops_load;
	[WmiDataId(15), read] uint64 iops_load_peak;
	[WmiDataId(16), read] uint64 working_set_load_mb;
	[WmiDataId(17), read] uint64 peak_working_set_load_mb;
	[WmiDataId(18), read] real64 kernel_load;
	[WmiDataId(19), read] real64 kernel_load_peak;
	[WmiDataId(20), read] uint32 cpu_count;
	[WmiDataId(21), read] uint64 committed_kb;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string application_name;
};
		
[dynamic: ToInstance, Description("Profile FPGA pushdown aggregation's per thread performance."): Amended,
    Guid("{919AA531-EFB1-4BBB-BF9E-99FD802A0E6F}"), locale("MS\\0x409"),
    DisplayName("fpga_pushdown_agg_profile"): Amended]
class XeSqlPkg_fpga_pushdown_agg_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fpga_pushdown_agg_profile: XeSqlPkg_fpga_pushdown_agg_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rows_agg_fpga;
	[WmiDataId(6), read] uint64 host_device_us;
	[WmiDataId(7), read] uint64 host_device_bytes;
	[WmiDataId(8), read] uint64 device_host_us;
	[WmiDataId(9), read] uint64 device_host_bytes;
	[WmiDataId(10), read] uint64 device_kernel_us;
	[WmiDataId(11), read] uint64 row_groups_processed;
	[WmiDataId(12), read] uint64 rows_to_QE;
};
		
[dynamic: ToInstance, Description("Profile FPGA pushdown aggregation's performance through FPGA profiling."): Amended,
    Guid("{996F4CAD-FD7A-4D89-BDC7-8CC65CF391B9}"), locale("MS\\0x409"),
    DisplayName("fpga_pushdown_detail_profile"): Amended]
class XeSqlPkg_fpga_pushdown_detail_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fpga_pushdown_detail_profile: XeSqlPkg_fpga_pushdown_detail_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 thread_proxy_id;
	[WmiDataId(6), read] uint64 cu_id;
	[WmiDataId(7), read] uint64 device_proxy_id;
	[WmiDataId(8), read] uint64 fpga_code;
	[WmiDataId(9), read] uint64 fpga_function_id;
	[WmiDataId(10), read] uint64 fpga_counter;
	[WmiDataId(11), read] uint64 cpu_proxy_enter;
	[WmiDataId(12), read] uint64 hw_request_recieved;
	[WmiDataId(13), read] uint64 hw_send_response;
	[WmiDataId(14), read] uint64 cpu_proxy_exit;
	[WmiDataId(15), read] uint64 fpga_kernel_start;
	[WmiDataId(16), read] uint64 fpga_kernel_end;
	[WmiDataId(17), read] uint32 fpga_agg_rows;
	[WmiDataId(18), read] uint32 cur_thread_id;
};
		
[dynamic: ToInstance, Description("Rbpex pause segment functionality test, exclusive phase wait."): Amended,
    Guid("{86E8DD3B-1217-48E2-9D41-A6D9813F8E5E}"), locale("MS\\0x409"),
    DisplayName("rbpex_pause_exclusive_phase"): Amended]
class XeSqlPkg_rbpex_pause_exclusive_phase: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_pause_exclusive_phase: XeSqlPkg_rbpex_pause_exclusive_phase
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 segment_id;
};
		
[dynamic: ToInstance, Description("Increments the number of write IOs paused."): Amended,
    Guid("{12eef452-dffd-41fa-87ef-765324ff7d01}"), locale("MS\\0x409"),
    DisplayName("increment_paused_write_ios_count"): Amended]
class XeSqlPkg_increment_paused_write_ios_count: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class increment_paused_write_ios_count: XeSqlPkg_increment_paused_write_ios_count
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 first_segment_id;
	[WmiDataId(8), read] uint64 second_segment_id;
};
		
[dynamic: ToInstance, Description("Whether FPGA pushed down agg is enabled, if not for what reason."): Amended,
    Guid("{FBF7A9EF-1CE1-4B8E-BF0B-D6581D5FB17D}"), locale("MS\\0x409"),
    DisplayName("allow_fpga_pushed_down"): Amended]
class XeSqlPkg_allow_fpga_pushed_down: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class allow_fpga_pushed_down: XeSqlPkg_allow_fpga_pushed_down
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  fpga_enabled;
	[WmiDataId(6), read, 
				XEMapId(215),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"E_SIMULATION", 
					"E_SYNTHESIS" }
			] uint8 execution_mode;
	[WmiDataId(7), read, 
				XEMapId(210),
				ValueMap { 
					"1", 
					"12", 
					"6", 
					"10", 
					"11", 
					"14", 
					"2", 
					"4", 
					"7", 
					"0", 
					"5", 
					"3", 
					"9", 
					"8", 
					"15", 
					"13" },
				Values { 
					"EAGG_KEYS_LIMITED", 
					"EALWAYS_FALSE_FILTER", 
					"ECOLUMN_LIMITED", 
					"ECOMPLEX_EXPR", 
					"ECOMPLEX_FILTER_EXPR", 
					"ECONFIG_FAILURE", 
					"EFAILED_FPGA_INIT", 
					"EFILTER_TYPE_NOT_SUPPORTED", 
					"EFPGA_NOT_READY", 
					"EGROUPBY_AGG_ONLY", 
					"ENO_APPROX_COUNT", 
					"ENO_DEVICE", 
					"EOOM_DEVICE", 
					"EOOM_HOST", 
					"EREASON_COUNT", 
					"ETOO_MANY_AGGS" }
			] uint8 reasoning;
};
		
[dynamic: ToInstance, Description("A rowgroup has been disabled for FPGA processing."): Amended,
    Guid("{8074364D-56F8-46B1-ACD3-3DC2972A34B0}"), locale("MS\\0x409"),
    DisplayName("disable_rowgroup_for_fpga"): Amended]
class XeSqlPkg_disable_rowgroup_for_fpga: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class disable_rowgroup_for_fpga: XeSqlPkg_disable_rowgroup_for_fpga
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 hobt_id;
	[WmiDataId(6), read] sint64 rowgroup_id;
	[WmiDataId(7), read] uint64 rowgroups_disabled;
	[WmiDataId(8), read, 
				XEMapId(211),
				ValueMap { 
					"7", 
					"0", 
					"11", 
					"5", 
					"9", 
					"6", 
					"8", 
					"10", 
					"1", 
					"2", 
					"4", 
					"3" },
				Values { 
					"EDELETE_BITMAP", 
					"EDEVICE_OVERLOAD", 
					"EDISABLE_REASON_COUNT", 
					"ENO_64BITS_RLE", 
					"ENO_BITS_PER_UNIT_HIGH", 
					"ENO_ENOUGH_BUFF", 
					"ENO_ENOUGH_DICT_CACHE", 
					"EOVERFLOW_ON_NONINT", 
					"ERANDOM_DISABLE_TEST", 
					"ETOO_MANY_KEY_BITS", 
					"EUNSUPPORT_DATATYPE", 
					"EUNSUPPORT_ENCODE" }
			] uint8 disable_reasoning;
};
		
[dynamic: ToInstance, Description("A query on HPC device failed."): Amended,
    Guid("{01B9AB8B-EB28-4636-8F0F-04725618C982}"), locale("MS\\0x409"),
    DisplayName("hpc_query_fail_device"): Amended]
class XeSqlPkg_hpc_query_fail_device: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hpc_query_fail_device: XeSqlPkg_hpc_query_fail_device
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 state_code;
	[WmiDataId(6), read] sint32 failure_code;
	[WmiDataId(7), read] uint64 device_id;
	[WmiDataId(8), read] uint64 failure_time;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle parameters passed into a query."): Amended,
    Guid("{DC208B4C-6CCC-44D6-AE2E-F2D895CC1B55}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_distributed_move_parameters_parsed"): Amended]
class XeSqlPkg_native_shuffle_distributed_move_parameters_parsed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_distributed_move_parameters_parsed: XeSqlPkg_native_shuffle_distributed_move_parameters_parsed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 step_index;
	[WmiDataId(6), read] uint32 source_distribution_id;
	[WmiDataId(7), read, 
				XEMapId(206),
				ValueMap { 
					"2", 
					"0", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Broadcast", 
					"Invalid", 
					"RoundRobin", 
					"Shuffle", 
					"Trim" }
			] uint8 movement_type;
	[WmiDataId(8), read] uint64 shuffle_parameters_hash_column_ordinal;
	[WmiDataId(9), read] uint32 buffer_size_in_KB;
	[WmiDataId(10), read] uint64 number_of_distribution_urls;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string query_id;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle parameters passed into a query."): Amended,
    Guid("{DC208B4C-6CCC-44D6-AE2E-F2D895CC1B55}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_distributed_move_parameters_parsed"): Amended]
class XeSqlPkg_native_shuffle_distributed_move_parameters_parsed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class native_shuffle_distributed_move_parameters_parsed: XeSqlPkg_native_shuffle_distributed_move_parameters_parsed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 step_index;
	[WmiDataId(6), read] uint32 source_distribution_id;
	[WmiDataId(7), read, 
				XEMapId(206),
				ValueMap { 
					"2", 
					"0", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Broadcast", 
					"Invalid", 
					"RoundRobin", 
					"Shuffle", 
					"Trim" }
			] uint8 movement_type;
	[WmiDataId(8), read] uint64 shuffle_parameters_hash_column_ordinal;
	[WmiDataId(9), read] uint32 buffer_size_in_bytes;
	[WmiDataId(10), read] uint64 number_of_distribution_urls;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string query_id;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle parameters passed into a query."): Amended,
    Guid("{DC208B4C-6CCC-44D6-AE2E-F2D895CC1B55}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_distributed_move_parameters_parsed"): Amended]
class XeSqlPkg_native_shuffle_distributed_move_parameters_parsed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class native_shuffle_distributed_move_parameters_parsed: XeSqlPkg_native_shuffle_distributed_move_parameters_parsed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 step_index;
	[WmiDataId(6), read] uint32 source_distribution_id;
	[WmiDataId(7), read, 
				XEMapId(206),
				ValueMap { 
					"2", 
					"0", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Broadcast", 
					"Invalid", 
					"RoundRobin", 
					"Shuffle", 
					"Trim" }
			] uint8 movement_type;
	[WmiDataId(8), read] uint32 buffer_size_in_bytes;
	[WmiDataId(9), read] uint64 number_of_distribution_urls;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string trim_parameters_local_distribution_ids;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string query_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string shuffle_parameters_hash_column_ordinals;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle distribution URLs passed into a query."): Amended,
    Guid("{c70c2a38-6c2c-429a-ace2-efeeed3a7466}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_distributed_move_distribution_url_parsed"): Amended]
class XeSqlPkg_native_shuffle_distributed_move_distribution_url_parsed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_distributed_move_distribution_url_parsed: XeSqlPkg_native_shuffle_distributed_move_distribution_url_parsed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 distribution_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string url;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle sbs write buffer operations."): Amended,
    Guid("{17cea74b-f7b8-4bf1-a1be-0ecdb0ee8dd3}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_sbs_write_buffer"): Amended]
class XeSqlPkg_native_shuffle_sbs_write_buffer: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_sbs_write_buffer: XeSqlPkg_native_shuffle_sbs_write_buffer
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  file_handle;
	[WmiDataId(6), read] sint32 source_distribution_id;
	[WmiDataId(7), read] sint32 target_distribution_id;
	[WmiDataId(8), read] uint64 sbs_sequence_number;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string sbs_file_url;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle sbs stats metadata. Emitted during compilation"): Amended,
    Guid("{96bf52ad-fa57-4c38-b4f4-948d9cf32e3b}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_stats_metadata"): Amended]
class XeSqlPkg_native_shuffle_stats_metadata: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_stats_metadata: XeSqlPkg_native_shuffle_stats_metadata
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 source_distribution_id;
	[WmiDataId(6), read] uint64 rows;
	[WmiDataId(7), read] uint64 bytes;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string sbs_file_url;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle sbs stats metadata. Emitted during compilation"): Amended,
    Guid("{96bf52ad-fa57-4c38-b4f4-948d9cf32e3b}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_stats_metadata"): Amended]
class XeSqlPkg_native_shuffle_stats_metadata: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class native_shuffle_stats_metadata: XeSqlPkg_native_shuffle_stats_metadata
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 source_distribution_id;
	[WmiDataId(6), read] uint64 rows;
	[WmiDataId(7), read] uint64 bytes;
	[WmiDataId(8), read] uint64 sequences;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string sbs_file_url;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle sbs read buffer operations."): Amended,
    Guid("{cf4671cb-58e0-4a52-af9a-e4db26a99b5c}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_sbs_read_buffer"): Amended]
class XeSqlPkg_native_shuffle_sbs_read_buffer: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_sbs_read_buffer: XeSqlPkg_native_shuffle_sbs_read_buffer
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  file_handle;
	[WmiDataId(6), read] sint32 source_distribution_id;
	[WmiDataId(7), read] sint32 target_distribution_id;
	[WmiDataId(8), read] uint64 sbs_sequence_number;
	[WmiDataId(9), read] uint32 error_code;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string sbs_file_url;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle sbs read buffer operations."): Amended,
    Guid("{cf4671cb-58e0-4a52-af9a-e4db26a99b5c}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_sbs_read_buffer"): Amended]
class XeSqlPkg_native_shuffle_sbs_read_buffer: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class native_shuffle_sbs_read_buffer: XeSqlPkg_native_shuffle_sbs_read_buffer
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_sbs_direct_read;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] sint32 source_distribution_id;
	[WmiDataId(8), read] sint32 target_distribution_id;
	[WmiDataId(9), read] uint64 sbs_sequence_number;
	[WmiDataId(10), read] uint32 error_code;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string sbs_file_url;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle sbs open file operations."): Amended,
    Guid("{65c5a22d-b27a-499b-832a-a89169c5e1d1}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_file_open"): Amended]
class XeSqlPkg_native_shuffle_file_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_file_open: XeSqlPkg_native_shuffle_file_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  file_handle;
	[WmiDataId(6), read] sint32 target_distribution_id;
	[WmiDataId(7), read] uint32 access_mode;
	[WmiDataId(8), read] uint64 step_index;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string sbs_file_url;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string query_id;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle sbs open file operations."): Amended,
    Guid("{65c5a22d-b27a-499b-832a-a89169c5e1d1}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_file_open"): Amended]
class XeSqlPkg_native_shuffle_file_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class native_shuffle_file_open: XeSqlPkg_native_shuffle_file_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_sbs_direct_read;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] sint32 target_distribution_id;
	[WmiDataId(8), read] uint32 access_mode;
	[WmiDataId(9), read] uint64 step_index;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string sbs_file_url;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string query_id;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle sbs open file operations."): Amended,
    Guid("{65c5a22d-b27a-499b-832a-a89169c5e1d1}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_file_open"): Amended]
class XeSqlPkg_native_shuffle_file_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class native_shuffle_file_open: XeSqlPkg_native_shuffle_file_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_sbs_direct_read;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] sint32 target_distribution_id;
	[WmiDataId(8), read] uint32 access_mode;
	[WmiDataId(9), read] sint32 source_distribution_id;
	[WmiDataId(10), read] uint64 step_index;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string sbs_file_url;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string query_id;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle sbs close file operations."): Amended,
    Guid("{3a367c59-a14d-469f-839d-046c4868e75a}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_file_close"): Amended]
class XeSqlPkg_native_shuffle_file_close: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_file_close: XeSqlPkg_native_shuffle_file_close
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  file_handle;
	[WmiDataId(6), read] sint32 target_distribution_id;
	[WmiDataId(7), read] uint64 step_index;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string sbs_file_url;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string query_id;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle sbs close file operations."): Amended,
    Guid("{3a367c59-a14d-469f-839d-046c4868e75a}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_file_close"): Amended]
class XeSqlPkg_native_shuffle_file_close: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class native_shuffle_file_close: XeSqlPkg_native_shuffle_file_close
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_sbs_direct_read;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] sint32 target_distribution_id;
	[WmiDataId(8), read] uint64 step_index;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string sbs_file_url;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string query_id;
};
		
[dynamic: ToInstance, Description("Used to validate the native shuffle sbs close file operations."): Amended,
    Guid("{3a367c59-a14d-469f-839d-046c4868e75a}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_file_close"): Amended]
class XeSqlPkg_native_shuffle_file_close: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class native_shuffle_file_close: XeSqlPkg_native_shuffle_file_close
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_sbs_direct_read;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] sint32 target_distribution_id;
	[WmiDataId(8), read] sint32 source_distribution_id;
	[WmiDataId(9), read] uint64 step_index;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string sbs_file_url;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string query_id;
};
		
[dynamic: ToInstance, Description("The calcuated sender side buffer settings for native shuffle."): Amended,
    Guid("{03433f53-3dd1-41e2-83c6-241e4c2d2653}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_sender_buffers_configuration"): Amended]
class XeSqlPkg_native_shuffle_sender_buffers_configuration: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_sender_buffers_configuration: XeSqlPkg_native_shuffle_sender_buffers_configuration
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_dynamic;
	[WmiDataId(6), read] uint32 min_async_write_buffers;
	[WmiDataId(7), read] uint32 max_async_write_buffers;
	[WmiDataId(8), read] uint32 max_threads_per_buffer_set;
	[WmiDataId(9), read] uint32 num_distributions;
	[WmiDataId(10), read] uint32 num_buffers_per_buffer_set;
	[WmiDataId(11), read] uint32 num_threads_per_buffer_set_estimated;
	[WmiDataId(12), read] uint32 num_threads_per_buffer_set_actual;
	[WmiDataId(13), read] uint32 num_threads;
	[WmiDataId(14), read] uint32 num_buffers_estimated;
	[WmiDataId(15), read] sint32 source_distribution_id;
	[WmiDataId(16), read] uint64 step_index;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string query_id;
};
		
[dynamic: ToInstance, Description("The number of allocated buffers during a native shuffle query."): Amended,
    Guid("{869f8bbc-7745-4e08-b4ad-591eaf8ad32a}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_sender_buffers_allocated"): Amended]
class XeSqlPkg_native_shuffle_sender_buffers_allocated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_sender_buffers_allocated: XeSqlPkg_native_shuffle_sender_buffers_allocated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 num_buffers_estimated;
	[WmiDataId(6), read] uint32 num_buffers_allocated;
	[WmiDataId(7), read] uint32 num_buffers_from_execution_pmo;
	[WmiDataId(8), read] uint32 num_buffers_from_query_grant;
	[WmiDataId(9), read] sint32 source_distribution_id;
	[WmiDataId(10), read] uint64 step_index;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string query_id;
};
		
[dynamic: ToInstance, Description("Reports data moved by native shuffle. Corresponds to hidden sys.dm_distributed_exchange_stats dmv."): Amended,
    Guid("{f22a8053-b04d-4a20-8d1f-6f81f722fb1b}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_data_moved"): Amended]
class XeSqlPkg_native_shuffle_data_moved: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_data_moved: XeSqlPkg_native_shuffle_data_moved
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 step_index;
	[WmiDataId(6), read] uint32 source_distribution_id;
	[WmiDataId(7), read, 
				XEMapId(207),
				ValueMap { 
					"0", 
					"1", 
					"6", 
					"7", 
					"8", 
					"2", 
					"3", 
					"4", 
					"9", 
					"10", 
					"5", 
					"11" },
				Values { 
					"DIRECT_CONVERTER", 
					"DIRECT_READER", 
					"EXPORT_READER", 
					"EXTERNAL_READER", 
					"EXTERNAL_WRITER", 
					"FILE_READER", 
					"HASH_CONVERTER", 
					"HASH_READER", 
					"PARALLEL_COPY_READER", 
					"REJECT_WRITER", 
					"ROUNDROBIN_CONVERTER", 
					"WRITER" }
			] uint8 reader_type;
	[WmiDataId(8), read, 
				XEMapId(207),
				ValueMap { 
					"0", 
					"1", 
					"6", 
					"7", 
					"8", 
					"2", 
					"3", 
					"4", 
					"9", 
					"10", 
					"5", 
					"11" },
				Values { 
					"DIRECT_CONVERTER", 
					"DIRECT_READER", 
					"EXPORT_READER", 
					"EXTERNAL_READER", 
					"EXTERNAL_WRITER", 
					"FILE_READER", 
					"HASH_CONVERTER", 
					"HASH_READER", 
					"PARALLEL_COPY_READER", 
					"REJECT_WRITER", 
					"ROUNDROBIN_CONVERTER", 
					"WRITER" }
			] uint8 writer_type;
	[WmiDataId(9), read, 
				XEMapId(208),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"BulkInsertProcessing", 
					"DistributingLoadFile", 
					"Execute", 
					"ProcessingRows", 
					"StepCancelled", 
					"StepComplete", 
					"StepError" }
			] uint8 status;
	[WmiDataId(10), read] sint64 bytes_per_sec;
	[WmiDataId(11), read] sint64 bytes_processed;
	[WmiDataId(12), read] sint64 rows_processed;
	[WmiDataId(13), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(14), read, Extension("WmiTime")] uint64 end_time;
	[WmiDataId(15), read] sint32 total_elapsed_time;
	[WmiDataId(16), read] sint32 query_time;
	[WmiDataId(17), read] sint32 sql_spid;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string query_id;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string destination_rows_moved;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string destination_bytes_moved;
};
		
[dynamic: ToInstance, Description("Reports data moved by native shuffle. Corresponds to hidden sys.dm_distributed_exchange_stats dmv."): Amended,
    Guid("{f22a8053-b04d-4a20-8d1f-6f81f722fb1b}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_data_moved"): Amended]
class XeSqlPkg_native_shuffle_data_moved: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class native_shuffle_data_moved: XeSqlPkg_native_shuffle_data_moved
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 step_index;
	[WmiDataId(6), read] uint32 source_distribution_id;
	[WmiDataId(7), read, 
				XEMapId(207),
				ValueMap { 
					"0", 
					"1", 
					"6", 
					"7", 
					"8", 
					"2", 
					"3", 
					"4", 
					"9", 
					"10", 
					"5", 
					"11" },
				Values { 
					"DIRECT_CONVERTER", 
					"DIRECT_READER", 
					"EXPORT_READER", 
					"EXTERNAL_READER", 
					"EXTERNAL_WRITER", 
					"FILE_READER", 
					"HASH_CONVERTER", 
					"HASH_READER", 
					"PARALLEL_COPY_READER", 
					"REJECT_WRITER", 
					"ROUNDROBIN_CONVERTER", 
					"WRITER" }
			] uint8 reader_type;
	[WmiDataId(8), read, 
				XEMapId(207),
				ValueMap { 
					"0", 
					"1", 
					"6", 
					"7", 
					"8", 
					"2", 
					"3", 
					"4", 
					"9", 
					"10", 
					"5", 
					"11" },
				Values { 
					"DIRECT_CONVERTER", 
					"DIRECT_READER", 
					"EXPORT_READER", 
					"EXTERNAL_READER", 
					"EXTERNAL_WRITER", 
					"FILE_READER", 
					"HASH_CONVERTER", 
					"HASH_READER", 
					"PARALLEL_COPY_READER", 
					"REJECT_WRITER", 
					"ROUNDROBIN_CONVERTER", 
					"WRITER" }
			] uint8 writer_type;
	[WmiDataId(9), read, 
				XEMapId(208),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"BulkInsertProcessing", 
					"DistributingLoadFile", 
					"Execute", 
					"ProcessingRows", 
					"StepCancelled", 
					"StepComplete", 
					"StepError" }
			] uint8 status;
	[WmiDataId(10), read] sint64 bytes_per_sec;
	[WmiDataId(11), read] sint64 bytes_processed;
	[WmiDataId(12), read] sint64 rows_processed;
	[WmiDataId(13), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(14), read, Extension("WmiTime")] uint64 end_time;
	[WmiDataId(15), read] sint32 total_elapsed_time;
	[WmiDataId(16), read] sint32 query_time;
	[WmiDataId(17), read] sint32 sql_spid;
	[WmiDataId(18), read] uint64 num_inlined_lobs;
	[WmiDataId(19), read] uint64 num_onebuffer_lobs;
	[WmiDataId(20), read] uint64 num_multibuffer_lobs;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string query_id;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string destination_rows_moved;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string destination_bytes_moved;
};
		
[dynamic: ToInstance, Description("Reports data moved by native shuffle. Corresponds to hidden sys.dm_distributed_exchange_stats dmv."): Amended,
    Guid("{f22a8053-b04d-4a20-8d1f-6f81f722fb1b}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_data_moved"): Amended]
class XeSqlPkg_native_shuffle_data_moved: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class native_shuffle_data_moved: XeSqlPkg_native_shuffle_data_moved
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 step_index;
	[WmiDataId(6), read] uint32 source_distribution_id;
	[WmiDataId(7), read, 
				XEMapId(207),
				ValueMap { 
					"0", 
					"1", 
					"6", 
					"7", 
					"8", 
					"2", 
					"3", 
					"4", 
					"9", 
					"10", 
					"5", 
					"11" },
				Values { 
					"DIRECT_CONVERTER", 
					"DIRECT_READER", 
					"EXPORT_READER", 
					"EXTERNAL_READER", 
					"EXTERNAL_WRITER", 
					"FILE_READER", 
					"HASH_CONVERTER", 
					"HASH_READER", 
					"PARALLEL_COPY_READER", 
					"REJECT_WRITER", 
					"ROUNDROBIN_CONVERTER", 
					"WRITER" }
			] uint8 reader_type;
	[WmiDataId(8), read, 
				XEMapId(207),
				ValueMap { 
					"0", 
					"1", 
					"6", 
					"7", 
					"8", 
					"2", 
					"3", 
					"4", 
					"9", 
					"10", 
					"5", 
					"11" },
				Values { 
					"DIRECT_CONVERTER", 
					"DIRECT_READER", 
					"EXPORT_READER", 
					"EXTERNAL_READER", 
					"EXTERNAL_WRITER", 
					"FILE_READER", 
					"HASH_CONVERTER", 
					"HASH_READER", 
					"PARALLEL_COPY_READER", 
					"REJECT_WRITER", 
					"ROUNDROBIN_CONVERTER", 
					"WRITER" }
			] uint8 writer_type;
	[WmiDataId(9), read, 
				XEMapId(208),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"BulkInsertProcessing", 
					"DistributingLoadFile", 
					"Execute", 
					"ProcessingRows", 
					"StepCancelled", 
					"StepComplete", 
					"StepError" }
			] uint8 status;
	[WmiDataId(10), read] sint64 bytes_per_sec;
	[WmiDataId(11), read] sint64 bytes_processed;
	[WmiDataId(12), read] sint64 rows_processed;
	[WmiDataId(13), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(14), read, Extension("WmiTime")] uint64 end_time;
	[WmiDataId(15), read] sint32 total_elapsed_time;
	[WmiDataId(16), read] sint32 query_time;
	[WmiDataId(17), read] sint32 query_last_row_time;
	[WmiDataId(18), read] sint32 sql_spid;
	[WmiDataId(19), read] uint64 num_inlined_lobs;
	[WmiDataId(20), read] uint64 num_onebuffer_lobs;
	[WmiDataId(21), read] uint64 num_multibuffer_lobs;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string query_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string destination_rows_moved;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string destination_bytes_moved;
};
		
[dynamic: ToInstance, Description("Reports data moved by native shuffle. Corresponds to hidden sys.dm_distributed_exchange_stats dmv."): Amended,
    Guid("{f22a8053-b04d-4a20-8d1f-6f81f722fb1b}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_data_moved"): Amended]
class XeSqlPkg_native_shuffle_data_moved: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(4)]
class native_shuffle_data_moved: XeSqlPkg_native_shuffle_data_moved
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 step_index;
	[WmiDataId(6), read] uint32 source_distribution_id;
	[WmiDataId(7), read, 
				XEMapId(207),
				ValueMap { 
					"0", 
					"1", 
					"6", 
					"7", 
					"8", 
					"2", 
					"3", 
					"4", 
					"9", 
					"10", 
					"5", 
					"11" },
				Values { 
					"DIRECT_CONVERTER", 
					"DIRECT_READER", 
					"EXPORT_READER", 
					"EXTERNAL_READER", 
					"EXTERNAL_WRITER", 
					"FILE_READER", 
					"HASH_CONVERTER", 
					"HASH_READER", 
					"PARALLEL_COPY_READER", 
					"REJECT_WRITER", 
					"ROUNDROBIN_CONVERTER", 
					"WRITER" }
			] uint8 reader_type;
	[WmiDataId(8), read, 
				XEMapId(207),
				ValueMap { 
					"0", 
					"1", 
					"6", 
					"7", 
					"8", 
					"2", 
					"3", 
					"4", 
					"9", 
					"10", 
					"5", 
					"11" },
				Values { 
					"DIRECT_CONVERTER", 
					"DIRECT_READER", 
					"EXPORT_READER", 
					"EXTERNAL_READER", 
					"EXTERNAL_WRITER", 
					"FILE_READER", 
					"HASH_CONVERTER", 
					"HASH_READER", 
					"PARALLEL_COPY_READER", 
					"REJECT_WRITER", 
					"ROUNDROBIN_CONVERTER", 
					"WRITER" }
			] uint8 writer_type;
	[WmiDataId(9), read, 
				XEMapId(208),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"BulkInsertProcessing", 
					"DistributingLoadFile", 
					"Execute", 
					"ProcessingRows", 
					"StepCancelled", 
					"StepComplete", 
					"StepError" }
			] uint8 status;
	[WmiDataId(10), read] sint64 bytes_per_sec;
	[WmiDataId(11), read] sint64 bytes_processed;
	[WmiDataId(12), read] sint64 rows_processed;
	[WmiDataId(13), read] sint64 buffers_processed;
	[WmiDataId(14), read] sint64 unused_bytes;
	[WmiDataId(15), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(16), read, Extension("WmiTime")] uint64 end_time;
	[WmiDataId(17), read] sint32 total_elapsed_time;
	[WmiDataId(18), read] sint32 query_time;
	[WmiDataId(19), read] sint32 query_last_row_time;
	[WmiDataId(20), read] sint32 sql_spid;
	[WmiDataId(21), read] uint64 num_inlined_lobs;
	[WmiDataId(22), read] uint64 num_onebuffer_lobs;
	[WmiDataId(23), read] uint64 num_multibuffer_lobs;
	[WmiDataId(24), read] uint64 num_multibuffer_lob_buffers;
	[WmiDataId(25), read] uint64 num_largerows;
	[WmiDataId(26), read] uint64 num_largerow_buffers;
	[WmiDataId(27), read] uint64 total_buffer_write_duration;
	[WmiDataId(28), read] uint64 total_buffer_dequeue_wait_duration;
	[WmiDataId(29), read] uint64 max_buffer_dequeue_wait_duration;
	[WmiDataId(30), read] uint64 num_buffer_dequeue_waits;
	[WmiDataId(31), read] uint64 total_waiting_for_batch_duration;
	[WmiDataId(32), read] uint64 max_waiting_for_batch_duration;
	[WmiDataId(33), read] uint64 num_get_next_batch_calls;
	[WmiDataId(34), read] uint64 bytes_saved_sending_only_used_bytes_for_last_buffer;
	[WmiDataId(35), read, StringTermination("NullTerminated"), Format("w")] string query_id;
	[WmiDataId(36), read, StringTermination("NullTerminated"), Format("w")] string destination_rows_moved;
	[WmiDataId(37), read, StringTermination("NullTerminated"), Format("w")] string destination_bytes_moved;
	[WmiDataId(38), read, StringTermination("NullTerminated"), Format("w")] string destination_buffers_moved;
	[WmiDataId(39), read, StringTermination("NullTerminated"), Format("w")] string destination_unused_bytes_moved;
	[WmiDataId(40), read, StringTermination("NullTerminated"), Format("w")] string destination_buffer_write_duration;
};
		
[dynamic: ToInstance, Description("Reports first row recorded by native shuffle. This is a indicator for query execution time excluding shuffle."): Amended,
    Guid("{e1508435-4c74-481f-98f9-141c365cbb65}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_first_row_recorded"): Amended]
class XeSqlPkg_native_shuffle_first_row_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_first_row_recorded: XeSqlPkg_native_shuffle_first_row_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 step_index;
	[WmiDataId(6), read] uint32 source_distribution_id;
	[WmiDataId(7), read] sint32 query_time;
	[WmiDataId(8), read] sint32 sql_spid;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string query_id;
};
		
[dynamic: ToInstance, Description("Reports a NULL value in a native shuffle QTable column declared with NOT NULL in the schema."): Amended,
    Guid("{49b440df-efe9-47d2-8331-3f2f26a889c2}"), locale("MS\\0x409"),
    DisplayName("native_shuffle_nullability_mismatch"): Amended]
class XeSqlPkg_native_shuffle_nullability_mismatch: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class native_shuffle_nullability_mismatch: XeSqlPkg_native_shuffle_nullability_mismatch
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 column_id;
	[WmiDataId(6), read] sint32 column_xvt_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string column_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string scan_execution_mode;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that cross-db master transaction is being prepared."): Amended,
    Guid("{4a5d5925-83e0-42aa-91b1-bd76bd1ad4e6}"), locale("MS\\0x409"),
    DisplayName("prepare_master_xact"): Amended]
class XeSqlPkg_prepare_master_xact: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class prepare_master_xact: XeSqlPkg_prepare_master_xact
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that cross-db master transaction is being prepared."): Amended,
    Guid("{4a5d5925-83e0-42aa-91b1-bd76bd1ad4e6}"), locale("MS\\0x409"),
    DisplayName("prepare_master_xact"): Amended]
class XeSqlPkg_prepare_master_xact: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class prepare_master_xact: XeSqlPkg_prepare_master_xact
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
	[WmiDataId(7), read] uint16 coordinator_database_id;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that cross-db participant transaction is being prepared."): Amended,
    Guid("{b2649d66-095e-46c8-a04a-33e395d4fc6b}"), locale("MS\\0x409"),
    DisplayName("prepare_participant_xact"): Amended]
class XeSqlPkg_prepare_participant_xact: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class prepare_participant_xact: XeSqlPkg_prepare_participant_xact
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
	[WmiDataId(7), read] uint32 master_xdes_id_low;
	[WmiDataId(8), read] uint16 master_xdes_id_high;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that cross-db participant transaction is being prepared."): Amended,
    Guid("{b2649d66-095e-46c8-a04a-33e395d4fc6b}"), locale("MS\\0x409"),
    DisplayName("prepare_participant_xact"): Amended]
class XeSqlPkg_prepare_participant_xact: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class prepare_participant_xact: XeSqlPkg_prepare_participant_xact
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
	[WmiDataId(7), read] uint32 master_xdes_id_low;
	[WmiDataId(8), read] uint16 master_xdes_id_high;
	[WmiDataId(9), read] uint16 participant_database_id;
	[WmiDataId(10), read] uint16 coordinator_database_id;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that cross-db master transaction is being commited."): Amended,
    Guid("{f3c82e66-6e0c-43df-b26e-6060c633b934}"), locale("MS\\0x409"),
    DisplayName("commit_master_xact"): Amended]
class XeSqlPkg_commit_master_xact: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class commit_master_xact: XeSqlPkg_commit_master_xact
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that cross-db master transaction is being commited."): Amended,
    Guid("{f3c82e66-6e0c-43df-b26e-6060c633b934}"), locale("MS\\0x409"),
    DisplayName("commit_master_xact"): Amended]
class XeSqlPkg_commit_master_xact: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class commit_master_xact: XeSqlPkg_commit_master_xact
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
	[WmiDataId(7), read] uint16 coordinator_database_id;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that cross-db participant transaction is being commited"): Amended,
    Guid("{eee2de34-cd26-4240-961d-6dc8f0421b34}"), locale("MS\\0x409"),
    DisplayName("commit_participant_xact"): Amended]
class XeSqlPkg_commit_participant_xact: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class commit_participant_xact: XeSqlPkg_commit_participant_xact
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
	[WmiDataId(7), read] uint32 master_xdes_id_low;
	[WmiDataId(8), read] uint16 master_xdes_id_high;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that cross-db participant transaction is being commited"): Amended,
    Guid("{eee2de34-cd26-4240-961d-6dc8f0421b34}"), locale("MS\\0x409"),
    DisplayName("commit_participant_xact"): Amended]
class XeSqlPkg_commit_participant_xact: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class commit_participant_xact: XeSqlPkg_commit_participant_xact
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
	[WmiDataId(7), read] uint32 master_xdes_id_low;
	[WmiDataId(8), read] uint16 master_xdes_id_high;
	[WmiDataId(9), read] uint16 participant_database_id;
	[WmiDataId(10), read] uint16 coordinator_database_id;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that transaction outcome is being added."): Amended,
    Guid("{cdd04594-5cd7-4183-bd71-d481a1a8007f}"), locale("MS\\0x409"),
    DisplayName("add_xact_outcome"): Amended]
class XeSqlPkg_add_xact_outcome: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class add_xact_outcome: XeSqlPkg_add_xact_outcome
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that transaction outcome is being added."): Amended,
    Guid("{cdd04594-5cd7-4183-bd71-d481a1a8007f}"), locale("MS\\0x409"),
    DisplayName("add_xact_outcome"): Amended]
class XeSqlPkg_add_xact_outcome: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class add_xact_outcome: XeSqlPkg_add_xact_outcome
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
	[WmiDataId(7), read] uint16 coordinator_database_id;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that transaction outcome is being deleted."): Amended,
    Guid("{1729c1d6-1853-4002-9371-d9a724280612}"), locale("MS\\0x409"),
    DisplayName("delete_xact_outcome"): Amended]
class XeSqlPkg_delete_xact_outcome: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class delete_xact_outcome: XeSqlPkg_delete_xact_outcome
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that transaction outcome is being deleted."): Amended,
    Guid("{1729c1d6-1853-4002-9371-d9a724280612}"), locale("MS\\0x409"),
    DisplayName("delete_xact_outcome"): Amended]
class XeSqlPkg_delete_xact_outcome: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class delete_xact_outcome: XeSqlPkg_delete_xact_outcome
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
	[WmiDataId(7), read] uint16 coordinator_database_id;
};
		
[dynamic: ToInstance, Description("Periodically fired XEvent to indicate current count of xact outcomes in the outcome list."): Amended,
    Guid("{10291ce1-8e9b-4635-b64f-b88648f3b4ca}"), locale("MS\\0x409"),
    DisplayName("xact_outcome_status"): Amended]
class XeSqlPkg_xact_outcome_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xact_outcome_status: XeSqlPkg_xact_outcome_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 coordinator_database_id;
	[WmiDataId(6), read] uint32 xact_outcome_count;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that prepared transaction is being commited."): Amended,
    Guid("{912628ea-bba2-4ab6-aa4a-58b415d713d1}"), locale("MS\\0x409"),
    DisplayName("resolve_xact_commit"): Amended]
class XeSqlPkg_resolve_xact_commit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resolve_xact_commit: XeSqlPkg_resolve_xact_commit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
	[WmiDataId(7), read] uint32 master_xdes_id_low;
	[WmiDataId(8), read] uint16 master_xdes_id_high;
	[WmiDataId(9), read] sint8  is_coord_primary;
	[WmiDataId(10), read] uint16 participant_database_id;
	[WmiDataId(11), read] uint16 coordinator_database_id;
	[WmiDataId(12), read, 
				XEMapId(74),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Recovery", 
					"BackgroundThread" }
			] uint8 resolve_method;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string participant_database_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string coordinator_database_name;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that prepared transaction is being rolled back."): Amended,
    Guid("{0b508292-d798-43ee-8d02-470697b7a5d5}"), locale("MS\\0x409"),
    DisplayName("resolve_xact_rollback"): Amended]
class XeSqlPkg_resolve_xact_rollback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resolve_xact_rollback: XeSqlPkg_resolve_xact_rollback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
	[WmiDataId(7), read] uint32 master_xdes_id_low;
	[WmiDataId(8), read] uint16 master_xdes_id_high;
	[WmiDataId(9), read] sint8  is_coord_primary;
	[WmiDataId(10), read] uint16 participant_database_id;
	[WmiDataId(11), read] uint16 coordinator_database_id;
	[WmiDataId(12), read, 
				XEMapId(74),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Recovery", 
					"BackgroundThread" }
			] uint8 resolve_method;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string participant_database_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string coordinator_database_name;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that prepared transaction is being defered."): Amended,
    Guid("{8cb5d96a-3001-4aeb-b3c9-903e2cdf7216}"), locale("MS\\0x409"),
    DisplayName("resolve_xact_defer"): Amended]
class XeSqlPkg_resolve_xact_defer: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class resolve_xact_defer: XeSqlPkg_resolve_xact_defer
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdes_id_low;
	[WmiDataId(6), read] uint16 xdes_id_high;
	[WmiDataId(7), read] uint32 master_xdes_id_low;
	[WmiDataId(8), read] uint16 master_xdes_id_high;
	[WmiDataId(9), read] sint8  is_coord_primary;
	[WmiDataId(10), read] uint16 participant_database_id;
	[WmiDataId(11), read] uint16 coordinator_database_id;
	[WmiDataId(12), read, 
				XEMapId(74),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Recovery", 
					"BackgroundThread" }
			] uint8 resolve_method;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string participant_database_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string coordinator_database_name;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that database is added to unresolved list."): Amended,
    Guid("{0fde133d-2526-4186-b3e1-690fdd8efc18}"), locale("MS\\0x409"),
    DisplayName("unresolved_databases_add"): Amended]
class XeSqlPkg_unresolved_databases_add: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class unresolved_databases_add: XeSqlPkg_unresolved_databases_add
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that database is removed to unresolved list."): Amended,
    Guid("{d3437c98-558d-4f32-8dd8-f28896442750}"), locale("MS\\0x409"),
    DisplayName("unresolved_databases_remove"): Amended]
class XeSqlPkg_unresolved_databases_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class unresolved_databases_remove: XeSqlPkg_unresolved_databases_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that resolve task is starting."): Amended,
    Guid("{901b4307-ff72-4a14-baea-27f16ee7f418}"), locale("MS\\0x409"),
    DisplayName("unresolved_databases_task_starting"): Amended]
class XeSqlPkg_unresolved_databases_task_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class unresolved_databases_task_starting: XeSqlPkg_unresolved_databases_task_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that outcome list cleanup (via specproc) is starting."): Amended,
    Guid("{a1b0b858-3a6a-4924-a866-0b87a981df87}"), locale("MS\\0x409"),
    DisplayName("xact_outcome_list_cleanup_starting"): Amended]
class XeSqlPkg_xact_outcome_list_cleanup_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xact_outcome_list_cleanup_starting: XeSqlPkg_xact_outcome_list_cleanup_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_count;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that outcome list cleanup (via specproc) has completed."): Amended,
    Guid("{993b7300-47c3-4c32-b890-a64f9b0a5763}"), locale("MS\\0x409"),
    DisplayName("xact_outcome_list_cleanup_completed"): Amended]
class XeSqlPkg_xact_outcome_list_cleanup_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xact_outcome_list_cleanup_completed: XeSqlPkg_xact_outcome_list_cleanup_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_count;
};
		
[dynamic: ToInstance, Description("XEvent used to indicate that outcome list cleanup was performed on a database."): Amended,
    Guid("{ee9c6d01-a0cb-4a16-8e92-4ec8aaa011f0}"), locale("MS\\0x409"),
    DisplayName("xact_outcome_list_cleanup_performed"): Amended]
class XeSqlPkg_xact_outcome_list_cleanup_performed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xact_outcome_list_cleanup_performed: XeSqlPkg_xact_outcome_list_cleanup_performed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("This xevent is fired while tranversing on-disk data structures. Used only for testing purposes."): Amended,
    Guid("{9812D67C-94E7-45F4-8FEA-B3D69A4B31C6}"), locale("MS\\0x409"),
    DisplayName("hobt_traversal_xevent"): Amended]
class XeSqlPkg_hobt_traversal_xevent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_traversal_xevent: XeSqlPkg_hobt_traversal_xevent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read, 
				XEMapId(71),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14" },
				Values { 
					"BTREE_HANDLE_ROOT", 
					"BTREE_SEEK_INDEX_PAGE", 
					"BTREE_ADVANCE_SCAN_POINT", 
					"BTREE_ADVANCE_SCAN_POINT_BACKWARD", 
					"BTREE_LEAF_SCAN_FORWARD", 
					"BTREE_LEAF_SCAN_BACKWARD", 
					"BTREE_ADVANCE_RANGE_BOUNDARY", 
					"INDEX_PAGE_MANAGER_PAGE_WITH_KEY", 
					"INDEX_PAGE_MANAGER_NEXT_PAGE", 
					"INDEX_PAGE_MANAGER_NEXT_PAGE_BACKWARD", 
					"DEPENDENT_PAGE_DETECTED_RETRYING", 
					"BTREE_ROW_SETUPVERSION", 
					"HEAP_ROW_SETUPVERSION", 
					"BLOB_ROW_SETUPVERSION", 
					"BTREE_ROW_GETVERSION" }
			] uint8 traversal_location;
};
		
[dynamic: ToInstance, Description("Occurs when a task tries to access the flow-controlled section during insert into a B-tree."): Amended,
    Guid("{b58b1706-5659-4162-8679-531f18828ae0}"), locale("MS\\0x409"),
    DisplayName("hobt_insert_flow_control_access"): Amended]
class XeSqlPkg_hobt_insert_flow_control_access: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_insert_flow_control_access: XeSqlPkg_hobt_insert_flow_control_access
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint32 partition_id;
	[WmiDataId(8), read] uint64 workers_on_partition;
	[WmiDataId(9), read] uint64 workers_in_total;
};
		
[dynamic: ToInstance, Description("Occurs when a task gets access to the flow-controlled section during insert into a B-tree."): Amended,
    Guid("{c731e422-6998-495f-aab9-e48157dd33ef}"), locale("MS\\0x409"),
    DisplayName("hobt_insert_flow_control_grant"): Amended]
class XeSqlPkg_hobt_insert_flow_control_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_insert_flow_control_grant: XeSqlPkg_hobt_insert_flow_control_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint32 partition_id;
	[WmiDataId(8), read] sint8  is_timedout;
	[WmiDataId(9), read] sint8  is_aborted;
	[WmiDataId(10), read] uint32 status;
};
		
[dynamic: ToInstance, Description("Occurs when a task releases access to the flow-controlled section during insert into a B-tree."): Amended,
    Guid("{4bb5a8d1-18de-420d-aa25-1190bafd278f}"), locale("MS\\0x409"),
    DisplayName("hobt_insert_flow_control_release"): Amended]
class XeSqlPkg_hobt_insert_flow_control_release: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_insert_flow_control_release: XeSqlPkg_hobt_insert_flow_control_release
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint32 partition_id;
	[WmiDataId(8), read] uint64 workers_on_partition;
	[WmiDataId(9), read] uint64 workers_in_total;
};
		
[dynamic: ToInstance, Description("This xevent is fired when an inconsistent page is encountered in RbIo secondary. Used only for testing purposes."): Amended,
    Guid("{9DDD30F1-50FB-4D2A-A620-637DA6442A45}"), locale("MS\\0x409"),
    DisplayName("rbio_consistency_checks"): Amended]
class XeSqlPkg_rbio_consistency_checks: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbio_consistency_checks: XeSqlPkg_rbio_consistency_checks
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read, 
				XEMapId(72),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"RootLogNotCaughtUp", 
					"NonRootLogNotCaughtUp", 
					"NonRootDependentUnchangedAfterWaitForRedo", 
					"DependentChangedRetrying", 
					"RootChangedRetrying" }
			] uint8 consistency_check_activity;
};
		
[dynamic: ToInstance, Description("Used to report size of workpage buffer pool."): Amended,
    Guid("{96332ce5-3816-45f6-aa08-817808462c8b}"), locale("MS\\0x409"),
    DisplayName("spilling_pool_size"): Amended]
class XeSqlPkg_spilling_pool_size: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class spilling_pool_size: XeSqlPkg_spilling_pool_size
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 total_workfiles;
	[WmiDataId(6), read] uint64 reused_workfiles;
	[WmiDataId(7), read] uint64 total_pages;
	[WmiDataId(8), read] uint64 thread_count;
};
		
[dynamic: ToInstance, Description("This xevent is fired when compute cannot access XLOG in XLogCommunicationEntryPoint."): Amended,
    Guid("{0a2f2607-1958-4baf-b61b-f0be861c29a2}"), locale("MS\\0x409"),
    DisplayName("xlog_comm_timeout"): Amended]
class XeSqlPkg_xlog_comm_timeout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xlog_comm_timeout: XeSqlPkg_xlog_comm_timeout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 duration_ms;
	[WmiDataId(7), read] uint16 rbio_attempt_num;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string flush_lsn;
};
		
[dynamic: ToInstance, Description("This xevent is fired when the Socrates compute is about to take the database offline."): Amended,
    Guid("{d7cc1857-7cef-47a7-9ae1-fd5c855dd0b0}"), locale("MS\\0x409"),
    DisplayName("compute_taking_db_offline"): Amended]
class XeSqlPkg_compute_taking_db_offline: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class compute_taking_db_offline: XeSqlPkg_compute_taking_db_offline
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint32 hresult;
};
		
[dynamic: ToInstance, Description("Foreign file validator has validated one IO unit."): Amended,
    Guid("{c4a9c7c9-405c-4e3a-9a97-5ab9e4e36d33}"), locale("MS\\0x409"),
    DisplayName("ffv_validated_one_buffer"): Amended]
class XeSqlPkg_ffv_validated_one_buffer: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_validated_one_buffer: XeSqlPkg_ffv_validated_one_buffer
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 start_offset;
	[WmiDataId(6), read] uint32 buffer_size_pages;
	[WmiDataId(7), read] uint32 pages_validated;
	[WmiDataId(8), read] uint32 bad_pages;
	[WmiDataId(9), read] uint32 free_pages_skipped;
	[WmiDataId(10), read] uint32 free_pages_in_first;
	[WmiDataId(11), read] uint32 free_pages_in_second;
	[WmiDataId(12), read] uint32 zeroed_pages_skipped;
	[WmiDataId(13), read] uint32 uncertain_pages_skipped;
	[WmiDataId(14), read] uint32 first_valid_page;
	[WmiDataId(15), read] uint32 last_valid_page;
	[WmiDataId(16), read] uint16 file_id;
	[WmiDataId(17), read, Pointer] object  snapshot_pair;
	[WmiDataId(18), read, Pointer] object  buf_pair;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string first_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string first_begin_lsn;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string second_name;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string second_begin_lsn;
	[WmiDataId(23), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(24), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator obtained a snapshot pair."): Amended,
    Guid("{fe01fe63-b836-479b-818d-d85b6e37f544}"), locale("MS\\0x409"),
    DisplayName("ffv_snapshot_pair_obtained"): Amended]
class XeSqlPkg_ffv_snapshot_pair_obtained: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_snapshot_pair_obtained: XeSqlPkg_ffv_snapshot_pair_obtained
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string first_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string first_begin_lsn;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string second_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string second_begin_lsn;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator thread starting."): Amended,
    Guid("{2bc917f2-3884-4014-a79e-3ceff15557df}"), locale("MS\\0x409"),
    DisplayName("ffv_starting"): Amended]
class XeSqlPkg_ffv_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_starting: XeSqlPkg_ffv_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 persisted_bitmap_length_bytes;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator thread encountered an exception."): Amended,
    Guid("{21d93246-f324-4f9c-8333-6b298b23380a}"), locale("MS\\0x409"),
    DisplayName("ffv_exception"): Amended]
class XeSqlPkg_ffv_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_exception: XeSqlPkg_ffv_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 sql_error;
	[WmiDataId(7), read] uint32 state;
	[WmiDataId(8), read] uint32 line;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string function;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator error."): Amended,
    Guid("{7245a538-18ce-4b9d-bc96-049f2496e31e}"), locale("MS\\0x409"),
    DisplayName("ffv_error"): Amended]
class XeSqlPkg_ffv_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_error: XeSqlPkg_ffv_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 error_code;
	[WmiDataId(7), read] uint32 line;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string function;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator is starting from a blank write bitmap since one was not found in SF."): Amended,
    Guid("{efc196cc-d30e-443b-8d2f-c6c2aaeb30c0}"), locale("MS\\0x409"),
    DisplayName("ffv_no_write_bitmap_in_sf"): Amended]
class XeSqlPkg_ffv_no_write_bitmap_in_sf: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_no_write_bitmap_in_sf: XeSqlPkg_ffv_no_write_bitmap_in_sf
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(7), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator thread exiting."): Amended,
    Guid("{e9feaa00-162e-49c3-8ef1-3659365c5872}"), locale("MS\\0x409"),
    DisplayName("ffv_exiting"): Amended]
class XeSqlPkg_ffv_exiting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_exiting: XeSqlPkg_ffv_exiting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 sos_result;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(8), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator switched to a new snapshot pair."): Amended,
    Guid("{f9a52907-4e65-464a-a2b5-faf1e62c820f}"), locale("MS\\0x409"),
    DisplayName("ffv_switch_to_new_snapshot_pair"): Amended]
class XeSqlPkg_ffv_switch_to_new_snapshot_pair: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_switch_to_new_snapshot_pair: XeSqlPkg_ffv_switch_to_new_snapshot_pair
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 state;
	[WmiDataId(7), read, 
				XEMapId(204),
				ValueMap { 
					"7", 
					"0", 
					"8", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"Finished", 
					"Initial", 
					"NumStates", 
					"ObtainBitmap", 
					"ObtainPriSnap", 
					"ObtainSecSnap", 
					"Ready", 
					"StartValidating", 
					"Validating" }
			] uint32 state_desc;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string first_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string first_begin_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string second_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string second_begin_lsn;
	[WmiDataId(12), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(13), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator was notified of a new snapshot taken on primary replica."): Amended,
    Guid("{536ef271-2e14-4fe3-9010-1f6625f0a645}"), locale("MS\\0x409"),
    DisplayName("ffv_new_primary_snapshot"): Amended]
class XeSqlPkg_ffv_new_primary_snapshot: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_new_primary_snapshot: XeSqlPkg_ffv_new_primary_snapshot
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string snapshot_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string begin_lsn;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator inserted a new snapshot into a list for future validation."): Amended,
    Guid("{677ef4c3-a770-4bea-964c-e08fd270ecba}"), locale("MS\\0x409"),
    DisplayName("ffv_snapshot_inserted"): Amended]
class XeSqlPkg_ffv_snapshot_inserted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_snapshot_inserted: XeSqlPkg_ffv_snapshot_inserted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] sint8  from_enumeration;
	[WmiDataId(7), read, Pointer] object  list_address;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string snapshot_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string begin_lsn;
	[WmiDataId(10), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(11), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator obtained a copy of the validation bitmap as part of establishing a new snapshot pair."): Amended,
    Guid("{c8d255d1-b872-47c5-9742-a22d88ec6980}"), locale("MS\\0x409"),
    DisplayName("ffv_obtained_validation_bitmap"): Amended]
class XeSqlPkg_ffv_obtained_validation_bitmap: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_obtained_validation_bitmap: XeSqlPkg_ffv_obtained_validation_bitmap
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 set_bits;
	[WmiDataId(7), read, Pointer] object  snapshot_pair;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator began validating a new snapshot pair."): Amended,
    Guid("{2006e00d-abf4-4725-9f48-67828e2378ac}"), locale("MS\\0x409"),
    DisplayName("ffv_validation_start"): Amended]
class XeSqlPkg_ffv_validation_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_validation_start: XeSqlPkg_ffv_validation_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 set_bits;
	[WmiDataId(7), read] uint32 starting_bit;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string first_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string first_begin_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string second_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string second_begin_lsn;
	[WmiDataId(12), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(13), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator began validating a new batch."): Amended,
    Guid("{f7267a2e-db60-4382-ada3-3b486cd9d0c2}"), locale("MS\\0x409"),
    DisplayName("ffv_validation_batch_start"): Amended]
class XeSqlPkg_ffv_validation_batch_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_validation_batch_start: XeSqlPkg_ffv_validation_batch_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 starting_bit;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string first_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string first_begin_lsn;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string second_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string second_begin_lsn;
	[WmiDataId(11), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator finished validating a batch."): Amended,
    Guid("{3fb05955-9701-4775-b40e-d8768d08fd9b}"), locale("MS\\0x409"),
    DisplayName("ffv_validation_batch_end"): Amended]
class XeSqlPkg_ffv_validation_batch_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class ffv_validation_batch_end: XeSqlPkg_ffv_validation_batch_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 ending_bit;
	[WmiDataId(7), read] uint32 bits_validated;
	[WmiDataId(8), read] uint32 bufpairs_validated;
	[WmiDataId(9), read] uint32 pages_validated;
	[WmiDataId(10), read] uint32 bad_pages;
	[WmiDataId(11), read] uint32 free_pages_skipped;
	[WmiDataId(12), read] uint32 free_pages_in_first;
	[WmiDataId(13), read] uint32 free_pages_in_second;
	[WmiDataId(14), read] uint32 zeroed_pages_skipped;
	[WmiDataId(15), read] uint32 uncertain_pages_skipped;
	[WmiDataId(16), read, Pointer] object  snapshot_pair;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string first_name;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string first_begin_lsn;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string first_file_name;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string second_name;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string second_begin_lsn;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string second_file_name;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string starting_pageids;
	[WmiDataId(24), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(25), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validator finished validating a snapshot pair."): Amended,
    Guid("{9658bcf8-667f-4a84-9a9a-86408a5133ec}"), locale("MS\\0x409"),
    DisplayName("ffv_validated_all_bits"): Amended]
class XeSqlPkg_ffv_validated_all_bits: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_validated_all_bits: XeSqlPkg_ffv_validated_all_bits
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 max_validatable_bit;
	[WmiDataId(7), read] sint8  max_validatable_bit_crossed;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string first_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string first_begin_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string second_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string second_begin_lsn;
	[WmiDataId(12), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(13), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign file validation buffer IO failed."): Amended,
    Guid("{66972b30-70aa-48f2-bdaf-7a7949b545ca}"), locale("MS\\0x409"),
    DisplayName("ffv_buf_io_failed"): Amended]
class XeSqlPkg_ffv_buf_io_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_buf_io_failed: XeSqlPkg_ffv_buf_io_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 error_code;
	[WmiDataId(7), read] uint64 file_offset;
	[WmiDataId(8), read] uint32 io_size;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string snapshot_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string begin_lsn;
	[WmiDataId(11), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Page Audit failed during Foreign File validation."): Amended,
    Guid("{88ce3709-6f02-404e-ad0e-611f3394dd29}"), locale("MS\\0x409"),
    DisplayName("ffv_page_audit_failed"): Amended]
class XeSqlPkg_ffv_page_audit_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_page_audit_failed: XeSqlPkg_ffv_page_audit_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] sint32 error_count;
	[WmiDataId(8), read, 
				XEMapId(205),
				ValueMap { 
					"2", 
					"0", 
					"3", 
					"1" },
				Values { 
					"FirstPage", 
					"FirstPfsPage", 
					"SecondPage", 
					"SecondPfsPage" }
			] sint32 failure_kind;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string first_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string first_begin_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string second_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string second_begin_lsn;
	[WmiDataId(13), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(14), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Page ID mismatch during Foreign File validation."): Amended,
    Guid("{9d5a7ee8-ab95-4e0b-890c-2996e7512a80}"), locale("MS\\0x409"),
    DisplayName("ffv_page_id_mismatch"): Amended]
class XeSqlPkg_ffv_page_id_mismatch: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_page_id_mismatch: XeSqlPkg_ffv_page_id_mismatch
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 expected_page_id;
	[WmiDataId(7), read] uint32 snapshot_page_id;
	[WmiDataId(8), read, 
				XEMapId(205),
				ValueMap { 
					"2", 
					"0", 
					"3", 
					"1" },
				Values { 
					"FirstPage", 
					"FirstPfsPage", 
					"SecondPage", 
					"SecondPfsPage" }
			] sint32 failure_kind;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string first_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string first_begin_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string second_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string second_begin_lsn;
	[WmiDataId(13), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(14), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign File validator encountered error post page read."): Amended,
    Guid("{be88f60c-084c-4465-b451-edc38f05e894}"), locale("MS\\0x409"),
    DisplayName("ffv_page_post_read_error"): Amended]
class XeSqlPkg_ffv_page_post_read_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_page_post_read_error: XeSqlPkg_ffv_page_post_read_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read, 
				XEMapId(86),
				ValueMap { 
					"-8", 
					"-12", 
					"-10", 
					"-4", 
					"-3", 
					"-11", 
					"-13", 
					"-9", 
					"0", 
					"-6", 
					"-2", 
					"-5", 
					"-7", 
					"-1", 
					"-15", 
					"-14" },
				Values { 
					"BUFERR_AUDITFAILURE", 
					"BUFERR_BAD_KEY", 
					"BUFERR_BAD_PROTECTION", 
					"BUFERR_BADCHECKSUM", 
					"BUFERR_BADPAGEID", 
					"BUFERR_CANT_DECRYPT", 
					"BUFERR_ENCRYPTION_CHECKSUM", 
					"BUFERR_OFFLINE_FILE", 
					"BUFERR_OK", 
					"BUFERR_RESTORE_PENDING", 
					"BUFERR_SHORTTRANSFER", 
					"BUFERR_SIMULATED", 
					"BUFERR_STALEREAD", 
					"BUFERR_TORNPAGE", 
					"BUFFER_INVALID_FCB", 
					"BUFFER_MISSING_KEY" }
			] uint32 post_read_error;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string snapshot_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string begin_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string error_string;
	[WmiDataId(11), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string snapshot_file_name;
};
		
[dynamic: ToInstance, Description("Page LSN mismatch during Foreign File validation."): Amended,
    Guid("{83dd7180-e354-4426-9d33-4562be4226c3}"), locale("MS\\0x409"),
    DisplayName("ffv_page_lsn_mismatch"): Amended]
class XeSqlPkg_ffv_page_lsn_mismatch: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_page_lsn_mismatch: XeSqlPkg_ffv_page_lsn_mismatch
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string first_page_lsn;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string second_page_lsn;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string first_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string first_begin_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string second_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string second_begin_lsn;
	[WmiDataId(13), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(14), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Foreign File validator persisted write bitmap in SF property."): Amended,
    Guid("{60a4cec4-19c9-42f7-98e5-a2f9c91a27fb}"), locale("MS\\0x409"),
    DisplayName("ffv_persisted_write_bitmap"): Amended]
class XeSqlPkg_ffv_persisted_write_bitmap: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_persisted_write_bitmap: XeSqlPkg_ffv_persisted_write_bitmap
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 content_length;
	[WmiDataId(7), read] uint32 set_bits;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string property_name;
	[WmiDataId(9), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(10), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Indicates that the foreign file validator thread is suspended with a trace flag."): Amended,
    Guid("{94f89217-2cb2-47ff-b9c8-648187a044fc}"), locale("MS\\0x409"),
    DisplayName("ffv_suspended"): Amended]
class XeSqlPkg_ffv_suspended: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_suspended: XeSqlPkg_ffv_suspended
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 state;
	[WmiDataId(7), read, 
				XEMapId(204),
				ValueMap { 
					"7", 
					"0", 
					"8", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"Finished", 
					"Initial", 
					"NumStates", 
					"ObtainBitmap", 
					"ObtainPriSnap", 
					"ObtainSecSnap", 
					"Ready", 
					"StartValidating", 
					"Validating" }
			] uint32 state_desc;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Indicates that the foreign file validator thread is resumed."): Amended,
    Guid("{470ab6bd-033b-4224-b8bf-ffb10fcc529b}"), locale("MS\\0x409"),
    DisplayName("ffv_resumed"): Amended]
class XeSqlPkg_ffv_resumed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ffv_resumed: XeSqlPkg_ffv_resumed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 state;
	[WmiDataId(7), read, 
				XEMapId(204),
				ValueMap { 
					"7", 
					"0", 
					"8", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"Finished", 
					"Initial", 
					"NumStates", 
					"ObtainBitmap", 
					"ObtainPriSnap", 
					"ObtainSecSnap", 
					"Ready", 
					"StartValidating", 
					"Validating" }
			] uint32 state_desc;
	[WmiDataId(8), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(9), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("This xevent is fired when a database finishes redoing a file header change log record."): Amended,
    Guid("{c7aaaba5-c05a-4808-8079-add10ca081cb}"), locale("MS\\0x409"),
    DisplayName("data_file_header_modify_redone"): Amended]
class XeSqlPkg_data_file_header_modify_redone: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_file_header_modify_redone: XeSqlPkg_data_file_header_modify_redone
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint64 old_size;
	[WmiDataId(8), read] uint64 new_size;
	[WmiDataId(9), read] uint64 duration_in_ms;
};
		
[dynamic: ToInstance, Description("Emit latency map for each rbio async read step."): Amended,
    Guid("{1d522198-17de-468d-bad8-bf2af90481e1}"), locale("MS\\0x409"),
    DisplayName("async_read_latency_bucket"): Amended]
class XeSqlPkg_async_read_latency_bucket: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class async_read_latency_bucket: XeSqlPkg_async_read_latency_bucket
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(212),
				ValueMap { 
					"10", 
					"0", 
					"2", 
					"7", 
					"6", 
					"5", 
					"1", 
					"4", 
					"9", 
					"8", 
					"3" },
				Values { 
					"AsyncReadStatsLast", 
					"AsyncReadTotalTimeStats", 
					"ForeignRedoWaitTimeStats", 
					"LogReplayActiveTimeStats", 
					"LogReplayReadTimeStats", 
					"LogReplayStallTimeStats", 
					"OpenDbWaitTimeStats", 
					"PageIoWaitTimeStats", 
					"RbIoPlaceholderTimeStats", 
					"RbIoSendResponseStats", 
					"ReadAheadTimeStats" }
			] uint32 latency_map_type;
	[WmiDataId(6), read] sint8  is_qos;
	[WmiDataId(7), read] uint64 latency_bucket_us;
	[WmiDataId(8), read] uint64 latency_hits_total;
	[WmiDataId(9), read] uint64 latency_hits_00;
	[WmiDataId(10), read] uint64 latency_hits_01;
	[WmiDataId(11), read] uint64 latency_hits_02;
	[WmiDataId(12), read] uint64 latency_hits_03;
	[WmiDataId(13), read] uint64 latency_hits_04;
	[WmiDataId(14), read] uint64 latency_hits_05;
	[WmiDataId(15), read] uint64 latency_hits_06;
	[WmiDataId(16), read] uint64 latency_hits_07;
	[WmiDataId(17), read] uint64 latency_hits_08;
	[WmiDataId(18), read] uint64 latency_hits_09;
	[WmiDataId(19), read] uint64 latency_hits_10;
	[WmiDataId(20), read] uint64 latency_hits_11;
	[WmiDataId(21), read] uint64 latency_hits_12;
	[WmiDataId(22), read] uint64 latency_hits_13;
	[WmiDataId(23), read] uint64 latency_hits_14;
	[WmiDataId(24), read] uint64 latency_hits_15;
};
		
[dynamic: ToInstance, Description("Emit latency map for bsn distance."): Amended,
    Guid("{7a7c9b09-e327-46ad-9ed6-dd426faf1190}"), locale("MS\\0x409"),
    DisplayName("page_server_actor_bsn_distance"): Amended]
class XeSqlPkg_page_server_actor_bsn_distance: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_server_actor_bsn_distance: XeSqlPkg_page_server_actor_bsn_distance
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(213),
				ValueMap { 
					"1", 
					"0", 
					"2", 
					"4", 
					"3" },
				Values { 
					"ApplyBsnToFlushBsn", 
					"ApplyBsnToRequestBsn", 
					"MaxPageBsnToRequestBsn", 
					"PageServerBsnDistanceStatsLast", 
					"RequestBsnToFlushBsn" }
			] uint32 distance_map_type;
	[WmiDataId(6), read, 
				XEMapId(214),
				ValueMap { 
					"4", 
					"3", 
					"1", 
					"2", 
					"0" },
				Values { 
					"PageServerClientRoleLast", 
					"PageServerClientRolePageServer", 
					"PageServerClientRolePrimaryCompute", 
					"PageServerClientRoleSecondaryCompute", 
					"PageServerClientRoleUnknown" }
			] uint32 client_role;
	[WmiDataId(7), read] uint32 client_node_id;
	[WmiDataId(8), read] sint64 distance_bucket_kb;
	[WmiDataId(9), read] uint64 distance_hits_total;
	[WmiDataId(10), read] uint64 distance_hits_00;
	[WmiDataId(11), read] uint64 distance_hits_01;
	[WmiDataId(12), read] uint64 distance_hits_02;
	[WmiDataId(13), read] uint64 distance_hits_03;
	[WmiDataId(14), read] uint64 distance_hits_04;
	[WmiDataId(15), read] uint64 distance_hits_05;
	[WmiDataId(16), read] uint64 distance_hits_06;
	[WmiDataId(17), read] uint64 distance_hits_07;
	[WmiDataId(18), read] uint64 distance_hits_08;
	[WmiDataId(19), read] uint64 distance_hits_09;
	[WmiDataId(20), read] uint64 distance_hits_10;
	[WmiDataId(21), read] uint64 distance_hits_11;
	[WmiDataId(22), read] uint64 distance_hits_12;
	[WmiDataId(23), read] uint64 distance_hits_13;
	[WmiDataId(24), read] uint64 distance_hits_14;
	[WmiDataId(25), read] uint64 distance_hits_15;
	[WmiDataId(26), read, Extension("Guid")] guid actor_id;
};
		
[dynamic: ToInstance, Description("Emit read errors encountered by page server when handling async read requests."): Amended,
    Guid("{b798f0b7-d242-4815-b46f-06c37f518029}"), locale("MS\\0x409"),
    DisplayName("page_server_read_errors"): Amended]
class XeSqlPkg_page_server_read_errors: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_server_read_errors: XeSqlPkg_page_server_read_errors
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_code;
	[WmiDataId(6), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Emit page counts map for rbio async read requests."): Amended,
    Guid("{f658ae3e-26e0-458c-bf12-523e3d13f0d3}"), locale("MS\\0x409"),
    DisplayName("async_read_page_count_bucket"): Amended]
class XeSqlPkg_async_read_page_count_bucket: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class async_read_page_count_bucket: XeSqlPkg_async_read_page_count_bucket
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 page_count_0;
	[WmiDataId(6), read] uint64 page_count_1;
	[WmiDataId(7), read] uint64 page_count_2;
	[WmiDataId(8), read] uint64 page_count_3;
	[WmiDataId(9), read] uint64 page_count_4;
	[WmiDataId(10), read] uint64 page_count_5;
	[WmiDataId(11), read] uint64 page_count_6;
	[WmiDataId(12), read] uint64 page_count_7;
	[WmiDataId(13), read] uint64 page_count_8;
	[WmiDataId(14), read] uint64 page_count_more_than_8;
};
		
[dynamic: ToInstance, Description("Emit count of bad page lsn encountered during page read."): Amended,
    Guid("{33b49186-74fe-4dae-a0ee-b63f216993f3}"), locale("MS\\0x409"),
    DisplayName("page_server_read_bad_lsn"): Amended]
class XeSqlPkg_page_server_read_bad_lsn: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_server_read_bad_lsn: XeSqlPkg_page_server_read_bad_lsn
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Info XEvent for analysing trace flags."): Amended,
    Guid("{D3D68235-32C5-45AD-BA3A-F7CA3D58387E}"), locale("MS\\0x409"),
    DisplayName("dbcc_trace_flags_commands"): Amended]
class XeSqlPkg_dbcc_trace_flags_commands: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbcc_trace_flags_commands: XeSqlPkg_dbcc_trace_flags_commands
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 traceflag_number;
	[WmiDataId(6), read] sint8  traceflag_status;
	[WmiDataId(7), read, 
				XEMapId(209),
				ValueMap { 
					"-1", 
					"0" },
				Values { 
					"GLOBAL", 
					"SESSION" }
			] sint32 traceflag_scope;
	[WmiDataId(8), read] sint8  traceflag_startup;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string error_state;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string command;
};
		
[dynamic: ToInstance, Description("Info XEvent for analysing engine MS request for updating trace flags."): Amended,
    Guid("{394C532D-4FC8-4A61-9C48-D2FD50DB0705}"), locale("MS\\0x409"),
    DisplayName("update_trace_flags_management_service_call"): Amended]
class XeSqlPkg_update_trace_flags_management_service_call: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class update_trace_flags_management_service_call: XeSqlPkg_update_trace_flags_management_service_call
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 error_number;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string trace_flags;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string resource_group;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string subscription_id;
};
		
[dynamic: ToInstance, Description("This xevent is fired at most once every 5 minutes if columnstore attribute cache is being actively used. It reports the cache stats for the server."): Amended,
    Guid("{D286019D-4010-4667-BF9B-FC87CEF22BBB}"), locale("MS\\0x409"),
    DisplayName("columnstore_attribute_cache_stats"): Amended]
class XeSqlPkg_columnstore_attribute_cache_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_attribute_cache_stats: XeSqlPkg_columnstore_attribute_cache_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 buckets;
	[WmiDataId(6), read] uint64 buckets_in_use;
	[WmiDataId(7), read] uint64 hits;
	[WmiDataId(8), read] uint64 misses;
	[WmiDataId(9), read] uint64 per_column_reloads;
	[WmiDataId(10), read] uint64 per_partition_reloads;
	[WmiDataId(11), read] uint64 evictions_in_interval;
	[WmiDataId(12), read] uint64 evictions_kb_in_interval;
	[WmiDataId(13), read] uint64 interval_start_tick;
	[WmiDataId(14), read] uint64 interval_end_tick;
};
		
[dynamic: ToInstance, Description("This xevent is fired at most once every 5 minutes if columnstore attribute cache is being actively used. It reports the cache stats for the server."): Amended,
    Guid("{D286019D-4010-4667-BF9B-FC87CEF22BBB}"), locale("MS\\0x409"),
    DisplayName("columnstore_attribute_cache_stats"): Amended]
class XeSqlPkg_columnstore_attribute_cache_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class columnstore_attribute_cache_stats: XeSqlPkg_columnstore_attribute_cache_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 buckets;
	[WmiDataId(6), read] uint64 buckets_in_use;
	[WmiDataId(7), read] uint64 hits;
	[WmiDataId(8), read] uint64 misses;
	[WmiDataId(9), read] uint64 per_column_reloads;
	[WmiDataId(10), read] uint64 per_partition_reloads;
	[WmiDataId(11), read] uint64 evictions_in_interval;
	[WmiDataId(12), read] uint64 evictions_kb_in_interval;
	[WmiDataId(13), read] uint64 interval_start_tick;
	[WmiDataId(14), read] uint64 interval_end_tick;
	[WmiDataId(15), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Fires when RPC for VDW distributed computation was requested."): Amended,
    Guid("{c9fa20e0-174c-057c-3925-30610be55fed}"), locale("MS\\0x409"),
    DisplayName("vdw_distributed_computation_rpc"): Amended]
class XeSqlPkg_vdw_distributed_computation_rpc: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_distributed_computation_rpc: XeSqlPkg_vdw_distributed_computation_rpc
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 dqp_error_number;
	[WmiDataId(6), read] sint32 sql_error_number;
	[WmiDataId(7), read] sint32 sql_error_state;
	[WmiDataId(8), read] sint32 sql_error_severity;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
};
		
[dynamic: ToInstance, Description("Fires when returning error or warning reported by code related to VDW distributed computation."): Amended,
    Guid("{C0EBFE75-7429-41BC-B906-B8BA2E3D4DB5}"), locale("MS\\0x409"),
    DisplayName("vdw_distributed_computation_error"): Amended]
class XeSqlPkg_vdw_distributed_computation_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_distributed_computation_error: XeSqlPkg_vdw_distributed_computation_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 dqp_error_number;
	[WmiDataId(6), read] sint32 sql_error_number;
	[WmiDataId(7), read] sint32 sql_error_state;
	[WmiDataId(8), read] sint32 sql_error_severity;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
};
		
[dynamic: ToInstance, Description("Fires when service discovery for VDW distributed computation was requested."): Amended,
    Guid("{11cc667a-776e-4365-82f9-026cadb71102}"), locale("MS\\0x409"),
    DisplayName("vdw_client_prepare_query"): Amended]
class XeSqlPkg_vdw_client_prepare_query: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_client_prepare_query: XeSqlPkg_vdw_client_prepare_query
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
};
		
[dynamic: ToInstance, Description("Fires when query submission for VDW distributed computation was requested."): Amended,
    Guid("{d1b39943-d1e3-48d7-bfec-768beee55739}"), locale("MS\\0x409"),
    DisplayName("vdw_client_submit_query"): Amended]
class XeSqlPkg_vdw_client_submit_query: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_client_submit_query: XeSqlPkg_vdw_client_submit_query
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
};
		
[dynamic: ToInstance, Description("Fires when query cancelation for VDW distributed computation was requested."): Amended,
    Guid("{f42e7174-c40e-4dc7-9388-82344e21f41b}"), locale("MS\\0x409"),
    DisplayName("vdw_client_cancel_query"): Amended]
class XeSqlPkg_vdw_client_cancel_query: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_client_cancel_query: XeSqlPkg_vdw_client_cancel_query
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
};
		
[dynamic: ToInstance, Description("Fires when service discovery for VDW dopp streaming api was requested."): Amended,
    Guid("{0865bdd6-7d88-11ec-90d6-0242ac120003}"), locale("MS\\0x409"),
    DisplayName("vdw_client_prepare_dopp_request"): Amended]
class XeSqlPkg_vdw_client_prepare_dopp_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_client_prepare_dopp_request: XeSqlPkg_vdw_client_prepare_dopp_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
};
		
[dynamic: ToInstance, Description("Fires when request submission for VDW dopp streaming was requested."): Amended,
    Guid("{172e4c02-7d88-11ec-90d6-0242ac120003}"), locale("MS\\0x409"),
    DisplayName("vdw_client_submit_dopp_request"): Amended]
class XeSqlPkg_vdw_client_submit_dopp_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_client_submit_dopp_request: XeSqlPkg_vdw_client_submit_dopp_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
};
		
[dynamic: ToInstance, Description("Fires when request cancelation for VDW dopp streaming was requested."): Amended,
    Guid("{2384ab54-7d88-11ec-90d6-0242ac120003}"), locale("MS\\0x409"),
    DisplayName("vdw_client_cancel_dopp_request"): Amended]
class XeSqlPkg_vdw_client_cancel_dopp_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_client_cancel_dopp_request: XeSqlPkg_vdw_client_cancel_dopp_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string exception_message;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
};
		
[dynamic: ToInstance, Description("Fires when a operation on the background thread for VDW dopp streaming was requested."): Amended,
    Guid("{a1140b0e-c5ba-43ed-9c37-b5899f16bf98}"), locale("MS\\0x409"),
    DisplayName("vdw_client_background_dopp_stream_operation"): Amended]
class XeSqlPkg_vdw_client_background_dopp_stream_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_client_background_dopp_stream_operation: XeSqlPkg_vdw_client_background_dopp_stream_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 sql_error;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string client_id;
};
		
[dynamic: ToInstance, Description("Fires when SQL FE writes dopp stream response to local cache dictionary."): Amended,
    Guid("{bd22cc43-8612-4ee2-81e1-0390d84ea2ae}"), locale("MS\\0x409"),
    DisplayName("vdw_client_background_write_dopp_stream_response"): Amended]
class XeSqlPkg_vdw_client_background_write_dopp_stream_response: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_client_background_write_dopp_stream_response: XeSqlPkg_vdw_client_background_write_dopp_stream_response
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dopp;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string client_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string workloadgroup_name;
};
		
[dynamic: ToInstance, Description("Fired by the VDW frontend when discovering DQP."): Amended,
    Guid("{e3121095-8aba-4601-81a3-b86409215c1b}"), locale("MS\\0x409"),
    DisplayName("vdw_dqp_discovery"): Amended]
class XeSqlPkg_vdw_dqp_discovery: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_dqp_discovery: XeSqlPkg_vdw_dqp_discovery
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_code;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string endpoint;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_client_id;
};
		
[dynamic: ToInstance, Description("Fired by the VDW SQL FE to notify ES FE that the query is completed."): Amended,
    Guid("{2608C7E4-E8D0-45BE-9D67-86B74649B4FF}"), locale("MS\\0x409"),
    DisplayName("vdw_query_completion_rpc"): Amended]
class XeSqlPkg_vdw_query_completion_rpc: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_query_completion_rpc: XeSqlPkg_vdw_query_completion_rpc
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string status_message;
};
		
[dynamic: ToInstance, Description("Fired by the VDW SQL FE when preparing query completed notification submission."): Amended,
    Guid("{96DAEE0A-2EB7-4C24-86C1-A2D5173513F6}"), locale("MS\\0x409"),
    DisplayName("vdw_prepare_query_completion"): Amended]
class XeSqlPkg_vdw_prepare_query_completion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_prepare_query_completion: XeSqlPkg_vdw_prepare_query_completion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string status_message;
};
		
[dynamic: ToInstance, Description("Fired by the VDW SQL FE when query completed notification submission occures."): Amended,
    Guid("{3D4F6B3D-8B8C-430C-97C9-E289B341B60E}"), locale("MS\\0x409"),
    DisplayName("vdw_submit_query_completion"): Amended]
class XeSqlPkg_vdw_submit_query_completion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_submit_query_completion: XeSqlPkg_vdw_submit_query_completion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string status_message;
};
		
[dynamic: ToInstance, Description("Fired by the VDW SQL FE when query completed notification submission is canceled."): Amended,
    Guid("{A871BF84-E539-4F73-B96C-A6EA1627495C}"), locale("MS\\0x409"),
    DisplayName("vdw_cancel_query_completion"): Amended]
class XeSqlPkg_vdw_cancel_query_completion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_cancel_query_completion: XeSqlPkg_vdw_cancel_query_completion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string status_message;
};
		
[dynamic: ToInstance, Description("Fired by the VDW backend to report query feedback status."): Amended,
    Guid("{3AE0FA87-F130-4859-9DA4-F7C8B915EC5D}"), locale("MS\\0x409"),
    DisplayName("vdw_backend_query_feedback_rpc"): Amended]
class XeSqlPkg_vdw_backend_query_feedback_rpc: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_backend_query_feedback_rpc: XeSqlPkg_vdw_backend_query_feedback_rpc
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string status_message;
};
		
[dynamic: ToInstance, Description("Fired by the VDW backend when preparing query feedback submission."): Amended,
    Guid("{BAC4FAFD-E4BB-45E3-B980-FBCE4AE8D624}"), locale("MS\\0x409"),
    DisplayName("vdw_backend_prepare_query_feedback"): Amended]
class XeSqlPkg_vdw_backend_prepare_query_feedback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_backend_prepare_query_feedback: XeSqlPkg_vdw_backend_prepare_query_feedback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string status_message;
};
		
[dynamic: ToInstance, Description("Fired by the VDW backend when query feedback submission occures."): Amended,
    Guid("{2C3AC383-6206-4440-9AB0-546BA12A7777}"), locale("MS\\0x409"),
    DisplayName("vdw_backend_submit_query_feedback"): Amended]
class XeSqlPkg_vdw_backend_submit_query_feedback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_backend_submit_query_feedback: XeSqlPkg_vdw_backend_submit_query_feedback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string status_message;
};
		
[dynamic: ToInstance, Description("Fired by the VDW backend when query feedback submission is canceled."): Amended,
    Guid("{0ACE34D3-7155-4BEA-964E-6CAF55B7E68A}"), locale("MS\\0x409"),
    DisplayName("vdw_backend_cancel_query_feedback"): Amended]
class XeSqlPkg_vdw_backend_cancel_query_feedback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_backend_cancel_query_feedback: XeSqlPkg_vdw_backend_cancel_query_feedback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string status_message;
};
		
[dynamic: ToInstance, Description("Unexpected exception during cleanup of VDW distributed operator."): Amended,
    Guid("{877ECC65-671A-48B0-BD86-F04AD298D54D}"), locale("MS\\0x409"),
    DisplayName("vdw_distributed_query_cleanup_exception"): Amended]
class XeSqlPkg_vdw_distributed_query_cleanup_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_distributed_query_cleanup_exception: XeSqlPkg_vdw_distributed_query_cleanup_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error;
	[WmiDataId(6), read] uint32 severity;
	[WmiDataId(7), read] uint32 state;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
};
		
[dynamic: ToInstance, Description("Fired by the VDW frontend when wildcard expansion was requested."): Amended,
    Guid("{de9e5d16-e08c-48d3-9242-84a47703954d}"), locale("MS\\0x409"),
    DisplayName("vdw_wildcard_expansion"): Amended]
class XeSqlPkg_vdw_wildcard_expansion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_wildcard_expansion: XeSqlPkg_vdw_wildcard_expansion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] uint64 cancellation_latency;
	[WmiDataId(7), read] sint32 matches_found;
	[WmiDataId(8), read] sint32 list_dir_calls;
	[WmiDataId(9), read] sint32 empty_files;
	[WmiDataId(10), read] sint32 sql_error_number;
	[WmiDataId(11), read] sint32 sql_error_state;
	[WmiDataId(12), read] sint32 sql_error_severity;
	[WmiDataId(13), read] sint32 statement_number;
	[WmiDataId(14), read] uint64 directory_listing_error_code;
	[WmiDataId(15), read] uint64 timeout_seconds;
	[WmiDataId(16), read] uint64 total_size_bytes;
	[WmiDataId(17), read] uint64 largest_file_size_bytes;
	[WmiDataId(18), read] uint64 smallest_file_size_bytes;
	[WmiDataId(19), read] uint64 avg_file_path_length;
	[WmiDataId(20), read] uint64 max_file_path_length;
	[WmiDataId(21), read] uint64 list_dir_items_processed;
	[WmiDataId(22), read] sint8  is_user_query_in_recompile;
	[WmiDataId(23), read] sint8  is_openrowset_stats;
	[WmiDataId(24), read] sint8  is_external_table_stats;
	[WmiDataId(25), read] sint8  is_cardinality_query;
	[WmiDataId(26), read, 
				XEMapId(114),
				ValueMap { 
					"6", 
					"0", 
					"2", 
					"4", 
					"5", 
					"3", 
					"7", 
					"1" },
				Values { 
					"S3_PATH_TYPE", 
					"BLOB", 
					"CONTAINER", 
					"DFS", 
					"DFS_FILESYSTEM", 
					"HDFS", 
					"NONE", 
					"SNAPSHOT" }
			] uint8 xstore_file_path_type;
	[WmiDataId(27), read] sint8  is_hns_enabled;
	[WmiDataId(28), read] sint32 hns_detection_error_number;
	[WmiDataId(29), read, 
				XEMapId(115),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"0" },
				Values { 
					"BlobSync", 
					"DirectoryAsync", 
					"Heuristic", 
					"None" }
			] uint8 listing_policy;
	[WmiDataId(30), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(31), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(32), read, StringTermination("NullTerminated"), Format("w")] string obfuscated_file_path;
	[WmiDataId(33), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Fired by the VDW frontend when wildcard expansion was requested. Contains information about each list directory call in WCE."): Amended,
    Guid("{efa0cefc-25ac-458a-b768-d7f246452ec2}"), locale("MS\\0x409"),
    DisplayName("vdw_wildcard_list_directory_stats"): Amended]
class XeSqlPkg_vdw_wildcard_list_directory_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_wildcard_list_directory_stats: XeSqlPkg_vdw_wildcard_list_directory_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 iteration_number;
	[WmiDataId(6), read] uint64 requests_sent;
	[WmiDataId(7), read] uint64 files_returned;
	[WmiDataId(8), read] uint64 items_matched;
	[WmiDataId(9), read] uint64 sum_request_duration_usec;
	[WmiDataId(10), read] uint64 max_request_duration_usec;
	[WmiDataId(11), read] uint64 continuation_requests;
	[WmiDataId(12), read] uint64 failed_requests_access_denied;
	[WmiDataId(13), read] sint32 statement_number;
	[WmiDataId(14), read, Extension("Guid")] guid slowest_request_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Fired by the SQL frontend when wildcard expansion was requested."): Amended,
    Guid("{c1bf0edc-d5df-4d08-9499-77d626365470}"), locale("MS\\0x409"),
    DisplayName("wildcard_expansion"): Amended]
class XeSqlPkg_wildcard_expansion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class wildcard_expansion: XeSqlPkg_wildcard_expansion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] uint64 cancellation_latency;
	[WmiDataId(7), read] sint32 matches_found;
	[WmiDataId(8), read] sint32 list_dir_calls;
	[WmiDataId(9), read] sint32 empty_files;
	[WmiDataId(10), read] sint32 sql_error_number;
	[WmiDataId(11), read] sint32 sql_error_state;
	[WmiDataId(12), read] sint32 sql_error_severity;
	[WmiDataId(13), read] sint32 statement_number;
	[WmiDataId(14), read] uint64 directory_listing_error_code;
	[WmiDataId(15), read] uint64 timeout_seconds;
	[WmiDataId(16), read] uint64 total_size_bytes;
	[WmiDataId(17), read] uint64 largest_file_size_bytes;
	[WmiDataId(18), read] uint64 smallest_file_size_bytes;
	[WmiDataId(19), read] uint64 avg_file_path_length;
	[WmiDataId(20), read] uint64 max_file_path_length;
	[WmiDataId(21), read] uint64 list_dir_items_processed;
	[WmiDataId(22), read] sint8  is_user_query_in_recompile;
	[WmiDataId(23), read] sint8  is_openrowset_stats;
	[WmiDataId(24), read] sint8  is_external_table_stats;
	[WmiDataId(25), read] sint8  is_cardinality_query;
	[WmiDataId(26), read, 
				XEMapId(114),
				ValueMap { 
					"6", 
					"0", 
					"2", 
					"4", 
					"5", 
					"3", 
					"7", 
					"1" },
				Values { 
					"S3_PATH_TYPE", 
					"BLOB", 
					"CONTAINER", 
					"DFS", 
					"DFS_FILESYSTEM", 
					"HDFS", 
					"NONE", 
					"SNAPSHOT" }
			] uint8 xstore_file_path_type;
	[WmiDataId(27), read] sint8  is_hns_enabled;
	[WmiDataId(28), read] sint32 hns_detection_error_number;
	[WmiDataId(29), read, 
				XEMapId(115),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"0" },
				Values { 
					"BlobSync", 
					"DirectoryAsync", 
					"Heuristic", 
					"None" }
			] uint8 listing_policy;
	[WmiDataId(30), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(31), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(32), read, StringTermination("NullTerminated"), Format("w")] string obfuscated_file_path;
	[WmiDataId(33), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Emits information related to logical file splits."): Amended,
    Guid("{f6c925bf-8373-4b00-9248-b14cda5cc990}"), locale("MS\\0x409"),
    DisplayName("vdw_logical_file_splits"): Amended]
class XeSqlPkg_vdw_logical_file_splits: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_logical_file_splits: XeSqlPkg_vdw_logical_file_splits
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 files_logically_split_count;
	[WmiDataId(6), read] uint32 total_logical_file_splits_count;
	[WmiDataId(7), read] uint64 total_logical_file_splits_size;
	[WmiDataId(8), read] uint64 total_eligible_content_size;
	[WmiDataId(9), read] uint64 total_size_bytes;
};
		
[dynamic: ToInstance, Description("Fired by the VDW sqlserver instances when the platform layer (ServiceFabric) invokes different callbacks (like instance change role)."): Amended,
    Guid("{5ad3d007-154b-4ec0-ad04-9d58c6411e1f}"), locale("MS\\0x409"),
    DisplayName("platform_callback"): Amended]
class XeSqlPkg_platform_callback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class platform_callback: XeSqlPkg_platform_callback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string action;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("Billing report - data size read through external extractors. Distinct event per each file and each processing thread."): Amended,
    Guid("{584A96B4-C49F-401B-9009-687457010C4E}"), locale("MS\\0x409"),
    DisplayName("polaris_billing_data_scanned"): Amended]
class XeSqlPkg_polaris_billing_data_scanned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_billing_data_scanned: XeSqlPkg_polaris_billing_data_scanned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 column_store_size_bytes;
	[WmiDataId(6), read] uint64 delta_store_size_bytes;
	[WmiDataId(7), read] uint64 deep_data_cs_ds_size_bytes;
	[WmiDataId(8), read] uint64 column_count;
	[WmiDataId(9), read] uint32 thread_id;
	[WmiDataId(10), read] sint32 file_job_id;
	[WmiDataId(11), read] uint64 sync_read_total_size_bytes;
	[WmiDataId(12), read] sint8  is_managed_data;
	[WmiDataId(13), read] sint8  is_openrowset_local_stats;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string extractor_info_package;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string sql_info_package;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(24), read, Extension("Variant")] object local_query_hash;
};
		
[dynamic: ToInstance, Description("Billing report - data size read through native CSV reader. Distinct event per each file."): Amended,
    Guid("{92FE5A1F-573E-422C-9BBF-667045DDECA3}"), locale("MS\\0x409"),
    DisplayName("polaris_billing_data_scanned_csv"): Amended]
class XeSqlPkg_polaris_billing_data_scanned_csv: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_billing_data_scanned_csv: XeSqlPkg_polaris_billing_data_scanned_csv
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sync_read_total_size_bytes;
	[WmiDataId(6), read] sint8  is_openrowset_local_stats;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Fires when VDW distributed computation was executed."): Amended,
    Guid("{A36170E4-D7EA-45F4-8B2F-649315A4AC29}"), locale("MS\\0x409"),
    DisplayName("polaris_billing_distributed_queries_executed"): Amended]
class XeSqlPkg_polaris_billing_distributed_queries_executed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_billing_distributed_queries_executed: XeSqlPkg_polaris_billing_distributed_queries_executed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_internal_query;
	[WmiDataId(6), read] sint8  is_user_error;
	[WmiDataId(7), read] uint64 data_scanned_bytes;
	[WmiDataId(8), read] uint64 data_moved_bytes;
	[WmiDataId(9), read] uint64 data_written_bytes;
	[WmiDataId(10), read] uint64 data_processed_bytes_sum;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string arcadia_workspace_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string resource_tags;
};
		
[dynamic: ToInstance, Description("Fires when VDW distributed computation was executed. Should be used only for billing verification."): Amended,
    Guid("{89E7A02A-A416-49D9-B08C-42C3C5ABC1EF}"), locale("MS\\0x409"),
    DisplayName("polaris_billing_verification_distributed_queries_executed"): Amended]
class XeSqlPkg_polaris_billing_verification_distributed_queries_executed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_billing_verification_distributed_queries_executed: XeSqlPkg_polaris_billing_verification_distributed_queries_executed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_internal_query;
	[WmiDataId(6), read] sint8  is_user_error;
	[WmiDataId(7), read] uint64 data_scanned_bytes;
	[WmiDataId(8), read] uint64 data_moved_bytes;
	[WmiDataId(9), read] uint64 data_written_bytes;
	[WmiDataId(10), read] uint64 data_processed_bytes_sum;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string arcadia_workspace_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string resource_tags;
};
		
[dynamic: ToInstance, Description("Billing report - Reports data moved by native shuffle."): Amended,
    Guid("{62CC6ED3-5CAA-4C57-B52A-D4996A571DB0}"), locale("MS\\0x409"),
    DisplayName("polaris_billing_native_shuffle_data_moved"): Amended]
class XeSqlPkg_polaris_billing_native_shuffle_data_moved: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_billing_native_shuffle_data_moved: XeSqlPkg_polaris_billing_native_shuffle_data_moved
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 bytes_processed;
	[WmiDataId(6), read] sint64 rows_processed;
	[WmiDataId(7), read] sint32 sql_spid;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
};
		
[dynamic: ToInstance, Description("Billing report - Reports data written."): Amended,
    Guid("{68B33B9D-3B1E-44EC-A576-E5495CE322B5}"), locale("MS\\0x409"),
    DisplayName("polaris_billing_data_written"): Amended]
class XeSqlPkg_polaris_billing_data_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_billing_data_written: XeSqlPkg_polaris_billing_data_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] sint64 bytes_written;
	[WmiDataId(7), read] uint64 column_count;
	[WmiDataId(8), read] sint8  is_managed_data;
	[WmiDataId(9), read] sint8  is_bulk_write;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Unexpected exceptions during billing related system operations."): Amended,
    Guid("{9A5B5F7F-263C-432B-83B6-AE18B682ABDB}"), locale("MS\\0x409"),
    DisplayName("polaris_exception_query_not_billed"): Amended]
class XeSqlPkg_polaris_exception_query_not_billed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_exception_query_not_billed: XeSqlPkg_polaris_exception_query_not_billed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 sql_error_number;
	[WmiDataId(6), read] sint32 sql_error_state;
	[WmiDataId(7), read] sint32 sql_error_severity;
	[WmiDataId(8), read] uint64 data_processed_bytes_sum;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
};
		
[dynamic: ToInstance, Description("Unexpected billing exception."): Amended,
    Guid("{ADBE42F9-5064-4DB6-9229-993E67C138B6}"), locale("MS\\0x409"),
    DisplayName("polaris_billing_exception_managed_data"): Amended]
class XeSqlPkg_polaris_billing_exception_managed_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_billing_exception_managed_data: XeSqlPkg_polaris_billing_exception_managed_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 sql_error_number;
	[WmiDataId(6), read] sint32 sql_error_state;
	[WmiDataId(7), read] sint32 sql_error_severity;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
};
		
[dynamic: ToInstance, Description("Is fired when ErrorClassificationOverrideRules setting is invalid."): Amended,
    Guid("{63B0891E-C982-4D35-85EF-9853DAC452D3}"), locale("MS\\0x409"),
    DisplayName("polaris_error_classification_failed"): Amended]
class XeSqlPkg_polaris_error_classification_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_error_classification_failed: XeSqlPkg_polaris_error_classification_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 sql_error_number;
	[WmiDataId(6), read] sint32 sql_error_state;
	[WmiDataId(7), read] sint32 sql_error_severity;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string polaris_error_classification_rules;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
};
		
[dynamic: ToInstance, Description("Is fired when unexpected switch value is encountered."): Amended,
    Guid("{193C2188-7434-479D-A10D-0C6FAD3E1EA3}"), locale("MS\\0x409"),
    DisplayName("polaris_unexpected_switch_value"): Amended]
class XeSqlPkg_polaris_unexpected_switch_value: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_unexpected_switch_value: XeSqlPkg_polaris_unexpected_switch_value
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 event_state;
	[WmiDataId(6), read] sint32 switch_value;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
};
		
[dynamic: ToInstance, Description("Fires at the start and after stats table cleanup finishes."): Amended,
    Guid("{5be706fe-3d12-4970-82a1-2529dfcb9aff}"), locale("MS\\0x409"),
    DisplayName("openrowset_stats_cleanup"): Amended]
class XeSqlPkg_openrowset_stats_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class openrowset_stats_cleanup: XeSqlPkg_openrowset_stats_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] uint64 rows_total_count;
	[WmiDataId(7), read] uint64 rows_deleted_count;
	[WmiDataId(8), read] sint32 sql_error_number;
	[WmiDataId(9), read] sint32 sql_error_state;
	[WmiDataId(10), read] sint32 sql_error_severity;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Fires at the start and after stats table truncation finishes."): Amended,
    Guid("{589ef144-e63f-4ebe-aa7c-95c252887227}"), locale("MS\\0x409"),
    DisplayName("openrowset_stats_cleanup_all"): Amended]
class XeSqlPkg_openrowset_stats_cleanup_all: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class openrowset_stats_cleanup_all: XeSqlPkg_openrowset_stats_cleanup_all
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint8  is_average_column_length_only;
	[WmiDataId(7), read] sint32 sql_error_number;
	[WmiDataId(8), read] sint32 sql_error_state;
	[WmiDataId(9), read] sint32 sql_error_severity;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Fires when reading of openrowset stats/cardinality row from the openrowset stats table fails."): Amended,
    Guid("{be4418c7-5e73-4965-b95c-b34cedfcbd35}"), locale("MS\\0x409"),
    DisplayName("openrowset_stats_row_reading_failed"): Amended]
class XeSqlPkg_openrowset_stats_row_reading_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class openrowset_stats_row_reading_failed: XeSqlPkg_openrowset_stats_row_reading_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] uint64 stats_blob_in_bytes;
	[WmiDataId(7), read] uint64 source_props_in_bytes;
	[WmiDataId(8), read] uint64 additional_props_in_bytes;
	[WmiDataId(9), read] sint32 sql_error_number;
	[WmiDataId(10), read] sint32 sql_error_state;
	[WmiDataId(11), read] sint32 sql_error_severity;
	[WmiDataId(12), read] sint32 statement_number;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string openrowset_stats_hash;
};
		
[dynamic: ToInstance, Description("Reports status about retention cleanup on master.sys.polaris_executed_requests_history and master.sys.polaris_executed_requests_text tables."): Amended,
    Guid("{9A1A46F2-73F3-46BA-8EA5-C7BD12F94BF2}"), locale("MS\\0x409"),
    DisplayName("polaris_executed_requests_history_cleanup"): Amended]
class XeSqlPkg_polaris_executed_requests_history_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_executed_requests_history_cleanup: XeSqlPkg_polaris_executed_requests_history_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] uint64 requests_history_rows_deleted_count;
	[WmiDataId(7), read] uint64 requests_text_rows_deleted_count;
	[WmiDataId(8), read] uint64 requests_history_rows_updated_count;
	[WmiDataId(9), read] sint32 sql_error_number;
	[WmiDataId(10), read] sint32 sql_error_state;
	[WmiDataId(11), read] sint32 sql_error_severity;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Reports status about Polaris internal T-SQL query."): Amended,
    Guid("{DB8F22B7-18DA-469B-B437-6E2D98071F31}"), locale("MS\\0x409"),
    DisplayName("polaris_internal_tsql_query_status"): Amended]
class XeSqlPkg_polaris_internal_tsql_query_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_internal_tsql_query_status: XeSqlPkg_polaris_internal_tsql_query_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] uint64 query_cost_bytes;
	[WmiDataId(7), read] sint32 sql_error_number;
	[WmiDataId(8), read] sint32 sql_error_state;
	[WmiDataId(9), read] sint32 sql_error_severity;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string task_name;
};
		
[dynamic: ToInstance, Description("Reports retention period used for master.sys.polaris_executed_requests_history and master.sys.polaris_executed_requests_text tables."): Amended,
    Guid("{CC6E7631-B435-427A-9430-1D400DD97D5B}"), locale("MS\\0x409"),
    DisplayName("polaris_executed_requests_retention_period"): Amended]
class XeSqlPkg_polaris_executed_requests_retention_period: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_executed_requests_retention_period: XeSqlPkg_polaris_executed_requests_retention_period
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 retention_perion_in_days;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{0039E1A4-85C0-487A-9725-E68018EC3A6D}"), locale("MS\\0x409"),
    DisplayName("polaris_executed_requests_history"): Amended]
class XeSqlPkg_polaris_executed_requests_history: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_executed_requests_history: XeSqlPkg_polaris_executed_requests_history
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint16 status;
	[WmiDataId(6), read] sint64 transaction_id;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(8), read, Extension("WmiTime")] uint64 end_time;
	[WmiDataId(9), read] sint16 command;
	[WmiDataId(10), read] uint64 total_elapsed_time_ms;
	[WmiDataId(11), read] uint64 data_processed_mb;
	[WmiDataId(12), read] uint64 error_code;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string query_hash;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string login_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string query_text;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string error;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string resourceId;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{0039E1A4-85C0-487A-9725-E68018EC3A6D}"), locale("MS\\0x409"),
    DisplayName("polaris_executed_requests_history"): Amended]
class XeSqlPkg_polaris_executed_requests_history: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class polaris_executed_requests_history: XeSqlPkg_polaris_executed_requests_history
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 transaction_id;
	[WmiDataId(6), read] uint64 total_elapsed_time_ms;
	[WmiDataId(7), read] uint64 error_code;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string identityJson;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string resourceId;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string propertiesJson;
};
		
[dynamic: ToInstance, Description("Unexpected exceptions during rejected rows processing."): Amended,
    Guid("{E924EB1A-62F8-4FAF-9133-3D4BA4C2CF21}"), locale("MS\\0x409"),
    DisplayName("polaris_rejected_rows_exception"): Amended]
class XeSqlPkg_polaris_rejected_rows_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_rejected_rows_exception: XeSqlPkg_polaris_rejected_rows_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 sql_error_number;
	[WmiDataId(6), read] sint32 sql_error_state;
	[WmiDataId(7), read] sint32 sql_error_severity;
	[WmiDataId(8), read] sint32 last_error;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string exception_type;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Details of overwritten query response exception"): Amended,
    Guid("{98465A07-A590-4D5B-83D5-1FE12FCD5E1F}"), locale("MS\\0x409"),
    DisplayName("polaris_rejected_rows_exception_details"): Amended]
class XeSqlPkg_polaris_rejected_rows_exception_details: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_rejected_rows_exception_details: XeSqlPkg_polaris_rejected_rows_exception_details
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 old_sql_error_number;
	[WmiDataId(6), read] sint32 old_sql_error_state;
	[WmiDataId(7), read] sint32 old_sql_error_severity;
	[WmiDataId(8), read] sint32 new_sql_error_number;
	[WmiDataId(9), read] sint32 new_sql_error_state;
	[WmiDataId(10), read] sint32 new_sql_error_severity;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
};
		
[dynamic: ToInstance, Description("Reports status of rejected rows aggregation processing"): Amended,
    Guid("{ED416EF9-A472-4F22-8343-4528BDD04DC2}"), locale("MS\\0x409"),
    DisplayName("polaris_rejected_rows_aggregations"): Amended]
class XeSqlPkg_polaris_rejected_rows_aggregations: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_rejected_rows_aggregations: XeSqlPkg_polaris_rejected_rows_aggregations
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 billable_data_written_bytes;
	[WmiDataId(6), read] uint64 data_written_bytes;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Unexpected exceptions during data ingestion into polaris history tables"): Amended,
    Guid("{CE4F7EF9-7984-4866-BF58-B0C9E0604780}"), locale("MS\\0x409"),
    DisplayName("polaris_write_distributed_query_history_exception"): Amended]
class XeSqlPkg_polaris_write_distributed_query_history_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_write_distributed_query_history_exception: XeSqlPkg_polaris_write_distributed_query_history_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 data_processed_bytes_sum;
	[WmiDataId(6), read] uint32 error;
	[WmiDataId(7), read] sint8  bill_affected;
	[WmiDataId(8), read] sint8  is_openrowset_local_stats_query;
	[WmiDataId(9), read] sint8  is_openrowset_file_cardinality_query;
	[WmiDataId(10), read] sint8  is_internal_delta_query;
	[WmiDataId(11), read] sint8  is_polaris_external_table_stats_query;
	[WmiDataId(12), read] sint8  is_budget_limit_exceeded;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string error_message;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("DW log trace."): Amended,
    Guid("{79E69E40-24CD-49C2-BA88-4C4449205EF9}"), locale("MS\\0x409"),
    DisplayName("dw_log_trace"): Amended]
class XeSqlPkg_dw_log_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dw_log_trace: XeSqlPkg_dw_log_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 trace_level;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string trace_level_str;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string component;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string message;
};
		
[dynamic: ToInstance, Description("DW perf trace."): Amended,
    Guid("{54D2B97A-ED44-4BC8-A5A9-91B1928A835E}"), locale("MS\\0x409"),
    DisplayName("dw_perf_trace"): Amended]
class XeSqlPkg_dw_perf_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dw_perf_trace: XeSqlPkg_dw_perf_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 metric_value;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string metric_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string metric_type;
};
		
[dynamic: ToInstance, Description("Fired by the VDW frontend from stored procedure sp_drop_storage_location."): Amended,
    Guid("{6075805a-27ab-4e5a-a9f8-41e7ab78403b}"), locale("MS\\0x409"),
    DisplayName("vdw_sp_drop_storage_location"): Amended]
class XeSqlPkg_vdw_sp_drop_storage_location: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vdw_sp_drop_storage_location: XeSqlPkg_vdw_sp_drop_storage_location
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration_ms;
	[WmiDataId(6), read] sint32 sql_error_number;
	[WmiDataId(7), read] sint32 sql_error_state;
	[WmiDataId(8), read] sint32 sql_error_severity;
	[WmiDataId(9), read] sint32 storage_error_number;
	[WmiDataId(10), read] sint32 statement_number;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string location_type;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string credential_identity;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string batch_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("Fires after distributed query result is returned."): Amended,
    Guid("{FEF6C871-3912-447D-BA86-4BF284A513B9}"), locale("MS\\0x409"),
    DisplayName("polaris_metrics_queries"): Amended]
class XeSqlPkg_polaris_metrics_queries: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_metrics_queries: XeSqlPkg_polaris_metrics_queries
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 Queries;
	[WmiDataId(6), read] uint64 QueryDataProcessed;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string Result;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string PoolName;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string NodeName;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string ClusterName;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Fires Resource Health signal after distributed query on Polaris finishes."): Amended,
    Guid("{E04225A7-78FB-4145-85AA-0B62F2969039}"), locale("MS\\0x409"),
    DisplayName("polaris_metrics_query_rh"): Amended]
class XeSqlPkg_polaris_metrics_query_rh: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_metrics_query_rh: XeSqlPkg_polaris_metrics_query_rh
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 query_finish;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string is_success;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string is_user_error;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string arm_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string PoolName;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Fires after data is processed."): Amended,
    Guid("{05DD787E-2FA9-42C5-ABE9-1DD8F0C9C8FC}"), locale("MS\\0x409"),
    DisplayName("polaris_metrics_data_processed"): Amended]
class XeSqlPkg_polaris_metrics_data_processed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_metrics_data_processed: XeSqlPkg_polaris_metrics_data_processed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 DataProcessed;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string PoolName;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string NodeName;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string ClusterName;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Fires after write to distributed query history tables fail."): Amended,
    Guid("{035F5752-B9FC-4CD0-8A17-F7F7AC7BC8A8}"), locale("MS\\0x409"),
    DisplayName("polaris_internal_metrics_distributed_query_history_tables"): Amended]
class XeSqlPkg_polaris_internal_metrics_distributed_query_history_tables: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class polaris_internal_metrics_distributed_query_history_tables: XeSqlPkg_polaris_internal_metrics_distributed_query_history_tables
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 WriteDistributedQueryHistoryState;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string ErrorStatus;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string ErrorMessage;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string PoolName;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string NodeName;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string ClusterName;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Fires after Synapse SQL Pool query finishes."): Amended,
    Guid("{56059632-2BD9-4485-8A21-BE0E940EA8A3}"), locale("MS\\0x409"),
    DisplayName("synapse_sql_pool_metrics_query"): Amended]
class XeSqlPkg_synapse_sql_pool_metrics_query: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class synapse_sql_pool_metrics_query: XeSqlPkg_synapse_sql_pool_metrics_query
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 QueryFinish;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string is_success;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string is_user_error;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string arm_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string PoolName;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Failpoint after indices on fulltext fragment are dropped."): Amended,
    Guid("{6a7a8e8a-f1c2-437c-83ea-24ebd5ac2a27}"), locale("MS\\0x409"),
    DisplayName("fragment_indices_dropped_failpoint"): Amended]
class XeSqlPkg_fragment_indices_dropped_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fragment_indices_dropped_failpoint: XeSqlPkg_fragment_indices_dropped_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] sint32 fragment_id;
	[WmiDataId(7), read, Pointer] object  to_raise_pointer;
};
		
[dynamic: ToInstance, Description("Reports aggregated time stats of several file operations and the extraction process around it. Distinct event per each file and each processing thread."): Amended,
    Guid("{6DAE73C5-E1B9-4434-9284-87CE383C2933}"), locale("MS\\0x409"),
    DisplayName("external_extractor_file_operations_profile"): Amended]
class XeSqlPkg_external_extractor_file_operations_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_extractor_file_operations_profile: XeSqlPkg_external_extractor_file_operations_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint32 extractor_worker_id;
	[WmiDataId(7), read] sint32 file_job_id;
	[WmiDataId(8), read] uint64 get_file_job_elapsed_time_ms;
	[WmiDataId(9), read] uint64 file_size_bytes;
	[WmiDataId(10), read] uint64 row_count;
	[WmiDataId(11), read] sint8  end_of_file_rowset;
	[WmiDataId(12), read] uint64 init_extractor_elapsed_time_ms;
	[WmiDataId(13), read] uint64 init_extractor_cpu_time_ms;
	[WmiDataId(14), read] uint64 file_open_elapsed_time_ms;
	[WmiDataId(15), read] uint64 first_fill_batch_elapsed_time_ms;
	[WmiDataId(16), read] uint64 first_fill_batch_cpu_time_ms;
	[WmiDataId(17), read] uint64 fill_batch_elapsed_time_ms;
	[WmiDataId(18), read] uint64 fill_batch_cpu_time_ms;
	[WmiDataId(19), read] uint64 fill_batch_count;
	[WmiDataId(20), read] uint64 sync_read_max_elapsed_time_ms;
	[WmiDataId(21), read] uint64 sync_read_elapsed_time_ms;
	[WmiDataId(22), read] uint64 sync_read_cpu_time_ms;
	[WmiDataId(23), read] uint64 sync_read_count;
	[WmiDataId(24), read] uint64 sync_read_total_size_bytes;
	[WmiDataId(25), read] uint64 async_read_request_elapsed_time_ms;
	[WmiDataId(26), read] uint64 async_read_request_cpu_time_ms;
	[WmiDataId(27), read] uint64 async_read_count;
	[WmiDataId(28), read] uint64 async_read_requested_total_size_bytes;
	[WmiDataId(29), read] uint64 async_read_completion_max_elapsed_time_ms;
	[WmiDataId(30), read] uint64 async_read_completion_elapsed_time_ms;
	[WmiDataId(31), read] uint64 async_read_completion_cpu_time_ms;
	[WmiDataId(32), read] uint64 peak_pmo_memory_mb;
	[WmiDataId(33), read] uint64 end_pmo_memory_mb;
	[WmiDataId(34), read] uint64 peak_global_pmo_memory_mb;
	[WmiDataId(35), read] uint64 end_global_pmo_memory_mb;
	[WmiDataId(36), read] uint64 init_memory_mb;
	[WmiDataId(37), read] uint64 peak_prefetch_memory_mb;
	[WmiDataId(38), read] uint64 end_prefetch_memory_mb;
	[WmiDataId(39), read, StringTermination("NullTerminated"), Format("w")] string extractor_runtime_stats;
	[WmiDataId(40), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(41), read, StringTermination("NullTerminated"), Format("w")] string extractor_info_package;
	[WmiDataId(42), read, StringTermination("NullTerminated"), Format("w")] string sql_info_package;
	[WmiDataId(43), read, Extension("Variant")] object query_hash;
};
		
[dynamic: ToInstance, Description("The file offset aligned by buffer size was found in prefetched buffers."): Amended,
    Guid("{594F1C2D-C317-49B7-ADFE-D44FA0C57535}"), locale("MS\\0x409"),
    DisplayName("external_extractor_read_prefetch_hit"): Amended]
class XeSqlPkg_external_extractor_read_prefetch_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_extractor_read_prefetch_hit: XeSqlPkg_external_extractor_read_prefetch_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 file_offset;
	[WmiDataId(6), read] uint64 actual_file_offset;
	[WmiDataId(7), read] uint64 buffer_size;
};
		
[dynamic: ToInstance, Description("The file offset aligned by buffer size is missing in prefetched buffers."): Amended,
    Guid("{8A1798E7-5ED3-44CC-83BE-C617E2A65629}"), locale("MS\\0x409"),
    DisplayName("external_extractor_read_prefetch_miss"): Amended]
class XeSqlPkg_external_extractor_read_prefetch_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_extractor_read_prefetch_miss: XeSqlPkg_external_extractor_read_prefetch_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 file_offset;
	[WmiDataId(6), read] uint64 buffer_size;
};
		
[dynamic: ToInstance, Description("File read prefetch was scheduled asynchronously."): Amended,
    Guid("{9EFFFB90-B75B-43DD-884A-25611D4E9C40}"), locale("MS\\0x409"),
    DisplayName("external_extractor_read_prefetch_scheduled"): Amended]
class XeSqlPkg_external_extractor_read_prefetch_scheduled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_extractor_read_prefetch_scheduled: XeSqlPkg_external_extractor_read_prefetch_scheduled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 file_offset;
	[WmiDataId(6), read] uint64 buffer_size;
	[WmiDataId(7), read] uint32 async_read_hresult;
};
		
[dynamic: ToInstance, Description("Waiting for file read prefetch."): Amended,
    Guid("{5BCACBFC-D65A-4944-8A9E-58E8DAC10EE6}"), locale("MS\\0x409"),
    DisplayName("external_extractor_read_prefetch_wait"): Amended]
class XeSqlPkg_external_extractor_read_prefetch_wait: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_extractor_read_prefetch_wait: XeSqlPkg_external_extractor_read_prefetch_wait
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 file_offset;
	[WmiDataId(6), read] uint64 buffer_size;
	[WmiDataId(7), read] uint64 actual_file_offset;
	[WmiDataId(8), read] uint32 wait_hresult;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{667B5EAF-8D51-471C-A650-1CCFD21374E7}"), locale("MS\\0x409"),
    DisplayName("external_extractor_path_from_cache"): Amended]
class XeSqlPkg_external_extractor_path_from_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class external_extractor_path_from_cache: XeSqlPkg_external_extractor_path_from_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 file_timestamp;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string source_path;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string eds;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string cache_path;
};
		
[dynamic: ToInstance, Description("Exception channel for the background toad tasks."): Amended,
    Guid("{f1ce8cd5-4e38-4b11-b42d-0930e168f07c}"), locale("MS\\0x409"),
    DisplayName("toad_exception"): Amended]
class XeSqlPkg_toad_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_exception: XeSqlPkg_toad_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read] sint32 error_severity;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read] sint64 workitem_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string workitem_type;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string producer_type;
};
		
[dynamic: ToInstance, Description("Exception channel for the background toad tasks."): Amended,
    Guid("{f1ce8cd5-4e38-4b11-b42d-0930e168f07c}"), locale("MS\\0x409"),
    DisplayName("toad_exception"): Amended]
class XeSqlPkg_toad_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class toad_exception: XeSqlPkg_toad_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read] sint32 error_severity;
	[WmiDataId(7), read] sint32 error_state;
	[WmiDataId(8), read] uint32 thread_id;
	[WmiDataId(9), read] sint64 workitem_id;
	[WmiDataId(10), read] uint32 line_number;
	[WmiDataId(11), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string error_message_no_pii;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string error_context;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string workitem_type;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string producer_type;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string file_name;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string function_name;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string component_name;
};
		
[dynamic: ToInstance, Description("Toad work discovery event."): Amended,
    Guid("{0f9b6271-ce6d-4010-bc31-fab62dceb8ae}"), locale("MS\\0x409"),
    DisplayName("toad_discovery"): Amended]
class XeSqlPkg_toad_discovery: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_discovery: XeSqlPkg_toad_discovery
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(6), read, Extension("WmiTime")] uint64 end_time;
	[WmiDataId(7), read] uint16 actions_discovered;
	[WmiDataId(8), read] uint16 zones_analyzed;
	[WmiDataId(9), read] sint64 producer_id;
	[WmiDataId(10), read] uint32 total_zone_count;
	[WmiDataId(11), read] uint16 actions_failed;
	[WmiDataId(12), read] uint16 retriable_errors;
	[WmiDataId(13), read] uint16 send_actions_failed;
	[WmiDataId(14), read] uint32 error_number;
	[WmiDataId(15), read] uint32 error_state;
	[WmiDataId(16), read] sint32 error_severity;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string phase;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string trigger;
};
		
[dynamic: ToInstance, Description("Toad work execution event."): Amended,
    Guid("{8fb30e25-fdc3-4727-8d62-7341a5627be2}"), locale("MS\\0x409"),
    DisplayName("toad_work_execution"): Amended]
class XeSqlPkg_toad_work_execution: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_work_execution: XeSqlPkg_toad_work_execution
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(6), read, Extension("WmiTime")] uint64 end_time;
	[WmiDataId(7), read] sint64 workitem_id;
	[WmiDataId(8), read] sint64 producer_id;
	[WmiDataId(9), read] sint32 memory_required_kb;
	[WmiDataId(10), read] sint32 error_number;
	[WmiDataId(11), read] sint32 error_state;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string workitem_type;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string handler_state;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string description;
};
		
[dynamic: ToInstance, Description("Toad work execution event."): Amended,
    Guid("{8fb30e25-fdc3-4727-8d62-7341a5627be2}"), locale("MS\\0x409"),
    DisplayName("toad_work_execution"): Amended]
class XeSqlPkg_toad_work_execution: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class toad_work_execution: XeSqlPkg_toad_work_execution
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(6), read, Extension("WmiTime")] uint64 end_time;
	[WmiDataId(7), read] sint64 workitem_id;
	[WmiDataId(8), read] sint64 producer_id;
	[WmiDataId(9), read] uint64 grant_memory_required_in_bytes;
	[WmiDataId(10), read] uint64 grant_wait_duration_ms;
	[WmiDataId(11), read] uint32 grant_configured_units;
	[WmiDataId(12), read] uint32 grant_available_units;
	[WmiDataId(13), read] uint32 grant_acquires_count;
	[WmiDataId(14), read] uint32 grant_waiters_count;
	[WmiDataId(15), read] uint64 elapsed_time_in_ms;
	[WmiDataId(16), read] uint64 total_cpu_time_in_ms;
	[WmiDataId(17), read] uint64 total_user_time_in_ms;
	[WmiDataId(18), read] uint64 total_kernel_time_in_ms;
	[WmiDataId(19), read] uint32 total_scan_count;
	[WmiDataId(20), read] uint64 total_logical_bytes_read;
	[WmiDataId(21), read] uint64 total_physical_bytes_read;
	[WmiDataId(22), read] sint64 total_bytes_read_ahead;
	[WmiDataId(23), read] uint64 total_bytes_written;
	[WmiDataId(24), read] uint64 total_segments_read;
	[WmiDataId(25), read] uint64 total_sort_bytes_used;
	[WmiDataId(26), read] uint32 error_number;
	[WmiDataId(27), read] uint32 error_state;
	[WmiDataId(28), read] uint32 error_severity;
	[WmiDataId(29), read, StringTermination("NullTerminated"), Format("w")] string additional_context;
	[WmiDataId(30), read, StringTermination("NullTerminated"), Format("w")] string workitem_type;
	[WmiDataId(31), read, StringTermination("NullTerminated"), Format("w")] string producer_type;
	[WmiDataId(32), read, StringTermination("NullTerminated"), Format("w")] string handler_state;
	[WmiDataId(33), read, Extension("Guid")] guid logical_database_id;
};
		
[dynamic: ToInstance, Description("Toad memory semaphore request event."): Amended,
    Guid("{f3e2705d-a3d1-4d26-83c9-d935c969aecc}"), locale("MS\\0x409"),
    DisplayName("toad_memory_semaphore_request"): Amended]
class XeSqlPkg_toad_memory_semaphore_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_memory_semaphore_request: XeSqlPkg_toad_memory_semaphore_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 workitem_id;
	[WmiDataId(6), read] uint64 requested_units;
	[WmiDataId(7), read] sint8  is_granted;
	[WmiDataId(8), read] uint64 wait_duration_ms;
	[WmiDataId(9), read] uint64 semaphore_configured_units;
	[WmiDataId(10), read] uint64 semaphore_available_units;
	[WmiDataId(11), read] sint32 semaphore_acquirers_count;
	[WmiDataId(12), read] sint32 semaphore_waiters_count;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string workitem_type;
};
		
[dynamic: ToInstance, Description("Toad memory pressure notification event."): Amended,
    Guid("{194ad9eb-b375-4eac-9c20-eca03d92d325}"), locale("MS\\0x409"),
    DisplayName("toad_memory_pressure_notification"): Amended]
class XeSqlPkg_toad_memory_pressure_notification: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_memory_pressure_notification: XeSqlPkg_toad_memory_pressure_notification
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string notification_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string pressure_level;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string aborted_workitem_ids;
};
		
[dynamic: ToInstance, Description("Toad tuning zone circuit breaker event."): Amended,
    Guid("{ea12305d-1e23-4437-9803-b3989f8b7687}"), locale("MS\\0x409"),
    DisplayName("toad_tuning_zone_circuit_breaker"): Amended]
class XeSqlPkg_toad_tuning_zone_circuit_breaker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_tuning_zone_circuit_breaker: XeSqlPkg_toad_tuning_zone_circuit_breaker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 iterations_observed;
	[WmiDataId(6), read] uint32 iterations_paused;
	[WmiDataId(7), read] uint32 iterations_to_pause;
	[WmiDataId(8), read] uint32 actions_succeeded;
	[WmiDataId(9), read] uint32 actions_failed;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string action_execution_state;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string tuning_zone;
};
		
[dynamic: ToInstance, Description("Toad task execution over DQP."): Amended,
    Guid("{f8c8384a-0ba6-451f-a7f5-c78225cf974a}"), locale("MS\\0x409"),
    DisplayName("toad_dqp_execution"): Amended]
class XeSqlPkg_toad_dqp_execution: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_dqp_execution: XeSqlPkg_toad_dqp_execution
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 workitem_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string workitem_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string request_xml;
};
		
[dynamic: ToInstance, Description("Toad star cell tuning metrics event."): Amended,
    Guid("{604a9c53-f08a-4f75-9327-45d11a1c01b3}"), locale("MS\\0x409"),
    DisplayName("toad_star_cell_tuning_metrics"): Amended]
class XeSqlPkg_toad_star_cell_tuning_metrics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_star_cell_tuning_metrics: XeSqlPkg_toad_star_cell_tuning_metrics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 object_id;
	[WmiDataId(6), read] uint64 index_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint16 total_cell_count;
	[WmiDataId(9), read] uint16 active_cell_count;
	[WmiDataId(10), read] uint64 analyzed_rowgroup_count;
	[WmiDataId(11), read] uint64 scanned_rowgroup_count;
	[WmiDataId(12), read] uint64 max_depth;
	[WmiDataId(13), read] uint64 total_depth;
	[WmiDataId(14), read] sint8  for_discovery;
	[WmiDataId(15), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string active_cells;
};
		
[dynamic: ToInstance, Description("Toad delta force tuning metrics event."): Amended,
    Guid("{e8de44a6-1bb4-4ed9-8de3-be8fae5268a8}"), locale("MS\\0x409"),
    DisplayName("toad_delta_force_tuning_metrics"): Amended]
class XeSqlPkg_toad_delta_force_tuning_metrics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_delta_force_tuning_metrics: XeSqlPkg_toad_delta_force_tuning_metrics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 object_id;
	[WmiDataId(6), read] uint64 index_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint64 owning_rowset_id;
	[WmiDataId(9), read] uint16 cell_count;
	[WmiDataId(10), read] uint16 active_cell_count;
	[WmiDataId(11), read] uint64 analyzed_row_count;
	[WmiDataId(12), read] sint8  for_discovery;
	[WmiDataId(13), read, Extension("Guid")] guid logical_database_id;
};
		
[dynamic: ToInstance, Description("Toad cell tuning metrics event."): Amended,
    Guid("{1759b441-7634-4483-bfd2-3d3cf808fe79}"), locale("MS\\0x409"),
    DisplayName("toad_cell_tuning_metrics"): Amended]
class XeSqlPkg_toad_cell_tuning_metrics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_cell_tuning_metrics: XeSqlPkg_toad_cell_tuning_metrics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 object_id;
	[WmiDataId(6), read] uint64 index_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint16 total_cell_count;
	[WmiDataId(9), read] uint64 analyzed_rowgroup_count;
	[WmiDataId(10), read] uint64 analyzed_row_count;
	[WmiDataId(11), read] uint64 analyzed_poor_rowgroup_count;
	[WmiDataId(12), read] uint64 scanned_poor_rowgroup_count;
	[WmiDataId(13), read] sint8  for_discovery;
	[WmiDataId(14), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string active_cells;
};
		
[dynamic: ToInstance, Description("Toad OCCI tuning metrics event."): Amended,
    Guid("{df898d7e-a28c-4445-96e7-2fde254d0ec1}"), locale("MS\\0x409"),
    DisplayName("toad_occi_tuning_metrics"): Amended]
class XeSqlPkg_toad_occi_tuning_metrics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_occi_tuning_metrics: XeSqlPkg_toad_occi_tuning_metrics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 object_id;
	[WmiDataId(6), read] uint64 index_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint64 max_breadth;
	[WmiDataId(9), read] uint64 total_overlap;
	[WmiDataId(10), read] uint64 analyzed_rowgroup_count;
	[WmiDataId(11), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string active_cells;
};
		
[dynamic: ToInstance, Description("Toad delete bitmap tuning metrics event."): Amended,
    Guid("{7d2108b1-b90a-48ed-ac40-2668c0532f9b}"), locale("MS\\0x409"),
    DisplayName("toad_delete_bitmap_tuning_metrics"): Amended]
class XeSqlPkg_toad_delete_bitmap_tuning_metrics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class toad_delete_bitmap_tuning_metrics: XeSqlPkg_toad_delete_bitmap_tuning_metrics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 object_id;
	[WmiDataId(6), read] uint64 index_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint16 total_cells;
	[WmiDataId(9), read] uint16 total_cells_with_min_threshold_stale_deletes;
	[WmiDataId(10), read] uint64 total_stale_deletes;
	[WmiDataId(11), read] uint16 total_rowgroups;
	[WmiDataId(12), read] uint16 total_rowgroups_with_min_threshold_uncompressed_deletes;
	[WmiDataId(13), read] uint64 total_uncompressed_deletes;
	[WmiDataId(14), read] sint8  for_discovery;
	[WmiDataId(15), read, Extension("Guid")] guid logical_database_id;
};
		
[dynamic: ToInstance, Description("FIDO Metadata Rowset update error."): Amended,
    Guid("{439fb7fb-1448-4d22-99d4-9597f84d410d}"), locale("MS\\0x409"),
    DisplayName("fido_glm_rowset_serialization_error"): Amended]
class XeSqlPkg_fido_glm_rowset_serialization_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_glm_rowset_serialization_error: XeSqlPkg_fido_glm_rowset_serialization_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 victim_txn_id;
	[WmiDataId(6), read] uint64 owner_txn_id;
	[WmiDataId(7), read] uint32 state;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string key_data;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string operation_type;
	[WmiDataId(12), read, Extension("Guid")] guid operation_id;
	[WmiDataId(13), read, Extension("Guid")] guid logical_database_id;
};
		
[dynamic: ToInstance, Description("FIDO GLM Rowset operation."): Amended,
    Guid("{f5893f38-0856-4e5c-8aa3-6070b3e85084}"), locale("MS\\0x409"),
    DisplayName("fido_glm_rowset_operation"): Amended]
class XeSqlPkg_fido_glm_rowset_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_glm_rowset_operation: XeSqlPkg_fido_glm_rowset_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 txn_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(8), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string operation_type;
	[WmiDataId(10), read, Extension("Guid")] guid operation_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string key_data;
};
		
[dynamic: ToInstance, Description("FIDO LM log trace."): Amended,
    Guid("{f60955b7-c6b2-4a24-90cb-addac977b7d7}"), locale("MS\\0x409"),
    DisplayName("fido_lock_manager_message"): Amended]
class XeSqlPkg_fido_lock_manager_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_lock_manager_message: XeSqlPkg_fido_lock_manager_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(222),
				ValueMap { 
					"6", 
					"0", 
					"1", 
					"4", 
					"5", 
					"2", 
					"3" },
				Values { 
					"FidoLockOperationTypeCount", 
					"GetFidoLockRequest", 
					"GetFidoLockResponse", 
					"ReleaseAllFidoLocksRequest", 
					"ReleaseAllFidoLocksResponse", 
					"ReleaseFidoLockRequest", 
					"ReleaseFidoLockResponse" }
			] uint8 fidolm_operation_type;
	[WmiDataId(6), read] sint8  fidolm_is_user_xact;
	[WmiDataId(7), read] sint8  fidolm_is_recovery;
	[WmiDataId(8), read] sint8  fidolm_is_shutdown;
	[WmiDataId(9), read, 
				XEMapId(81),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 fidolm_lock_mode;
	[WmiDataId(10), read, 
				XEMapId(76),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"17", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4", 
					"16" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1", 
					"XACT" }
			] uint32 fidolm_resource_type;
	[WmiDataId(11), read] uint64 fidolm_txn_id;
	[WmiDataId(12), read] uint64 fidolm_parent_txn_id;
	[WmiDataId(13), read] uint16 fidolm_database_id;
	[WmiDataId(14), read] uint32 fidolm_lock_res_p0;
	[WmiDataId(15), read] uint32 fidolm_lock_res_p1;
	[WmiDataId(16), read] uint32 fidolm_lock_res_p2;
	[WmiDataId(17), read] uint32 fidolm_hresult;
	[WmiDataId(18), read, 
				XEMapId(90),
				ValueMap { 
					"-10", 
					"-9", 
					"-8", 
					"-2", 
					"-3", 
					"-7", 
					"-6", 
					"0", 
					"1", 
					"-5", 
					"-1", 
					"-4" },
				Values { 
					"FIDO_MANAGER_CANCEL", 
					"FIDO_MANAGER_NOT_FOUND", 
					"FIDO_PARSING_FAILED", 
					"CANCEL", 
					"DEADLOCK", 
					"KILL_BLOCKED_BY_SYSTEM_TASK", 
					"KILL_EXISTS", 
					"OK", 
					"OKWAIT", 
					"RESULTS_IN_DISTRIBUTED_MODE", 
					"TIMEDOUT", 
					"TMABORT" }
			] uint32 fidolm_lck_result;
	[WmiDataId(19), read] uint64 fidolm_lock_timeout;
	[WmiDataId(20), read, Extension("Guid")] guid fidolm_client_id;
};
		
[dynamic: ToInstance, Description("Fido xevent to establish rowgroup lineage."): Amended,
    Guid("{819b9adc-5641-4035-93da-7e5a24071086}"), locale("MS\\0x409"),
    DisplayName("fido_rowgroup_lineage"): Amended]
class XeSqlPkg_fido_rowgroup_lineage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_rowgroup_lineage: XeSqlPkg_fido_rowgroup_lineage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 object_id;
	[WmiDataId(6), read] uint64 index_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read, Extension("WmiTime")] uint64 rowgroup_creation_time;
	[WmiDataId(9), read] uint64 workitem_id;
	[WmiDataId(10), read] uint64 txn_version;
	[WmiDataId(11), read] sint8  is_txn_aborted;
	[WmiDataId(12), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string workitem_type;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string input_rowgroup_ids;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string output_rowgroup_ids;
};
		
[dynamic: ToInstance, Description("FIDO transaction trace."): Amended,
    Guid("{6651970b-a3c7-4462-8600-433d7148ecbf}"), locale("MS\\0x409"),
    DisplayName("fido_transaction"): Amended]
class XeSqlPkg_fido_transaction: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_transaction: XeSqlPkg_fido_transaction
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(216),
				ValueMap { 
					"4", 
					"5", 
					"24", 
					"0", 
					"1", 
					"12", 
					"13", 
					"10", 
					"11", 
					"2", 
					"3", 
					"18", 
					"19", 
					"8", 
					"9", 
					"14", 
					"15", 
					"21", 
					"23", 
					"20", 
					"25", 
					"22", 
					"6", 
					"7", 
					"16", 
					"17" },
				Values { 
					"Fido_Abort_Request", 
					"Fido_Abort_Response", 
					"Fido_Begin", 
					"Fido_Begin_Request", 
					"Fido_Begin_Response", 
					"Fido_ChangeTag_Request", 
					"Fido_ChangeTag_Response", 
					"Fido_CleanupAbortTran_Request", 
					"Fido_CleanupAbortTran_Response", 
					"Fido_Commit_Request", 
					"Fido_Commit_Response", 
					"Fido_GetGlobalMinWatermark_Request", 
					"Fido_GetGlobalMinWatermark_Response", 
					"Fido_GetList_Request", 
					"Fido_GetList_Response", 
					"Fido_Heartbeat_Request", 
					"Fido_Heartbeat_Response", 
					"Fido_Receive", 
					"Fido_RM", 
					"Fido_Send", 
					"Fido_SetToken", 
					"Fido_TM", 
					"Fido_TransactionState_Request", 
					"Fido_TransactionState_Response", 
					"Fido_UnenlistClient_Request", 
					"Fido_UnenlistClient_Response" }
			] uint8 tm_or_rm;
	[WmiDataId(6), read] sint32 trace_level;
	[WmiDataId(7), read, Extension("Guid")] guid request_id;
	[WmiDataId(8), read, Extension("Guid")] guid client_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string trace_level_str;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string function_name;
};
		
[dynamic: ToInstance, Description("FIDO TM log trace."): Amended,
    Guid("{6df61367-c421-4048-8589-21b170bd370e}"), locale("MS\\0x409"),
    DisplayName("fido_transaction_message"): Amended]
class XeSqlPkg_fido_transaction_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_transaction_message: XeSqlPkg_fido_transaction_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(216),
				ValueMap { 
					"4", 
					"5", 
					"24", 
					"0", 
					"1", 
					"12", 
					"13", 
					"10", 
					"11", 
					"2", 
					"3", 
					"18", 
					"19", 
					"8", 
					"9", 
					"14", 
					"15", 
					"21", 
					"23", 
					"20", 
					"25", 
					"22", 
					"6", 
					"7", 
					"16", 
					"17" },
				Values { 
					"Fido_Abort_Request", 
					"Fido_Abort_Response", 
					"Fido_Begin", 
					"Fido_Begin_Request", 
					"Fido_Begin_Response", 
					"Fido_ChangeTag_Request", 
					"Fido_ChangeTag_Response", 
					"Fido_CleanupAbortTran_Request", 
					"Fido_CleanupAbortTran_Response", 
					"Fido_Commit_Request", 
					"Fido_Commit_Response", 
					"Fido_GetGlobalMinWatermark_Request", 
					"Fido_GetGlobalMinWatermark_Response", 
					"Fido_GetList_Request", 
					"Fido_GetList_Response", 
					"Fido_Heartbeat_Request", 
					"Fido_Heartbeat_Response", 
					"Fido_Receive", 
					"Fido_RM", 
					"Fido_Send", 
					"Fido_SetToken", 
					"Fido_TM", 
					"Fido_TransactionState_Request", 
					"Fido_TransactionState_Response", 
					"Fido_UnenlistClient_Request", 
					"Fido_UnenlistClient_Response" }
			] uint8 message_direction;
	[WmiDataId(6), read, 
				XEMapId(216),
				ValueMap { 
					"4", 
					"5", 
					"24", 
					"0", 
					"1", 
					"12", 
					"13", 
					"10", 
					"11", 
					"2", 
					"3", 
					"18", 
					"19", 
					"8", 
					"9", 
					"14", 
					"15", 
					"21", 
					"23", 
					"20", 
					"25", 
					"22", 
					"6", 
					"7", 
					"16", 
					"17" },
				Values { 
					"Fido_Abort_Request", 
					"Fido_Abort_Response", 
					"Fido_Begin", 
					"Fido_Begin_Request", 
					"Fido_Begin_Response", 
					"Fido_ChangeTag_Request", 
					"Fido_ChangeTag_Response", 
					"Fido_CleanupAbortTran_Request", 
					"Fido_CleanupAbortTran_Response", 
					"Fido_Commit_Request", 
					"Fido_Commit_Response", 
					"Fido_GetGlobalMinWatermark_Request", 
					"Fido_GetGlobalMinWatermark_Response", 
					"Fido_GetList_Request", 
					"Fido_GetList_Response", 
					"Fido_Heartbeat_Request", 
					"Fido_Heartbeat_Response", 
					"Fido_Receive", 
					"Fido_RM", 
					"Fido_Send", 
					"Fido_SetToken", 
					"Fido_TM", 
					"Fido_TransactionState_Request", 
					"Fido_TransactionState_Response", 
					"Fido_UnenlistClient_Request", 
					"Fido_UnenlistClient_Response" }
			] uint8 message_type;
	[WmiDataId(7), read, 
				XEMapId(216),
				ValueMap { 
					"4", 
					"5", 
					"24", 
					"0", 
					"1", 
					"12", 
					"13", 
					"10", 
					"11", 
					"2", 
					"3", 
					"18", 
					"19", 
					"8", 
					"9", 
					"14", 
					"15", 
					"21", 
					"23", 
					"20", 
					"25", 
					"22", 
					"6", 
					"7", 
					"16", 
					"17" },
				Values { 
					"Fido_Abort_Request", 
					"Fido_Abort_Response", 
					"Fido_Begin", 
					"Fido_Begin_Request", 
					"Fido_Begin_Response", 
					"Fido_ChangeTag_Request", 
					"Fido_ChangeTag_Response", 
					"Fido_CleanupAbortTran_Request", 
					"Fido_CleanupAbortTran_Response", 
					"Fido_Commit_Request", 
					"Fido_Commit_Response", 
					"Fido_GetGlobalMinWatermark_Request", 
					"Fido_GetGlobalMinWatermark_Response", 
					"Fido_GetList_Request", 
					"Fido_GetList_Response", 
					"Fido_Heartbeat_Request", 
					"Fido_Heartbeat_Response", 
					"Fido_Receive", 
					"Fido_RM", 
					"Fido_Send", 
					"Fido_SetToken", 
					"Fido_TM", 
					"Fido_TransactionState_Request", 
					"Fido_TransactionState_Response", 
					"Fido_UnenlistClient_Request", 
					"Fido_UnenlistClient_Response" }
			] uint8 tm_or_rm;
	[WmiDataId(8), read] uint64 bsn;
	[WmiDataId(9), read] uint64 nested_bsn;
	[WmiDataId(10), read] uint64 asn;
	[WmiDataId(11), read] uint8 txn_type;
	[WmiDataId(12), read] uint8 tag;
	[WmiDataId(13), read] uint32 payload_type;
	[WmiDataId(14), read] uint32 list_type;
	[WmiDataId(15), read] uint8 txn_state;
	[WmiDataId(16), read] uint32 batch_size;
	[WmiDataId(17), read] uint64 failure_reason;
	[WmiDataId(18), read] uint64 epoch_datalossnumber;
	[WmiDataId(19), read] uint64 epoch_configurationnumber;
	[WmiDataId(20), read] uint64 min_watermark;
	[WmiDataId(21), read] uint64 read_counter;
	[WmiDataId(22), read, Extension("Guid")] guid request_id;
	[WmiDataId(23), read, Extension("Guid")] guid client_id;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string active_list;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string abort_list;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string cleanup_list;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string current_active_list;
};
		
[dynamic: ToInstance, Description("FIDO RM begin trace."): Amended,
    Guid("{d40f0d45-b626-4350-8ac5-08ceaac76eec}"), locale("MS\\0x409"),
    DisplayName("fido_rm_transaction_begin"): Amended]
class XeSqlPkg_fido_rm_transaction_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_rm_transaction_begin: XeSqlPkg_fido_rm_transaction_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(216),
				ValueMap { 
					"4", 
					"5", 
					"24", 
					"0", 
					"1", 
					"12", 
					"13", 
					"10", 
					"11", 
					"2", 
					"3", 
					"18", 
					"19", 
					"8", 
					"9", 
					"14", 
					"15", 
					"21", 
					"23", 
					"20", 
					"25", 
					"22", 
					"6", 
					"7", 
					"16", 
					"17" },
				Values { 
					"Fido_Abort_Request", 
					"Fido_Abort_Response", 
					"Fido_Begin", 
					"Fido_Begin_Request", 
					"Fido_Begin_Response", 
					"Fido_ChangeTag_Request", 
					"Fido_ChangeTag_Response", 
					"Fido_CleanupAbortTran_Request", 
					"Fido_CleanupAbortTran_Response", 
					"Fido_Commit_Request", 
					"Fido_Commit_Response", 
					"Fido_GetGlobalMinWatermark_Request", 
					"Fido_GetGlobalMinWatermark_Response", 
					"Fido_GetList_Request", 
					"Fido_GetList_Response", 
					"Fido_Heartbeat_Request", 
					"Fido_Heartbeat_Response", 
					"Fido_Receive", 
					"Fido_RM", 
					"Fido_Send", 
					"Fido_SetToken", 
					"Fido_TM", 
					"Fido_TransactionState_Request", 
					"Fido_TransactionState_Response", 
					"Fido_UnenlistClient_Request", 
					"Fido_UnenlistClient_Response" }
			] uint8 tm_or_rm;
	[WmiDataId(6), read, 
				XEMapId(216),
				ValueMap { 
					"4", 
					"5", 
					"24", 
					"0", 
					"1", 
					"12", 
					"13", 
					"10", 
					"11", 
					"2", 
					"3", 
					"18", 
					"19", 
					"8", 
					"9", 
					"14", 
					"15", 
					"21", 
					"23", 
					"20", 
					"25", 
					"22", 
					"6", 
					"7", 
					"16", 
					"17" },
				Values { 
					"Fido_Abort_Request", 
					"Fido_Abort_Response", 
					"Fido_Begin", 
					"Fido_Begin_Request", 
					"Fido_Begin_Response", 
					"Fido_ChangeTag_Request", 
					"Fido_ChangeTag_Response", 
					"Fido_CleanupAbortTran_Request", 
					"Fido_CleanupAbortTran_Response", 
					"Fido_Commit_Request", 
					"Fido_Commit_Response", 
					"Fido_GetGlobalMinWatermark_Request", 
					"Fido_GetGlobalMinWatermark_Response", 
					"Fido_GetList_Request", 
					"Fido_GetList_Response", 
					"Fido_Heartbeat_Request", 
					"Fido_Heartbeat_Response", 
					"Fido_Receive", 
					"Fido_RM", 
					"Fido_Send", 
					"Fido_SetToken", 
					"Fido_TM", 
					"Fido_TransactionState_Request", 
					"Fido_TransactionState_Response", 
					"Fido_UnenlistClient_Request", 
					"Fido_UnenlistClient_Response" }
			] uint8 start_reason;
	[WmiDataId(7), read] uint64 read_version;
	[WmiDataId(8), read] uint64 current_read_version;
	[WmiDataId(9), read] uint64 write_version;
	[WmiDataId(10), read] uint64 nested_write_version;
	[WmiDataId(11), read] uint64 nested_write_statement_version;
	[WmiDataId(12), read] uint64 nested_write_taskgroup_version;
	[WmiDataId(13), read] uint64 nested_write_task_version;
	[WmiDataId(14), read] uint64 max_asn;
	[WmiDataId(15), read] uint8 tag;
	[WmiDataId(16), read] uint8 is_pit;
	[WmiDataId(17), read] uint64 epoch_datalossnumber;
	[WmiDataId(18), read] uint64 epoch_configurationnumber;
	[WmiDataId(19), read] uint64 min_watermark;
	[WmiDataId(20), read] uint64 min_watermark_asn;
	[WmiDataId(21), read] uint64 read_counter;
	[WmiDataId(22), read] uint64 prev_read_counter;
	[WmiDataId(23), read, Extension("Guid")] guid request_id;
	[WmiDataId(24), read, Extension("Guid")] guid client_id;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string active_list;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string current_active_list;
};
		
[dynamic: ToInstance, Description("FIDO RM commit trace."): Amended,
    Guid("{e309c75f-d230-42b2-a473-9276e947a1d4}"), locale("MS\\0x409"),
    DisplayName("fido_rm_transaction_commit"): Amended]
class XeSqlPkg_fido_rm_transaction_commit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_rm_transaction_commit: XeSqlPkg_fido_rm_transaction_commit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(216),
				ValueMap { 
					"4", 
					"5", 
					"24", 
					"0", 
					"1", 
					"12", 
					"13", 
					"10", 
					"11", 
					"2", 
					"3", 
					"18", 
					"19", 
					"8", 
					"9", 
					"14", 
					"15", 
					"21", 
					"23", 
					"20", 
					"25", 
					"22", 
					"6", 
					"7", 
					"16", 
					"17" },
				Values { 
					"Fido_Abort_Request", 
					"Fido_Abort_Response", 
					"Fido_Begin", 
					"Fido_Begin_Request", 
					"Fido_Begin_Response", 
					"Fido_ChangeTag_Request", 
					"Fido_ChangeTag_Response", 
					"Fido_CleanupAbortTran_Request", 
					"Fido_CleanupAbortTran_Response", 
					"Fido_Commit_Request", 
					"Fido_Commit_Response", 
					"Fido_GetGlobalMinWatermark_Request", 
					"Fido_GetGlobalMinWatermark_Response", 
					"Fido_GetList_Request", 
					"Fido_GetList_Response", 
					"Fido_Heartbeat_Request", 
					"Fido_Heartbeat_Response", 
					"Fido_Receive", 
					"Fido_RM", 
					"Fido_Send", 
					"Fido_SetToken", 
					"Fido_TM", 
					"Fido_TransactionState_Request", 
					"Fido_TransactionState_Response", 
					"Fido_UnenlistClient_Request", 
					"Fido_UnenlistClient_Response" }
			] uint8 tm_or_rm;
	[WmiDataId(6), read] uint64 read_version;
	[WmiDataId(7), read] uint64 current_read_version;
	[WmiDataId(8), read] uint64 write_version;
	[WmiDataId(9), read] uint64 nested_write_version;
	[WmiDataId(10), read] uint64 nested_write_statement_version;
	[WmiDataId(11), read] uint64 nested_write_taskgroup_version;
	[WmiDataId(12), read] uint64 nested_write_task_version;
	[WmiDataId(13), read] uint64 max_asn;
	[WmiDataId(14), read] uint8 tag;
	[WmiDataId(15), read] uint8 is_pit;
	[WmiDataId(16), read] uint64 epoch_datalossnumber;
	[WmiDataId(17), read] uint64 epoch_configurationnumber;
	[WmiDataId(18), read] uint64 min_watermark;
	[WmiDataId(19), read] uint64 min_watermark_asn;
	[WmiDataId(20), read] uint64 read_counter;
	[WmiDataId(21), read] uint64 prev_read_counter;
	[WmiDataId(22), read, Extension("Guid")] guid request_id;
	[WmiDataId(23), read, Extension("Guid")] guid client_id;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string active_list;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string current_active_list;
};
		
[dynamic: ToInstance, Description("FIDO RM abort trace."): Amended,
    Guid("{878b9ff5-53a9-4b73-ba40-6cc3321617b7}"), locale("MS\\0x409"),
    DisplayName("fido_rm_transaction_abort"): Amended]
class XeSqlPkg_fido_rm_transaction_abort: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_rm_transaction_abort: XeSqlPkg_fido_rm_transaction_abort
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(216),
				ValueMap { 
					"4", 
					"5", 
					"24", 
					"0", 
					"1", 
					"12", 
					"13", 
					"10", 
					"11", 
					"2", 
					"3", 
					"18", 
					"19", 
					"8", 
					"9", 
					"14", 
					"15", 
					"21", 
					"23", 
					"20", 
					"25", 
					"22", 
					"6", 
					"7", 
					"16", 
					"17" },
				Values { 
					"Fido_Abort_Request", 
					"Fido_Abort_Response", 
					"Fido_Begin", 
					"Fido_Begin_Request", 
					"Fido_Begin_Response", 
					"Fido_ChangeTag_Request", 
					"Fido_ChangeTag_Response", 
					"Fido_CleanupAbortTran_Request", 
					"Fido_CleanupAbortTran_Response", 
					"Fido_Commit_Request", 
					"Fido_Commit_Response", 
					"Fido_GetGlobalMinWatermark_Request", 
					"Fido_GetGlobalMinWatermark_Response", 
					"Fido_GetList_Request", 
					"Fido_GetList_Response", 
					"Fido_Heartbeat_Request", 
					"Fido_Heartbeat_Response", 
					"Fido_Receive", 
					"Fido_RM", 
					"Fido_Send", 
					"Fido_SetToken", 
					"Fido_TM", 
					"Fido_TransactionState_Request", 
					"Fido_TransactionState_Response", 
					"Fido_UnenlistClient_Request", 
					"Fido_UnenlistClient_Response" }
			] uint8 tm_or_rm;
	[WmiDataId(6), read] uint64 read_version;
	[WmiDataId(7), read] uint64 current_read_version;
	[WmiDataId(8), read] uint64 write_version;
	[WmiDataId(9), read] uint64 nested_write_version;
	[WmiDataId(10), read] uint64 nested_write_statement_version;
	[WmiDataId(11), read] uint64 nested_write_taskgroup_version;
	[WmiDataId(12), read] uint64 nested_write_task_version;
	[WmiDataId(13), read] uint64 max_asn;
	[WmiDataId(14), read] uint8 tag;
	[WmiDataId(15), read] uint8 is_pit;
	[WmiDataId(16), read] uint64 epoch_datalossnumber;
	[WmiDataId(17), read] uint64 epoch_configurationnumber;
	[WmiDataId(18), read] uint64 min_watermark;
	[WmiDataId(19), read] uint64 min_watermark_asn;
	[WmiDataId(20), read] uint64 read_counter;
	[WmiDataId(21), read] uint64 prev_read_counter;
	[WmiDataId(22), read, Extension("Guid")] guid request_id;
	[WmiDataId(23), read, Extension("Guid")] guid client_id;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string active_list;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string current_active_list;
};
		
[dynamic: ToInstance, Description("FIDO TM begin trace."): Amended,
    Guid("{945a991f-60a9-4fab-8457-d24d2e79fdf0}"), locale("MS\\0x409"),
    DisplayName("fido_tm_transaction_begin"): Amended]
class XeSqlPkg_fido_tm_transaction_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_tm_transaction_begin: XeSqlPkg_fido_tm_transaction_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(216),
				ValueMap { 
					"4", 
					"5", 
					"24", 
					"0", 
					"1", 
					"12", 
					"13", 
					"10", 
					"11", 
					"2", 
					"3", 
					"18", 
					"19", 
					"8", 
					"9", 
					"14", 
					"15", 
					"21", 
					"23", 
					"20", 
					"25", 
					"22", 
					"6", 
					"7", 
					"16", 
					"17" },
				Values { 
					"Fido_Abort_Request", 
					"Fido_Abort_Response", 
					"Fido_Begin", 
					"Fido_Begin_Request", 
					"Fido_Begin_Response", 
					"Fido_ChangeTag_Request", 
					"Fido_ChangeTag_Response", 
					"Fido_CleanupAbortTran_Request", 
					"Fido_CleanupAbortTran_Response", 
					"Fido_Commit_Request", 
					"Fido_Commit_Response", 
					"Fido_GetGlobalMinWatermark_Request", 
					"Fido_GetGlobalMinWatermark_Response", 
					"Fido_GetList_Request", 
					"Fido_GetList_Response", 
					"Fido_Heartbeat_Request", 
					"Fido_Heartbeat_Response", 
					"Fido_Receive", 
					"Fido_RM", 
					"Fido_Send", 
					"Fido_SetToken", 
					"Fido_TM", 
					"Fido_TransactionState_Request", 
					"Fido_TransactionState_Response", 
					"Fido_UnenlistClient_Request", 
					"Fido_UnenlistClient_Response" }
			] uint8 tm_or_rm;
	[WmiDataId(6), read, 
				XEMapId(217),
				ValueMap { 
					"7", 
					"0", 
					"1", 
					"3", 
					"6", 
					"2", 
					"4", 
					"5" },
				Values { 
					"BeginCount", 
					"BeginInvalid", 
					"BeginRMRequest", 
					"ComputeMinWatermark", 
					"ComputeMinWatermarkAsn", 
					"GetHeartbeatCounter", 
					"PointInTime", 
					"Write" }
			] uint8 begin_reason;
	[WmiDataId(7), read] uint64 read_version;
	[WmiDataId(8), read] uint64 write_version;
	[WmiDataId(9), read] uint64 nested_write_version;
	[WmiDataId(10), read] uint8 tag;
	[WmiDataId(11), read] uint64 min_watermark;
	[WmiDataId(12), read] uint64 min_watermark_asn;
	[WmiDataId(13), read, Extension("Guid")] guid request_id;
	[WmiDataId(14), read, Extension("Guid")] guid client_id;
};
		
[dynamic: ToInstance, Description("FIDO TM commit trace."): Amended,
    Guid("{7ab67ca3-7e16-438b-a778-d0e86b9548c8}"), locale("MS\\0x409"),
    DisplayName("fido_tm_transaction_commit"): Amended]
class XeSqlPkg_fido_tm_transaction_commit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_tm_transaction_commit: XeSqlPkg_fido_tm_transaction_commit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(216),
				ValueMap { 
					"4", 
					"5", 
					"24", 
					"0", 
					"1", 
					"12", 
					"13", 
					"10", 
					"11", 
					"2", 
					"3", 
					"18", 
					"19", 
					"8", 
					"9", 
					"14", 
					"15", 
					"21", 
					"23", 
					"20", 
					"25", 
					"22", 
					"6", 
					"7", 
					"16", 
					"17" },
				Values { 
					"Fido_Abort_Request", 
					"Fido_Abort_Response", 
					"Fido_Begin", 
					"Fido_Begin_Request", 
					"Fido_Begin_Response", 
					"Fido_ChangeTag_Request", 
					"Fido_ChangeTag_Response", 
					"Fido_CleanupAbortTran_Request", 
					"Fido_CleanupAbortTran_Response", 
					"Fido_Commit_Request", 
					"Fido_Commit_Response", 
					"Fido_GetGlobalMinWatermark_Request", 
					"Fido_GetGlobalMinWatermark_Response", 
					"Fido_GetList_Request", 
					"Fido_GetList_Response", 
					"Fido_Heartbeat_Request", 
					"Fido_Heartbeat_Response", 
					"Fido_Receive", 
					"Fido_RM", 
					"Fido_Send", 
					"Fido_SetToken", 
					"Fido_TM", 
					"Fido_TransactionState_Request", 
					"Fido_TransactionState_Response", 
					"Fido_UnenlistClient_Request", 
					"Fido_UnenlistClient_Response" }
			] uint8 tm_or_rm;
	[WmiDataId(6), read] uint64 write_version;
	[WmiDataId(7), read] uint64 min_watermark;
	[WmiDataId(8), read] uint64 min_watermark_asn;
	[WmiDataId(9), read, Extension("Guid")] guid request_id;
	[WmiDataId(10), read, Extension("Guid")] guid client_id;
};
		
[dynamic: ToInstance, Description("FIDO TM abort trace."): Amended,
    Guid("{781a2ca0-af7e-438d-90af-c84299c4e888}"), locale("MS\\0x409"),
    DisplayName("fido_tm_transaction_abort"): Amended]
class XeSqlPkg_fido_tm_transaction_abort: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_tm_transaction_abort: XeSqlPkg_fido_tm_transaction_abort
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(216),
				ValueMap { 
					"4", 
					"5", 
					"24", 
					"0", 
					"1", 
					"12", 
					"13", 
					"10", 
					"11", 
					"2", 
					"3", 
					"18", 
					"19", 
					"8", 
					"9", 
					"14", 
					"15", 
					"21", 
					"23", 
					"20", 
					"25", 
					"22", 
					"6", 
					"7", 
					"16", 
					"17" },
				Values { 
					"Fido_Abort_Request", 
					"Fido_Abort_Response", 
					"Fido_Begin", 
					"Fido_Begin_Request", 
					"Fido_Begin_Response", 
					"Fido_ChangeTag_Request", 
					"Fido_ChangeTag_Response", 
					"Fido_CleanupAbortTran_Request", 
					"Fido_CleanupAbortTran_Response", 
					"Fido_Commit_Request", 
					"Fido_Commit_Response", 
					"Fido_GetGlobalMinWatermark_Request", 
					"Fido_GetGlobalMinWatermark_Response", 
					"Fido_GetList_Request", 
					"Fido_GetList_Response", 
					"Fido_Heartbeat_Request", 
					"Fido_Heartbeat_Response", 
					"Fido_Receive", 
					"Fido_RM", 
					"Fido_Send", 
					"Fido_SetToken", 
					"Fido_TM", 
					"Fido_TransactionState_Request", 
					"Fido_TransactionState_Response", 
					"Fido_UnenlistClient_Request", 
					"Fido_UnenlistClient_Response" }
			] uint8 tm_or_rm;
	[WmiDataId(6), read, 
				XEMapId(218),
				ValueMap { 
					"4", 
					"0", 
					"1", 
					"3", 
					"2" },
				Values { 
					"AbortCount", 
					"AbortInvalid", 
					"AbortRMRequest", 
					"ForgetAllForClient", 
					"NotActiveInClient" }
			] uint8 abort_reason;
	[WmiDataId(7), read] uint64 write_version;
	[WmiDataId(8), read] uint64 nested_write_version;
	[WmiDataId(9), read] uint64 min_watermark;
	[WmiDataId(10), read] uint64 min_watermark_asn;
	[WmiDataId(11), read, Extension("Guid")] guid request_id;
	[WmiDataId(12), read, Extension("Guid")] guid client_id;
};
		
[dynamic: ToInstance, Description("Fido scanner debug trace."): Amended,
    Guid("{1ce0f77c-d915-47d5-9254-8d284c495650}"), locale("MS\\0x409"),
    DisplayName("fido_scanner_trace_print"): Amended]
class XeSqlPkg_fido_scanner_trace_print: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_scanner_trace_print: XeSqlPkg_fido_scanner_trace_print
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 blob_type;
	[WmiDataId(6), read] uint16 container_id;
	[WmiDataId(7), read] uint16 db_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string function;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string message;
	[WmiDataId(10), read, Extension("Guid")] guid db_guid;
	[WmiDataId(11), read, Extension("Variant")] object blob_id;
};
		
[dynamic: ToInstance, Description("Fido scanner start database scan."): Amended,
    Guid("{2a70ce01-dcd9-47ea-baa1-e89c1d464b56}"), locale("MS\\0x409"),
    DisplayName("fido_scanner_start_database"): Amended]
class XeSqlPkg_fido_scanner_start_database: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_scanner_start_database: XeSqlPkg_fido_scanner_start_database
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid dbGuid;
};
		
[dynamic: ToInstance, Description("Fido scanner end database scan."): Amended,
    Guid("{1b46f5c9-8d8a-4bb5-a340-e52c01dd1435}"), locale("MS\\0x409"),
    DisplayName("fido_scanner_end_database"): Amended]
class XeSqlPkg_fido_scanner_end_database: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_scanner_end_database: XeSqlPkg_fido_scanner_end_database
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid dbGuid;
};
		
[dynamic: ToInstance, Description("Fido scanner percent completed."): Amended,
    Guid("{6d19ed09-e7c3-4329-a1ea-6bd053fa5f25}"), locale("MS\\0x409"),
    DisplayName("fido_scanner_percent_complete"): Amended]
class XeSqlPkg_fido_scanner_percent_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_scanner_percent_complete: XeSqlPkg_fido_scanner_percent_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] real64 percent_complete;
	[WmiDataId(6), read, Extension("Guid")] guid db_guid;
};
		
[dynamic: ToInstance, Description("FIDO Fcs metadata read ahead perf metric."): Amended,
    Guid("{69F43B91-B17A-45C7-B6D1-028C315BF13D}"), locale("MS\\0x409"),
    DisplayName("fido_fcs_md_read_ahead_perf_metric"): Amended]
class XeSqlPkg_fido_fcs_md_read_ahead_perf_metric: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_fcs_md_read_ahead_perf_metric: XeSqlPkg_fido_fcs_md_read_ahead_perf_metric
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 setup_time_ms;
	[WmiDataId(6), read] uint64 sort_time_ms;
	[WmiDataId(7), read] uint64 segment_read_ahead_ms;
	[WmiDataId(8), read] uint64 segment_catalog_access_ms;
	[WmiDataId(9), read] uint64 dictionary_read_ahead_ms;
	[WmiDataId(10), read] uint64 dictionary_catalog_access_ms;
	[WmiDataId(11), read] uint32 segment_cache_miss_count;
	[WmiDataId(12), read] uint32 dictionary_cache_miss_count;
};
		
[dynamic: ToInstance, Description("FIDO Fcs metadata read ahead perf metric."): Amended,
    Guid("{69F43B91-B17A-45C7-B6D1-028C315BF13D}"), locale("MS\\0x409"),
    DisplayName("fido_fcs_md_read_ahead_perf_metric"): Amended]
class XeSqlPkg_fido_fcs_md_read_ahead_perf_metric: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class fido_fcs_md_read_ahead_perf_metric: XeSqlPkg_fido_fcs_md_read_ahead_perf_metric
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 setup_time_ms;
	[WmiDataId(6), read] uint64 sort_time_ms;
	[WmiDataId(7), read] uint64 segment_read_ahead_ms;
	[WmiDataId(8), read] uint64 segment_catalog_access_ms;
	[WmiDataId(9), read] uint64 dictionary_read_ahead_ms;
	[WmiDataId(10), read] uint64 dictionary_catalog_access_ms;
	[WmiDataId(11), read] uint32 segment_cache_miss_count;
	[WmiDataId(12), read] uint32 dictionary_cache_miss_count;
	[WmiDataId(13), read] uint32 row_groups_not_read_ahead_count;
};
		
[dynamic: ToInstance, Description("FIDO clone trace during scan"): Amended,
    Guid("{3ed42738-22d6-47a4-a4ef-e35e51ce6b5b}"), locale("MS\\0x409"),
    DisplayName("fido_clone_update_filter_ctx_on_dir_change"): Amended]
class XeSqlPkg_fido_clone_update_filter_ctx_on_dir_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_clone_update_filter_ctx_on_dir_change: XeSqlPkg_fido_clone_update_filter_ctx_on_dir_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rowgroup_id;
	[WmiDataId(6), read] uint64 old_directory_id;
	[WmiDataId(7), read] uint64 new_directory_id;
	[WmiDataId(8), read, Extension("Guid")] guid fork_id;
};
		
[dynamic: ToInstance, Description("FIDO GLM ROwset cleanup"): Amended,
    Guid("{6d79137b-3cc4-4029-9625-1db09ca72dc8}"), locale("MS\\0x409"),
    DisplayName("fido_glm_rowset_cleanup"): Amended]
class XeSqlPkg_fido_glm_rowset_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fido_glm_rowset_cleanup: XeSqlPkg_fido_glm_rowset_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 table_id;
	[WmiDataId(6), read] uint64 index_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint64 aborted_row_count;
	[WmiDataId(9), read] uint64 deleted_key_count;
	[WmiDataId(10), read] uint64 deleted_row_count;
	[WmiDataId(11), read, Extension("Guid")] guid logical_database_id;
};
		
[dynamic: ToInstance, Description("Trace package send/receive at DbCopySession level"): Amended,
    Guid("{569a6f93-3bac-466a-9b49-545d4daa5215}"), locale("MS\\0x409"),
    DisplayName("dbcopy_session_send_message"): Amended]
class XeSqlPkg_dbcopy_session_send_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbcopy_session_send_message: XeSqlPkg_dbcopy_session_send_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 message_sequence_num;
	[WmiDataId(6), read] uint64 acked_sequence_num;
	[WmiDataId(7), read] sint32 circuit_id_index;
	[WmiDataId(8), read, 
				XEMapId(196),
				ValueMap { 
					"16", 
					"3", 
					"11", 
					"22", 
					"13", 
					"18", 
					"7", 
					"15", 
					"10", 
					"4", 
					"20", 
					"9", 
					"8", 
					"12", 
					"24", 
					"6", 
					"0", 
					"19", 
					"5", 
					"21", 
					"26", 
					"14", 
					"2", 
					"23", 
					"17", 
					"25", 
					"1" },
				Values { 
					"x_etssArbitrationLost", 
					"x_etssConnecting", 
					"x_etssConnectionError", 
					"x_etssConnectionRedirected", 
					"x_etssDisconnected", 
					"x_etssDNSLookpConnectedIP", 
					"x_etssDnsLookupFailed", 
					"x_etssException", 
					"x_etssExtensiveFlowControlClose", 
					"x_etssFlowControlled", 
					"x_etssForwarderDisconnected", 
					"x_etssIdleClose", 
					"x_etssInvalidToAddress", 
					"x_etssLoginError", 
					"x_etssNegotiationRestarted", 
					"x_etssNoMemory", 
					"x_etssNone", 
					"x_etssNoProxy", 
					"x_etssNoRoute", 
					"x_etssNotFound", 
					"x_etssNumStatus", 
					"x_etssProtocolError", 
					"x_etssReady", 
					"x_etssRedirectionFailed", 
					"x_etssShutdown", 
					"x_etssSocketDuplicated", 
					"x_etssUnavailable" }
			] uint32 send_result;
	[WmiDataId(9), read, Extension("Guid")] guid source_id;
	[WmiDataId(10), read, Extension("Guid")] guid destination_id;
	[WmiDataId(11), read, Extension("Guid")] guid ucs_stream_id;
	[WmiDataId(12), read, Extension("Guid")] guid circuit_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string event;
};
		
[dynamic: ToInstance, Description("Trace package receive at DbCopySession level"): Amended,
    Guid("{cf6e26bb-ed8b-4ae6-a6d5-c96f1748da5b}"), locale("MS\\0x409"),
    DisplayName("dbcopy_session_receive_message"): Amended]
class XeSqlPkg_dbcopy_session_receive_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbcopy_session_receive_message: XeSqlPkg_dbcopy_session_receive_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 message_sequence_num;
	[WmiDataId(6), read] uint64 next_expect_sequence_num;
	[WmiDataId(7), read] uint64 message_buffer_size;
	[WmiDataId(8), read] uint64 min_sequence_num_in_buffer;
	[WmiDataId(9), read] uint64 max_sequence_num_in_buffer;
	[WmiDataId(10), read, Extension("Guid")] guid source_id;
	[WmiDataId(11), read, Extension("Guid")] guid destination_id;
	[WmiDataId(12), read, Extension("Guid")] guid ucs_stream_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string event;
};
		
[dynamic: ToInstance, Description("Fired when query with more than one step is executed."): Amended,
    Guid("{a10f086d-fa5e-4606-be81-56df28c02bb1}"), locale("MS\\0x409"),
    DisplayName("multistep_execution"): Amended]
class XeSqlPkg_multistep_execution: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class multistep_execution: XeSqlPkg_multistep_execution
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 step_count;
	[WmiDataId(6), read, Extension("Variant")] object query_hash;
	[WmiDataId(7), read, Extension("Variant")] object query_plan_hash;
};
		
[dynamic: ToInstance, Description("This XEvent is fired to reproduce a blocking scenario when an auto statistics update thread waits to acquire a Sch-M lock on stats metadata object which subsequently blocks readers (select queries on that table for instance). This XEvent is used primarily for unit testing."): Amended,
    Guid("{7c347285-f0e7-4bf2-a256-7b41f25d071b}"), locale("MS\\0x409"),
    DisplayName("autostats_update_blocking_readers"): Amended]
class XeSqlPkg_autostats_update_blocking_readers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class autostats_update_blocking_readers: XeSqlPkg_autostats_update_blocking_readers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("This XEvent is fired when auto asynchronous statistics is triggered in low priority mode."): Amended,
    Guid("{1ba7bc87-59b8-4eb4-b73d-a8448c0959ad}"), locale("MS\\0x409"),
    DisplayName("autostats_update_async_low_priority_status"): Amended]
class XeSqlPkg_autostats_update_async_low_priority_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class autostats_update_async_low_priority_status: XeSqlPkg_autostats_update_async_low_priority_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 table_id;
	[WmiDataId(6), read] uint32 duration_of_low_priority_wait_minutes;
	[WmiDataId(7), read] uint64 db_id;
	[WmiDataId(8), read] uint64 stats_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string status;
};
		
[dynamic: ToInstance, Description("This XEvent is fired when auto asynchronous statistics is triggered in low priority mode."): Amended,
    Guid("{1ba7bc87-59b8-4eb4-b73d-a8448c0959ad}"), locale("MS\\0x409"),
    DisplayName("autostats_update_async_low_priority_status"): Amended]
class XeSqlPkg_autostats_update_async_low_priority_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class autostats_update_async_low_priority_status: XeSqlPkg_autostats_update_async_low_priority_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 duration_of_wlp_minutes;
	[WmiDataId(7), read] uint16 db_id;
	[WmiDataId(8), read] uint64 stats_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(10), read, Extension("Guid")] guid stats_update_correlation_id;
};
		
[dynamic: ToInstance, Description("This XEvent is fired when auto asynchronous statistics is triggered in low priority mode."): Amended,
    Guid("{1ba7bc87-59b8-4eb4-b73d-a8448c0959ad}"), locale("MS\\0x409"),
    DisplayName("autostats_update_async_low_priority_status"): Amended]
class XeSqlPkg_autostats_update_async_low_priority_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class autostats_update_async_low_priority_status: XeSqlPkg_autostats_update_async_low_priority_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 object_id;
	[WmiDataId(6), read] uint32 duration_of_wlp_minutes;
	[WmiDataId(7), read] sint32 database_id;
	[WmiDataId(8), read] uint64 stats_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string status;
	[WmiDataId(10), read, Extension("Guid")] guid stats_update_correlation_id;
};
		
[dynamic: ToInstance, Description("Performance counter data produced by StoragePerfCountersRecord function"): Amended,
    Guid("{EDF10361-FB36-45DD-BD18-BA40701A3FD1}"), locale("MS\\0x409"),
    DisplayName("storage_engine_performance_counters"): Amended]
class XeSqlPkg_storage_engine_performance_counters: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class storage_engine_performance_counters: XeSqlPkg_storage_engine_performance_counters
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(220),
				ValueMap { 
					"93", 
					"94", 
					"0", 
					"1", 
					"85", 
					"88", 
					"86", 
					"87", 
					"79", 
					"80", 
					"76", 
					"83", 
					"82", 
					"81", 
					"77", 
					"84", 
					"78", 
					"91", 
					"92", 
					"89", 
					"90", 
					"115", 
					"99", 
					"96", 
					"98", 
					"97", 
					"95", 
					"57", 
					"55", 
					"51", 
					"53", 
					"50", 
					"52", 
					"54", 
					"61", 
					"59", 
					"58", 
					"60", 
					"56", 
					"62", 
					"64", 
					"69", 
					"68", 
					"67", 
					"63", 
					"74", 
					"66", 
					"73", 
					"71", 
					"70", 
					"65", 
					"72", 
					"75", 
					"38", 
					"34", 
					"35", 
					"48", 
					"49", 
					"41", 
					"42", 
					"43", 
					"44", 
					"40", 
					"39", 
					"46", 
					"47", 
					"45", 
					"36", 
					"37", 
					"4", 
					"14", 
					"18", 
					"17", 
					"16", 
					"15", 
					"13", 
					"7", 
					"9", 
					"8", 
					"11", 
					"5", 
					"6", 
					"12", 
					"10", 
					"109", 
					"110", 
					"111", 
					"108", 
					"33", 
					"113", 
					"114", 
					"19", 
					"2", 
					"107", 
					"102", 
					"103", 
					"106", 
					"104", 
					"105", 
					"31", 
					"30", 
					"26", 
					"27", 
					"28", 
					"32", 
					"29", 
					"24", 
					"23", 
					"22", 
					"21", 
					"20", 
					"112", 
					"25", 
					"3", 
					"100", 
					"101" },
				Values { 
					"BPool_LatchOnlyNoWait_attemps", 
					"BPool_LatchOnlyNoWait_deferred_bps_free", 
					"FCB_ReadLatency", 
					"FCB_WriteLatency", 
					"HotPageEstimator_AggregationLatency", 
					"HotPageEstimator_OutOfMemory", 
					"HotPageEstimator_TotalPayloads", 
					"HotPageEstimator_TotalPayloadsMissed", 
					"HotPageTracker_AccumulationAccessMissCount", 
					"HotPageTracker_AggregationAccessMissCount", 
					"HotPageTracker_AggregationLatency", 
					"HotPageTracker_OutOfMemory", 
					"HotPageTracker_SeparationAccessMissCount", 
					"HotPageTracker_SeparationMissCount", 
					"HotPageTracker_TotalAccesses", 
					"HotPageTracker_TotalPrimedPageAccesses", 
					"HotPageTracker_TotalProcessed", 
					"HotSegmentTracker_AccumulationAccessMissCount", 
					"HotSegmentTracker_AggregationAccessMissCount", 
					"HotSegmentTracker_AggregationLatency", 
					"HotSegmentTracker_TotalAccesses", 
					"Last", 
					"PerfCounters_NumberOfUniquePerfCounter", 
					"PerfCounters_OutOfPoolHits", 
					"PerfCounters_OutstandingPerfNodes", 
					"PerfCounters_OutstandingThreadPerfNodes", 
					"PerfCounters_Snapshot_Size", 
					"PLSNv2_CachedLsnUsed", 
					"PLSNv2_CacheEntryEvictions", 
					"PLSNv2_CacheHits", 
					"PLSNv2_CacheInserts", 
					"PLSNv2_CacheLookups", 
					"PLSNv2_CacheMisses", 
					"PLSNv2_CacheUpdates", 
					"PLSNv2_ReturnedLsnEolDistanceBsn", 
					"PLSNv2_SafeLsnAdvancedByBsn", 
					"PLSNv2_SafeLsnAdvancedCount", 
					"PLSNv2_SafeLsnEolDistanceBsn", 
					"PLSNv2_SafeLsnUsed", 
					"PS_AsyncReadTotalTimeStats", 
					"PS_ForeignRedoWaitTimeStats", 
					"PS_LogReplayActiveTimeStats", 
					"PS_LogReplayReadTimeStats", 
					"PS_LogReplayStallTimeStats", 
					"PS_OpenDbWaitTimeStats", 
					"PS_PageCount", 
					"PS_PageIoWaitTimeStats", 
					"PS_PageRead_HardErrors", 
					"PS_RbIoPlaceholderTimeStats", 
					"PS_RbIoSendResponseStats", 
					"PS_ReadAheadTimeStats", 
					"PS_ReadPageErrorCodes", 
					"PS_RetryCount", 
					"RBIO_AsyncReadQosRequestClient", 
					"RBIO_AsyncReadRequestClient", 
					"RBIO_AsyncReadRequestServer", 
					"RBIO_OutstandingQueuedRbioRequests", 
					"RBIO_OutstandingSendResponse", 
					"RBIO_RbpexSeedStatusRequestClient", 
					"RBIO_RbpexSeedStatusRequestServer", 
					"RBIO_RbpexSeedStatusResponseClient", 
					"RBIO_RbpexSeedStatusResponseServer", 
					"RBIO_SendPageHitCountsRequestClient", 
					"RBIO_SendPageHitCountsRequestServer", 
					"RBIO_XlogNotifyNewBlockRequestClient", 
					"RBIO_XlogNotifyNewBlockRequestClientOnly", 
					"RBIO_XlogNotifyNewBlockRequestServer", 
					"RBIO_XlogReadBlockRequestClient", 
					"RBIO_XlogReadBlockRequestServer", 
					"RBPEX_BP_fast_ReadLatency", 
					"RBPEX_EvictionPhaseRuntimeStatsMs", 
					"RBPEX_EvictionPhaseScanHitRate", 
					"RBPEX_EvictionPhaseTotalRowsEvicted", 
					"RBPEX_EvictionPhaseTotalRowsScanned", 
					"RBPEX_EvictionRoutineRuntimeStatsMs", 
					"RBPEX_EvictionSampleRuntimeStatsMs", 
					"RBPEX_fast_ErrorCodes", 
					"RBPEX_fast_FallbackReasons", 
					"RBPEX_fast_NoPagesInPool", 
					"RBPEX_fast_OutstandingPageReaderBuffers", 
					"RBPEX_fast_ReadLatency", 
					"RBPEX_fast_ReadSize", 
					"RBPEX_fast_SendResponseViaPostCompletion", 
					"RBPEX_fast_ThrottleReasons", 
					"RBPEX_FCB_AsyncShrinkLatency", 
					"RBPEX_FCB_GrowLatency", 
					"RBPEX_FCB_QueryAllocatedRegionsLatency", 
					"RBPEX_FCB_ShrinkLatency", 
					"RBPEX_InitializeRbpexFileMs", 
					"RBPEX_LatchHeldTime", 
					"RBPEX_LatchHeldTimeLRU", 
					"RBPEX_LruProcessed", 
					"RBPEX_ReadLatency", 
					"RBPEX_Seed_OutstandingIoCount", 
					"RBPEX_Seed_ReadLatency", 
					"RBPEX_Seed_ReadLatencyFromPeer", 
					"RBPEX_Seed_TotalTimeSecs", 
					"RBPEX_Seed_WriteLatency", 
					"RBPEX_Seed_WritePageCount", 
					"RBPEX_SegmentMode_NumberOfWorkItemPoppedAtOnce", 
					"RBPEX_SegmentMode_OutstandingBuffersWaitingWriting", 
					"RBPEX_SegmentMode_Tx_RetryCount", 
					"RBPEX_SegmentMode_Tx_SerializeTimeUs", 
					"RBPEX_SegmentMode_Tx_TimeUs", 
					"RBPEX_SegmentMode_Useful_pages", 
					"RBPEX_SegmentMode_WriteFileTimeInQueueUs", 
					"RBPEX_SegmentOccupancy", 
					"RBPEX_SegmentWriteBufferLifeTimeSecs", 
					"RBPEX_SegmentWriteBufferLifeTimeUs", 
					"RBPEX_SegmentWriteLatency", 
					"RBPEX_SegmentWritePageCount", 
					"RBPEX_Serverless_GrowFailCount", 
					"RBPEX_WriteFileWorkItemProcessingTimeUs", 
					"RBPEX_WriteLatency", 
					"Striped_ReadOnStripeBoundary", 
					"Striped_WriteOnStripeBoundary" }
			] uint32 performance_counter_type;
	[WmiDataId(6), read] uint16 instance_id1;
	[WmiDataId(7), read] uint32 instance_id2;
	[WmiDataId(8), read] uint64 snapshot_duration_ms;
	[WmiDataId(9), read] uint64 hits;
	[WmiDataId(10), read] sint64 accumulation;
	[WmiDataId(11), read] sint32 percentile_0;
	[WmiDataId(12), read] sint32 percentile_25;
	[WmiDataId(13), read] sint32 percentile_50;
	[WmiDataId(14), read] sint32 percentile_75;
	[WmiDataId(15), read] sint32 percentile_90;
	[WmiDataId(16), read] sint32 percentile_95;
	[WmiDataId(17), read] sint32 percentile_99;
	[WmiDataId(18), read] sint32 percentile_999;
	[WmiDataId(19), read] sint32 min;
	[WmiDataId(20), read] sint32 max;
	[WmiDataId(21), read] uint16 database_id;
	[WmiDataId(22), read] sint8  is_primary;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
	[WmiDataId(25), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(26), read, Extension("Guid")] guid logical_db_id;
};
		
[dynamic: ToInstance, Description("Reports aggregated stats about data exported to an external file. Distinct event per each file and each processing thread."): Amended,
    Guid("{928E7988-F7D4-44E9-9923-5A64ED44F024}"), locale("MS\\0x409"),
    DisplayName("data_export_profile"): Amended]
class XeSqlPkg_data_export_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class data_export_profile: XeSqlPkg_data_export_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 row_count;
	[WmiDataId(7), read] uint64 file_size_bytes;
	[WmiDataId(8), read] uint64 denormalization_elapsed_time_ms;
	[WmiDataId(9), read] uint64 denormalization_cpu_time_ms;
	[WmiDataId(10), read] uint64 init_outputter_elapsed_time_ms;
	[WmiDataId(11), read] uint64 init_outputter_cpu_time_ms;
	[WmiDataId(12), read] uint64 serialization_elapsed_time_ms;
	[WmiDataId(13), read] uint64 serialization_cpu_time_ms;
	[WmiDataId(14), read] uint64 file_create_elapsed_time_ms;
	[WmiDataId(15), read] uint64 file_create_cpu_time_ms;
	[WmiDataId(16), read] uint64 file_write_elapsed_time_ms;
	[WmiDataId(17), read] uint64 file_write_cpu_time_ms;
	[WmiDataId(18), read] uint64 file_commit_elapsed_time_ms;
	[WmiDataId(19), read] uint64 file_commit_cpu_time_ms;
	[WmiDataId(20), read] uint32 outputter_id;
	[WmiDataId(21), read, Extension("Variant")] object path_pattern_hash;
	[WmiDataId(22), read, Extension("Variant")] object partition_hash;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Reports names,id of related database when index corruption is detected"): Amended,
    Guid("{2A430532-B517-4CB3-9DDB-455E570C5734}"), locale("MS\\0x409"),
    DisplayName("index_corruption_detected"): Amended]
class XeSqlPkg_index_corruption_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class index_corruption_detected: XeSqlPkg_index_corruption_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 object_id;
	[WmiDataId(6), read] sint64 index_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string index_name;
};
		
[dynamic: ToInstance, Description("Reports names,id of related database when index corruption is detected"): Amended,
    Guid("{2A430532-B517-4CB3-9DDB-455E570C5734}"), locale("MS\\0x409"),
    DisplayName("index_corruption_detected"): Amended]
class XeSqlPkg_index_corruption_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class index_corruption_detected: XeSqlPkg_index_corruption_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 database_id;
	[WmiDataId(6), read] sint64 object_id;
	[WmiDataId(7), read] sint64 index_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string index_name;
};
		
[dynamic: ToInstance, Description("RemoveFileFromRemoteReplicas Operation Started"): Amended,
    Guid("{fee8d0be-8575-43cd-a595-8c206c9b4e1d}"), locale("MS\\0x409"),
    DisplayName("remove_remote_file_redo_operation_started"): Amended]
class XeSqlPkg_remove_remote_file_redo_operation_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remove_remote_file_redo_operation_started: XeSqlPkg_remove_remote_file_redo_operation_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("RemoveFileFromRemoteReplicas Operation Completed"): Amended,
    Guid("{e34878dc-bb01-44b9-ab56-14eecfe9e9d9}"), locale("MS\\0x409"),
    DisplayName("remove_remote_file_redo_operation_completed"): Amended]
class XeSqlPkg_remove_remote_file_redo_operation_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remove_remote_file_redo_operation_completed: XeSqlPkg_remove_remote_file_redo_operation_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("RemoveFileFromRemoteReplicas Operation Failed"): Amended,
    Guid("{719ded38-60c4-4a36-92ef-7f891d0fffa3}"), locale("MS\\0x409"),
    DisplayName("remove_remote_file_redo_operation_failed"): Amended]
class XeSqlPkg_remove_remote_file_redo_operation_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remove_remote_file_redo_operation_failed: XeSqlPkg_remove_remote_file_redo_operation_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("send segment access information"): Amended,
    Guid("{9A80DC0A-C269-49D9-A09C-1B08DC97F5D7}"), locale("MS\\0x409"),
    DisplayName("send_segment_io_data"): Amended]
class XeSqlPkg_send_segment_io_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class send_segment_io_data: XeSqlPkg_send_segment_io_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sourceindex;
	[WmiDataId(6), read] uint16 fileid;
	[WmiDataId(7), read] uint32 readcount;
	[WmiDataId(8), read] uint32 writecount;
	[WmiDataId(9), read, Extension("WmiTime")] uint64 read_first_access;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 read_last_access;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 write_first_access;
	[WmiDataId(12), read, Extension("WmiTime")] uint64 write_last_access;
	[WmiDataId(13), read] uint16 simulated;
	[WmiDataId(14), read] uint32 segment_size_kb;
	[WmiDataId(15), read, Extension("Guid")] guid dbid;
};
		
[dynamic: ToInstance, Description("# of IOs on a segment (simulated)."): Amended,
    Guid("{973a4c30-6122-4ecc-b5d9-b839fd2bfa9a}"), locale("MS\\0x409"),
    DisplayName("send_segment_io_data_v2"): Amended]
class XeSqlPkg_send_segment_io_data_v2: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class send_segment_io_data_v2: XeSqlPkg_send_segment_io_data_v2
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rbpex_segment_index;
	[WmiDataId(6), read] uint32 key_hash;
	[WmiDataId(7), read] uint32 segment_size_kb;
	[WmiDataId(8), read] uint32 total_segments;
	[WmiDataId(9), read] uint32 read_count;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 read_first_access;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 read_last_access;
	[WmiDataId(12), read] uint32 write_count;
	[WmiDataId(13), read, Extension("WmiTime")] uint64 write_first_access;
	[WmiDataId(14), read, Extension("WmiTime")] uint64 write_last_access;
	[WmiDataId(15), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(16), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Whether segment IOs are being tracked (simulated)."): Amended,
    Guid("{aded5181-acd9-4b74-917d-e37e5bbd0a4a}"), locale("MS\\0x409"),
    DisplayName("send_segment_io_data_v2_heartbeat"): Amended]
class XeSqlPkg_send_segment_io_data_v2_heartbeat: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class send_segment_io_data_v2_heartbeat: XeSqlPkg_send_segment_io_data_v2_heartbeat
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid logical_db_id;
	[WmiDataId(6), read, Extension("Guid")] guid physical_db_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string logical_db_name;
};
		
[dynamic: ToInstance, Description("Reports stats on conforming and non-conforming IOs in terms of IOPS and Bandwidth governances"): Amended,
    Guid("{5aab8f80-d805-48ad-bf0a-723c8e090948}"), locale("MS\\0x409"),
    DisplayName("volume_traffic_policer_stats"): Amended]
class XeSqlPkg_volume_traffic_policer_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class volume_traffic_policer_stats: XeSqlPkg_volume_traffic_policer_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(223),
				ValueMap { 
					"10", 
					"0", 
					"7", 
					"8", 
					"9", 
					"5", 
					"6", 
					"4", 
					"3", 
					"2", 
					"1" },
				Values { 
					"MAX_VOL", 
					"OS_LOCAL_VOL", 
					"PFS_VOL", 
					"RBIO_DATA_VOL", 
					"RBIO_LOG_VOL", 
					"SBS_VOL", 
					"XSTORE_DW_PESTO_BLOB_VOL", 
					"XSTORE_EXTERNAL_VOL", 
					"XSTORE_MANAGED_VOL", 
					"XSTORE_PREMIUM_VOL", 
					"XSTORE_VOL" }
			] uint32 volume_type;
	[WmiDataId(6), read] uint64 conforming_requests;
	[WmiDataId(7), read] uint64 conforming_bytes;
	[WmiDataId(8), read] uint64 non_conforming_requests;
	[WmiDataId(9), read] uint64 non_conforming_bytes;
	[WmiDataId(10), read] uint64 non_conforming_due_to_iops;
	[WmiDataId(11), read] uint64 non_conforming_due_to_bw;
	[WmiDataId(12), read] uint64 non_conforming_due_to_outstanding_ios;
	[WmiDataId(13), read] uint64 non_conforming_due_to_outstanding_bytes;
	[WmiDataId(14), read] uint64 non_conforming_bytes_due_to_iops;
	[WmiDataId(15), read] uint64 non_conforming_bytes_due_to_bw;
	[WmiDataId(16), read] uint64 outstanding_ios;
	[WmiDataId(17), read] uint64 outstanding_bytes;
	[WmiDataId(18), read] uint64 violation_requests;
	[WmiDataId(19), read] uint64 violation_bytes;
	[WmiDataId(20), read] uint64 violation_requests_due_to_retries;
	[WmiDataId(21), read] uint64 violation_bytes_due_to_retries;
	[WmiDataId(22), read] uint64 max_iops;
	[WmiDataId(23), read] uint64 max_kbps;
	[WmiDataId(24), read] uint64 max_outstanding_requests;
	[WmiDataId(25), read] uint64 max_outstanding_bytes;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string volume_friendly_name;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string volume_identity;
};
		
[dynamic: ToInstance, Description("For testing Ledger nesting and savepoint"): Amended,
    Guid("{f3d4a5c2-59fb-4d11-94d8-4f9870cbbb19}"), locale("MS\\0x409"),
    DisplayName("ledger_testing_nesting_event"): Amended]
class XeSqlPkg_ledger_testing_nesting_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_testing_nesting_event: XeSqlPkg_ledger_testing_nesting_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string type;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string last_LSN;
	[WmiDataId(7), read, Extension("Guid")] guid guid;
};
		
[dynamic: ToInstance, Description("Summary of an Exteranl Extractor operation."): Amended,
    Guid("{4DBD7C51-9985-46FF-B543-8CBEC810B883}"), locale("MS\\0x409"),
    DisplayName("extractor_scan_summary"): Amended]
class XeSqlPkg_extractor_scan_summary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class extractor_scan_summary: XeSqlPkg_extractor_scan_summary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 number_files;
	[WmiDataId(6), read] uint32 dop;
	[WmiDataId(7), read] uint32 batch_size;
	[WmiDataId(8), read] uint32 file_format;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string external_file_format;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string parser_version;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{6d0a7ee5-d696-42d9-9356-3dcd0d80a752}"), locale("MS\\0x409"),
    DisplayName("vldb_geodr_throttling_stat"): Amended]
class XeSqlPkg_vldb_geodr_throttling_stat: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vldb_geodr_throttling_stat: XeSqlPkg_vldb_geodr_throttling_stat
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 primary_bsn;
	[WmiDataId(7), read] uint64 forwarder_bsn;
	[WmiDataId(8), read] uint64 gap_between_primary_forwarder;
	[WmiDataId(9), read] uint64 max_allowed_gap;
	[WmiDataId(10), read] uint64 forwarder_bsn_diff;
	[WmiDataId(11), read] uint64 forwarder_catchup_rate;
	[WmiDataId(12), read, Extension("Guid")] guid remote_replica_Id;
	[WmiDataId(13), read, Extension("Guid")] guid layered_ag_Id;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{3F3072C8-008A-4062-9142-FDCDD5D8DE90}"), locale("MS\\0x409"),
    DisplayName("vldb_geodr_applied_throttling"): Amended]
class XeSqlPkg_vldb_geodr_applied_throttling: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class vldb_geodr_applied_throttling: XeSqlPkg_vldb_geodr_applied_throttling
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 new_throttling_rate;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 applied_time;
};
		
[dynamic: ToInstance, Description("Summary of an Exteranl Extractor operation memory grant."): Amended,
    Guid("{D0373A5E-FBB4-4069-AF46-2123FB852529}"), locale("MS\\0x409"),
    DisplayName("extractor_scan_memory_grant"): Amended]
class XeSqlPkg_extractor_scan_memory_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class extractor_scan_memory_grant: XeSqlPkg_extractor_scan_memory_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 number_8k_pages_in_required;
	[WmiDataId(6), read] uint64 number_8k_pages_out_required;
	[WmiDataId(7), read] uint64 number_8k_pages_in_preferred;
	[WmiDataId(8), read] uint64 number_8k_pages_out_preferred;
};
		
[dynamic: ToInstance, Description("Details of a CSV input file processed by OpenRowset"): Amended,
    Guid("{45CB453C-FC4B-4C1B-8AE9-1071707342E8}"), locale("MS\\0x409"),
    DisplayName("csv_input_file"): Amended]
class XeSqlPkg_csv_input_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class csv_input_file: XeSqlPkg_csv_input_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 bytes_read;
	[WmiDataId(7), read] uint64 num_rejected_rows;
	[WmiDataId(8), read] sint8  is_split_operation;
	[WmiDataId(9), read] uint32 number_io_buffers;
	[WmiDataId(10), read] uint32 io_buffers_size;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string start_time;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string end_time;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string error_file_path_hash;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string compression;
};
		
[dynamic: ToInstance, Description("Aggregate details of processing a column for one file."): Amended,
    Guid("{29FE70CD-A2A9-467A-B34C-F95EAB25AED3}"), locale("MS\\0x409"),
    DisplayName("csv_column_statistics"): Amended]
class XeSqlPkg_csv_column_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class csv_column_statistics: XeSqlPkg_csv_column_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 total_cpu_time;
	[WmiDataId(7), read] uint64 avg_cpu_time;
	[WmiDataId(8), read] uint64 min_cpu_time;
	[WmiDataId(9), read] uint64 max_cpu_time;
	[WmiDataId(10), read] uint64 bytes_read;
	[WmiDataId(11), read] uint64 avg_size_bytes;
	[WmiDataId(12), read] uint64 min_size_bytes;
	[WmiDataId(13), read] uint64 max_size_bytes;
	[WmiDataId(14), read] uint32 source_column_index;
	[WmiDataId(15), read] uint32 column_size;
	[WmiDataId(16), read] sint8  is_lob;
	[WmiDataId(17), read] uint64 number_rows;
	[WmiDataId(18), read] uint32 sql_type;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string collation;
};
		
[dynamic: ToInstance, Description("Aggregate details of processing rows for one file."): Amended,
    Guid("{1FD42BC4-F2EF-4861-A1ED-33D172EA4644}"), locale("MS\\0x409"),
    DisplayName("csv_row_statistics"): Amended]
class XeSqlPkg_csv_row_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class csv_row_statistics: XeSqlPkg_csv_row_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 total_cpu_time;
	[WmiDataId(7), read] uint64 avg_cpu_time;
	[WmiDataId(8), read] uint64 min_cpu_time;
	[WmiDataId(9), read] uint64 max_cpu_time;
	[WmiDataId(10), read] uint64 total_size_bytes;
	[WmiDataId(11), read] uint64 avg_size_bytes;
	[WmiDataId(12), read] uint64 min_size_bytes;
	[WmiDataId(13), read] uint64 max_size_bytes;
	[WmiDataId(14), read] uint64 number_rows;
	[WmiDataId(15), read] uint32 number_columns;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Decompression time and memory utilized if the input file is compressed."): Amended,
    Guid("{A69D0240-0970-4505-8E77-3B3AB3C8A3C2}"), locale("MS\\0x409"),
    DisplayName("csv_decompression_statistics"): Amended]
class XeSqlPkg_csv_decompression_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class csv_decompression_statistics: XeSqlPkg_csv_decompression_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint32 io_buffer_size_bytes;
	[WmiDataId(7), read] uint32 number_io_buffers;
	[WmiDataId(8), read] uint64 bytes_read;
	[WmiDataId(9), read] uint64 total_cpu_time;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
};
		
[dynamic: ToInstance, Description("Aggregate details for a error type of rejected rows."): Amended,
    Guid("{CE9B001A-C5D9-42B0-8702-FF0F8EE0A6E1}"), locale("MS\\0x409"),
    DisplayName("csv_rejected_rows"): Amended]
class XeSqlPkg_csv_rejected_rows: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class csv_rejected_rows: XeSqlPkg_csv_rejected_rows
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 error_count;
	[WmiDataId(7), read] sint32 error_code;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path_hash;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string error_file_path_hash;
};
		
[dynamic: ToInstance, Description("Aggregate details for shallow parsing logic used in calculating file splits."): Amended,
    Guid("{ECF3B87B-6EC2-4416-BA7B-45DA3066096D}"), locale("MS\\0x409"),
    DisplayName("csv_shallow_parse"): Amended]
class XeSqlPkg_csv_shallow_parse: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class csv_shallow_parse: XeSqlPkg_csv_shallow_parse
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint64 total_cpu_time;
	[WmiDataId(7), read] uint64 number_calls;
	[WmiDataId(8), read] uint64 total_size_bytes;
};
		
[dynamic: ToInstance, Description("The ledger hash was computed on one row."): Amended,
    Guid("{f142a282-ccec-45f8-b69e-d844ff8ec9c1}"), locale("MS\\0x409"),
    DisplayName("ledger_hash_computed"): Amended]
class XeSqlPkg_ledger_hash_computed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_hash_computed: XeSqlPkg_ledger_hash_computed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 column_count;
};
		
[dynamic: ToInstance, Description("XEvent used for testing purposes to generate the proper synchronization."): Amended,
    Guid("{e36e78fa-9f7d-4d68-b336-dfee6da58768}"), locale("MS\\0x409"),
    DisplayName("ledger_synchronization_xevent"): Amended]
class XeSqlPkg_ledger_synchronization_xevent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_synchronization_xevent: XeSqlPkg_ledger_synchronization_xevent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 state;
};
		
[dynamic: ToInstance, Description("Ledger digest generated"): Amended,
    Guid("{561f6b85-4a1e-4fd2-9231-cbd002b66f97}"), locale("MS\\0x409"),
    DisplayName("ledger_generate_digest"): Amended]
class XeSqlPkg_ledger_generate_digest: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_generate_digest: XeSqlPkg_ledger_generate_digest
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 database_id;
	[WmiDataId(6), read] sint64 block_id;
};
		
[dynamic: ToInstance, Description("Ledger transaction"): Amended,
    Guid("{71516b90-2634-41a5-930c-7f9d4afaaa1d}"), locale("MS\\0x409"),
    DisplayName("ledger_transaction_count"): Amended]
class XeSqlPkg_ledger_transaction_count: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_transaction_count: XeSqlPkg_ledger_transaction_count
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 message;
};
		
[dynamic: ToInstance, Description("Ledger view query"): Amended,
    Guid("{87e15570-76eb-4c8a-bc0a-691d702c9817}"), locale("MS\\0x409"),
    DisplayName("ledger_view_query_count"): Amended]
class XeSqlPkg_ledger_view_query_count: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_view_query_count: XeSqlPkg_ledger_view_query_count
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 message;
};
		
[dynamic: ToInstance, Description("XEvent used for testing purposes in population logic"): Amended,
    Guid("{00F5D0B7-25E7-4CDC-BBE7-57D899FFD593}"), locale("MS\\0x409"),
    DisplayName("populate_ord_lock_xevent"): Amended]
class XeSqlPkg_populate_ord_lock_xevent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class populate_ord_lock_xevent: XeSqlPkg_populate_ord_lock_xevent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("XEvent used for testing purposes in version cleanup"): Amended,
    Guid("{A1bdc562-7391-6dab-d265-3a8355cab10d}"), locale("MS\\0x409"),
    DisplayName("version_cleanuppage_xevent"): Amended]
class XeSqlPkg_version_cleanuppage_xevent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class version_cleanuppage_xevent: XeSqlPkg_version_cleanuppage_xevent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Out-of-memory (OOM) summary snapshot"): Amended,
    Guid("{9e00eec1-e879-4eb1-93c8-6cbee5a03768}"), locale("MS\\0x409"),
    DisplayName("summarized_oom_snapshot"): Amended]
class XeSqlPkg_summarized_oom_snapshot: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class summarized_oom_snapshot: XeSqlPkg_summarized_oom_snapshot
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_non_sos_usage_leaked;
	[WmiDataId(6), read] sint16 oom_factor;
	[WmiDataId(7), read] sint16 oom_cause;
	[WmiDataId(8), read] sint32 available_physical_memory_mb;
	[WmiDataId(9), read] sint32 current_job_cap_mb;
	[WmiDataId(10), read] sint32 process_memory_usage_mb;
	[WmiDataId(11), read] sint32 non_sos_usage_mb;
	[WmiDataId(12), read] sint32 committed_target_mb;
	[WmiDataId(13), read] sint32 committed_mb;
	[WmiDataId(14), read] sint32 allocation_potential_memory_mb;
	[WmiDataId(15), read, Extension("WmiTime")] uint64 end_time;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string top_memory_clerks;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string leaked_memory_clerk;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string top_memory_pools;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string oom_memory_pool;
};
		
[dynamic: ToInstance, Description("Global Query extractor execution start."): Amended,
    Guid("{75ed9071-51a4-4c15-9455-24d517f07456}"), locale("MS\\0x409"),
    DisplayName("global_query_extractor_begin"): Amended]
class XeSqlPkg_global_query_extractor_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class global_query_extractor_begin: XeSqlPkg_global_query_extractor_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Variant")] object query_hash;
	[WmiDataId(6), read, Extension("Guid")] guid query_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string server_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, Extension("Guid")] guid request_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string externalDSType;
};
		
[dynamic: ToInstance, Description("Global Query extractor execution completed successfully."): Amended,
    Guid("{9a020774-266d-4788-a3c3-061fcea7226d}"), locale("MS\\0x409"),
    DisplayName("global_query_extractor_end"): Amended]
class XeSqlPkg_global_query_extractor_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class global_query_extractor_end: XeSqlPkg_global_query_extractor_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 row_count;
	[WmiDataId(6), read] uint64 first_fill_batch_elapsed_time_ms;
	[WmiDataId(7), read] uint64 first_fill_batch_cpu_time_ms;
	[WmiDataId(8), read] uint64 fill_batch_elapsed_time_ms;
	[WmiDataId(9), read] uint64 fill_batch_cpu_time_ms;
	[WmiDataId(10), read] uint64 fill_batch_count;
	[WmiDataId(11), read] uint64 peak_pmo_memory_mb;
	[WmiDataId(12), read] uint64 end_pmo_memory_mb;
	[WmiDataId(13), read] uint64 peak_global_pmo_memory_mb;
	[WmiDataId(14), read] uint64 end_global_pmo_memory_mb;
	[WmiDataId(15), read] uint64 init_extractor_elapsed_time_ms;
	[WmiDataId(16), read] uint64 init_extractor_cpu_time_ms;
	[WmiDataId(17), read] uint32 connection_retry_count;
	[WmiDataId(18), read] uint32 last_async_prepare_state;
	[WmiDataId(19), read] sint8  end_of_rowset;
	[WmiDataId(20), read, Extension("Guid")] guid query_id;
	[WmiDataId(21), read, Extension("Variant")] object query_hash;
	[WmiDataId(22), read, Extension("Guid")] guid request_id;
};
		
[dynamic: ToInstance, Description("Global Query extractor execution failed with error."): Amended,
    Guid("{e7d34832-3bcf-4667-b8fa-807107b6f737}"), locale("MS\\0x409"),
    DisplayName("global_query_extractor_fail"): Amended]
class XeSqlPkg_global_query_extractor_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class global_query_extractor_fail: XeSqlPkg_global_query_extractor_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 error_code;
	[WmiDataId(6), read] sint32 error_state;
	[WmiDataId(7), read, Extension("Guid")] guid query_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string error_message;
	[WmiDataId(9), read, Extension("Variant")] object query_hash;
	[WmiDataId(10), read, Extension("Guid")] guid request_id;
};
		
[dynamic: ToInstance, Description("Global Query extractor execution canceled."): Amended,
    Guid("{81992f25-7953-4c42-8171-81acf86e8a80}"), locale("MS\\0x409"),
    DisplayName("global_query_extractor_cancel"): Amended]
class XeSqlPkg_global_query_extractor_cancel: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class global_query_extractor_cancel: XeSqlPkg_global_query_extractor_cancel
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid query_id;
	[WmiDataId(6), read, Extension("Variant")] object query_hash;
	[WmiDataId(7), read, Extension("Guid")] guid request_id;
};
		
[dynamic: ToInstance, Description("Induce failure during rbpex direct reads."): Amended,
    Guid("{6EBFF945-38DC-43CA-A781-6B012CEF4CE9}"), locale("MS\\0x409"),
    DisplayName("rbpex_force_direct_read_failure"): Amended]
class XeSqlPkg_rbpex_force_direct_read_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class rbpex_force_direct_read_failure: XeSqlPkg_rbpex_force_direct_read_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  error_code_pointer;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("QP pushdown skipped at runtime."): Amended,
    Guid("{5384e217-55e2-4ac7-b8f7-d51c91b77d8f}"), locale("MS\\0x409"),
    DisplayName("hyperscale_pushdown_skipped"): Amended]
class XeSqlPkg_hyperscale_pushdown_skipped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hyperscale_pushdown_skipped: XeSqlPkg_hyperscale_pushdown_skipped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 query_hash;
	[WmiDataId(6), read] sint64 query_plan_hash;
	[WmiDataId(7), read] uint32 node_id;
	[WmiDataId(8), read] uint32 session_id;
	[WmiDataId(9), read, 
				XEMapId(235),
				BitMap { 
					"1", 
					"0" },
				BitValues { 
					"IsoLevel", 
					"None" }
			] uint32 reason;
};
		
[dynamic: ToInstance, Description("QP pushdown queue created."): Amended,
    Guid("{EE4731D2-40B2-4351-BC4A-E25419352E31}"), locale("MS\\0x409"),
    DisplayName("hyperscale_pushdown_starting"): Amended]
class XeSqlPkg_hyperscale_pushdown_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hyperscale_pushdown_starting: XeSqlPkg_hyperscale_pushdown_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 query_hash;
	[WmiDataId(6), read] sint64 query_plan_hash;
	[WmiDataId(7), read] uint32 node_id;
	[WmiDataId(8), read] uint32 session_id;
	[WmiDataId(9), read] uint32 initial_page_ids_per_page;
	[WmiDataId(10), read, Extension("Guid")] guid queue_id;
};
		
[dynamic: ToInstance, Description("QP pushdown queue completed."): Amended,
    Guid("{FED8CBDF-A243-4A28-A4FF-EA88BDBD60DB}"), locale("MS\\0x409"),
    DisplayName("hyperscale_pushdown_completed"): Amended]
class XeSqlPkg_hyperscale_pushdown_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hyperscale_pushdown_completed: XeSqlPkg_hyperscale_pushdown_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 query_hash;
	[WmiDataId(6), read] sint64 query_plan_hash;
	[WmiDataId(7), read] uint32 node_id;
	[WmiDataId(8), read] uint32 session_id;
	[WmiDataId(9), read] uint64 used_pages_peak;
	[WmiDataId(10), read, Extension("Guid")] guid queue_id;
};
		
[dynamic: ToInstance, Description("QP pushdown memory reservation change."): Amended,
    Guid("{e424fe25-e51b-412b-b716-7dca8766096b}"), locale("MS\\0x409"),
    DisplayName("hyperscale_pushdown_memory_change"): Amended]
class XeSqlPkg_hyperscale_pushdown_memory_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hyperscale_pushdown_memory_change: XeSqlPkg_hyperscale_pushdown_memory_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 query_hash;
	[WmiDataId(6), read] sint64 query_plan_hash;
	[WmiDataId(7), read] uint32 node_id;
	[WmiDataId(8), read] sint32 request_id;
	[WmiDataId(9), read] uint32 session_id;
	[WmiDataId(10), read] uint32 old_page_ids_per_page;
	[WmiDataId(11), read] uint32 target_page_ids_per_page;
	[WmiDataId(12), read] uint32 new_page_ids_per_page;
	[WmiDataId(13), read, Extension("Guid")] guid queue_id;
};
		
[dynamic: ToInstance, Description("QP pushdown request starting."): Amended,
    Guid("{5D8FD019-AE3B-46FF-B81E-77A73D8D225F}"), locale("MS\\0x409"),
    DisplayName("hyperscale_pushdown_request_starting"): Amended]
class XeSqlPkg_hyperscale_pushdown_request_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hyperscale_pushdown_request_starting: XeSqlPkg_hyperscale_pushdown_request_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 query_hash;
	[WmiDataId(6), read] sint64 query_plan_hash;
	[WmiDataId(7), read] uint32 node_id;
	[WmiDataId(8), read] sint32 request_id;
	[WmiDataId(9), read] uint32 session_id;
	[WmiDataId(10), read, Extension("Guid")] guid queue_id;
};
		
[dynamic: ToInstance, Description("QP pushdown request completed."): Amended,
    Guid("{7573DAC8-FB08-4987-8BC1-5C733EDA81D4}"), locale("MS\\0x409"),
    DisplayName("hyperscale_pushdown_request_completed"): Amended]
class XeSqlPkg_hyperscale_pushdown_request_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hyperscale_pushdown_request_completed: XeSqlPkg_hyperscale_pushdown_request_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 query_hash;
	[WmiDataId(6), read] sint64 query_plan_hash;
	[WmiDataId(7), read] uint32 node_id;
	[WmiDataId(8), read] sint32 request_id;
	[WmiDataId(9), read] uint64 duration_ms;
	[WmiDataId(10), read] sint32 hresult;
	[WmiDataId(11), read] uint32 session_id;
	[WmiDataId(12), read, Extension("Guid")] guid queue_id;
};
		
[dynamic: ToInstance, Description("Failures related to obtaining resource pool for pushdown queries"): Amended,
    Guid("{cc0e9e0c-565a-4b35-889f-b08346f2ddf3}"), locale("MS\\0x409"),
    DisplayName("hyperscale_pushdown_resource_pool_failure"): Amended]
class XeSqlPkg_hyperscale_pushdown_resource_pool_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hyperscale_pushdown_resource_pool_failure: XeSqlPkg_hyperscale_pushdown_resource_pool_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 status;
	[WmiDataId(6), read] sint32 request_id;
	[WmiDataId(7), read, Extension("Guid")] guid queue_id;
};
		
[dynamic: ToInstance, Description("QP pushdown statistics that are periodically emitted."): Amended,
    Guid("{0f239f32-c5db-4567-96e7-488c8b66003f}"), locale("MS\\0x409"),
    DisplayName("hyperscale_pushdown_stats"): Amended]
class XeSqlPkg_hyperscale_pushdown_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hyperscale_pushdown_stats: XeSqlPkg_hyperscale_pushdown_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(229),
				ValueMap { 
					"3", 
					"0", 
					"1", 
					"2" },
				Values { 
					"LAST", 
					"Request", 
					"SubrequestCompute", 
					"SubrequestPageserver" }
			] sint32 event;
	[WmiDataId(6), read, 
				XEMapId(230),
				ValueMap { 
					"1", 
					"0", 
					"10", 
					"4", 
					"2", 
					"7", 
					"6", 
					"5", 
					"8", 
					"9", 
					"3" },
				Values { 
					"CpuTime", 
					"Duration", 
					"LAST", 
					"Pages", 
					"Requests", 
					"ResponseAllocated", 
					"ResponseSize", 
					"Retries", 
					"RowsRead", 
					"RowsReturned", 
					"Subrequests" }
			] sint32 counter;
	[WmiDataId(7), read] uint32 tracked_count;
	[WmiDataId(8), read] uint32 total_count;
	[WmiDataId(9), read] uint64 percentile_0;
	[WmiDataId(10), read] uint64 percentile_50;
	[WmiDataId(11), read] uint64 percentile_90;
	[WmiDataId(12), read] uint64 percentile_95;
	[WmiDataId(13), read] uint64 percentile_99;
	[WmiDataId(14), read] uint64 percentile_999;
};
		
[dynamic: ToInstance, Description("Aggregated stats for a single execution of a single QP pushdown operator."): Amended,
    Guid("{1eb46eb5-a6dd-4d61-81c3-820a3368c699}"), locale("MS\\0x409"),
    DisplayName("hyperscale_pushdown_aggregated_stats"): Amended]
class XeSqlPkg_hyperscale_pushdown_aggregated_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hyperscale_pushdown_aggregated_stats: XeSqlPkg_hyperscale_pushdown_aggregated_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 query_hash;
	[WmiDataId(6), read] sint64 query_plan_hash;
	[WmiDataId(7), read] uint32 session_id;
	[WmiDataId(8), read] uint32 node_id;
	[WmiDataId(9), read] sint8  has_filter;
	[WmiDataId(10), read] sint32 dop;
	[WmiDataId(11), read] uint32 sent_requests;
	[WmiDataId(12), read] uint32 succeeded_requests;
	[WmiDataId(13), read] uint32 failed_requests;
	[WmiDataId(14), read] uint32 sent_subrequests;
	[WmiDataId(15), read] uint32 succeeded_subrequests;
	[WmiDataId(16), read] uint32 retried_subrequests;
	[WmiDataId(17), read] uint32 failed_subrequests;
	[WmiDataId(18), read] uint32 num_pages_pushed;
	[WmiDataId(19), read] uint32 pushed_page_server_reads;
	[WmiDataId(20), read] uint64 pushed_rows_read;
	[WmiDataId(21), read] uint64 pushed_rows_returned;
	[WmiDataId(22), read] uint64 response_size_bytes;
	[WmiDataId(23), read] uint64 used_pages_peak;
	[WmiDataId(24), read] uint32 rbpex_hits_pushed;
	[WmiDataId(25), read] uint32 pages_never_pushed;
	[WmiDataId(26), read] uint32 single_rows_retried;
	[WmiDataId(27), read] uint32 ranges_retried;
	[WmiDataId(28), read] uint64 logical_reads;
	[WmiDataId(29), read] uint64 rows_returned;
	[WmiDataId(30), read] uint64 duration_ms;
	[WmiDataId(31), read] uint64 cpu_time_ms;
	[WmiDataId(32), read, StringTermination("NullTerminated"), Format("w")] string physical_operator;
};
		
[dynamic: ToInstance, Description("Uploading a digest of the database ledger failed."): Amended,
    Guid("{9567c03e-83d3-4315-b2ad-e2929851c0bf}"), locale("MS\\0x409"),
    DisplayName("ledger_digest_upload_failed"): Amended]
class XeSqlPkg_ledger_digest_upload_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_digest_upload_failed: XeSqlPkg_ledger_digest_upload_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 error;
	[WmiDataId(7), read, 
				XEMapId(225),
				ValueMap { 
					"6", 
					"7", 
					"9", 
					"8", 
					"10", 
					"3", 
					"1", 
					"4", 
					"0", 
					"2", 
					"5" },
				Values { 
					"ConfidentialLedgerAuthError", 
					"ConfidentialLedgerIdentityError", 
					"ConfidentialLedgerInsufficientBufferSizeError", 
					"ConfidentialLedgerServerError", 
					"ConfidentialLedgerServerIdentityCheckFailedError", 
					"ConflictingLease", 
					"ContainerDoesNotExist", 
					"InsufficientMemory", 
					"Internal", 
					"NoPermissionsToContainer", 
					"NoSpaceInFile" }
			] uint32 error_description;
	[WmiDataId(8), read] uint16 state;
	[WmiDataId(9), read, 
				XEMapId(226),
				ValueMap { 
					"2", 
					"1", 
					"0" },
				Values { 
					"AzureConfidentialLedger", 
					"AzureStorage", 
					"None" }
			] uint32 storage_type;
};
		
[dynamic: ToInstance, Description("Uploading a digest of the database ledger succeeded."): Amended,
    Guid("{4ee74689-cbdd-4e15-acf5-fd14f22f4a8a}"), locale("MS\\0x409"),
    DisplayName("ledger_digest_upload_success"): Amended]
class XeSqlPkg_ledger_digest_upload_success: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_digest_upload_success: XeSqlPkg_ledger_digest_upload_success
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(226),
				ValueMap { 
					"2", 
					"1", 
					"0" },
				Values { 
					"AzureConfidentialLedger", 
					"AzureStorage", 
					"None" }
			] uint32 storage_type;
	[WmiDataId(7), read] uint64 block_id;
};
		
[dynamic: ToInstance, Description("Emit a metric when a ledger digest fails to be uploaded."): Amended,
    Guid("{066443ba-d7f0-4d7f-a042-e008031f7c1b}"), locale("MS\\0x409"),
    DisplayName("ledger_digest_upload_failed_mdm"): Amended]
class XeSqlPkg_ledger_digest_upload_failed_mdm: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_digest_upload_failed_mdm: XeSqlPkg_ledger_digest_upload_failed_mdm
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 ledger_digest_upload_failed;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string ServerResourceId;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string ClusterName;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string NodeName;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string DatabaseName;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string ServerName;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Emit a metric when a ledger digest is successfully uploaded."): Amended,
    Guid("{58ad9986-a478-4af7-a07c-5e6b9f72b26f}"), locale("MS\\0x409"),
    DisplayName("ledger_digest_upload_success_mdm"): Amended]
class XeSqlPkg_ledger_digest_upload_success_mdm: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_digest_upload_success_mdm: XeSqlPkg_ledger_digest_upload_success_mdm
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 ledger_digest_upload_success;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string ResourceId;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string ServerResourceId;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string ClusterName;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string NodeName;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string DatabaseName;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string ServerName;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string MonitoringAccount;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string MetricNamespace;
};
		
[dynamic: ToInstance, Description("Stream reader operation metrics."): Amended,
    Guid("{6e718000-ccd9-4213-8161-5e96adf41e6d}"), locale("MS\\0x409"),
    DisplayName("xfile_stream_reader_operation_metrics"): Amended]
class XeSqlPkg_xfile_stream_reader_operation_metrics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xfile_stream_reader_operation_metrics: XeSqlPkg_xfile_stream_reader_operation_metrics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 stream_offset;
	[WmiDataId(6), read] uint64 stream_size;
	[WmiDataId(7), read, 
				XEMapId(221),
				ValueMap { 
					"2", 
					"1", 
					"4", 
					"3", 
					"0" },
				Values { 
					"ExternalStorageDiskCache", 
					"ExternalStorageMemoryCache", 
					"ExternalStoragePrefetch", 
					"ExternalStorageRemoteFile", 
					"ExternalStorageUnknown" }
			] uint32 storage_type;
	[WmiDataId(8), read] uint64 bytes_read;
	[WmiDataId(9), read] uint64 bytes_skipped;
	[WmiDataId(10), read] uint64 avg_rewind_time_ns;
	[WmiDataId(11), read] uint64 min_rewind_time_ns;
	[WmiDataId(12), read] uint64 max_rewind_time_ns;
	[WmiDataId(13), read] uint64 avg_read_time_ns;
	[WmiDataId(14), read] uint64 min_read_time_ns;
	[WmiDataId(15), read] uint64 max_read_time_ns;
	[WmiDataId(16), read] uint64 avg_skip_time_ns;
	[WmiDataId(17), read] uint64 min_skip_time_ns;
	[WmiDataId(18), read] uint64 max_skip_time_ns;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string distributed_statement_id;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_hash;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string distributed_request_id;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string distributed_scheduler_id;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string distributed_query_operator_id;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string distributed_task_group_id;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string distributed_execution_id;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string distributed_submission_id;
	[WmiDataId(27), read, Extension("Guid")] guid file_key;
};
		
[dynamic: ToInstance, Description("Storage file operation metrics."): Amended,
    Guid("{c3a9b9db-2d2d-4393-acc6-38e7d149a067}"), locale("MS\\0x409"),
    DisplayName("xfile_storage_file_operation_metrics"): Amended]
class XeSqlPkg_xfile_storage_file_operation_metrics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xfile_storage_file_operation_metrics: XeSqlPkg_xfile_storage_file_operation_metrics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 bytes_read;
	[WmiDataId(6), read] uint64 bytes_written;
	[WmiDataId(7), read] uint64 bytes_touched;
	[WmiDataId(8), read] uint64 avg_getproperties_time_ns;
	[WmiDataId(9), read] uint64 min_getproperties_time_ns;
	[WmiDataId(10), read] uint64 max_getproperties_time_ns;
	[WmiDataId(11), read] uint64 avg_read_time_ns;
	[WmiDataId(12), read] uint64 min_read_time_ns;
	[WmiDataId(13), read] uint64 max_read_time_ns;
	[WmiDataId(14), read] uint64 avg_touch_time_ns;
	[WmiDataId(15), read] uint64 min_touch_time_ns;
	[WmiDataId(16), read] uint64 max_touch_time_ns;
	[WmiDataId(17), read] uint64 avg_resize_time_ns;
	[WmiDataId(18), read] uint64 min_resize_time_ns;
	[WmiDataId(19), read] uint64 max_resize_time_ns;
	[WmiDataId(20), read] uint64 avg_write_time_ns;
	[WmiDataId(21), read] uint64 min_write_time_ns;
	[WmiDataId(22), read] uint64 max_write_time_ns;
	[WmiDataId(23), read] uint64 memory_cache_capacity;
	[WmiDataId(24), read] uint64 max_allocated_memory_cache_capacity;
	[WmiDataId(25), read] uint64 memory_cache_capacity_usage_first_quarter_count;
	[WmiDataId(26), read] uint64 memory_cache_capacity_usage_second_quarter_count;
	[WmiDataId(27), read] uint64 memory_cache_capacity_usage_third_quarter_count;
	[WmiDataId(28), read] uint64 memory_cache_capacity_usage_fourth_quarter_count;
	[WmiDataId(29), read] uint64 memory_cache_capacity_full_count;
	[WmiDataId(30), read] uint64 disk_cache_capacity;
	[WmiDataId(31), read] uint64 max_allocated_disk_cache_capacity;
	[WmiDataId(32), read] uint64 disk_cache_capacity_usage_first_quarter_count;
	[WmiDataId(33), read] uint64 disk_cache_capacity_usage_second_quarter_count;
	[WmiDataId(34), read] uint64 disk_cache_capacity_usage_third_quarter_count;
	[WmiDataId(35), read] uint64 disk_cache_capacity_usage_fourth_quarter_count;
	[WmiDataId(36), read] uint64 disk_cache_capacity_full_count;
	[WmiDataId(37), read, Extension("Guid")] guid block_stream_key;
};
		
[dynamic: ToInstance, Description("Backup Sync messages sent during backup on secondary replica."): Amended,
    Guid("{f506fb3f-301b-47b0-bbfe-817acf410414}"), locale("MS\\0x409"),
    DisplayName("srb_backup_sync_message"): Amended]
class XeSqlPkg_srb_backup_sync_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class srb_backup_sync_message: XeSqlPkg_srb_backup_sync_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(7), read] uint32 message_sub_type;
	[WmiDataId(8), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(9), read, Extension("Guid")] guid physical_database_id;
};
		
[dynamic: ToInstance, Description("Backup Info messages sent during log backup on secondary replica."): Amended,
    Guid("{9a59fa05-3437-4ab9-b3b4-5064c468e5c6}"), locale("MS\\0x409"),
    DisplayName("srb_log_backup_info"): Amended]
class XeSqlPkg_srb_log_backup_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class srb_log_backup_info: XeSqlPkg_srb_log_backup_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(7), read] uint32 message_sub_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string backup_lsn;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string oldest_xact_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string min_skip_lsn;
	[WmiDataId(11), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(12), read, Extension("Guid")] guid physical_database_id;
};
		
[dynamic: ToInstance, Description("Backup Info message sent from primary to secondary to acknowledge full backup request."): Amended,
    Guid("{de28a995-219c-41da-8768-881fee005882}"), locale("MS\\0x409"),
    DisplayName("srb_database_full_backup_start_ack"): Amended]
class XeSqlPkg_srb_database_full_backup_start_ack: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class srb_database_full_backup_start_ack: XeSqlPkg_srb_database_full_backup_start_ack
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(7), read] uint32 message_sub_type;
	[WmiDataId(8), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(9), read, Extension("Guid")] guid physical_database_id;
};
		
[dynamic: ToInstance, Description("Backup Info message sent from primary to secondary to acknowledge diff backup request."): Amended,
    Guid("{ad943d6f-1ac9-43d1-8478-1ebbf0704843}"), locale("MS\\0x409"),
    DisplayName("srb_database_diff_backup_start_ack"): Amended]
class XeSqlPkg_srb_database_diff_backup_start_ack: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class srb_database_diff_backup_start_ack: XeSqlPkg_srb_database_diff_backup_start_ack
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(7), read] uint32 message_sub_type;
	[WmiDataId(8), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(9), read, Extension("Guid")] guid physical_database_id;
};
		
[dynamic: ToInstance, Description("Backup Info message sent from primary to secondary to signal that diff map was cleared and provide a new checkpoint LSN."): Amended,
    Guid("{7f5dcaea-0903-4ebd-b66a-fb443feb5d27}"), locale("MS\\0x409"),
    DisplayName("srb_clear_diff_map_succeeded"): Amended]
class XeSqlPkg_srb_clear_diff_map_succeeded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class srb_clear_diff_map_succeeded: XeSqlPkg_srb_clear_diff_map_succeeded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string checkpoint_lsn;
	[WmiDataId(8), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(9), read, Extension("Guid")] guid physical_database_id;
};
		
[dynamic: ToInstance, Description("Backup Info message sent from primary to secondary to signal that checkpoint was executed and provide a new checkpoint LSN."): Amended,
    Guid("{159d6c10-a11c-4f26-bc89-a29440fdd67c}"), locale("MS\\0x409"),
    DisplayName("srb_force_checkpoint_succeeded"): Amended]
class XeSqlPkg_srb_force_checkpoint_succeeded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class srb_force_checkpoint_succeeded: XeSqlPkg_srb_force_checkpoint_succeeded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string checkpoint_lsn;
	[WmiDataId(8), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(9), read, Extension("Guid")] guid physical_database_id;
};
		
[dynamic: ToInstance, Description("Backup Info message sent from secondary to primary to signal that full backup finished and to provide neccessary information."): Amended,
    Guid("{a5dd6aec-1539-4b13-9cc0-1da41a1da03a}"), locale("MS\\0x409"),
    DisplayName("srb_commit_full_backup"): Amended]
class XeSqlPkg_srb_commit_full_backup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class srb_commit_full_backup: XeSqlPkg_srb_commit_full_backup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string new_diff_baseline_lsn;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string new_log_chain_origin_lsn;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string new_log_chain_backup_lsn;
	[WmiDataId(10), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(11), read, Extension("Guid")] guid physical_database_id;
};
		
[dynamic: ToInstance, Description("Backup Info message sent from secondary to primary to signal that diff backup finished and that lock should be released on primary."): Amended,
    Guid("{b484f3f4-e485-4920-a1c7-b8c1cb354187}"), locale("MS\\0x409"),
    DisplayName("srb_commit_diff_backup"): Amended]
class XeSqlPkg_srb_commit_diff_backup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class srb_commit_diff_backup: XeSqlPkg_srb_commit_diff_backup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 db_id;
	[WmiDataId(6), read, 
				XEMapId(129),
				ValueMap { 
					"43", 
					"41", 
					"42", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"46", 
					"19", 
					"36", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"44", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"38", 
					"14", 
					"13", 
					"39", 
					"6", 
					"30", 
					"35", 
					"12", 
					"32", 
					"29", 
					"7", 
					"40", 
					"31", 
					"5", 
					"34", 
					"33", 
					"26", 
					"45", 
					"37", 
					"10" },
				Values { 
					"HadrMsgTypeBackupBmsUpdateMsg", 
					"HadrMsgTypeBackupCmdMsg", 
					"HadrMsgTypeBackupCmdResultMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeDownloadAgConfigMsg", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeGeoNotification", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypeOfflinePrimaryAg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePaxosMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePreConfigReceivedAndConfigSyn", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaFileListMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeQdsMsg", 
					"HadrMsgTypeReportFaultOnReplica", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSeedingCancelMsg", 
					"HadrMsgTypeSeedingRequestMsg", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeUpdateAgConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(7), read, Extension("Guid")] guid logical_database_id;
	[WmiDataId(8), read, Extension("Guid")] guid physical_database_id;
};
		
[dynamic: ToInstance, Description("Ledger settings"): Amended,
    Guid("{a5fa52ee-2f12-45c7-ba09-b48c60b702fc}"), locale("MS\\0x409"),
    DisplayName("ledger_settings"): Amended]
class XeSqlPkg_ledger_settings: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ledger_settings: XeSqlPkg_ledger_settings
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_ledger_enabled;
	[WmiDataId(6), read] sint8  is_ledger_database;
	[WmiDataId(7), read, 
				XEMapId(226),
				ValueMap { 
					"2", 
					"1", 
					"0" },
				Values { 
					"AzureConfidentialLedger", 
					"AzureStorage", 
					"None" }
			] uint32 storage_type;
};
		
[dynamic: ToInstance, Description("Startup phase telemetry details ."): Amended,
    Guid("{22756e96-be87-41c8-a4aa-24d10be21834}"), locale("MS\\0x409"),
    DisplayName("startup_phase_telemetry"): Amended]
class XeSqlPkg_startup_phase_telemetry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class startup_phase_telemetry: XeSqlPkg_startup_phase_telemetry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 phase_completion_duration_ms;
	[WmiDataId(6), read, Extension("WmiTime")] uint64 phase_start_timestamp;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string startup_phase_name;
};
		
[dynamic: ToInstance, Description("Indicate we did some repair logic for the index stats cache"): Amended,
    Guid("{b24378a5-d5a3-45fe-8020-80a6a243dbb4}"), locale("MS\\0x409"),
    DisplayName("index_stats_inconsistency_event"): Amended]
class XeSqlPkg_index_stats_inconsistency_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class index_stats_inconsistency_event: XeSqlPkg_index_stats_inconsistency_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 type;
};
		
[dynamic: ToInstance, Description("Event containing details of CPU vectorization level(s)."): Amended,
    Guid("{151B8817-E578-4CAF-AF52-8AAAA05C1F40}"), locale("MS\\0x409"),
    DisplayName("cpu_vectorization_levels"): Amended]
class XeSqlPkg_cpu_vectorization_levels: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cpu_vectorization_levels: XeSqlPkg_cpu_vectorization_levels
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  has_sse;
	[WmiDataId(6), read] sint8  has_sse2;
	[WmiDataId(7), read] sint8  has_sse3;
	[WmiDataId(8), read] sint8  has_ssse3;
	[WmiDataId(9), read] sint8  has_sse41;
	[WmiDataId(10), read] sint8  has_sse42;
	[WmiDataId(11), read] sint8  has_sse41_and_below;
	[WmiDataId(12), read] sint8  has_sse42_and_below;
	[WmiDataId(13), read] sint8  has_ssse3_and_below;
	[WmiDataId(14), read] sint8  has_avx;
	[WmiDataId(15), read] sint8  has_avx2;
	[WmiDataId(16), read] sint8  has_avx2_and_below;
	[WmiDataId(17), read] sint8  has_popcnt;
	[WmiDataId(18), read] sint8  has_bmi1;
	[WmiDataId(19), read] sint8  has_bmi2;
	[WmiDataId(20), read] sint8  has_avx512_f;
	[WmiDataId(21), read] sint8  has_avx512_pf;
	[WmiDataId(22), read] sint8  has_avx512_er;
	[WmiDataId(23), read] sint8  has_avx512_cd;
	[WmiDataId(24), read] sint8  has_avx512_bw;
	[WmiDataId(25), read] sint8  has_avx512_dq;
	[WmiDataId(26), read] sint8  has_avx512_vl;
	[WmiDataId(27), read] sint8  has_avx512_ifma;
	[WmiDataId(28), read] sint8  has_avx512_vbmi;
	[WmiDataId(29), read] sint8  has_avx512_vbmi2;
	[WmiDataId(30), read] sint8  has_avx512_vnni;
	[WmiDataId(31), read] sint8  has_avx512_bitalg;
	[WmiDataId(32), read] sint8  has_avx512_vpoqcntdq;
	[WmiDataId(33), read] sint8  has_avx512_4vnniw;
	[WmiDataId(34), read] sint8  has_avx512_4fmaps;
	[WmiDataId(35), read] sint8  has_avx512_bf16;
	[WmiDataId(36), read] sint8  has_avx512_vp2intersect;
};
		
[dynamic: ToInstance, Description("Fired when the memory allocated for replay script (ORS) is successfully deleted."): Amended,
    Guid("{45825b11-c8ec-4a9f-9481-f66e8106353a}"), locale("MS\\0x409"),
    DisplayName("opt_replay_delete_ors_allocated_memory"): Amended]
class XeSqlPkg_opt_replay_delete_ors_allocated_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class opt_replay_delete_ors_allocated_memory: XeSqlPkg_opt_replay_delete_ors_allocated_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 ors_byte_size;
};
		